{"version":3,"sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/AppConfig.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/autosuggest-wrapper/autosuggest-wrapper.component.html","webpack:///./src/app/autosuggest-wrapper/autosuggest-wrapper.component.scss","webpack:///./src/app/autosuggest-wrapper/autosuggest-wrapper.component.ts","webpack:///./src/app/control-panel/commit-chooser/commit-chooser.component.html","webpack:///./src/app/control-panel/commit-chooser/commit-chooser.component.scss","webpack:///./src/app/control-panel/commit-chooser/commit-chooser.component.ts","webpack:///./src/app/control-panel/control-panel.actions.ts","webpack:///./src/app/control-panel/control-panel.component.html","webpack:///./src/app/control-panel/control-panel.component.scss","webpack:///./src/app/control-panel/control-panel.component.ts","webpack:///./src/app/control-panel/control-panel.module.ts","webpack:///./src/app/control-panel/control-panel.reducers.ts","webpack:///./src/app/control-panel/screenshot/screenshot.component.html","webpack:///./src/app/control-panel/screenshot/screenshot.component.scss","webpack:///./src/app/control-panel/screenshot/screenshot.component.ts","webpack:///./src/app/control-panel/search/search.component.html","webpack:///./src/app/control-panel/search/search.component.scss","webpack:///./src/app/control-panel/search/search.component.ts","webpack:///./src/app/control-panel/settings/filter/filter.component.html","webpack:///./src/app/control-panel/settings/filter/filter.component.scss","webpack:///./src/app/control-panel/settings/filter/filter.component.ts","webpack:///./src/app/control-panel/settings/metric-mapping/metric-mapping.component.html","webpack:///./src/app/control-panel/settings/metric-mapping/metric-mapping.component.scss","webpack:///./src/app/control-panel/settings/metric-mapping/metric-mapping.component.ts","webpack:///./src/app/control-panel/settings/settings.actions.ts","webpack:///./src/app/control-panel/settings/settings.component.html","webpack:///./src/app/control-panel/settings/settings.component.scss","webpack:///./src/app/control-panel/settings/settings.component.ts","webpack:///./src/app/control-panel/settings/settings.reducers.ts","webpack:///./src/app/control-panel/settings/view-control/view-control.component.html","webpack:///./src/app/control-panel/settings/view-control/view-control.component.scss","webpack:///./src/app/control-panel/settings/view-control/view-control.component.ts","webpack:///./src/app/enum/CommitReferenceType.ts","webpack:///./src/app/enum/CommitType.ts","webpack:///./src/app/enum/NodeType.ts","webpack:///./src/app/enum/ScreenType.ts","webpack:///./src/app/enum/ViewType.ts","webpack:///./src/app/geometry/block-connection.ts","webpack:///./src/app/helper/color-helper.ts","webpack:///./src/app/helper/element-analyzer.ts","webpack:///./src/app/helper/metric-name-helper.ts","webpack:///./src/app/pipes/key-value.pipe.ts","webpack:///./src/app/service/commit.service.ts","webpack:///./src/app/service/comparison-panel.service.ts","webpack:///./src/app/service/focus.service.ts","webpack:///./src/app/service/metric.service.ts","webpack:///./src/app/service/screenshot.service.ts","webpack:///./src/app/service/tooltip.service.ts","webpack:///./src/app/shared/actions.ts","webpack:///./src/app/shared/effects.ts","webpack:///./src/app/shared/reducers.ts","webpack:///./src/app/visualization/comparison-panel/comparison-panel.component.html","webpack:///./src/app/visualization/comparison-panel/comparison-panel.component.scss","webpack:///./src/app/visualization/comparison-panel/comparison-panel.component.ts","webpack:///./src/app/visualization/interaction-handler/interaction-handler.ts","webpack:///./src/app/visualization/legend/legend.component.html","webpack:///./src/app/visualization/legend/legend.component.scss","webpack:///./src/app/visualization/legend/legend.component.ts","webpack:///./src/app/visualization/loading-indicator/loading-indicator.component.html","webpack:///./src/app/visualization/loading-indicator/loading-indicator.component.scss","webpack:///./src/app/visualization/loading-indicator/loading-indicator.component.ts","webpack:///./src/app/visualization/screen/screen.component.html","webpack:///./src/app/visualization/screen/screen.component.scss","webpack:///./src/app/visualization/screen/screen.component.ts","webpack:///./src/app/visualization/tooltip/tooltip.component.html","webpack:///./src/app/visualization/tooltip/tooltip.component.scss","webpack:///./src/app/visualization/tooltip/tooltip.component.ts","webpack:///./src/app/visualization/view/abstract-view.ts","webpack:///./src/app/visualization/view/merged-view.ts","webpack:///./src/app/visualization/view/split-view.ts","webpack:///./src/app/visualization/visualization.actions.ts","webpack:///./src/app/visualization/visualization.component.html","webpack:///./src/app/visualization/visualization.component.scss","webpack:///./src/app/visualization/visualization.component.ts","webpack:///./src/app/visualization/visualization.module.ts","webpack:///./src/app/visualization/visualization.reducers.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"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","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import {environment} from '../environments/environment';\r\n\r\nexport class AppConfig {\r\n    // CODERADAR SERVER CONFIG\r\n    static BASE_URL = 'http://localhost:8080';\r\n    static USERNAME = 'radar';\r\n    static PASSWORD = 'Password12!';\r\n\r\n    // ALL AVAILABLE METRICS\r\n    static AVAILABLE_METRICS = [\r\n        { shortName: 'Lines of Code (LOC)', name: 'coderadar:size:loc:java' },\r\n        { shortName: 'Source Lines of Code (SLOC)', name: 'coderadar:size:sloc:java' },\r\n        { shortName: 'Effective Lines of Code (ELOC)', name: 'coderadar:size:eloc:java' },\r\n        { shortName: 'MagicNumber', name: 'checkstyle:com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck' },\r\n        { shortName: 'ReturnCount', name: 'checkstyle:com.puppycrawl.tools.checkstyle.checks.coding.ReturnCountCheck' },\r\n        { shortName: 'CyclomaticComplexity', name: 'checkstyle:com.puppycrawl.tools.checkstyle.checks.metrics.CyclomaticComplexityCheck' },\r\n        { shortName: 'JavaNCSS', name: 'checkstyle:com.puppycrawl.tools.checkstyle.checks.metrics.JavaNCSSCheck' },\r\n        { shortName: 'NPathComplexity', name: 'checkstyle:com.puppycrawl.tools.checkstyle.checks.metrics.NPathComplexityCheck' },\r\n        // tslint:disable-next-line:max-line-length\r\n        { shortName: 'ExecutableStatementCount', name: 'checkstyle:com.puppycrawl.tools.checkstyle.checks.sizes.ExecutableStatementCountCheck' },\r\n    ];\r\n\r\n    // DEFAULT METRIC MAPPING\r\n    static HEIGHT_METRIC_NAME = 'coderadar:size:loc:java';\r\n    static GROUND_AREA_METRIC_NAME = environment.useCoderadarEndpoint\r\n        ? 'coderadar:size:sloc:java'\r\n        : 'checkstyle:com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck';\r\n    static COLOR_METRIC_NAME = environment.useCoderadarEndpoint\r\n        ? 'coderadar:size:eloc:java'\r\n        : 'checkstyle:com.puppycrawl.tools.checkstyle.checks.metrics.CyclomaticComplexityCheck';\r\n\r\n    // VISUALIZATION SETTINGS\r\n    static EDGE_LENGTH_FACTOR = 2;\r\n    static HEIGHT_FACTOR = 0.1;\r\n    // static GLOBAL_MAX_GROUND_AREA = 100;\r\n    // static GLOBAL_MIN_GROUND_AREA = 1;\r\n    // static GLOBAL_MAX_HEIGHT = 100;\r\n    // static GLOBAL_MIN_HEIGHT = 1;\r\n    static BLOCK_SPACING = 5;\r\n    static MODULE_BLOCK_HEIGHT = 5;\r\n\r\n    // CAMERA SETTINGS\r\n    static CAMERA_NEAR = 0.1;\r\n    static CAMERA_FAR = 100000;\r\n    static CAMERA_DISTANCE_TO_FOCUSSED_ELEMENT = 100;\r\n    static CAMERA_ANIMATION_DURATION = 1500;\r\n\r\n    // COLORS\r\n    static COLOR_HIERARCHY_RANGE: string[] = ['#cccccc', '#525252'];\r\n    static COLOR_HEATMAP_RANGE: string[] = ['#ffffff', '#ffc905', '#f78400', '#e92100', '#9b1909', '#4f1609', '#5d0000'];\r\n    static COLOR_CONNECTION = '#000000';\r\n\r\n    static COLOR_FIRST_COMMIT = '#0e8cf3';\r\n    static COLOR_SECOND_COMMIT = '#ffb100';\r\n\r\n    static COLOR_ADDED_FILE = '#49c35c';\r\n    static COLOR_DELETED_FILE = '#d90206';\r\n    static COLOR_UNCHANGED_FILE = '#cccccc'\r\n}\r\n","module.exports = \"<app-control-panel></app-control-panel>\\r\\n<app-visualization></app-visualization>\"","module.exports = \"\"","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n\r\n    constructor() {\r\n    }\r\n}\r\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {Injector, NgModule} from '@angular/core';\r\nimport {FormsModule} from '@angular/forms';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {environment} from '../environments/environment';\r\n\r\nimport {AppComponent} from './app.component';\r\nimport {ControlPanelModule} from './control-panel/control-panel.module';\r\nimport {VisualizationModule} from './visualization/visualization.module';\r\nimport {REDUCER_TOKEN, getReducers} from './shared/reducers';\r\nimport {StoreModule} from '@ngrx/store';\r\nimport {EffectsModule} from '@ngrx/effects';\r\nimport {StoreDevtoolsModule} from '@ngrx/store-devtools';\r\nimport {AppEffects} from './shared/effects';\r\nimport {ScreenShotService} from './service/screenshot.service';\r\nimport {FocusService} from './service/focus.service';\r\nimport {TooltipService} from './service/tooltip.service';\r\nimport {ComparisonPanelService} from './service/comparison-panel.service';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        FormsModule,\r\n        HttpClientModule,\r\n        ControlPanelModule,\r\n        VisualizationModule,\r\n        StoreModule.forRoot(REDUCER_TOKEN),\r\n        EffectsModule.forRoot([AppEffects]),\r\n        environment.production ? [] : StoreDevtoolsModule.instrument({ maxAge: 50 })\r\n    ],\r\n    providers: [\r\n        ScreenShotService,\r\n        FocusService,\r\n        TooltipService,\r\n        ComparisonPanelService,\r\n        {\r\n            provide: REDUCER_TOKEN,\r\n            useFactory: getReducers,\r\n        }\r\n    ],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","module.exports = \"<div class=\\\"autosuggest-wrapper-container\\\" [ngClass]=\\\"{'align-right': alignRight}\\\">\\r\\n    <input #inputElement class=\\\"form-control\\\"\\r\\n           [placeholder]=\\\"placeholder\\\"\\r\\n           ngui-auto-complete\\r\\n           [(ngModel)]=\\\"model\\\"\\r\\n           [source]=\\\"source\\\"\\r\\n           value-property-name=\\\"id\\\"\\r\\n           display-property-name=\\\"name\\\"\\r\\n           [value-formatter]=\\\"valueFormatter\\\"\\r\\n           [list-formatter]=\\\"listFormatter\\\"\\r\\n           [no-match-found-text]=\\\"noMatchFoundText\\\"\\r\\n           [match-formatted]=\\\"matchFormatted\\\"\\r\\n           [accept-user-input]=false\\r\\n           [disabled]=\\\"isDisabled\\\"\\r\\n           (valueChanged)=\\\"handleValueChanged($event)\\\" />\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"handleClearInputClicked()\\\" [disabled]=\\\"isDisabled\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n</div>\"","module.exports = \".autosuggest-wrapper-container {\\n  position: relative; }\\n  .autosuggest-wrapper-container button.close {\\n    position: absolute;\\n    top: 50%;\\n    right: 2px;\\n    -webkit-transform: translateY(-50%);\\n            transform: translateY(-50%);\\n    background: #fff;\\n    padding: 5px;\\n    opacity: 1;\\n    outline: 0; }\\n  .autosuggest-wrapper-container button.close > span {\\n      color: #ccc; }\\n  .autosuggest-wrapper-container button.close > span:hover {\\n        color: #000; }\\n  .autosuggest-wrapper-container button:disabled {\\n    display: none; }\\n  .autosuggest-wrapper-container ngui-auto-complete {\\n    min-width: 100%;\\n    width: auto !important; }\\n  .autosuggest-wrapper-container.align-right ngui-auto-complete {\\n    left: auto !important;\\n    right: 0; }\\n\"","import {Component, EventEmitter, Input, OnInit, Output, ViewChild, ViewEncapsulation} from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-autosuggest-wrapper',\r\n    encapsulation: ViewEncapsulation.None,\r\n    templateUrl: './autosuggest-wrapper.component.html',\r\n    styleUrls: ['./autosuggest-wrapper.component.scss']\r\n})\r\nexport class AutosuggestWrapperComponent implements OnInit {\r\n\r\n    @ViewChild('inputElement') inputElement;\r\n\r\n    @Input() model: any;\r\n    @Input() source: any;\r\n    @Input() placeholder: string;\r\n    @Input() noMatchFoundText: string;\r\n    @Input() matchFormatted: boolean;\r\n    @Input() valuePropertyName: string;\r\n    @Input() displayPropertyName: string;\r\n    @Input() valueFormatter: any;\r\n    @Input() listFormatter: any;\r\n    @Input() isDisabled: boolean;\r\n    @Input() alignRight = false;\r\n\r\n    @Output() valueChanged = new EventEmitter();\r\n\r\n    constructor() {\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    handleClearInputClicked() {\r\n        this.model = null;\r\n        this.inputElement.nativeElement.focus();\r\n    }\r\n\r\n    handleValueChanged(chosenModel: any) {\r\n        this.valueChanged.emit(chosenModel);\r\n    }\r\n\r\n}\r\n","module.exports = \"<app-autosuggest-wrapper\\r\\n        [placeholder]=\\\"'Datum, Commit-ID, Autor'\\\"\\r\\n        [(model)]=\\\"selected\\\"\\r\\n        [source]=\\\"commits\\\"\\r\\n        [valuePropertyName]=\\\"'id'\\\"\\r\\n        [displayPropertyName]=\\\"'name'\\\"\\r\\n        [noMatchFoundText]=\\\"'Nichts gefunden.'\\\"\\r\\n        [matchFormatted]=\\\"true\\\"\\r\\n        [valueFormatter]=\\\"formatCommit\\\"\\r\\n        [listFormatter]=\\\"formatCommit\\\"\\r\\n        [isDisabled]=\\\"isDisabled\\\"\\r\\n        (valueChanged)=\\\"handleCommitChanged($event)\\\">\\r\\n</app-autosuggest-wrapper>\\r\\n\\r\\n<p *ngIf=\\\"loading\\\">LADE</p>\"","module.exports = \"\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {ICommit} from '../../interfaces/ICommit';\r\nimport {CommitType} from '../../enum/CommitType';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n    selector: 'app-commit-chooser',\r\n    templateUrl: './commit-chooser.component.html',\r\n    styleUrls: ['./commit-chooser.component.scss']\r\n})\r\nexport class CommitChooserComponent implements OnInit {\r\n\r\n    @Input() commitType: CommitType;\r\n    @Input() commits: ICommit[];\r\n    @Input() selected: ICommit;\r\n    @Input() loading: boolean;\r\n    @Input() isDisabled: boolean;\r\n\r\n    @Output() changeCommit = new EventEmitter();\r\n\r\n    constructor() {\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    handleCommitChanged(chosenModel: ICommit) {\r\n        this.changeCommit.emit({commitType: this.commitType, commit: chosenModel});\r\n    }\r\n\r\n    formatCommit(data: any): string {\r\n        const formattedDateAndTime = moment(data.timestamp).format('DD.MM.YYYY HH:mm');\r\n        return `${formattedDateAndTime} ${data.author}, ${data.name}`;\r\n    }\r\n\r\n}\r\n","import {Action} from '@ngrx/store';\r\nimport {CommitType} from '../enum/CommitType';\r\nimport {ICommit} from '../interfaces/ICommit';\r\nimport {IActionWithPayload} from '../interfaces/IActionWithPayload';\r\n\r\nexport const LOAD_COMMITS = 'LOAD_COMMITS';\r\nexport const LOAD_COMMITS_SUCCESS = 'LOAD_COMMITS_SUCCESS';\r\nexport const LOAD_COMMITS_ERROR = 'LOAD_COMMITS_ERROR';\r\nexport const CHANGE_COMMIT = 'CHANGE_COMMIT';\r\nexport const ADD_SCREENSHOT = 'ADD_SCREENSHOT';\r\nexport const CLEAR_SCREENSHOTS = 'CLEAR_SCREENSHOTS';\r\n\r\nexport function loadCommits(): Action {\r\n    return {\r\n        type: LOAD_COMMITS\r\n    };\r\n}\r\n\r\nexport function loadCommitsSuccess(commits: ICommit[]): IActionWithPayload<ICommit[]> {\r\n    return {\r\n        type: LOAD_COMMITS_SUCCESS,\r\n        payload: commits\r\n    };\r\n}\r\n\r\nexport function loadCommitsError(error: string): IActionWithPayload<string> {\r\n    return {\r\n        type: LOAD_COMMITS_ERROR,\r\n        payload: error\r\n    };\r\n}\r\n\r\nexport function changeCommit(commitType: CommitType, commit: ICommit): IActionWithPayload<{commitType: CommitType, commit: ICommit}> {\r\n    return {\r\n        type: CHANGE_COMMIT,\r\n        payload: {\r\n            commitType: commitType,\r\n            commit: commit\r\n        }\r\n    };\r\n}\r\n\r\nexport function addScreenshot(screenshotObject: any): IActionWithPayload<any> {\r\n    return {\r\n        type: ADD_SCREENSHOT,\r\n        payload: screenshotObject\r\n    };\r\n}\r\n\r\nexport function clearScreenshots(): Action {\r\n    return {\r\n        type: CLEAR_SCREENSHOTS\r\n    };\r\n}\r\n","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n    <form id=\\\"control-panel\\\" class=\\\"row align-items-center justify-content-between\\\">\\r\\n        <div class=\\\"col-4\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-6\\\">\\r\\n                    <small>Erste Revision</small>\\r\\n                    <app-commit-chooser\\r\\n                            [commitType]=\\\"commitTypes.left\\\"\\r\\n                            [commits]=\\\"commits$ | async\\\"\\r\\n                            [loading]=\\\"commitsLoading$ | async\\\"\\r\\n                            [selected]=\\\"leftCommit$ | async\\\"\\r\\n                            (changeCommit)=\\\"handleCommitChanged($event)\\\"></app-commit-chooser>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-6\\\">\\r\\n                    <small>Zweite Revision</small>\\r\\n                    <app-commit-chooser\\r\\n                            [commitType]=\\\"commitTypes.right\\\"\\r\\n                            [commits]=\\\"commits$ | async\\\"\\r\\n                            [loading]=\\\"commitsLoading$ | async\\\"\\r\\n                            [selected]=\\\"rightCommit$ | async\\\"\\r\\n                            [isDisabled]=\\\"disableRightSelect\\\"\\r\\n                            (changeCommit)=\\\"handleCommitChanged($event)\\\"></app-commit-chooser>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div id=\\\"settings-panel\\\" class=\\\"col-6\\\">\\r\\n            <app-settings></app-settings>\\r\\n            <app-screenshot\\r\\n                    [activeViewType]=\\\"activeViewType$ | async\\\"\\r\\n                    [screenShots]=\\\"screenShots$ | async\\\"\\r\\n                    (handleTakeScreenshot)=\\\"handleTakeScreenshot()\\\"\\r\\n                    (handleRemoveScreenshots)=\\\"handleRemoveScreenshots()\\\">\\r\\n            </app-screenshot>\\r\\n        </div>\\r\\n        <div class=\\\"col-2\\\">\\r\\n            <small>Suche</small>\\r\\n            <app-search [uniqueFileList]=\\\"uniqueFileList$ | async\\\" (startSearch)=\\\"handleSearchStarted($event)\\\"></app-search>\\r\\n        </div>\\r\\n    </form>\\r\\n</div>\"","module.exports = \"#control-panel {\\n  position: absolute;\\n  top: 0;\\n  width: 100%;\\n  height: 80px;\\n  background: #fff;\\n  box-shadow: rgba(0, 0, 0, 0.2) 0 2px 6px 0;\\n  z-index: 101; }\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {CommitType} from '../enum/CommitType';\r\nimport {Store} from '@ngrx/store';\r\nimport * as fromRoot from '../shared/reducers';\r\nimport {changeCommit, loadCommits} from './control-panel.actions';\r\nimport {ICommit} from '../interfaces/ICommit';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {ViewType} from '../enum/ViewType';\r\nimport {ScreenShotService} from '../service/screenshot.service';\r\nimport {FocusService} from '../service/focus.service';\r\nimport { environment } from 'environments/environment';\r\n\r\n@Component({\r\n    selector: 'app-control-panel',\r\n    templateUrl: './control-panel.component.html',\r\n    styleUrls: ['./control-panel.component.scss']\r\n})\r\nexport class ControlPanelComponent implements OnInit {\r\n\r\n    commitTypes: any = {\r\n        left: CommitType.LEFT,\r\n        right: CommitType.RIGHT\r\n    };\r\n\r\n    commits$: Observable<ICommit[]>;\r\n    leftCommit$: Observable<ICommit>;\r\n    rightCommit$: Observable<ICommit>;\r\n    commitsLoading$: Observable<boolean>;\r\n\r\n    uniqueFileList$: Observable<string[]>;\r\n\r\n    activeViewType$: Observable<ViewType>;\r\n    screenShots$: Observable<any[]>;\r\n\r\n    // disable the second commit chooser for demo purposes\r\n    disableRightSelect: boolean = !environment.useCoderadarEndpoint;\r\n\r\n    constructor(private store: Store<fromRoot.AppState>, private screenShotService: ScreenShotService, private focusService: FocusService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.store.dispatch(loadCommits());\r\n\r\n        this.commits$ = this.store.select(fromRoot.getCommits);\r\n        this.commitsLoading$ = this.store.select(fromRoot.getCommitsLoading);\r\n        this.leftCommit$ = this.store.select(fromRoot.getLeftCommit);\r\n        this.rightCommit$ = this.store.select(fromRoot.getRightCommit);\r\n\r\n        this.uniqueFileList$ = this.store.select(fromRoot.getUniqueFileList);\r\n\r\n        this.activeViewType$ = this.store.select(fromRoot.getActiveViewType);\r\n        this.screenShots$ = this.screenShotService.getScreenShots();\r\n    }\r\n\r\n    handleCommitChanged(payload: {commitType: CommitType, commit: ICommit}) {\r\n        this.store.dispatch(changeCommit(payload.commitType, payload.commit));\r\n    }\r\n\r\n    handleSearchStarted(chosenItem: string) {\r\n        this.focusService.focusElement(chosenItem);\r\n    }\r\n\r\n    handleTakeScreenshot() {\r\n        this.screenShotService.requestScreenShot();\r\n    }\r\n\r\n    handleRemoveScreenshots() {\r\n        this.screenShotService.clearScreenShots();\r\n    }\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {ControlPanelComponent} from './control-panel.component';\r\nimport {SettingsComponent} from './settings/settings.component';\r\nimport {ViewControlComponent} from './settings/view-control/view-control.component';\r\nimport {FormsModule} from '@angular/forms';\r\nimport {NguiAutoCompleteModule} from '@ngui/auto-complete';\r\nimport {CommitChooserComponent} from './commit-chooser/commit-chooser.component';\r\nimport {CommitService} from '../service/commit.service';\r\nimport {environment} from '../../environments/environment';\r\nimport {SearchComponent} from './search/search.component';\r\nimport {FilterComponent} from './settings/filter/filter.component';\r\nimport {MetricMappingComponent} from './settings/metric-mapping/metric-mapping.component';\r\nimport {ScreenshotComponent} from './screenshot/screenshot.component';\r\nimport {AutosuggestWrapperComponent} from '../autosuggest-wrapper/autosuggest-wrapper.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        NguiAutoCompleteModule\r\n    ],\r\n    declarations: [\r\n        ControlPanelComponent,\r\n        SettingsComponent,\r\n        ViewControlComponent,\r\n        CommitChooserComponent,\r\n        SearchComponent,\r\n        FilterComponent,\r\n        MetricMappingComponent,\r\n        ScreenshotComponent,\r\n        AutosuggestWrapperComponent\r\n    ],\r\n    exports: [\r\n        ControlPanelComponent\r\n    ],\r\n    providers: [\r\n        CommitService\r\n    ]\r\n})\r\nexport class ControlPanelModule {\r\n}\r\n","import * as ControlPanelActions from './control-panel.actions';\r\nimport {ActionReducer} from '@ngrx/store';\r\nimport {ICommit} from '../interfaces/ICommit';\r\nimport {CommitType} from '../enum/CommitType';\r\nimport _ from 'lodash';\r\nimport {IActionWithPayload} from '../interfaces/IActionWithPayload';\r\n\r\nexport interface ControlPanelState {\r\n    commits: ICommit[];\r\n    commitsLoading: boolean;\r\n    leftCommit: ICommit;\r\n    rightCommit: ICommit;\r\n    screenshots: any[];\r\n}\r\n\r\nconst initialState: ControlPanelState = {\r\n    commits: [],\r\n    commitsLoading: false,\r\n    leftCommit: null,\r\n    rightCommit: null,\r\n    screenshots: []\r\n};\r\n\r\nexport const ControlPanelReducer: ActionReducer<ControlPanelState> = (state = initialState, action: IActionWithPayload<any>) => {\r\n    let newState;\r\n    switch (action.type) {\r\n        case ControlPanelActions.LOAD_COMMITS:\r\n            newState = Object.assign({}, state);\r\n            newState.commitsLoading = true;\r\n            return newState;\r\n\r\n        case ControlPanelActions.LOAD_COMMITS_SUCCESS:\r\n            newState = Object.assign({}, state);\r\n            newState.commits = _.sortBy(action.payload, (commit: ICommit) => commit.timestamp);\r\n            newState.commitsLoading = false;\r\n            newState.leftCommit = newState.commits[0];\r\n            newState.rightCommit = newState.commits[1];\r\n            return newState;\r\n\r\n        case ControlPanelActions.LOAD_COMMITS_ERROR:\r\n            newState = Object.assign({}, state);\r\n            newState.commitsLoading = false;\r\n            console.error(`Error while loading commits: ${action.payload}`);\r\n            return state;\r\n\r\n        case ControlPanelActions.CHANGE_COMMIT:\r\n            newState = Object.assign({}, state);\r\n\r\n            if (action.payload.commitType === CommitType.LEFT) {\r\n                newState.leftCommit = action.payload.commit;\r\n            } else if (action.payload.commitType === CommitType.RIGHT) {\r\n                newState.rightCommit = action.payload.commit;\r\n            } else {\r\n                throw new Error(`Invalid CommitType ${action.payload.commitType}!`);\r\n            }\r\n\r\n            return newState;\r\n\r\n        case ControlPanelActions.ADD_SCREENSHOT:\r\n            newState = Object.assign({}, state);\r\n            newState.screenshots = [...state.screenshots, action.payload];\r\n            return newState;\r\n\r\n        case ControlPanelActions.CLEAR_SCREENSHOTS:\r\n            newState = Object.assign({}, state);\r\n            newState.screenshots = [];\r\n            return newState;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const getCommits = (state: ControlPanelState) => state.commits;\r\n\r\nexport const getCommitsLoading = (state: ControlPanelState) => state.commitsLoading;\r\n\r\nexport const getLeftCommit = (state: ControlPanelState) => state.leftCommit;\r\n\r\nexport const getRightCommit = (state: ControlPanelState) => state.rightCommit;\r\n\r\nexport const getScreenshots = (state: ControlPanelState) => state.screenshots;\r\n","module.exports = \"<div class=\\\"btn-group\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary\\\" (click)=\\\"takeScreenshot()\\\">\\r\\n        <i class=\\\"fa fa-camera\\\" aria-hidden=\\\"true\\\"></i>\\r\\n        <span *ngIf=\\\"screenShots.length\\\" class=\\\"badge badge-pill badge-secondary ml-1\\\">{{screenShots.length}}</span>\\r\\n    </button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-secondary dropdown-toggle dropdown-toggle-split\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n        <span class=\\\"sr-only\\\">Toggle Dropdown</span>\\r\\n    </button>\\r\\n    <div id=\\\"screenshot-dropdown\\\" class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenuButton\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label>GIF erstellen für:</label>\\r\\n            <div class=\\\"btn-group\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" (click)=\\\"generateGif(screenTypes.left)\\\">{{activeViewType === viewTypes.split ? 'Erster Commit' : 'Kombinierte Ansicht'}}</button>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-outline-primary\\\" (click)=\\\"generateGif(screenTypes.right)\\\" *ngIf=\\\"activeViewType === viewTypes.split\\\">Zweiter Commit</button>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <img *ngIf=\\\"gifSource && !isGenerating\\\" id=\\\"gif\\\" src=\\\"{{gifSource}}\\\">\\r\\n        <p *ngIf=\\\"isGenerating\\\">GIF wird erstellt ...</p>\\r\\n        <small *ngIf=\\\"!gifSource && !isGenerating\\\">Ein GIF wird aus gespeicherten Screenshots erzeugt (Button <i class=\\\"fa fa-camera\\\" aria-hidden=\\\"true\\\"></i> )</small>\\r\\n\\r\\n        <div class=\\\"form-group\\\" *ngIf=\\\"gifSource\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"removeScreenshots()\\\">zurücksetzen</button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","module.exports = \"img#gif {\\n  width: 100%;\\n  margin-bottom: 1rem; }\\n\\n.btn-group {\\n  padding: 0 2px; }\\n\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {ScreenType} from '../../enum/ScreenType';\r\nimport {ViewType} from '../../enum/ViewType';\r\ndeclare var gifshot: any;\r\ndeclare var $: any;\r\n\r\n@Component({\r\n    selector: 'app-screenshot',\r\n    templateUrl: './screenshot.component.html',\r\n    styleUrls: ['./screenshot.component.scss']\r\n})\r\nexport class ScreenshotComponent implements OnInit {\r\n\r\n    @Input() activeViewType: ViewType;\r\n    @Input() screenShots: any[];\r\n\r\n    @Output() handleTakeScreenshot = new EventEmitter();\r\n    @Output() handleRemoveScreenshots = new EventEmitter();\r\n\r\n    screenTypes: any = {\r\n        left: ScreenType.LEFT,\r\n        right: ScreenType.RIGHT\r\n    };\r\n\r\n    viewTypes: any = {\r\n        split: ViewType.SPLIT,\r\n        merged: ViewType.MERGED\r\n    };\r\n\r\n    gifSource: string;\r\n    isGenerating = false;\r\n\r\n    ngOnInit() {\r\n        // prevent bootstrap dropdown from being closed by clicking on its content\r\n        $(document).on('click', '#screenshot-dropdown', function (e) {\r\n            e.stopPropagation();\r\n        });\r\n    }\r\n\r\n    takeScreenshot() {\r\n        this.handleTakeScreenshot.emit();\r\n    }\r\n\r\n    generateGif(screenType: ScreenType) {\r\n        if (this.screenShots.length > 0) {\r\n            const images = this.screenShots\r\n                .filter(screenShotObject => screenShotObject.screenType === screenType)\r\n                .map(screenShotObject => screenShotObject.file);\r\n            if (!images.length) {\r\n                return;\r\n            }\r\n\r\n            this.isGenerating = true;\r\n            gifshot.createGIF({\r\n                images: images,\r\n                interval: 1,\r\n                gifWidth: this.activeViewType === ViewType.SPLIT ? window.innerWidth / 2 : window.innerWidth,\r\n                gifHeight: window.innerHeight\r\n            }, (obj) => {\r\n                if (!obj.error) {\r\n                    this.gifSource = obj.image;\r\n                }\r\n\r\n                this.isGenerating = false;\r\n            });\r\n        } else {\r\n            alert(`Es wurden keine gespeicherten Screenshots gefunden.`);\r\n        }\r\n    }\r\n\r\n    removeScreenshots() {\r\n        this.handleRemoveScreenshots.emit();\r\n        this.gifSource = undefined;\r\n    }\r\n\r\n}\r\n","module.exports = \"<app-autosuggest-wrapper\\r\\n        [placeholder]=\\\"'Datei, Modul, ...'\\\"\\r\\n        [source]=\\\"uniqueFileList\\\"\\r\\n        [noMatchFoundText]=\\\"'Nichts gefunden.'\\\"\\r\\n        [listFormatter]=\\\"autocompleteListFormatter\\\"\\r\\n        (valueChanged)=\\\"handleSearchChanged($event)\\\"\\r\\n        [alignRight]=\\\"true\\\">\\r\\n</app-autosuggest-wrapper>\"","module.exports = \"\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-search',\r\n    templateUrl: './search.component.html',\r\n    styleUrls: ['./search.component.scss']\r\n})\r\nexport class SearchComponent implements OnInit {\r\n\r\n    @Input() uniqueFileList: string[] = [];\r\n\r\n    @Output() startSearch = new EventEmitter();\r\n\r\n    constructor() {\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    handleSearchChanged(chosenItem: string) {\r\n        this.startSearch.emit(chosenItem);\r\n    }\r\n\r\n    autocompleteListFormatter(data: string): string {\r\n        return `<span title=\"${data}\">${data}</span>`;\r\n    }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"btn-group\\\">\\r\\n    <button class=\\\"btn btn-outline-secondary dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenuButton\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n        <i class=\\\"fa fa-filter\\\" aria-hidden=\\\"true\\\"></i>\\r\\n    </button>\\r\\n    <div id=\\\"filter-dropdown\\\" class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenuButton\\\">\\r\\n        <div class=\\\"custom-controls-stacked\\\">\\r\\n            <div class=\\\"custom-control custom-checkbox\\\">\\r\\n                <input type=\\\"checkbox\\\" id=\\\"checkbox-unchanged\\\" class=\\\"custom-control-input\\\" [(ngModel)]=\\\"activeFilter.unmodified\\\" (change)=\\\"handleFilterChanged()\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"checkbox-unchanged\\\">unverändert</label>\\r\\n            </div>\\r\\n            <div class=\\\"custom-control custom-checkbox\\\">\\r\\n                <input type=\\\"checkbox\\\" id=\\\"checkbox-changed\\\" class=\\\"custom-control-input\\\" [(ngModel)]=\\\"activeFilter.modified\\\" (change)=\\\"handleFilterChanged()\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"checkbox-changed\\\">verändert</label>\\r\\n            </div>\\r\\n            <div class=\\\"custom-control custom-checkbox\\\">\\r\\n                <input type=\\\"checkbox\\\" id=\\\"checkbox-deleted\\\" class=\\\"custom-control-input\\\" [(ngModel)]=\\\"activeFilter.deleted\\\" (change)=\\\"handleFilterChanged()\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"checkbox-deleted\\\">gelöscht</label>\\r\\n            </div>\\r\\n            <div class=\\\"custom-control custom-checkbox\\\">\\r\\n                <input type=\\\"checkbox\\\" id=\\\"checkbox-added\\\" class=\\\"custom-control-input\\\" [(ngModel)]=\\\"activeFilter.added\\\" (change)=\\\"handleFilterChanged()\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"checkbox-added\\\">hinzugefügt</label>\\r\\n            </div>\\r\\n            <div class=\\\"custom-control custom-checkbox\\\">\\r\\n                <input type=\\\"checkbox\\\" id=\\\"checkbox-moved\\\" class=\\\"custom-control-input\\\" [(ngModel)]=\\\"activeFilter.renamed\\\" (change)=\\\"handleFilterChanged()\\\">\\r\\n                <label class=\\\"custom-control-label\\\" for=\\\"checkbox-moved\\\">umbenannt/verschoben</label>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","module.exports = \".btn-group {\\n  padding: 0 2px; }\\n\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {IFilter} from 'app/interfaces/IFilter';\r\ndeclare var $: any;\r\n\r\n@Component({\r\n    selector: 'app-filter',\r\n    templateUrl: './filter.component.html',\r\n    styleUrls: ['./filter.component.scss']\r\n})\r\nexport class FilterComponent implements OnInit {\r\n\r\n    @Input() activeFilter: IFilter;\r\n\r\n    @Output() filterChanged = new EventEmitter();\r\n\r\n    constructor() {\r\n    }\r\n\r\n    ngOnInit() {\r\n        // prevent bootstrap dropdown from being closed by clicking on its content\r\n        $(document).on('click', '#filter-dropdown', function (e) {\r\n            e.stopPropagation();\r\n        });\r\n    }\r\n\r\n    handleFilterChanged() {\r\n        this.filterChanged.emit(this.activeFilter);\r\n    }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"btn-group\\\">\\r\\n    <button class=\\\"btn btn-outline-secondary dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenuButton\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n        <i class=\\\"fa fa-bar-chart\\\" aria-hidden=\\\"true\\\"></i>\\r\\n    </button>\\r\\n    <div id=\\\"metric-mapping-dropdown\\\" class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenuButton\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"height-metric-name\\\">Höhe</label>\\r\\n            <select id=\\\"height-metric-name\\\" class=\\\"custom-select w-auto\\\" [(ngModel)]=\\\"metricMapping.heightMetricName\\\">\\r\\n                <option *ngFor=\\\"let metricName of metricNames\\\" [ngValue]=\\\"metricName.name\\\">{{metricName.shortName}}</option>\\r\\n            </select>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"groundarea-metric-name\\\">Grundfläche</label>\\r\\n            <select id=\\\"groundarea-metric-name\\\" class=\\\"custom-select w-auto\\\" [(ngModel)]=\\\"metricMapping.groundAreaMetricName\\\">\\r\\n                <option *ngFor=\\\"let metricName of metricNames\\\" [ngValue]=\\\"metricName.name\\\">{{metricName.shortName}}</option>\\r\\n            </select>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"color-metric-name\\\">Farbe</label>\\r\\n            <select id=\\\"color-metric-name\\\" class=\\\"custom-select w-auto\\\" [(ngModel)]=\\\"metricMapping.colorMetricName\\\">\\r\\n                <option *ngFor=\\\"let metricName of metricNames\\\" [ngValue]=\\\"metricName.name\\\">{{metricName.shortName}}</option>\\r\\n            </select>\\r\\n        </div>\\r\\n\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"applyMetricMappings()\\\">übernehmen</button>\\r\\n    </div>\\r\\n</div>\"","module.exports = \".btn-group {\\n  padding: 0 2px; }\\n\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {IMetricMapping} from '../../../interfaces/IMetricMapping';\r\nimport {MetricNameHelper} from '../../../helper/metric-name-helper';\r\ndeclare var $: any;\r\n\r\n@Component({\r\n    selector: 'app-metric-mapping',\r\n    templateUrl: './metric-mapping.component.html',\r\n    styleUrls: ['./metric-mapping.component.scss']\r\n})\r\nexport class MetricMappingComponent implements OnInit {\r\n\r\n    @Input() metricMapping: IMetricMapping;\r\n\r\n    @Output() metricMappingChanged = new EventEmitter();\r\n\r\n    metricNames: Object;\r\n\r\n    constructor() {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.metricNames = MetricNameHelper.getAll();\r\n\r\n        // prevent bootstrap dropdown from being closed by clicking on its content\r\n        $(document).on('click', '#metric-mapping-dropdown', function (e) {\r\n            // if the button is clicked, the popup does need to be closed, so exclude the button from this exception...\r\n            if (e.target.tagName !== 'BUTTON') {\r\n                e.stopPropagation();\r\n            }\r\n        });\r\n    }\r\n\r\n    applyMetricMappings() {\r\n        this.metricMappingChanged.emit(this.metricMapping);\r\n    }\r\n\r\n}\r\n","import {ViewType} from '../../enum/ViewType';\r\nimport {IFilter} from '../../interfaces/IFilter';\r\nimport {IMetricMapping} from '../../interfaces/IMetricMapping';\r\nimport {IActionWithPayload} from '../../interfaces/IActionWithPayload';\r\n\r\nexport const CHANGE_VIEW_TYPE = 'CHANGE_VIEW_TYPE';\r\nexport const CHANGE_ACTIVE_FILTER = 'CHANGE_ACTIVE_FILTER';\r\nexport const SET_METRIC_MAPPING = 'SET_METRIC_MAPPING';\r\n\r\nexport function changeViewType(viewType: ViewType): IActionWithPayload<ViewType> {\r\n    return {\r\n        type: CHANGE_VIEW_TYPE,\r\n        payload: viewType\r\n    };\r\n}\r\n\r\nexport function changeActiveFilter(filter: IFilter): IActionWithPayload<IFilter> {\r\n    return {\r\n        type: CHANGE_ACTIVE_FILTER,\r\n        payload: filter\r\n    };\r\n}\r\n\r\nexport function setMetricMapping(mapping: IMetricMapping): IActionWithPayload<IMetricMapping> {\r\n    return {\r\n        type: SET_METRIC_MAPPING,\r\n        payload: mapping\r\n    };\r\n}\r\n","module.exports = \"<div>\\r\\n    <small>Einstellungen</small>\\r\\n</div>\\r\\n<app-view-control [activeViewType]=\\\"activeViewType$ | async\\\" (viewTypeChanged)=\\\"handleViewTypeChanged($event)\\\"></app-view-control>\\r\\n<app-filter [activeFilter]=\\\"activeFilter$ | async\\\" (filterChanged)=\\\"handleFilterChanged($event)\\\"></app-filter>\\r\\n<app-metric-mapping [metricMapping]=\\\"metricMapping$ | async\\\" (metricMappingChanged)=\\\"handleMetricMappingChanged($event)\\\"></app-metric-mapping>\"","module.exports = \"\"","import {Component, OnInit} from '@angular/core';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {ViewType} from '../../enum/ViewType';\r\nimport {Store} from '@ngrx/store';\r\nimport * as fromRoot from '../../shared/reducers';\r\nimport {changeActiveFilter, changeViewType, setMetricMapping} from './settings.actions';\r\nimport {IFilter} from '../../interfaces/IFilter';\r\nimport {IMetricMapping} from '../../interfaces/IMetricMapping';\r\n\r\n@Component({\r\n    selector: 'app-settings',\r\n    templateUrl: './settings.component.html',\r\n    styleUrls: ['./settings.component.scss']\r\n})\r\nexport class SettingsComponent implements OnInit {\r\n\r\n    activeViewType$: Observable<ViewType>;\r\n    activeFilter$: Observable<IFilter>;\r\n    metricMapping$: Observable<IMetricMapping>;\r\n\r\n    constructor(private store: Store<fromRoot.AppState>) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.activeViewType$ = this.store.select(fromRoot.getActiveViewType);\r\n        this.activeFilter$ = this.store.select(fromRoot.getActiveFilter);\r\n        this.metricMapping$ = this.store.select(fromRoot.getMetricMapping);\r\n    }\r\n\r\n    handleViewTypeChanged(viewType: ViewType) {\r\n        this.store.dispatch(changeViewType(viewType));\r\n    }\r\n\r\n    handleFilterChanged(filter: IFilter) {\r\n        this.store.dispatch(changeActiveFilter(filter));\r\n    }\r\n\r\n    handleMetricMappingChanged(metricMapping: IMetricMapping) {\r\n        this.store.dispatch(setMetricMapping(metricMapping));\r\n    }\r\n\r\n}\r\n","import * as SettingsActions from './settings.actions';\r\nimport {ActionReducer} from '@ngrx/store';\r\nimport {ViewType} from '../../enum/ViewType';\r\nimport {IFilter} from '../../interfaces/IFilter';\r\nimport {IMetricMapping} from '../../interfaces/IMetricMapping';\r\nimport {AppConfig} from '../../AppConfig';\r\nimport {IActionWithPayload} from '../../interfaces/IActionWithPayload';\r\n\r\nexport interface SettingsState {\r\n    activeViewType: ViewType;\r\n    activeFilter: IFilter;\r\n    metricMapping: IMetricMapping;\r\n}\r\n\r\nconst initialState: SettingsState = {\r\n    activeViewType: ViewType.SPLIT,\r\n    activeFilter: {\r\n        unmodified: true,\r\n        modified: true,\r\n        deleted: true,\r\n        added: true,\r\n        renamed: true\r\n    },\r\n    metricMapping: {\r\n        heightMetricName: AppConfig.HEIGHT_METRIC_NAME,\r\n        groundAreaMetricName: AppConfig.GROUND_AREA_METRIC_NAME,\r\n        colorMetricName: AppConfig.COLOR_METRIC_NAME\r\n    }\r\n};\r\n\r\nexport const SettingsReducer: ActionReducer<SettingsState> = (state = initialState, action: IActionWithPayload<any>) => {\r\n    let newState;\r\n    switch (action.type) {\r\n        case SettingsActions.CHANGE_VIEW_TYPE:\r\n            newState = Object.assign({}, state);\r\n            newState.activeViewType = action.payload;\r\n            return newState;\r\n\r\n        case SettingsActions.CHANGE_ACTIVE_FILTER:\r\n            newState = Object.assign({}, state);\r\n            newState.activeFilter = Object.assign({}, state.activeFilter, action.payload);\r\n            return newState;\r\n\r\n        case SettingsActions.SET_METRIC_MAPPING:\r\n            newState = Object.assign({}, state);\r\n            newState.metricMapping = Object.assign({}, state.metricMapping, action.payload);\r\n            return newState;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const getActiveViewType = (state: SettingsState) => state.activeViewType;\r\n\r\nexport const getActiveFilter = (state: SettingsState) => state.activeFilter;\r\n\r\nexport const getMetricMapping = (state: SettingsState) => state.metricMapping;\r\n","module.exports = \"<div class=\\\"custom-control custom-radio custom-control-inline\\\">\\r\\n    <input type=\\\"radio\\\" id=\\\"radio-splitscreen\\\" name=\\\"radio-group-screen\\\" class=\\\"custom-control-input\\\" [value]=\\\"viewTypes.split\\\" (click)=\\\"changeViewType(viewTypes.split)\\\" [checked]=\\\"activeViewType === viewTypes.split\\\" />\\r\\n    <label class=\\\"custom-control-label\\\" for=\\\"radio-splitscreen\\\">nebeneinander</label>\\r\\n</div>\\r\\n<div class=\\\"custom-control custom-radio custom-control-inline\\\">\\r\\n    <input type=\\\"radio\\\" id=\\\"radio-fullscreen\\\" name=\\\"radio-group-screen\\\" class=\\\"custom-control-input\\\" [value]=\\\"viewTypes.merged\\\" (click)=\\\"changeViewType(viewTypes.merged)\\\" [checked]=\\\"activeViewType === viewTypes.merged\\\" />\\r\\n    <label class=\\\"custom-control-label\\\" for=\\\"radio-fullscreen\\\">kombiniert</label>\\r\\n</div>\"","module.exports = \"\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {ViewType} from '../../../enum/ViewType';\r\n\r\n@Component({\r\n    selector: 'app-view-control',\r\n    templateUrl: './view-control.component.html',\r\n    styleUrls: ['./view-control.component.scss']\r\n})\r\nexport class ViewControlComponent implements OnInit {\r\n\r\n    viewTypes: any = {\r\n        split: ViewType.SPLIT,\r\n        merged: ViewType.MERGED\r\n    };\r\n\r\n    @Input() activeViewType: ViewType;\r\n\r\n    @Output() viewTypeChanged = new EventEmitter();\r\n\r\n    constructor() {\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    changeViewType(value) {\r\n        this.viewTypeChanged.emit(value === 0 ? ViewType.SPLIT : ViewType.MERGED);\r\n    }\r\n\r\n}\r\n","export enum CommitReferenceType {\r\n    THIS,\r\n    OTHER\r\n}\r\n","export enum CommitType {\r\n    LEFT,\r\n    RIGHT\r\n}\r\n","export enum NodeType {\r\n    MODULE = <any>'MODULE',\r\n    FILE = <any>'FILE',\r\n    CONNECTION = <any>'CONNECTION'\r\n}\r\n","export enum ScreenType {\r\n    LEFT,\r\n    RIGHT\r\n}\r\n","export enum ViewType {\r\n    SPLIT,\r\n    MERGED\r\n}\r\n","import {Geometry, LineBasicMaterial, Line, Vector3, QuadraticBezierCurve3} from 'three';\r\nimport {AppConfig} from '../AppConfig';\r\nimport {NodeType} from '../enum/NodeType';\r\n\r\nexport class BlockConnection {\r\n\r\n    curveObject: Line;\r\n\r\n    constructor(fromElement, toElement) {\r\n        const from = fromElement.position.clone();\r\n        from.x += fromElement.scale.x / 2;\r\n        from.y += fromElement.scale.y;\r\n        from.z += fromElement.scale.z / 2;\r\n\r\n        const to = toElement.position.clone();\r\n        to.x += toElement.scale.x / 2;\r\n        to.y += toElement.scale.y;\r\n        to.z += toElement.scale.z / 2;\r\n\r\n        const distance = from.distanceTo(to);\r\n\r\n        const via = new Vector3((from.x + to.x) / 2, this.getHeightByDistance(distance), (from.z + to.z) / 2);\r\n\r\n        const curve = new QuadraticBezierCurve3(from, via, to);\r\n\r\n        const geometry = new Geometry();\r\n        geometry.vertices = curve.getPoints(50);\r\n        const material = new LineBasicMaterial({ color: AppConfig.COLOR_CONNECTION });\r\n        this.curveObject = new Line(geometry, material);\r\n\r\n        this.curveObject.userData = {\r\n            type: NodeType.CONNECTION,\r\n            changeTypes: {\r\n                renamed: true\r\n            }\r\n        };\r\n    }\r\n\r\n    getCurve(): Line {\r\n        return this.curveObject;\r\n    }\r\n\r\n    private getHeightByDistance(distance) {\r\n        return 0.0001 * Math.pow(distance, 2) + 0.8 * distance + 30;\r\n    }\r\n}\r\n","import {AppConfig} from '../AppConfig';\r\nimport {ScreenType} from '../enum/ScreenType';\r\nimport {Color} from 'three';\r\ndeclare var chroma: any;\r\n\r\nexport class ColorHelper {\r\n\r\n    static getColorByPosition(screenType: ScreenType): string {\r\n        return screenType === ScreenType.LEFT ? AppConfig.COLOR_FIRST_COMMIT : AppConfig.COLOR_SECOND_COMMIT;\r\n    }\r\n\r\n    static getContraryColorByColor(color: string): string {\r\n        return color === AppConfig.COLOR_FIRST_COMMIT ? AppConfig.COLOR_SECOND_COMMIT : AppConfig.COLOR_FIRST_COMMIT;\r\n    }\r\n\r\n    static getColorByMetricValue(value: number, max: number, min: number): THREE.Color {\r\n        return this.getColorScale(AppConfig.COLOR_HEATMAP_RANGE, value, max, min);\r\n    }\r\n\r\n    static getColorByLevelValue(value: number, max: number, min: number): THREE.Color {\r\n        return this.getColorScale(AppConfig.COLOR_HIERARCHY_RANGE, value, max, min);\r\n    }\r\n\r\n    static getColorScale(range, value: number, max: number, min: number): THREE.Color {\r\n        const colorScale = chroma.scale(range);\r\n        const hexValue = colorScale(value / (max + min)).hex();\r\n        return new Color(hexValue);\r\n    }\r\n\r\n}\r\n","import {CommitReferenceType} from '../enum/CommitReferenceType';\r\nimport {INode} from '../interfaces/INode';\r\nimport {ScreenType} from '../enum/ScreenType';\r\nimport {NodeType} from '../enum/NodeType';\r\n\r\nexport class ElementAnalyzer {\r\n\r\n    static findElementByName(nodes: any, elementName: string): INode {\r\n        if (!Array.isArray(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n\r\n        let foundElement: INode;\r\n\r\n        for (const node of nodes) {\r\n            if (node.name === elementName) {\r\n                foundElement = node;\r\n            }\r\n\r\n            // recursion\r\n            if (node.children && node.children.length > 0 && !foundElement) {\r\n                foundElement = this.findElementByName(node.children, elementName);\r\n            }\r\n        }\r\n\r\n        return foundElement;\r\n    }\r\n\r\n    static generateUniqueElementList(nodes: INode[], uniqueElements: string[] = []) {\r\n        if (!Array.isArray(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n\r\n        for (const node of nodes) {\r\n            if (uniqueElements.indexOf(node.name) < 0) {\r\n                uniqueElements.push(node.name);\r\n            }\r\n\r\n            // recursion\r\n            if (node.children && node.children.length > 0) {\r\n                this.generateUniqueElementList(node.children, uniqueElements);\r\n            }\r\n        }\r\n\r\n        return uniqueElements;\r\n    }\r\n\r\n    static getMaxModuleLevel(node: INode): number {\r\n        let depth = 0;\r\n        if (node.children) {\r\n            node.children.filter(child => child.type === NodeType.MODULE).forEach((childNode) => {\r\n                depth = Math.max(this.getMaxModuleLevel(childNode), depth);\r\n            });\r\n        }\r\n        return 1 + depth;\r\n    }\r\n\r\n    static findSmallestAndBiggestMetricValueByMetricName(nodes: INode[], metricName: string): {min: number, max: number} {\r\n        if (typeof nodes !== 'object' || nodes === null) {\r\n            throw new Error('elements is not an object or null!');\r\n        }\r\n\r\n        if (!Array.isArray(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n\r\n        let min = Number.MAX_VALUE;\r\n        let max = Number.MIN_VALUE;\r\n\r\n        for (const node of nodes) {\r\n            // investigate only FILEs, because only files can have different sizes and colors\r\n            if (node.type === NodeType.FILE) {\r\n                const commit1Metrics = node.commit1Metrics || null;\r\n                const commit2Metrics = node.commit2Metrics || null;\r\n\r\n                const big = this.getMaxMetricValueByMetricName(commit1Metrics, commit2Metrics, metricName);\r\n                if (big > max) {\r\n                    max = big;\r\n                }\r\n\r\n                const small = this.getMinMetricValueByMetricName(commit1Metrics, commit2Metrics, metricName);\r\n                if (small < min) {\r\n                    min = small;\r\n                }\r\n            }\r\n\r\n            // recursion\r\n            if (node.children && node.children.length > 0) {\r\n                const result = this.findSmallestAndBiggestMetricValueByMetricName(node.children, metricName);\r\n                if (result.max > max) {\r\n                    max = result.max;\r\n                }\r\n                if (result.min < min) {\r\n                    min = result.min;\r\n                }\r\n            }\r\n        }\r\n\r\n        return {\r\n            min: min,\r\n            max: max\r\n        };\r\n    }\r\n\r\n    static getMinMetricValueByMetricName(commit1Metrics: any, commit2Metrics: any, metricName: string): number {\r\n        if (commit1Metrics === null && commit2Metrics === null) {\r\n            throw new Error(`No metric objects given`);\r\n        }\r\n\r\n        if (commit1Metrics === null) {\r\n            return commit2Metrics[metricName];\r\n        } else if (commit2Metrics === null) {\r\n            return commit1Metrics[metricName];\r\n        } else {\r\n            return commit1Metrics[metricName] < commit2Metrics[metricName] ? commit1Metrics[metricName] : commit2Metrics[metricName];\r\n        }\r\n    }\r\n\r\n    static getMaxMetricValueByMetricName(commit1Metrics: any, commit2Metrics: any, metricName: string): number {\r\n        if (commit1Metrics === null && commit2Metrics === null) {\r\n            throw new Error(`No metric objects given`);\r\n        }\r\n\r\n        if (commit1Metrics === null) {\r\n            return commit2Metrics[metricName];\r\n        } else if (commit2Metrics === null) {\r\n            return commit1Metrics[metricName];\r\n        } else {\r\n            return commit1Metrics[metricName] > commit2Metrics[metricName] ? commit1Metrics[metricName] : commit2Metrics[metricName];\r\n        }\r\n    }\r\n\r\n    static hasChildrenForCurrentCommit(node: INode, isFullScreen: boolean, screenType: ScreenType): boolean {\r\n        let found = false;\r\n\r\n        for (const child of node.children) {\r\n            if (this.hasMetricValuesForCurrentCommit(child, isFullScreen, screenType)) {\r\n                found = true;\r\n            }\r\n\r\n            // recursion\r\n            if (child.children && child.children.length > 0 && !found) {\r\n                found = this.hasChildrenForCurrentCommit(child, isFullScreen, screenType);\r\n            }\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    static hasMetricValuesForCurrentCommit(node: INode, isFullScreen: boolean, screenType: ScreenType) {\r\n        // when in fullScreen mode, metrics for at least one commit should be present\r\n        if (isFullScreen) {\r\n            return (node.commit1Metrics != null && Object.keys(node.commit1Metrics).length > 0)\r\n                || (node.commit2Metrics != null && Object.keys(node.commit2Metrics).length > 0)\r\n            ;\r\n        }\r\n\r\n        if (screenType === ScreenType.LEFT) {\r\n            return node.commit1Metrics != null && Object.keys(node.commit1Metrics).length > 0;\r\n        } else if (screenType === ScreenType.RIGHT) {\r\n            return node.commit2Metrics != null && Object.keys(node.commit2Metrics).length > 0;\r\n        } else {\r\n            throw new Error(`Unknown screenType ${screenType}!`);\r\n        }\r\n    }\r\n\r\n    static getMetricValueOfElementAndCommitReferenceType(\r\n        node: INode,\r\n        metricName: string,\r\n        commitReferenceType: CommitReferenceType,\r\n        screenType: ScreenType\r\n    ): number {\r\n        if (screenType === ScreenType.LEFT) {\r\n            if (commitReferenceType === CommitReferenceType.THIS) {\r\n                return node.commit1Metrics ? node.commit1Metrics[metricName] : undefined;\r\n            } else if (commitReferenceType === CommitReferenceType.OTHER) {\r\n                return node.commit2Metrics ? node.commit2Metrics[metricName] : undefined;\r\n            } else {\r\n                throw new Error(`Unknown commitReferenceType ${commitReferenceType}!`);\r\n            }\r\n\r\n        } else if (screenType === ScreenType.RIGHT) {\r\n            if (commitReferenceType === CommitReferenceType.THIS) {\r\n                return node.commit2Metrics ? node.commit2Metrics[metricName] : undefined;\r\n            } else if (commitReferenceType === CommitReferenceType.OTHER) {\r\n                return node.commit1Metrics ? node.commit1Metrics[metricName] : undefined;\r\n            } else {\r\n                throw new Error(`Unknown commitReferenceType ${commitReferenceType}!`);\r\n            }\r\n\r\n        } else {\r\n            throw new Error(`Unknown screenType ${screenType}!`);\r\n        }\r\n    }\r\n\r\n}\r\n","import {AppConfig} from '../AppConfig';\r\nimport {environment} from '../../environments/environment';\r\n\r\nexport class MetricNameHelper {\r\n\r\n    static getAll() {\r\n        if (environment.useCoderadarEndpoint) {\r\n            return AppConfig.AVAILABLE_METRICS;\r\n        } else {\r\n            // filter metric names for demo\r\n            return AppConfig.AVAILABLE_METRICS.filter((metric) => {\r\n                return metric.name === 'coderadar:size:loc:java'\r\n                    || metric.name === 'checkstyle:com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck'\r\n                    || metric.name === 'checkstyle:com.puppycrawl.tools.checkstyle.checks.metrics.CyclomaticComplexityCheck';\r\n            });\r\n        }\r\n    }\r\n\r\n    static getMetricNameByShortName(shortName: string): string {\r\n        return AppConfig.AVAILABLE_METRICS.find(metric => metric.shortName === shortName).name;\r\n    }\r\n\r\n    static getShortNameByFullName(fullName) {\r\n        return AppConfig.AVAILABLE_METRICS.find(metric => metric.name === fullName).shortName;\r\n    }\r\n\r\n}\r\n","import {Pipe, PipeTransform} from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'keyValue',\r\n    pure: false\r\n})\r\nexport class KeyValuePipe implements PipeTransform {\r\n\r\n    transform(value: any, args?: any): any {\r\n        if (!value) {\r\n            return undefined;\r\n        }\r\n\r\n        const keys = [];\r\n        for (const key in value) {\r\n            if (value.hasOwnProperty(key)) {\r\n                keys.push({key: key, value: value[key]});\r\n            }\r\n        }\r\n        return keys;\r\n    }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {ICommitsGetResponse} from '../interfaces/ICommitsGetResponse';\r\nimport {Observable} from 'rxjs';\r\nimport {AppConfig} from '../AppConfig';\r\nimport {environment} from 'environments/environment';\r\n\r\n@Injectable()\r\nexport class CommitService {\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    loadCommits(): Observable<ICommitsGetResponse> {\r\n        if (environment.useCoderadarEndpoint) {\r\n            return this.http.get<ICommitsGetResponse>(`${AppConfig.BASE_URL}/projects/1/commits?page=0&size=999`);\r\n        } else {\r\n            return this.http.get<ICommitsGetResponse>('http://localhost:4200/assets/json/commits.json');\r\n        }\r\n    }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Subject} from 'rxjs/Subject';\r\nimport {INode} from 'app/interfaces/INode';\r\n\r\n@Injectable()\r\nexport class ComparisonPanelService {\r\n\r\n    private showComparisonPanelSource = new Subject<{elementName: string, foundElement: INode}>();\r\n    private hideComparisonPanelSource = new Subject();\r\n\r\n    showComparisonPanel$ = this.showComparisonPanelSource.asObservable();\r\n    hideComparisonPanel$ = this.hideComparisonPanelSource.asObservable();\r\n\r\n    constructor() {\r\n    }\r\n\r\n    hide() {\r\n        this.hideComparisonPanelSource.next();\r\n    }\r\n\r\n    show(params: {elementName: string, foundElement: INode}) {\r\n        this.showComparisonPanelSource.next(params);\r\n    }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Subject} from 'rxjs/Subject';\r\n\r\n@Injectable()\r\nexport class FocusService {\r\n\r\n    private focusElementSource = new Subject<string>();\r\n\r\n    elementFocussed$ = this.focusElementSource.asObservable();\r\n\r\n    focusElement(elementName: string) {\r\n        this.focusElementSource.next(elementName);\r\n    }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {IDeltaTreeGetResponse} from '../interfaces/IDeltaTreeGetResponse';\r\nimport {ICommit} from '../interfaces/ICommit';\r\nimport {INode} from '../interfaces/INode';\r\nimport {IMetricMapping} from '../interfaces/IMetricMapping';\r\nimport {AppConfig} from '../AppConfig';\r\nimport {delay, map} from 'rxjs/operators';\r\nimport { environment } from 'environments/environment';\r\n\r\n@Injectable()\r\nexport class MetricService {\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    loadDeltaTree(leftCommit: ICommit, rightCommit: ICommit, metricMapping: IMetricMapping): Observable<IDeltaTreeGetResponse> {\r\n        if (environment.useCoderadarEndpoint) {\r\n            const body = {\r\n                'commit1': leftCommit.name,\r\n                'commit2': rightCommit.name,\r\n                'metrics': [metricMapping.heightMetricName, metricMapping.groundAreaMetricName, metricMapping.colorMetricName]\r\n            };\r\n\r\n            return this.http.post<INode>(`${AppConfig.BASE_URL}/projects/1/metricvalues/deltaTree`, body)\r\n                .pipe(\r\n                    map((res) => {\r\n                        return {\r\n                            rootNode: res\r\n                        };\r\n                    })\r\n                );\r\n        } else {\r\n            const deltaTreeId = leftCommit.name.charAt(0);\r\n            return this.http.get<INode>(`http://localhost:4200/assets/json/deltaTree${deltaTreeId}.json`)\r\n                .pipe(\r\n                    delay(1500),\r\n                    map((res) => {\r\n                        return {\r\n                            rootNode: res\r\n                        };\r\n                    })\r\n                );\r\n        }\r\n    }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Subject} from 'rxjs/Subject';\r\nimport {ScreenType} from '../enum/ScreenType';\r\nimport {Store} from '@ngrx/store';\r\nimport * as fromRoot from '../shared/reducers';\r\nimport {addScreenshot, clearScreenshots} from '../control-panel/control-panel.actions';\r\n\r\n@Injectable()\r\nexport class ScreenShotService {\r\n\r\n    private screenShotRequestedSource = new Subject<string>();\r\n\r\n    screenShotRequested$ = this.screenShotRequestedSource.asObservable();\r\n\r\n    constructor(private store: Store<fromRoot.AppState>) {\r\n    }\r\n\r\n    requestScreenShot() {\r\n        this.screenShotRequestedSource.next();\r\n    }\r\n\r\n    addScreenShot(screenShot: {screenType: ScreenType, file: string}) {\r\n        this.store.dispatch(addScreenshot(screenShot));\r\n    }\r\n\r\n    clearScreenShots() {\r\n        this.store.dispatch(clearScreenshots());\r\n    }\r\n\r\n    getScreenShots() {\r\n        return this.store.select(fromRoot.getScreenshots);\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Subject} from 'rxjs/Subject';\r\n\r\n@Injectable()\r\nexport class TooltipService {\r\n\r\n    private tooltipSource = new Subject<{elementName: string, metrics: any}>();\r\n    private showTooltipSource = new Subject();\r\n    private hideTooltipSource = new Subject();\r\n    private trackPositionSource = new Subject<{x: number, y: number}>();\r\n\r\n    tooltipContent$ = this.tooltipSource.asObservable();\r\n    showTooltip$ = this.showTooltipSource.asObservable();\r\n    hideTooltip$ = this.hideTooltipSource.asObservable();\r\n    trackPosition$ = this.trackPositionSource.asObservable();\r\n\r\n    constructor() {\r\n    }\r\n\r\n    setContent(tooltipObject: {elementName: string, metrics: any}) {\r\n        this.tooltipSource.next(tooltipObject);\r\n    }\r\n\r\n    setMousePosition(position: {x: number, y: number}) {\r\n        this.trackPositionSource.next(position);\r\n    }\r\n\r\n    hide() {\r\n        this.hideTooltipSource.next();\r\n    }\r\n\r\n    show() {\r\n        this.showTooltipSource.next();\r\n    }\r\n\r\n}\r\n","export * from '../control-panel/control-panel.actions';\r\nexport * from '../control-panel/settings/settings.actions';\r\nexport * from '../visualization/visualization.actions';\r\n","import {Injectable} from '@angular/core';\r\nimport {Actions, Effect} from '@ngrx/effects';\r\nimport {of} from 'rxjs';\r\nimport * as actions from '../shared/actions';\r\nimport {CommitService} from '../service/commit.service';\r\nimport {ICommitsGetResponse} from '../interfaces/ICommitsGetResponse';\r\nimport {ICommitsGetErrorResponse} from '../interfaces/ICommitsGetErrorResponse';\r\nimport {IDeltaTreeGetErrorResponse} from '../interfaces/IDeltaTreeGetErrorResponse';\r\nimport {IDeltaTreeGetResponse} from '../interfaces/IDeltaTreeGetResponse';\r\nimport {MetricService} from '../service/metric.service';\r\nimport {catchError, map, switchMap, mergeMap} from 'rxjs/operators';\r\nimport { IActionWithPayload } from '../interfaces/IActionWithPayload';\r\n\r\n@Injectable()\r\nexport class AppEffects {\r\n\r\n    @Effect() loadCommitsEffects$ = this.actions$\r\n        .ofType(actions.LOAD_COMMITS)\r\n        .pipe(\r\n            switchMap(\r\n                () => this.commitService.loadCommits()\r\n                    .pipe(\r\n                        map((result: ICommitsGetResponse) => {\r\n                            return actions.loadCommitsSuccess(result._embedded.commitResourceList);\r\n                        }),\r\n                        catchError((response: ICommitsGetErrorResponse) => {\r\n                            return of(actions.loadCommitsError(response.error));\r\n                        })\r\n                    )\r\n            )\r\n        );\r\n\r\n    @Effect() loadMetricTreeEffects$ = this.actions$\r\n        .ofType(actions.LOAD_METRIC_TREE)\r\n        .pipe(\r\n            map((action) => action.payload),\r\n            switchMap(\r\n                (payload) => this.metricService.loadDeltaTree(payload.leftCommit, payload.rightCommit, payload.metricMapping)\r\n                    .pipe(\r\n                        mergeMap((result: IDeltaTreeGetResponse) => {\r\n                            return [\r\n                                actions.loadMetricTreeSuccess(result.rootNode),\r\n                                actions.generateUniqueFileList(result.rootNode)\r\n                            ];\r\n                        }),\r\n                        catchError((response: IDeltaTreeGetErrorResponse) => {\r\n                            return of(actions.loadMetricTreeError(response.error));\r\n                        })\r\n                    )\r\n            )\r\n        );\r\n\r\n    constructor(\r\n        private actions$: Actions<IActionWithPayload<any>>,\r\n        private commitService: CommitService,\r\n        private metricService: MetricService\r\n    ) { }\r\n}\r\n","import {createSelector} from 'reselect';\r\nimport {ActionReducerMap} from '@ngrx/store';\r\nimport * as fromControlPanel from '../control-panel/control-panel.reducers';\r\nimport * as fromSettings from '../control-panel/settings/settings.reducers';\r\nimport * as fromVisualization from '../visualization/visualization.reducers';\r\nimport { InjectionToken } from '@angular/core';\r\n\r\nexport interface AppState {\r\n    controlPanelState: fromControlPanel.ControlPanelState;\r\n    settingsState: fromSettings.SettingsState;\r\n    visualizationState: fromVisualization.VisualizationState;\r\n}\r\n\r\nexport const REDUCER_TOKEN = new InjectionToken<ActionReducerMap<AppState>>('Registered Reducers');\r\n\r\nexport function getReducers() {\r\n    return {\r\n        controlPanelState: fromControlPanel.ControlPanelReducer,\r\n        settingsState: fromSettings.SettingsReducer,\r\n        visualizationState: fromVisualization.VisualizationReducer\r\n    };\r\n}\r\n\r\nexport const getControlPanelState = (state: AppState) => state.controlPanelState;\r\n\r\nexport const getVisualizationState = (state: AppState) => state.visualizationState;\r\n\r\nexport const getSettingsState = (state: AppState) => state.settingsState;\r\n\r\nexport const getCommitsLoading = createSelector(getControlPanelState, fromControlPanel.getCommitsLoading);\r\n\r\nexport const getCommits = createSelector(getControlPanelState, fromControlPanel.getCommits);\r\n\r\nexport const getLeftCommit = createSelector(getControlPanelState, fromControlPanel.getLeftCommit);\r\n\r\nexport const getRightCommit = createSelector(getControlPanelState, fromControlPanel.getRightCommit);\r\n\r\nexport const getScreenshots = createSelector(getControlPanelState, fromControlPanel.getScreenshots);\r\n\r\nexport const getMetricsLoading = createSelector(getVisualizationState, fromVisualization.getMetricsLoading);\r\n\r\nexport const getMetricTree = createSelector(getVisualizationState, fromVisualization.getMetricTree);\r\n\r\nexport const getUniqueFileList = createSelector(getVisualizationState, fromVisualization.getUniqueFileList);\r\n\r\nexport const getMetricMapping = createSelector(getSettingsState, fromSettings.getMetricMapping);\r\n\r\nexport const getActiveFilter = createSelector(getSettingsState, fromSettings.getActiveFilter);\r\n\r\nexport const getActiveViewType = createSelector(getSettingsState, fromSettings.getActiveViewType);\r\n","module.exports = \"<div id=\\\"comparison-panel\\\">\\r\\n    <strong title=\\\"{{elementName}}\\\" class=\\\"element-name\\\">{{elementName}}</strong>\\r\\n    <div class=\\\"table-container\\\">\\r\\n        <table id=\\\"comparison-table\\\" class=\\\"table table-striped table-sm\\\">\\r\\n            <thead>\\r\\n            <tr>\\r\\n                <th>Metrik</th>\\r\\n                <th id=\\\"first-commit-id\\\">{{leftCommit?.name}}</th>\\r\\n                <th id=\\\"second-commit-id\\\">{{rightCommit?.name}}</th>\\r\\n                <th>Änderung</th>\\r\\n            </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n                <tr *ngFor=\\\"let row of tableRows\\\">\\r\\n                    <td>{{row.metricName}}</td>\\r\\n                    <td>{{row.leftCommitValue}}</td>\\r\\n                    <td>{{row.rightCommitValue}}</td>\\r\\n                    <td>\\r\\n                        <i *ngIf=\\\"row.difference > 0\\\" class=\\\"fa fa-caret-up\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                        <i *ngIf=\\\"row.difference < 0\\\" class=\\\"fa fa-caret-down\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                        <i *ngIf=\\\"row.difference === 0\\\" class=\\\"fa fa-caret-right\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                        {{row.difference}}\\r\\n                    </td>\\r\\n                </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n    </div>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"handleClose()\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n</div>\"","module.exports = \"#comparison-panel {\\n  position: absolute;\\n  bottom: 0;\\n  left: 50%;\\n  -webkit-transform: translate3d(-50%, 100%, 0) scale(0.1);\\n          transform: translate3d(-50%, 100%, 0) scale(0.1);\\n  padding: 5px 20px;\\n  max-width: 40%;\\n  height: 190px;\\n  background: #fff;\\n  box-shadow: rgba(0, 0, 0, 0.2) 0 2px 6px 0;\\n  z-index: 100;\\n  transition: -webkit-transform 1.5s ease;\\n  transition: transform 1.5s ease;\\n  transition: transform 1.5s ease, -webkit-transform 1.5s ease; }\\n  #comparison-panel.open {\\n    -webkit-transform: translate3d(-50%, 0%, 0) scale(1);\\n            transform: translate3d(-50%, 0%, 0) scale(1); }\\n  #comparison-panel > .element-name {\\n    display: block;\\n    text-overflow: ellipsis;\\n    text-align: center;\\n    white-space: nowrap;\\n    overflow: hidden;\\n    direction: rtl;\\n    margin: 10px auto;\\n    padding: 0 10px; }\\n  #comparison-panel table #first-commit-id, #comparison-panel table #second-commit-id {\\n    max-width: 100px;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    white-space: nowrap; }\\n  #comparison-panel button.close {\\n    position: absolute;\\n    top: 12px;\\n    right: 12px; }\\n\"","import {Component, Input, OnInit, OnDestroy} from '@angular/core';\r\nimport {Store} from '@ngrx/store';\r\nimport * as fromRoot from '../../shared/reducers';\r\nimport {Subscription} from 'rxjs/Subscription';\r\nimport {ICommit} from '../../interfaces/ICommit';\r\nimport {IMetricMapping} from '../../interfaces/IMetricMapping';\r\nimport {INode} from '../../interfaces/INode';\r\nimport {MetricNameHelper} from '../../helper/metric-name-helper';\r\nimport {ComparisonPanelService} from '../../service/comparison-panel.service';\r\n\r\n@Component({\r\n    selector: 'app-comparison-panel',\r\n    templateUrl: './comparison-panel.component.html',\r\n    styleUrls: ['./comparison-panel.component.scss']\r\n})\r\nexport class ComparisonPanelComponent implements OnInit, OnDestroy {\r\n\r\n    @Input() metricMapping: IMetricMapping;\r\n    @Input() leftCommit: ICommit;\r\n    @Input() rightCommit: ICommit;\r\n\r\n    comparisonPanel: HTMLElement;\r\n\r\n    subscriptions: Subscription[] = [];\r\n\r\n    tableRows: any[] = [];\r\n\r\n    elementName: string;\r\n\r\n    constructor(\r\n        private store: Store<fromRoot.AppState>,\r\n        private comparisonPanelService: ComparisonPanelService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.comparisonPanel = <HTMLElement>document.querySelector('#comparison-panel');\r\n\r\n        this.subscriptions.push(\r\n            this.comparisonPanelService.showComparisonPanel$.subscribe((params) => {\r\n                this.elementName = params.elementName;\r\n                this.prepareTableData(params.foundElement);\r\n                this.show();\r\n            })\r\n        );\r\n\r\n        this.subscriptions.push(\r\n            this.comparisonPanelService.hideComparisonPanel$.subscribe(() => {\r\n                this.hide();\r\n            })\r\n        );\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.subscriptions.forEach((subscription: Subscription) => {\r\n            subscription.unsubscribe();\r\n        });\r\n    }\r\n\r\n    handleClose() {\r\n        this.hide();\r\n    }\r\n\r\n    prepareTableData(foundElement: INode) {\r\n        const rows = [];\r\n        for (const key of Object.keys(this.metricMapping)) {\r\n            const metricName = this.metricMapping[key];\r\n\r\n            let leftCommitValue;\r\n            if (foundElement.commit1Metrics && foundElement.commit1Metrics[metricName]) {\r\n                leftCommitValue = foundElement.commit1Metrics[metricName];\r\n            }\r\n\r\n            let rightCommitValue;\r\n            if (foundElement.commit2Metrics && foundElement.commit2Metrics[metricName]) {\r\n                rightCommitValue = foundElement.commit2Metrics[metricName];\r\n            }\r\n\r\n            let difference = 0;\r\n            if (leftCommitValue && rightCommitValue) {\r\n                difference = rightCommitValue - leftCommitValue;\r\n            }\r\n\r\n            rows.push({\r\n                metricName: MetricNameHelper.getShortNameByFullName(metricName),\r\n                leftCommitValue: leftCommitValue || 'N/A',\r\n                rightCommitValue: rightCommitValue || 'N/A',\r\n                difference: difference\r\n            });\r\n        }\r\n        this.tableRows = rows;\r\n    }\r\n\r\n    show() {\r\n        this.comparisonPanel.classList.add('open');\r\n    }\r\n\r\n    hide() {\r\n        this.comparisonPanel.classList.remove('open');\r\n    }\r\n\r\n}\r\n","import {Scene, WebGLRenderer, Raycaster, Vector2, PerspectiveCamera, Intersection, Object3D} from 'three';\r\nimport {ScreenType} from '../../enum/ScreenType';\r\nimport {FocusService} from '../../service/focus.service';\r\nimport {TooltipService} from '../../service/tooltip.service';\r\n\r\nexport class InteractionHandler {\r\n\r\n    enabled = false;\r\n\r\n    raycaster: Raycaster = new Raycaster();\r\n    mouse: Vector2 = new Vector2();\r\n    mouseForRaycaster: Vector2 = new Vector2();\r\n\r\n    hoveredElementUuid = undefined;\r\n    clickedElementUuid = undefined;\r\n\r\n    startingPosition: {x?: number, y?: number} = {};\r\n\r\n    constructor(\r\n        private scene: Scene,\r\n        private renderer: WebGLRenderer,\r\n        private screenType: ScreenType,\r\n        private isMergedView: boolean,\r\n        private focusService: FocusService,\r\n        private tooltipService: TooltipService\r\n    ) {\r\n        this.bindEvents();\r\n    }\r\n\r\n    setIsMergedView(isMergedView: boolean) {\r\n        this.isMergedView = isMergedView;\r\n    }\r\n\r\n    update(camera: PerspectiveCamera) {\r\n        if (!this.enabled) {\r\n            return;\r\n        }\r\n\r\n        this.raycaster.setFromCamera(this.mouseForRaycaster, camera);\r\n        const intersects = this.raycaster.intersectObjects(this.scene.children);\r\n        const target = this.findFirstNonHelperBlock(intersects);\r\n\r\n        this.updateTooltip(target);\r\n    }\r\n\r\n    private findFirstNonHelperBlock(intersections: Intersection[]): Object3D {\r\n        if (intersections.length > 0) {\r\n            for (let i = 0; i < intersections.length; i++) {\r\n                // find the first block that is not a helper block\r\n                // this lets the clicks go through the helper blocks\r\n                if (!intersections[i].object.userData.isHelper) {\r\n                    return intersections[i].object;\r\n                }\r\n            }\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n\r\n    updateTooltip(target: Object3D) {\r\n        if (target) {\r\n            if (target.uuid !== this.hoveredElementUuid) {\r\n                this.tooltipService.setContent({\r\n                    elementName: target.userData.elementName,\r\n                    metrics: target.userData.metrics\r\n                });\r\n                this.hoveredElementUuid = target.uuid;\r\n            }\r\n\r\n            this.tooltipService.show();\r\n            this.tooltipService.setMousePosition({x: this.mouse.x, y: this.mouse.y});\r\n        } else {\r\n            this.tooltipService.hide();\r\n        }\r\n    }\r\n\r\n    onDocumentMouseOver() {\r\n        this.enabled = true;\r\n    }\r\n\r\n    onDocumentMouseOut() {\r\n        this.enabled = false;\r\n        this.tooltipService.hide();\r\n    }\r\n\r\n    onDocumentMouseMove(event) {\r\n        if (!this.enabled) {\r\n            return;\r\n        }\r\n\r\n        this.mouse.x = event.clientX;\r\n        this.mouse.y = event.clientY;\r\n\r\n        const screenOffset = this.screenType === ScreenType.LEFT ? 0 : this.getScreenWidth();\r\n\r\n        this.mouseForRaycaster.x = ((event.clientX - screenOffset) / this.getScreenWidth()) * 2 - 1;\r\n        this.mouseForRaycaster.y = -(event.clientY / window.innerHeight) * 2 + 1;\r\n    }\r\n\r\n    onDocumentMouseDown(event) {\r\n        this.renderer.domElement.style.cursor = '-webkit-grabbing';\r\n\r\n        this.startingPosition = {\r\n            x: event.clientX,\r\n            y: event.clientY\r\n        };\r\n    }\r\n\r\n    onDocumentMouseUp(event) {\r\n        this.renderer.domElement.style.cursor = '-webkit-grab';\r\n\r\n        if (!this.enabled) {\r\n            return;\r\n        }\r\n\r\n        if (Math.abs(event.clientX - this.startingPosition.x) > 0 || Math.abs(event.clientY - this.startingPosition.y) > 0) {\r\n            return;\r\n        }\r\n\r\n        const intersects = this.raycaster.intersectObjects(this.scene.children);\r\n        const target = this.findFirstNonHelperBlock(intersects);\r\n        if (target) {\r\n            if (event.which === 1) { // left mouse button\r\n                if (target.uuid !== this.clickedElementUuid) {\r\n                    this.clickedElementUuid = target.uuid;\r\n                } else {\r\n                    this.clickedElementUuid = undefined;\r\n                }\r\n\r\n                this.focusService.focusElement(target.name);\r\n            }\r\n        }\r\n    }\r\n\r\n    private bindEvents() {\r\n        this.renderer.domElement.addEventListener('mouseover', this.onDocumentMouseOver.bind(this), false);\r\n        this.renderer.domElement.addEventListener('mouseout', this.onDocumentMouseOut.bind(this), false);\r\n        this.renderer.domElement.addEventListener('mousemove', this.onDocumentMouseMove.bind(this), false);\r\n        this.renderer.domElement.addEventListener('mousedown', this.onDocumentMouseDown.bind(this), false);\r\n        this.renderer.domElement.addEventListener('mouseup', this.onDocumentMouseUp.bind(this), false);\r\n    }\r\n\r\n    private getScreenWidth() {\r\n        if (this.isMergedView) {\r\n            return window.innerWidth;\r\n        }\r\n        return window.innerWidth / 2;\r\n    }\r\n\r\n}\r\n","module.exports = \"<div id=\\\"legend-container\\\">\\r\\n    <div id=\\\"legend-item-color-code\\\" class=\\\"legend-item\\\" *ngIf=\\\"activeViewType === viewTypes.split\\\">\\r\\n        <span class=\\\"legend-color\\\"></span>\\r\\n        <small class=\\\"legend-label\\\">{{colorMetricName}}</small>\\r\\n    </div>\\r\\n    <div id=\\\"legend-item-commit-1\\\" class=\\\"legend-item\\\" *ngIf=\\\"activeViewType === viewTypes.merged\\\">\\r\\n        <span class=\\\"legend-color\\\" [ngStyle]=\\\"{'background': colorFirstCommit}\\\"></span>\\r\\n        <small class=\\\"legend-label\\\">Erste Revision</small>\\r\\n    </div>\\r\\n    <div id=\\\"legend-item-commit-2\\\" class=\\\"legend-item\\\" *ngIf=\\\"activeViewType === viewTypes.merged\\\">\\r\\n        <span class=\\\"legend-color\\\" [ngStyle]=\\\"{'background': colorSecondCommit}\\\"></span>\\r\\n        <small class=\\\"legend-label\\\">Zweite Revision</small>\\r\\n    </div>\\r\\n    <div id=\\\"legend-item-added-files\\\" class=\\\"legend-item\\\" *ngIf=\\\"activeViewType === viewTypes.merged\\\">\\r\\n        <span class=\\\"legend-color\\\" [ngStyle]=\\\"{'background': colorAddedFile}\\\"></span>\\r\\n        <small class=\\\"legend-label\\\">hinzugefügt</small>\\r\\n    </div>\\r\\n    <div id=\\\"legend-item-deleted-files\\\" class=\\\"legend-item\\\" *ngIf=\\\"activeViewType === viewTypes.merged\\\">\\r\\n        <span class=\\\"legend-color\\\" [ngStyle]=\\\"{'background': colorDeletedFile}\\\"></span>\\r\\n        <small class=\\\"legend-label\\\">gelöscht</small>\\r\\n    </div>\\r\\n    <div id=\\\"legend-item-unchanged-files\\\" class=\\\"legend-item\\\" *ngIf=\\\"activeViewType === viewTypes.merged\\\">\\r\\n        <span class=\\\"legend-color\\\" [ngStyle]=\\\"{'background': colorUnchangedFile}\\\"></span>\\r\\n        <small class=\\\"legend-label\\\">unverändert</small>\\r\\n    </div>\\r\\n</div>\"","module.exports = \"#legend-container {\\n  position: absolute;\\n  bottom: 0;\\n  left: 10px;\\n  background: #fff;\\n  box-shadow: 1px 1px 2px 1px rgba(0, 0, 0, 0.2);\\n  z-index: 99; }\\n  #legend-container .legend-item {\\n    display: inline-block;\\n    padding: 3px 10px; }\\n  #legend-container .legend-item .legend-color {\\n      display: inline-block;\\n      width: 10px;\\n      height: 10px;\\n      margin-right: 5px; }\\n  #legend-item-color-code .legend-color {\\n  width: 30px;\\n  background: linear-gradient(to right, #ffffff, #ffc905, #f78400, #e92100, #9b1909, #4f1609, #5d0000); }\\n\"","import {Component, Input, OnInit} from '@angular/core';\r\nimport {ViewType} from '../../enum/ViewType';\r\nimport {AppConfig} from '../../AppConfig';\r\n\r\n@Component({\r\n    selector: 'app-legend',\r\n    templateUrl: './legend.component.html',\r\n    styleUrls: ['./legend.component.scss']\r\n})\r\nexport class LegendComponent implements OnInit {\r\n\r\n    @Input() activeViewType: ViewType;\r\n    @Input() colorMetricName: string;\r\n\r\n    colorFirstCommit: string;\r\n    colorSecondCommit: string;\r\n    colorAddedFile: string;\r\n    colorDeletedFile: string;\r\n    colorUnchangedFile: string;\r\n\r\n    viewTypes: any = {\r\n        split: ViewType.SPLIT,\r\n        merged: ViewType.MERGED\r\n    };\r\n\r\n    legendItemCommit1: HTMLElement;\r\n    legendItemCommit2: HTMLElement;\r\n    legendItemColorCode: HTMLElement;\r\n    legendItemAddedFiles: HTMLElement;\r\n    legendItemDeletedFiles: HTMLElement;\r\n    legendItemUnchangedFiles: HTMLElement;\r\n\r\n    constructor() {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.colorFirstCommit = AppConfig.COLOR_FIRST_COMMIT;\r\n        this.colorSecondCommit = AppConfig.COLOR_SECOND_COMMIT;\r\n        this.colorAddedFile = AppConfig.COLOR_ADDED_FILE;\r\n        this.colorDeletedFile = AppConfig.COLOR_DELETED_FILE;\r\n        this.colorUnchangedFile = AppConfig.COLOR_UNCHANGED_FILE;\r\n\r\n        this.legendItemCommit1 = <HTMLElement>document.querySelector('#legend-item-commit-1');\r\n        this.legendItemCommit2 = <HTMLElement>document.querySelector('#legend-item-commit-2');\r\n        this.legendItemColorCode = <HTMLElement>document.querySelector('#legend-item-color-code');\r\n        this.legendItemAddedFiles = <HTMLElement>document.querySelector('#legend-item-added-files');\r\n        this.legendItemDeletedFiles = <HTMLElement>document.querySelector('#legend-item-deleted-files');\r\n        this.legendItemUnchangedFiles = <HTMLElement>document.querySelector('#legend-item-unchanged-files');\r\n    }\r\n}\r\n","module.exports = \"<div class=\\\"loading-indicator-container\\\">\\r\\n    <div class=\\\"uil-cube-css\\\">\\r\\n        <div></div>\\r\\n        <div></div>\\r\\n        <div></div>\\r\\n        <div></div>\\r\\n    </div>\\r\\n</div>\"","module.exports = \".loading-indicator-container {\\n  position: fixed;\\n  width: 100%;\\n  height: 100%;\\n  background: rgba(0, 0, 0, 0.7);\\n  top: 80px;\\n  left: 0;\\n  z-index: 1000; }\\n  .loading-indicator-container .uil-cube-css {\\n    background: none;\\n    position: absolute;\\n    width: 200px;\\n    height: 200px;\\n    -webkit-transform: translateX(-50%) scale(0.5);\\n    top: calc(50% - 130px);\\n    left: 50%; }\\n  .loading-indicator-container .uil-cube-css > div {\\n      position: absolute;\\n      width: 80px;\\n      height: 80px;\\n      -webkit-animation: uil-cube-css 1s cubic-bezier(0.2, 0.8, 0.2, 0.8) infinite;\\n      animation: uil-cube-css 1s cubic-bezier(0.2, 0.8, 0.2, 0.8) infinite; }\\n  .loading-indicator-container .uil-cube-css > div:nth-of-type(1) {\\n      top: 10px;\\n      left: 10px;\\n      background: #fff;\\n      opacity: 0.9;\\n      -webkit-animation-delay: 0s;\\n      animation-delay: 0s; }\\n  .loading-indicator-container .uil-cube-css > div:nth-of-type(2) {\\n      top: 10px;\\n      left: 110px;\\n      background: #fff;\\n      opacity: 0.8;\\n      -webkit-animation-delay: 0.1s;\\n      animation-delay: 0.1s; }\\n  .loading-indicator-container .uil-cube-css > div:nth-of-type(3) {\\n      top: 110px;\\n      left: 10px;\\n      background: #fff;\\n      opacity: 0.7;\\n      -webkit-animation-delay: 0.3s;\\n      animation-delay: 0.3s; }\\n  .loading-indicator-container .uil-cube-css > div:nth-of-type(4) {\\n      top: 110px;\\n      left: 110px;\\n      background: #fff;\\n      opacity: 0.6;\\n      -webkit-animation-delay: 0.2s;\\n      animation-delay: 0.2s; }\\n  @-webkit-keyframes uil-cube-css {\\n  0% {\\n    -webkit-transform: scale(1.4);\\n    transform: scale(1.4); }\\n  100% {\\n    -webkit-transform: scale(1);\\n    transform: scale(1); } }\\n  @-webkit-keyframes uil-cube-css {\\n  0% {\\n    -webkit-transform: scale(1.4);\\n    transform: scale(1.4); }\\n  100% {\\n    -webkit-transform: scale(1);\\n    transform: scale(1); } }\\n  @-webkit-keyframes uil-cube-css {\\n  0% {\\n    -webkit-transform: scale(1.4);\\n    transform: scale(1.4); }\\n  100% {\\n    -webkit-transform: scale(1);\\n    transform: scale(1); } }\\n  @keyframes uil-cube-css {\\n  0% {\\n    -webkit-transform: scale(1.4);\\n    transform: scale(1.4); }\\n  100% {\\n    -webkit-transform: scale(1);\\n    transform: scale(1); } }\\n\"","import {Component, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-loading-indicator',\r\n    templateUrl: './loading-indicator.component.html',\r\n    styleUrls: ['./loading-indicator.component.scss']\r\n})\r\nexport class LoadingIndicatorComponent implements OnInit {\r\n\r\n    constructor() {\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"\"","import {Component, Input, OnChanges, OnInit, SimpleChanges, OnDestroy} from '@angular/core';\r\nimport {ScreenType} from '../../enum/ScreenType';\r\nimport {WebGLRenderer, Scene, AmbientLight, DirectionalLight} from 'three';\r\nimport {Subscription} from 'rxjs';\r\nimport {ViewType} from '../../enum/ViewType';\r\nimport {AbstractView} from '../view/abstract-view';\r\nimport {SplitView} from '../view/split-view';\r\nimport {MergedView} from '../view/merged-view';\r\nimport {BlockConnection} from '../../geometry/block-connection';\r\nimport {IFilter} from '../../interfaces/IFilter';\r\nimport {NodeType} from '../../enum/NodeType';\r\nimport {InteractionHandler} from '../interaction-handler/interaction-handler';\r\nimport {AppConfig} from '../../AppConfig';\r\nimport {INode} from '../../interfaces/INode';\r\nimport {ScreenShotService} from '../../service/screenshot.service';\r\nimport {FocusService} from '../../service/focus.service';\r\nimport {TooltipService} from '../../service/tooltip.service';\r\nimport {IMetricMapping} from '../../interfaces/IMetricMapping';\r\nimport {ComparisonPanelService} from '../../service/comparison-panel.service';\r\nimport {ElementAnalyzer} from 'app/helper/element-analyzer';\r\ndeclare var TWEEN: any;\r\ndeclare var THREE: any;\r\n\r\n@Component({\r\n    selector: 'app-screen',\r\n    templateUrl: './screen.component.html',\r\n    styleUrls: ['./screen.component.scss']\r\n})\r\nexport class ScreenComponent implements OnInit, OnChanges, OnDestroy {\r\n\r\n    @Input() screenType: ScreenType;\r\n    @Input() activeViewType: ViewType;\r\n    @Input() activeFilter: IFilter;\r\n    @Input() metricTree: INode;\r\n    @Input() metricMapping: IMetricMapping;\r\n\r\n    subscriptions: Subscription[] = [];\r\n\r\n    private isMergedView = false;\r\n    private requestAnimationFrameId: number;\r\n    private renderingIsPaused = false;\r\n\r\n    renderer: WebGLRenderer;\r\n    scene: Scene = new Scene();\r\n\r\n    // use THREE.PerspectiveCamera instead of importing PerspectiveCamera to avoid warning for panning and zooming are disabled\r\n    // (see https://github.com/nicolaspanel/three-orbitcontrols-ts/issues/1)\r\n    camera: THREE.PerspectiveCamera;\r\n    controls: THREE.OrbitControls;\r\n\r\n    interactionHandler: InteractionHandler;\r\n\r\n    view: AbstractView;\r\n\r\n    doCameraReset = true;\r\n\r\n    constructor(\r\n        private screenShotService: ScreenShotService,\r\n        private focusService: FocusService,\r\n        private tooltipService: TooltipService,\r\n        private comparisonPanelService: ComparisonPanelService\r\n    ) {\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (this.activeViewType !== null && this.metricTree !== null && this.activeFilter !== null) {\r\n            this.isMergedView = this.activeViewType === ViewType.MERGED;\r\n            this.interactionHandler.setIsMergedView(this.isMergedView);\r\n\r\n            if (this.isMergedView) {\r\n                this.view = new MergedView(this.screenType, this.metricMapping);\r\n                if (this.screenType === ScreenType.RIGHT) {\r\n                    this.pauseRendering();\r\n                }\r\n                document.querySelector('#stage').classList.remove('split');\r\n\r\n            } else {\r\n                this.view = new SplitView(this.screenType, this.metricMapping);\r\n                if (this.screenType === ScreenType.RIGHT) {\r\n                    this.resumeRendering();\r\n                }\r\n                document.querySelector('#stage').classList.add('split');\r\n            }\r\n\r\n            this.resetScene();\r\n            this.prepareView(this.metricTree);\r\n            this.applyFilter(this.activeFilter);\r\n            this.handleViewChanged();\r\n        }\r\n\r\n        if (\r\n            changes.metricTree\r\n            && changes.metricTree.currentValue\r\n            && ElementAnalyzer.hasMetricValuesForCurrentCommit(\r\n                changes.metricTree.currentValue,\r\n                this.activeViewType === ViewType.MERGED,\r\n                this.screenType\r\n            )\r\n        ) {\r\n            if (this.doCameraReset) {\r\n                this.resetCamera();\r\n                this.doCameraReset = false;\r\n            }\r\n            this.resetControls();\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.view = new SplitView(this.screenType, this.metricMapping);\r\n\r\n        this.createCamera();\r\n        this.createControls();\r\n        this.createLight();\r\n        this.createRenderer();\r\n        this.createInteractionHandler();\r\n\r\n        this.initializeEventListeners();\r\n\r\n        this.render();\r\n\r\n        this.subscriptions.push(\r\n            this.focusService.elementFocussed$.subscribe((elementName) => {\r\n                this.focusElementByName(elementName);\r\n                this.comparisonPanelService.show({\r\n                    elementName: elementName,\r\n                    foundElement: ElementAnalyzer.findElementByName(this.metricTree, elementName)\r\n                });\r\n            })\r\n        );\r\n\r\n        this.subscriptions.push(\r\n            this.screenShotService.screenShotRequested$.subscribe(() => {\r\n                const imgFromCanvas = this.renderer.domElement.toDataURL('image/png');\r\n                const pngFile = imgFromCanvas.replace(/^data:image\\/png/, 'data:application/octet-stream');\r\n                this.screenShotService.addScreenShot({\r\n                    screenType: this.screenType,\r\n                    file: pngFile\r\n                });\r\n            })\r\n        );\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.subscriptions.forEach((subscription: Subscription) => {\r\n            subscription.unsubscribe();\r\n        });\r\n    }\r\n\r\n    createRenderer() {\r\n        this.renderer = new WebGLRenderer({antialias: true, preserveDrawingBuffer: true});\r\n        this.renderer.setClearColor(0xf0f0f0);\r\n        this.renderer.setSize(this.getScreenWidth() - 0, window.innerHeight);\r\n\r\n        document.querySelector('#stage').appendChild(this.renderer.domElement);\r\n    }\r\n\r\n    updateRenderer() {\r\n        this.renderer.setSize(this.getScreenWidth() - 0, window.innerHeight);\r\n    }\r\n\r\n    createLight() {\r\n        const ambientLight = new AmbientLight(0xcccccc, 0.5);\r\n        this.scene.add(ambientLight);\r\n\r\n        const directionalLight = new DirectionalLight(0xffffff, 0.4);\r\n        directionalLight.position.set(0, 1, 0);\r\n        this.scene.add(directionalLight);\r\n    }\r\n\r\n    createCamera() {\r\n        this.camera = new THREE.PerspectiveCamera(\r\n            45,\r\n            (this.getScreenWidth() - 0) / window.innerHeight,\r\n            AppConfig.CAMERA_NEAR,\r\n            AppConfig.CAMERA_FAR\r\n        );\r\n        this.scene.add(this.camera);\r\n    }\r\n\r\n    updateCamera() {\r\n        this.camera.aspect = (this.getScreenWidth() - 0) / window.innerHeight;\r\n        this.camera.updateProjectionMatrix();\r\n    }\r\n\r\n    resetCamera() {\r\n        const root = this.scene.getObjectByName('root');\r\n        // pythagoras\r\n        const diagonal = Math.sqrt(Math.pow(root.scale.x, 2) + Math.pow(root.scale.z, 2));\r\n        this.camera.position.x = root.scale.x * 2;\r\n        this.camera.position.y = diagonal * 1.5;\r\n        this.camera.position.z = root.scale.z * 2;\r\n    }\r\n\r\n    createControls() {\r\n        this.controls = new THREE.OrbitControls(this.camera, <HTMLElement>document.querySelector('#stage'));\r\n    }\r\n\r\n    resetControls() {\r\n        const centralCoordinates = this.getCentralCoordinates();\r\n        this.controls.target.x = centralCoordinates.x;\r\n        this.controls.target.y = centralCoordinates.y;\r\n        this.controls.target.z = centralCoordinates.z;\r\n    }\r\n\r\n    render() {\r\n        this.requestAnimationFrameId = requestAnimationFrame(() => {\r\n            this.render();\r\n        });\r\n\r\n        this.controls.update();\r\n        this.renderer.render(this.scene, this.camera);\r\n        this.interactionHandler.update(this.camera);\r\n        TWEEN.update();\r\n    }\r\n\r\n    pauseRendering() {\r\n        if (this.requestAnimationFrameId) {\r\n            cancelAnimationFrame(this.requestAnimationFrameId);\r\n            this.resetScene();\r\n            this.renderingIsPaused = true;\r\n        }\r\n    }\r\n\r\n    resumeRendering() {\r\n        if (this.renderingIsPaused) {\r\n            this.render();\r\n            this.renderingIsPaused = false;\r\n        }\r\n    }\r\n\r\n    prepareView(metricTree) {\r\n        if (metricTree.children.length === 0) {\r\n            return;\r\n        }\r\n        this.view.setMetricTree(metricTree);\r\n        this.view.recalculate();\r\n        this.view.getBlockElements().forEach((element) => {\r\n            this.scene.add(element);\r\n        });\r\n\r\n        if (this.view instanceof MergedView) {\r\n            this.view.calculateConnections(this.scene);\r\n            this.view.getConnections().forEach((blockConnection: BlockConnection) => {\r\n                this.scene.add(blockConnection.getCurve());\r\n            });\r\n        }\r\n    }\r\n\r\n    createInteractionHandler() {\r\n        this.interactionHandler = new InteractionHandler(\r\n            this.scene,\r\n            this.renderer,\r\n            this.screenType,\r\n            this.isMergedView,\r\n            this.focusService,\r\n            this.tooltipService\r\n        );\r\n    }\r\n\r\n    resetScene() {\r\n        for (let i = this.scene.children.length - 1; i >= 0; i--) {\r\n            const child = this.scene.children[i];\r\n\r\n            // only remove Blocks and Lines. Don't remove lights, cameras etc.\r\n            if (child.type === 'Mesh' || child.type === 'Line') {\r\n                this.scene.remove(child);\r\n            }\r\n        }\r\n    }\r\n\r\n    focusElementByName(elementName) {\r\n        const element = this.scene.getObjectByName(elementName);\r\n        if (!element) {\r\n            return;\r\n        }\r\n\r\n        const root = this.scene.getObjectByName('root');\r\n        // pythagoras\r\n        const diagonal = Math.sqrt(Math.pow(root.scale.x, 2) + Math.pow(root.scale.z, 2));\r\n\r\n        new TWEEN.Tween(this.camera.position)\r\n            .to({\r\n                x: element.position.x + root.scale.x / 5,\r\n                y: element.position.y + diagonal / 5,\r\n                z: element.position.z + root.scale.z / 5\r\n            }, AppConfig.CAMERA_ANIMATION_DURATION)\r\n            .easing(TWEEN.Easing.Sinusoidal.InOut)\r\n            .start();\r\n\r\n        new TWEEN.Tween(this.controls.target)\r\n            .to({\r\n                x: element.position.x + element.scale.x / 2,\r\n                y: element.position.y,\r\n                z: element.position.z + element.scale.z / 2\r\n            }, AppConfig.CAMERA_ANIMATION_DURATION)\r\n            .easing(TWEEN.Easing.Sinusoidal.InOut)\r\n            .start();\r\n    }\r\n\r\n    private getCentralCoordinates() {\r\n        const root = this.scene.getObjectByName('root');\r\n        if (!root) {\r\n            console.warn(`no root found in screen #${this.screenType}`);\r\n            return;\r\n        }\r\n\r\n        return {\r\n            x: root.scale.x / 2,\r\n            y: 0,\r\n            z: root.scale.z / 2\r\n        };\r\n    }\r\n\r\n    private getScreenWidth() {\r\n        if (this.isMergedView) {\r\n            return window.innerWidth;\r\n        }\r\n        return window.innerWidth / 2;\r\n    }\r\n\r\n    private initializeEventListeners() {\r\n        window.addEventListener('resize', this.handleViewChanged.bind(this), false);\r\n    }\r\n\r\n    private handleViewChanged() {\r\n        this.updateCamera();\r\n        this.updateRenderer();\r\n    }\r\n\r\n    private applyFilter(activeFilter: IFilter) {\r\n        for (let i = this.scene.children.length - 1; i >= 0; i--) {\r\n            const node = this.scene.children[i];\r\n            if (node.userData && (node.userData.type === NodeType.FILE || node.userData.type === NodeType.CONNECTION)) {\r\n                node.visible = true;\r\n\r\n                if (\r\n                    activeFilter.unmodified === false\r\n                    && node.userData.changeTypes\r\n                    && node.userData.changeTypes.modified === false\r\n                    && node.userData.changeTypes.deleted === false\r\n                    && node.userData.changeTypes.added === false\r\n                    && node.userData.changeTypes.renamed === false\r\n                ) {\r\n                    node.visible = false;\r\n                }\r\n\r\n                if (activeFilter.modified === false && node.userData.changeTypes && node.userData.changeTypes.modified === true) {\r\n                    node.visible = false;\r\n                }\r\n\r\n                if (activeFilter.deleted === false && node.userData.changeTypes && node.userData.changeTypes.deleted === true) {\r\n                    node.visible = false;\r\n                }\r\n\r\n                if (activeFilter.added === false && node.userData.changeTypes && node.userData.changeTypes.added === true) {\r\n                    node.visible = false;\r\n                }\r\n\r\n                if (activeFilter.renamed === false && node.userData.changeTypes && node.userData.changeTypes.renamed === true) {\r\n                    node.visible = false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","module.exports = \"<div id=\\\"tooltip\\\">\\r\\n    <div class=\\\"element-name\\\">{{(content$ | async)?.elementName}}</div>\\r\\n    <table>\\r\\n        <tr *ngFor=\\\"let metric of (content$ | async)?.metrics | keyValue\\\">\\r\\n            <td class=\\\"metric-name-column\\\"><small>{{metric.key}}</small></td>\\r\\n            <td class=\\\"metric-value-column\\\"><small>{{metric.value || 'N/A'}}</small></td>\\r\\n        </tr>\\r\\n    </table>\\r\\n</div>\"","module.exports = \"#tooltip {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  background-color: #2B222A;\\n  color: #fff;\\n  padding: 10px;\\n  font-size: 14px;\\n  max-width: 300px;\\n  z-index: 101;\\n  opacity: 0;\\n  transition: opacity 0.75s ease; }\\n  #tooltip.visible {\\n    opacity: 1; }\\n  #tooltip > .element-name {\\n    text-overflow: ellipsis;\\n    text-align: left;\\n    white-space: nowrap;\\n    overflow: hidden;\\n    direction: rtl;\\n    padding-bottom: 5px; }\\n  #tooltip table {\\n    width: 100%; }\\n  #tooltip table td.metric-value-column {\\n      padding-left: 5px; }\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {TooltipService} from '../../service/tooltip.service';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {MetricNameHelper} from '../../helper/metric-name-helper';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'app-tooltip',\r\n    templateUrl: './tooltip.component.html',\r\n    styleUrls: ['./tooltip.component.scss']\r\n})\r\nexport class TooltipComponent implements OnInit {\r\n\r\n    tooltipElement: HTMLElement;\r\n\r\n    content$: Observable<{elementName: string, metrics: any}>;\r\n\r\n    constructor(private tooltipService: TooltipService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.tooltipElement = <HTMLElement>document.querySelector('#tooltip');\r\n\r\n        this.content$ = this.tooltipService.tooltipContent$\r\n            .pipe(\r\n                map((tooltipObject) => {\r\n                    const readableMetrics = {};\r\n\r\n                    if (tooltipObject.metrics) {\r\n                        Object.keys(tooltipObject.metrics).map((key) => {\r\n                            readableMetrics[MetricNameHelper.getShortNameByFullName(key)] = tooltipObject.metrics[key];\r\n                        });\r\n                    }\r\n\r\n                    return {\r\n                        elementName: tooltipObject.elementName,\r\n                        metrics: readableMetrics\r\n                    };\r\n                })\r\n            );\r\n\r\n        this.tooltipService.hideTooltip$.subscribe(() => {\r\n            this.hide();\r\n        });\r\n\r\n        this.tooltipService.showTooltip$.subscribe(() => {\r\n            this.show();\r\n        });\r\n\r\n        this.tooltipService.trackPosition$.subscribe((position) => {\r\n            this.followPosition(position);\r\n        });\r\n\r\n    }\r\n\r\n    followPosition(position: {x: number, y: number}) {\r\n        this.tooltipElement.style.left = position.x + 15 + 'px';\r\n        this.tooltipElement.style.top = position.y + 15 + 'px';\r\n    }\r\n\r\n    show() {\r\n        this.tooltipElement.classList.add('visible');\r\n    }\r\n\r\n    hide() {\r\n        this.tooltipElement.classList.remove('visible');\r\n        this.tooltipElement.style.left = '-1000px';\r\n        this.tooltipElement.style.top = '-1000px';\r\n    }\r\n\r\n}\r\n","import {INode} from '../../interfaces/INode';\r\nimport {NodeType} from 'app/enum/NodeType';\r\nimport {IPackerElement} from '../../interfaces/IPackerElement';\r\nimport {AppConfig} from '../../AppConfig';\r\nimport {ElementAnalyzer} from '../../helper/element-analyzer';\r\nimport {ScreenType} from '../../enum/ScreenType';\r\nimport {CommitReferenceType} from '../../enum/CommitReferenceType';\r\nimport {BoxGeometry, Mesh, MeshLambertMaterial, Geometry} from 'three';\r\nimport {IMetricMapping} from '../../interfaces/IMetricMapping';\r\ndeclare var GrowingPacker: any;\r\n\r\nexport abstract class AbstractView {\r\n\r\n    rootNode: INode;\r\n    blockElements: Mesh[] = [];\r\n    packer = new GrowingPacker();\r\n\r\n    minModuleLevel = 1;\r\n    maxModuleLevel: number;\r\n\r\n    geometry: Geometry;\r\n\r\n    constructor(protected screenType: ScreenType, protected metricMapping: IMetricMapping) {\r\n        this.geometry = new BoxGeometry(1, 1, 1);\r\n        this.geometry.translate(0.5, 0.5, 0.5);\r\n    }\r\n\r\n    setMetricTree(root: INode) {\r\n        this.rootNode = root;\r\n    }\r\n\r\n    recalculate() {\r\n        if (!this.rootNode) {\r\n            throw new Error(`rootNode is not defined!`);\r\n        }\r\n\r\n        this.maxModuleLevel = ElementAnalyzer.getMaxModuleLevel(this.rootNode);\r\n\r\n        this.calculateGroundAreas([this.rootNode]);\r\n        this.calculateElements([this.rootNode], null, 0);\r\n    }\r\n\r\n    calculateGroundAreas(nodes: INode[]) {\r\n        if (!Array.isArray(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n\r\n        for (const node of nodes) {\r\n            const element: IPackerElement = { w: 0, h: 0 };\r\n\r\n            if (node.type === NodeType.FILE) {\r\n                const edgeLength = this.getEdgeLength(node.commit1Metrics, node.commit2Metrics);\r\n                if (!edgeLength) {\r\n                    element.w = element.h = 0;\r\n                } else {\r\n                    element.w = edgeLength * AppConfig.EDGE_LENGTH_FACTOR + 2 * AppConfig.BLOCK_SPACING;\r\n                    element.h = edgeLength * AppConfig.EDGE_LENGTH_FACTOR + 2 * AppConfig.BLOCK_SPACING;\r\n                }\r\n            }\r\n\r\n            // recursion\r\n            if (node.children && node.children.length > 0) {\r\n                const result = this.calculateGroundAreas(node.children);\r\n                element.w = result.w + 2 * AppConfig.BLOCK_SPACING;\r\n                element.h = result.h + 2 * AppConfig.BLOCK_SPACING;\r\n            }\r\n\r\n            node.packerInfo = element;\r\n        }\r\n\r\n        nodes.sort(function (a, b) {\r\n            return b.packerInfo.w - a.packerInfo.w;\r\n        });\r\n\r\n        this.packer.fit(nodes.map(node => node.packerInfo));\r\n        return {\r\n            packer: this.packer.root,\r\n            w: this.packer.root.w,\r\n            h: this.packer.root.h\r\n        };\r\n    }\r\n\r\n    abstract calculateElements(nodes: INode[], parent: INode, bottom: number);\r\n\r\n    createBlock(\r\n        node: INode,\r\n        parent: INode,\r\n        color: any,\r\n        edgeLength: number,\r\n        bottom: number,\r\n        height: number,\r\n        isTransparent: boolean,\r\n        metrics?: any,\r\n        commitType?: CommitReferenceType,\r\n        changeTypes?: any\r\n    ) {\r\n        let finalX, finalY, finalZ;\r\n        let finalWidth, finalHeight, finalDepth;\r\n\r\n        const cube = this.createCubeGeometry(color, isTransparent, node.name);\r\n        finalX = node.packerInfo.fit.x + (parent ? parent.packerInfo.renderedX : 0) + AppConfig.BLOCK_SPACING;\r\n        finalY = bottom;\r\n        finalZ = node.packerInfo.fit.y + (parent ? parent.packerInfo.renderedY : 0) + AppConfig.BLOCK_SPACING;\r\n\r\n        // save the rendered positions to draw children relative to their parent\r\n        node.packerInfo.renderedX = finalX;\r\n        node.packerInfo.renderedY = finalZ;\r\n\r\n        finalWidth = node.type === NodeType.FILE ? edgeLength : node.packerInfo.w - 2 * AppConfig.BLOCK_SPACING;\r\n        finalHeight = height;\r\n        finalDepth = node.type === NodeType.FILE ? edgeLength : node.packerInfo.h - 2 * AppConfig.BLOCK_SPACING;\r\n\r\n        cube.position.x = finalX;\r\n        cube.position.y = finalY;\r\n        cube.position.z = finalZ;\r\n\r\n        cube.scale.x = finalWidth;\r\n        cube.scale.y = finalHeight;\r\n        cube.scale.z = finalDepth;\r\n\r\n        cube.userData = this.createUserData(node, parent, bottom, isTransparent, metrics, commitType, changeTypes);\r\n\r\n        this.blockElements.push(cube);\r\n    }\r\n\r\n    createCubeGeometry(color: string, isTransparent: boolean, name: string): Mesh {\r\n        const material = new MeshLambertMaterial({color: color});\r\n\r\n        if (isTransparent) {\r\n            material.transparent = true;\r\n            material.opacity = 0.4;\r\n        }\r\n\r\n        const block = new Mesh(this.geometry, material);\r\n        block.name = name;\r\n        return block;\r\n    }\r\n\r\n    createUserData(\r\n        node: INode,\r\n        parent: INode,\r\n        bottom: number,\r\n        isTransparent: boolean,\r\n        metrics: any,\r\n        commitType?: CommitReferenceType,\r\n        changeTypes?: any\r\n    ) {\r\n        return {\r\n            parentName: parent ? parent.name : undefined,\r\n            bottom: bottom,\r\n            metrics: metrics,\r\n            type: node.type,\r\n            elementName: node.name,\r\n            isHelper: isTransparent,\r\n            commitType: commitType,\r\n            changeTypes: changeTypes\r\n        };\r\n    }\r\n\r\n    getBlockElements(): Mesh[] {\r\n        return this.blockElements;\r\n    }\r\n\r\n    private getEdgeLength(commit1Metrics: any, commit2Metrics: any): number {\r\n        const groundAreaValue = ElementAnalyzer.getMaxMetricValueByMetricName(\r\n            commit1Metrics,\r\n            commit2Metrics,\r\n            this.metricMapping.groundAreaMetricName\r\n        );\r\n        return Math.sqrt(groundAreaValue);\r\n    }\r\n}\r\n","import {AbstractView} from './abstract-view';\r\nimport {INode} from '../../interfaces/INode';\r\nimport {ElementAnalyzer} from '../../helper/element-analyzer';\r\nimport {AppConfig} from '../../AppConfig';\r\nimport {NodeType} from '../../enum/NodeType';\r\nimport {ColorHelper} from '../../helper/color-helper';\r\nimport {CommitReferenceType} from '../../enum/CommitReferenceType';\r\nimport {ScreenType} from '../../enum/ScreenType';\r\nimport {BlockConnection} from 'app/geometry/block-connection';\r\nimport {Scene} from 'three';\r\nimport {IMetricMapping} from '../../interfaces/IMetricMapping';\r\n\r\nexport class MergedView extends AbstractView {\r\n\r\n    movedElements: any[] = [];\r\n    connections: BlockConnection[] = [];\r\n\r\n    constructor(screenType: ScreenType, metricMapping: IMetricMapping) {\r\n        super(screenType, metricMapping);\r\n    }\r\n\r\n    calculateElements(nodes: INode[], parent: INode, bottom: number, level: number = 1) {\r\n        if (!Array.isArray(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n\r\n        nodes.forEach((node) => {\r\n            if (!node.packerInfo.fit) {\r\n                console.warn(`node ${node.name} at position ${this.screenType} has no fit!`);\r\n                return;\r\n            }\r\n\r\n            let blueHeight;\r\n\r\n            // FILE\r\n            if (node.type === NodeType.FILE) {\r\n                const blueHeightMetric = ElementAnalyzer.getMetricValueOfElementAndCommitReferenceType(\r\n                    node, this.metricMapping.heightMetricName, CommitReferenceType.THIS, this.screenType\r\n                );\r\n                const orangeHeightMetric = ElementAnalyzer.getMetricValueOfElementAndCommitReferenceType(\r\n                    node, this.metricMapping.heightMetricName, CommitReferenceType.OTHER, this.screenType\r\n                );\r\n\r\n                const blueGroundAreaMetric = ElementAnalyzer.getMetricValueOfElementAndCommitReferenceType(\r\n                    node, this.metricMapping.groundAreaMetricName, CommitReferenceType.THIS, this.screenType\r\n                );\r\n                const orangeGroundAreaMetric = ElementAnalyzer.getMetricValueOfElementAndCommitReferenceType(\r\n                    node, this.metricMapping.groundAreaMetricName, CommitReferenceType.OTHER, this.screenType\r\n                );\r\n\r\n                const blueColorMetric = ElementAnalyzer.getMetricValueOfElementAndCommitReferenceType(\r\n                    node, this.metricMapping.colorMetricName, CommitReferenceType.THIS, this.screenType\r\n                );\r\n                const orangeColorMetric = ElementAnalyzer.getMetricValueOfElementAndCommitReferenceType(\r\n                    node, this.metricMapping.colorMetricName, CommitReferenceType.OTHER, this.screenType\r\n                );\r\n\r\n                const blueMetrics = {\r\n                    [this.metricMapping.heightMetricName]: blueHeightMetric,\r\n                    [this.metricMapping.groundAreaMetricName]: blueGroundAreaMetric,\r\n                    [this.metricMapping.colorMetricName]: blueColorMetric\r\n                };\r\n\r\n                const orangeMetrics = {\r\n                    [this.metricMapping.heightMetricName]: orangeHeightMetric,\r\n                    [this.metricMapping.groundAreaMetricName]: orangeGroundAreaMetric,\r\n                    [this.metricMapping.colorMetricName]: orangeColorMetric\r\n                };\r\n\r\n                blueHeight = blueHeightMetric * AppConfig.HEIGHT_FACTOR;\r\n                const orangeHeight = orangeHeightMetric * AppConfig.HEIGHT_FACTOR;\r\n\r\n                const blueEdgeLength = Math.sqrt(blueGroundAreaMetric) * AppConfig.EDGE_LENGTH_FACTOR;\r\n                const orangeEdgeLength = Math.sqrt(orangeGroundAreaMetric) * AppConfig.EDGE_LENGTH_FACTOR;\r\n\r\n                const blueColor = ColorHelper.getColorByPosition(this.screenType);\r\n                const orangeColor = ColorHelper.getContraryColorByColor(blueColor);\r\n\r\n                const blueTransparency = blueHeight >= orangeHeight && blueEdgeLength >= orangeEdgeLength;\r\n                const orangeTransparency = orangeHeight >= blueHeight && orangeEdgeLength >= blueEdgeLength;\r\n\r\n                if (!isNaN(blueEdgeLength) && !isNaN(orangeEdgeLength)) {\r\n                    // both blocks\r\n                    if (blueEdgeLength < orangeEdgeLength) {\r\n                        // draw the bigger block ...\r\n                        this.createBlock(\r\n                            node,\r\n                            parent,\r\n                            orangeColor,\r\n                            orangeEdgeLength,\r\n                            bottom,\r\n                            orangeHeight,\r\n                            orangeTransparency,\r\n                            orangeMetrics,\r\n                            CommitReferenceType.OTHER,\r\n                            node.changes\r\n                        );\r\n\r\n                        // ... calculate the center position for the smaller block ...\r\n                        node.packerInfo.fit.x += (orangeEdgeLength - blueEdgeLength) / 2;\r\n                        node.packerInfo.fit.y += (orangeEdgeLength - blueEdgeLength) / 2;\r\n\r\n                        // ... draw the smaller block\r\n                        this.createBlock(\r\n                            node,\r\n                            parent,\r\n                            blueColor,\r\n                            blueEdgeLength,\r\n                            bottom,\r\n                            blueHeight,\r\n                            blueTransparency,\r\n                            blueMetrics,\r\n                            CommitReferenceType.THIS,\r\n                            node.changes\r\n                        );\r\n                    } else if (blueEdgeLength > orangeEdgeLength) {\r\n                        // draw the bigger block ...\r\n                        this.createBlock(\r\n                            node,\r\n                            parent,\r\n                            blueColor,\r\n                            blueEdgeLength,\r\n                            bottom,\r\n                            blueHeight,\r\n                            blueTransparency,\r\n                            blueMetrics,\r\n                            CommitReferenceType.THIS,\r\n                            node.changes\r\n                        );\r\n\r\n                        // ... calculate the center position for the smaller block ...\r\n                        node.packerInfo.fit.x += (blueEdgeLength - orangeEdgeLength) / 2;\r\n                        node.packerInfo.fit.y += (blueEdgeLength - orangeEdgeLength) / 2;\r\n\r\n                        // ... draw the smaller block\r\n                        this.createBlock(\r\n                            node,\r\n                            parent,\r\n                            orangeColor,\r\n                            orangeEdgeLength,\r\n                            bottom,\r\n                            orangeHeight,\r\n                            orangeTransparency,\r\n                            orangeMetrics,\r\n                            CommitReferenceType.OTHER,\r\n                            node.changes\r\n                        );\r\n                    } else {\r\n                        // ground areas are the same\r\n                        if (blueHeight !== orangeHeight) {\r\n                            // heights are different, so draw both blocks\r\n                            this.createBlock(\r\n                                node,\r\n                                parent,\r\n                                blueColor,\r\n                                blueEdgeLength,\r\n                                bottom,\r\n                                blueHeight,\r\n                                blueTransparency,\r\n                                blueMetrics,\r\n                                CommitReferenceType.THIS,\r\n                                node.changes\r\n                            );\r\n                            this.createBlock(\r\n                                node,\r\n                                parent,\r\n                                orangeColor,\r\n                                orangeEdgeLength,\r\n                                bottom,\r\n                                orangeHeight,\r\n                                orangeTransparency,\r\n                                orangeMetrics,\r\n                                CommitReferenceType.OTHER,\r\n                                node.changes\r\n                            );\r\n                        } else {\r\n                            // heights are the same, so the file has not changed\r\n                            this.createBlock(\r\n                                node,\r\n                                parent,\r\n                                AppConfig.COLOR_UNCHANGED_FILE,\r\n                                orangeEdgeLength,\r\n                                bottom,\r\n                                orangeHeight,\r\n                                false,\r\n                                orangeMetrics,\r\n                                undefined,\r\n                                node.changes\r\n                            );\r\n                        }\r\n                    }\r\n\r\n                } else if (isNaN(orangeEdgeLength)) {\r\n                    // only blue block\r\n\r\n                    // cache element to draw connections\r\n                    if (this.isNodeMoved(node)) {\r\n                        this.movedElements.push({\r\n                            fromElementName: node.name,\r\n                            toElementName: node.renamedTo\r\n                        });\r\n                    }\r\n\r\n                    this.createBlock(\r\n                        node,\r\n                        parent,\r\n                        AppConfig.COLOR_DELETED_FILE,\r\n                        blueEdgeLength,\r\n                        bottom,\r\n                        blueHeight,\r\n                        false,\r\n                        blueMetrics,\r\n                        CommitReferenceType.THIS,\r\n                        node.changes\r\n                    );\r\n\r\n                } else if (isNaN(blueEdgeLength)) {\r\n                    // only orange block\r\n\r\n                    this.createBlock(\r\n                        node,\r\n                        parent,\r\n                        AppConfig.COLOR_ADDED_FILE,\r\n                        orangeEdgeLength,\r\n                        bottom,\r\n                        orangeHeight,\r\n                        false,\r\n                        orangeMetrics,\r\n                        CommitReferenceType.OTHER,\r\n                        node.changes\r\n                    );\r\n                }\r\n\r\n                // MODULE\r\n            } else {\r\n                // don't draw empty modules\r\n                if (ElementAnalyzer.hasChildrenForCurrentCommit(node, true, this.screenType)) {\r\n                    blueHeight = AppConfig.MODULE_BLOCK_HEIGHT;\r\n                    const moduleColor = ColorHelper.getColorByLevelValue(level, this.minModuleLevel, this.maxModuleLevel);\r\n                    this.createBlock(node, parent, moduleColor, undefined, bottom, blueHeight, false);\r\n                }\r\n            }\r\n\r\n            // recursion\r\n            if (node.children && node.children.length > 0) {\r\n                this.calculateElements(node.children, node, bottom + blueHeight, level + 1);\r\n            }\r\n        });\r\n    }\r\n\r\n    calculateConnections(scene: Scene) {\r\n        for (const movedElementPair of this.movedElements) {\r\n            const fromElement = scene.getObjectByName(movedElementPair.fromElementName);\r\n            const toElement = scene.getObjectByName(movedElementPair.toElementName);\r\n\r\n            if (fromElement && toElement) {\r\n                this.connections.push(new BlockConnection(fromElement, toElement));\r\n            } else {\r\n                console.warn(`A connection could not be drawn because at least one element could not be found in the scene.`);\r\n            }\r\n        }\r\n    }\r\n\r\n    getConnections(): BlockConnection[] {\r\n        return this.connections;\r\n    }\r\n\r\n    private isNodeMoved(node: INode) {\r\n        return node.renamedTo != null || node.renamedFrom != null;\r\n    }\r\n}\r\n","import {AbstractView} from './abstract-view';\r\nimport {INode} from '../../interfaces/INode';\r\nimport {NodeType} from '../../enum/NodeType';\r\nimport {AppConfig} from '../../AppConfig';\r\nimport {CommitReferenceType} from '../../enum/CommitReferenceType';\r\nimport {ColorHelper} from '../../helper/color-helper';\r\nimport {ElementAnalyzer} from '../../helper/element-analyzer';\r\nimport {ScreenType} from '../../enum/ScreenType';\r\nimport {IMetricMapping} from '../../interfaces/IMetricMapping';\r\n\r\nexport class SplitView extends AbstractView {\r\n\r\n    minColorMetricValue: number;\r\n    maxColorMetricValue: number;\r\n\r\n    constructor(screenType: ScreenType, metricMapping: IMetricMapping) {\r\n        super(screenType, metricMapping);\r\n    }\r\n\r\n    calculateElements(nodes: INode[], parent: INode, bottom: number, level: number = 1) {\r\n        const minMaxColorValuePair = ElementAnalyzer.findSmallestAndBiggestMetricValueByMetricName(\r\n            this.rootNode.children,\r\n            this.metricMapping.colorMetricName\r\n        );\r\n        this.minColorMetricValue = minMaxColorValuePair.min;\r\n        this.maxColorMetricValue = minMaxColorValuePair.max;\r\n\r\n        if (!Array.isArray(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n\r\n        nodes.forEach((node) => {\r\n            // don't draw empty modules\r\n            if (node.type === NodeType.MODULE && !ElementAnalyzer.hasChildrenForCurrentCommit(node, false, this.screenType)) {\r\n                return;\r\n            }\r\n\r\n            if (!node.packerInfo.fit) {\r\n                // tslint:disable-next-line:no-console\r\n                console.info(`node ${node.name} at position ${this.screenType} has no fit!`);\r\n                return;\r\n            }\r\n\r\n            const heightMetric = ElementAnalyzer.getMetricValueOfElementAndCommitReferenceType(\r\n                node,\r\n                this.metricMapping.heightMetricName,\r\n                CommitReferenceType.THIS,\r\n                this.screenType\r\n            );\r\n            const groundAreaMetric = ElementAnalyzer.getMetricValueOfElementAndCommitReferenceType(\r\n                node,\r\n                this.metricMapping.groundAreaMetricName,\r\n                CommitReferenceType.THIS,\r\n                this.screenType\r\n            );\r\n            const colorMetric = ElementAnalyzer.getMetricValueOfElementAndCommitReferenceType(\r\n                node,\r\n                this.metricMapping.colorMetricName,\r\n                CommitReferenceType.THIS,\r\n                this.screenType\r\n            );\r\n\r\n            const metrics = {\r\n                [this.metricMapping.heightMetricName]: heightMetric,\r\n                [this.metricMapping.groundAreaMetricName]: groundAreaMetric,\r\n                [this.metricMapping.colorMetricName]: colorMetric\r\n            };\r\n\r\n            let myHeight;\r\n            if (node.type === NodeType.FILE ) {\r\n                if (!heightMetric || !groundAreaMetric) {\r\n                    return;\r\n                }\r\n\r\n                myHeight = heightMetric * AppConfig.HEIGHT_FACTOR;\r\n\r\n                const myEdgeLength = Math.sqrt(groundAreaMetric) * AppConfig.EDGE_LENGTH_FACTOR;\r\n\r\n                const otherGroundAreaMetric = ElementAnalyzer.getMetricValueOfElementAndCommitReferenceType(\r\n                    node,\r\n                    this.metricMapping.groundAreaMetricName,\r\n                    CommitReferenceType.OTHER,\r\n                    this.screenType\r\n                );\r\n                const otherEdgeLength = Math.sqrt(otherGroundAreaMetric) * AppConfig.EDGE_LENGTH_FACTOR;\r\n\r\n                const myColor = ColorHelper.getColorByMetricValue(colorMetric, this.maxColorMetricValue, this.minColorMetricValue);\r\n\r\n                if (myEdgeLength < otherEdgeLength) {\r\n                    node.packerInfo.fit.x += (otherEdgeLength - myEdgeLength) / 2;\r\n                    node.packerInfo.fit.y += (otherEdgeLength - myEdgeLength) / 2;\r\n                }\r\n                this.createBlock(node, parent, myColor, myEdgeLength, bottom, myHeight, false, metrics, null, node.changes);\r\n\r\n            } else {\r\n                myHeight = AppConfig.MODULE_BLOCK_HEIGHT;\r\n                const moduleColor = ColorHelper.getColorByLevelValue(level, this.minModuleLevel, this.maxModuleLevel);\r\n                this.createBlock(node, parent, moduleColor, undefined, bottom, myHeight, false, metrics);\r\n            }\r\n\r\n            // recursion\r\n            if (node.children && node.children.length > 0) {\r\n                this.calculateElements(node.children, node, bottom + myHeight, level + 1);\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n","import {ICommit} from '../interfaces/ICommit';\r\nimport {IMetricMapping} from '../interfaces/IMetricMapping';\r\nimport {INode} from '../interfaces/INode';\r\nimport { IActionWithPayload } from '../interfaces/IActionWithPayload';\r\n\r\nexport const LOAD_METRIC_TREE = 'LOAD_METRIC_TREE';\r\nexport const LOAD_METRIC_TREE_SUCCESS = 'LOAD_METRIC_TREE_SUCCESS';\r\nexport const LOAD_METRIC_TREE_ERROR = 'LOAD_METRIC_TREE_ERROR';\r\nexport const GENERATE_UNIQUE_FILE_LIST = 'GENERATE_UNIQUE_FILE_LIST';\r\n\r\nexport function loadMetricTree(\r\n    leftCommit: ICommit,\r\n    rightCommit: ICommit,\r\n    metricMapping: IMetricMapping\r\n): IActionWithPayload<{leftCommit: ICommit, rightCommit: ICommit, metricMapping: IMetricMapping}> {\r\n    return {\r\n        type: LOAD_METRIC_TREE,\r\n        payload: {\r\n            leftCommit: leftCommit,\r\n            rightCommit: rightCommit,\r\n            metricMapping: metricMapping\r\n        }\r\n    };\r\n}\r\n\r\nexport function loadMetricTreeSuccess(metricTree: INode): IActionWithPayload<INode> {\r\n    return {\r\n        type: LOAD_METRIC_TREE_SUCCESS,\r\n        payload: metricTree\r\n    };\r\n}\r\n\r\nexport function loadMetricTreeError(error: string): IActionWithPayload<string> {\r\n    return {\r\n        type: LOAD_METRIC_TREE_ERROR,\r\n        payload: error\r\n    };\r\n}\r\n\r\nexport function generateUniqueFileList(metricTree: INode): IActionWithPayload<INode> {\r\n    return {\r\n        type: GENERATE_UNIQUE_FILE_LIST,\r\n        payload: metricTree\r\n    };\r\n}\r\n","module.exports = \"<div id=\\\"stage\\\" class=\\\"split\\\">\\r\\n    <div class=\\\"vertical-line\\\"></div>\\r\\n    <app-loading-indicator *ngIf=\\\"metricsLoading$ | async\\\"></app-loading-indicator>\\r\\n\\r\\n    <app-screen\\r\\n            [screenType]=\\\"screenTypes.left\\\"\\r\\n            [activeViewType]=\\\"activeViewType$ | async\\\"\\r\\n            [activeFilter]=\\\"activeFilter$ | async\\\"\\r\\n            [metricTree]=\\\"metricTree$ | async\\\"\\r\\n            [metricMapping]=\\\"metricMapping$ | async\\\">\\r\\n    </app-screen>\\r\\n\\r\\n    <app-screen\\r\\n            [screenType]=\\\"screenTypes.right\\\"\\r\\n            [activeViewType]=\\\"activeViewType$ | async\\\"\\r\\n            [activeFilter]=\\\"activeFilter$ | async\\\"\\r\\n            [metricTree]=\\\"metricTree$ | async\\\"\\r\\n            [metricMapping]=\\\"metricMapping$ | async\\\">\\r\\n    </app-screen>\\r\\n\\r\\n    <app-comparison-panel\\r\\n            [metricMapping]=\\\"metricMapping$ | async\\\"\\r\\n            [leftCommit]=\\\"leftCommit$ | async\\\"\\r\\n            [rightCommit]=\\\"rightCommit$ | async\\\">\\r\\n    </app-comparison-panel>\\r\\n\\r\\n    <app-legend [activeViewType]=\\\"activeViewType$ | async\\\" [colorMetricName]=\\\"colorMetricName$ | async\\\"></app-legend>\\r\\n</div>\\r\\n<app-tooltip></app-tooltip>\"","module.exports = \"#stage {\\n  position: absolute;\\n  width: 100%;\\n  height: 100%;\\n  overflow: hidden; }\\n  #stage > .vertical-line {\\n    position: absolute;\\n    top: 0;\\n    left: 100%;\\n    height: 100%;\\n    width: 2px;\\n    background: #535353;\\n    z-index: 98;\\n    transition: left 1s ease; }\\n  #stage.split > .vertical-line {\\n    left: 50%; }\\n\"","import {Component, OnInit, OnDestroy} from '@angular/core';\r\nimport {ScreenType} from '../enum/ScreenType';\r\nimport {Observable, Subscription, combineLatest} from 'rxjs';\r\nimport {filter, map} from 'rxjs/operators';\r\nimport {Store} from '@ngrx/store';\r\nimport * as fromRoot from '../shared/reducers';\r\nimport {loadMetricTree} from './visualization.actions';\r\nimport {ViewType} from '../enum/ViewType';\r\nimport {IFilter} from '../interfaces/IFilter';\r\nimport {INode} from '../interfaces/INode';\r\nimport {IMetricMapping} from '../interfaces/IMetricMapping';\r\nimport {MetricNameHelper} from '../helper/metric-name-helper';\r\nimport {ComparisonPanelService} from 'app/service/comparison-panel.service';\r\nimport {ICommit} from '../interfaces/ICommit';\r\n\r\n@Component({\r\n    selector: 'app-visualization',\r\n    templateUrl: './visualization.component.html',\r\n    styleUrls: ['./visualization.component.scss']\r\n})\r\nexport class VisualizationComponent implements OnInit, OnDestroy {\r\n\r\n    metricsLoading$: Observable<boolean>;\r\n    activeViewType$: Observable<ViewType>;\r\n    activeFilter$: Observable<IFilter>;\r\n    metricTree$: Observable<INode>;\r\n    metricMapping$: Observable<IMetricMapping>;\r\n    leftCommit$: Observable<ICommit>;\r\n    rightCommit$: Observable<ICommit>;\r\n    colorMetricName$: Observable<string>;\r\n\r\n    subscriptions: Subscription[] = [];\r\n\r\n    screenTypes: any = {\r\n        left: ScreenType.LEFT,\r\n        right: ScreenType.RIGHT\r\n    };\r\n\r\n    constructor(private store: Store<fromRoot.AppState>, private comparisonPanelService: ComparisonPanelService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.metricsLoading$ = this.store.select(fromRoot.getMetricsLoading);\r\n        this.activeViewType$ = this.store.select(fromRoot.getActiveViewType);\r\n        this.activeFilter$ = this.store.select(fromRoot.getActiveFilter);\r\n        this.metricTree$ = this.store.select(fromRoot.getMetricTree);\r\n        this.metricMapping$ = this.store.select(fromRoot.getMetricMapping);\r\n        this.leftCommit$ = this.store.select(fromRoot.getLeftCommit);\r\n        this.rightCommit$ = this.store.select(fromRoot.getRightCommit);\r\n        this.colorMetricName$ = this.store.select(fromRoot.getMetricMapping)\r\n            .pipe(\r\n                map(metricMapping => metricMapping.colorMetricName),\r\n                map(colorMetricName => MetricNameHelper.getShortNameByFullName(colorMetricName))\r\n            );\r\n\r\n        this.subscriptions.push(\r\n            combineLatest(\r\n                this.store.select(fromRoot.getLeftCommit),\r\n                this.store.select(fromRoot.getRightCommit),\r\n                this.store.select(fromRoot.getMetricMapping)\r\n            ).pipe(\r\n                filter(([leftCommit, rightCommit, metricMapping]) => !!leftCommit && !!rightCommit)\r\n            )\r\n            .subscribe(([leftCommit, rightCommit, metricMapping]) => {\r\n                this.store.dispatch(loadMetricTree(leftCommit, rightCommit, metricMapping));\r\n                this.comparisonPanelService.hide();\r\n            })\r\n        );\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.subscriptions.forEach((subscription: Subscription) => {\r\n            subscription.unsubscribe();\r\n        });\r\n    }\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {VisualizationComponent} from './visualization.component';\r\nimport {ScreenComponent} from './screen/screen.component';\r\nimport {MetricService} from '../service/metric.service';\r\nimport {environment} from '../../environments/environment';\r\nimport {TooltipComponent} from './tooltip/tooltip.component';\r\nimport {ComparisonPanelComponent} from './comparison-panel/comparison-panel.component';\r\nimport {LegendComponent} from './legend/legend.component';\r\nimport {KeyValuePipe} from '../pipes/key-value.pipe';\r\nimport {LoadingIndicatorComponent} from './loading-indicator/loading-indicator.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule\r\n    ],\r\n    declarations: [\r\n        VisualizationComponent,\r\n        ScreenComponent,\r\n        TooltipComponent,\r\n        ComparisonPanelComponent,\r\n        LegendComponent,\r\n        KeyValuePipe,\r\n        LoadingIndicatorComponent\r\n    ],\r\n    exports: [\r\n        VisualizationComponent\r\n    ],\r\n    providers: [\r\n        MetricService\r\n    ]\r\n})\r\nexport class VisualizationModule {\r\n}\r\n","import * as VisualizationActions from './visualization.actions';\r\nimport {ActionReducer} from '@ngrx/store';\r\nimport {ElementAnalyzer} from '../helper/element-analyzer';\r\nimport {INode} from '../interfaces/INode';\r\nimport { IActionWithPayload } from '../interfaces/IActionWithPayload';\r\n\r\nexport interface VisualizationState {\r\n    metricsLoading: boolean;\r\n    metricTree: INode;\r\n    uniqueFileList: any[];\r\n}\r\n\r\nconst initialState: VisualizationState = {\r\n    metricsLoading: false,\r\n    metricTree: null,\r\n    uniqueFileList: []\r\n};\r\n\r\nexport const VisualizationReducer: ActionReducer<VisualizationState> = (state = initialState, action: IActionWithPayload<any>) => {\r\n    let newState;\r\n    switch (action.type) {\r\n        case VisualizationActions.LOAD_METRIC_TREE:\r\n            newState = Object.assign({}, state);\r\n            newState.metricsLoading = true;\r\n            newState.metricTree = null;\r\n            newState.uniqueFileList = [];\r\n            return newState;\r\n\r\n        case VisualizationActions.LOAD_METRIC_TREE_SUCCESS:\r\n            newState = Object.assign({}, state);\r\n            newState.metricsLoading = false;\r\n            newState.metricTree = action.payload;\r\n\r\n            return newState;\r\n\r\n        case VisualizationActions.GENERATE_UNIQUE_FILE_LIST:\r\n            newState = Object.assign({}, state);\r\n            newState.uniqueFileList = ElementAnalyzer.generateUniqueElementList(action.payload);\r\n\r\n            return newState;\r\n\r\n        case VisualizationActions.LOAD_METRIC_TREE_ERROR:\r\n            newState = Object.assign({}, state);\r\n            newState.metricsLoading = false;\r\n            console.error(`Error while loading metrics: ${action.payload}`);\r\n            return state;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const getMetricsLoading = (state: VisualizationState) => state.metricsLoading;\r\n\r\nexport const getMetricTree = (state: VisualizationState) => state.metricTree;\r\n\r\nexport const getUniqueFileList = (state: VisualizationState) => state.uniqueFileList;\r\n","export const environment = {\r\n    production: false,\r\n    useCoderadarEndpoint: false\r\n};\r\n","import {enableProdMode} from '@angular/core';\r\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\r\n\r\nimport {AppModule} from './app/app.module';\r\nimport {environment} from './environments/environment';\r\n\r\nif (environment.production) {\r\n    enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n"],"sourceRoot":""}