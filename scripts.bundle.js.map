{"version":3,"sources":["webpack:///./~/binpacking/js/packer.growing.js?dad9","webpack:///./~/bootstrap/dist/js/bootstrap.js?8053","webpack:///./~/chroma-js/chroma.min.js?c903","webpack:///./~/gifshot/build/gifshot.js?3ec5","webpack:///./~/script-loader/addScript.js","webpack:///./~/jquery/dist/jquery.js?b5d9","webpack:///./~/tether/dist/js/tether.js?3aff","webpack:///./~/three/build/three.js?bb8f","webpack:///./~/three/examples/js/controls/OrbitControls.js?d442","webpack:///./~/binpacking/js/packer.growing.js","webpack:///./~/bootstrap/dist/js/bootstrap.js","webpack:///./~/chroma-js/chroma.min.js","webpack:///./~/gifshot/build/gifshot.js","webpack:///./~/jquery/dist/jquery.js","webpack:///./~/tether/dist/js/tether.js","webpack:///./~/three/build/three.js?0547","webpack:///./~/three/examples/js/controls/OrbitControls.js"],"names":[],"mappings":"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","file":"scripts.bundle.js","sourcesContent":["require(\"!!/home/ubuntu/CodeRadarVisualization/node_modules/script-loader/addScript.js\")(require(\"!!/home/ubuntu/CodeRadarVisualization/node_modules/raw-loader/index.js!/home/ubuntu/CodeRadarVisualization/node_modules/binpacking/js/packer.growing.js\"))\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/script-loader!./~/binpacking/js/packer.growing.js\n// module id = 296\n// module chunks = 2","require(\"!!/home/ubuntu/CodeRadarVisualization/node_modules/script-loader/addScript.js\")(require(\"!!/home/ubuntu/CodeRadarVisualization/node_modules/raw-loader/index.js!/home/ubuntu/CodeRadarVisualization/node_modules/bootstrap/dist/js/bootstrap.js\"))\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/script-loader!./~/bootstrap/dist/js/bootstrap.js\n// module id = 297\n// module chunks = 2","require(\"!!/home/ubuntu/CodeRadarVisualization/node_modules/script-loader/addScript.js\")(require(\"!!/home/ubuntu/CodeRadarVisualization/node_modules/raw-loader/index.js!/home/ubuntu/CodeRadarVisualization/node_modules/chroma-js/chroma.min.js\"))\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/script-loader!./~/chroma-js/chroma.min.js\n// module id = 298\n// module chunks = 2","require(\"!!/home/ubuntu/CodeRadarVisualization/node_modules/script-loader/addScript.js\")(require(\"!!/home/ubuntu/CodeRadarVisualization/node_modules/raw-loader/index.js!/home/ubuntu/CodeRadarVisualization/node_modules/gifshot/build/gifshot.js\"))\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/script-loader!./~/gifshot/build/gifshot.js\n// module id = 299\n// module chunks = 2","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nmodule.exports = function(src) {\r\n\tif (typeof execScript !== \"undefined\")\r\n\t\texecScript(src);\r\n\telse\r\n\t\teval.call(null, src);\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/script-loader/addScript.js\n// module id = 30\n// module chunks = 2","require(\"!!/home/ubuntu/CodeRadarVisualization/node_modules/script-loader/addScript.js\")(require(\"!!/home/ubuntu/CodeRadarVisualization/node_modules/raw-loader/index.js!/home/ubuntu/CodeRadarVisualization/node_modules/jquery/dist/jquery.js\"))\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/script-loader!./~/jquery/dist/jquery.js\n// module id = 300\n// module chunks = 2","require(\"!!/home/ubuntu/CodeRadarVisualization/node_modules/script-loader/addScript.js\")(require(\"!!/home/ubuntu/CodeRadarVisualization/node_modules/raw-loader/index.js!/home/ubuntu/CodeRadarVisualization/node_modules/tether/dist/js/tether.js\"))\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/script-loader!./~/tether/dist/js/tether.js\n// module id = 301\n// module chunks = 2","require(\"!!/home/ubuntu/CodeRadarVisualization/node_modules/script-loader/addScript.js\")(require(\"!!/home/ubuntu/CodeRadarVisualization/node_modules/raw-loader/index.js!/home/ubuntu/CodeRadarVisualization/node_modules/three/build/three.js\"))\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/script-loader!./~/three/build/three.js\n// module id = 302\n// module chunks = 2","require(\"!!/home/ubuntu/CodeRadarVisualization/node_modules/script-loader/addScript.js\")(require(\"!!/home/ubuntu/CodeRadarVisualization/node_modules/raw-loader/index.js!/home/ubuntu/CodeRadarVisualization/node_modules/three/examples/js/controls/OrbitControls.js\"))\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/script-loader!./~/three/examples/js/controls/OrbitControls.js\n// module id = 303\n// module chunks = 2","module.exports = \"/******************************************************************************\\n\\nThis is a binary tree based bin packing algorithm that is more complex than\\nthe simple Packer (packer.js). Instead of starting off with a fixed width and\\nheight, it starts with the width and height of the first block passed and then\\ngrows as necessary to accomodate each subsequent block. As it grows it attempts\\nto maintain a roughly square ratio by making 'smart' choices about whether to\\ngrow right or down.\\n\\nWhen growing, the algorithm can only grow to the right OR down. Therefore, if\\nthe new block is BOTH wider and taller than the current target then it will be\\nrejected. This makes it very important to initialize with a sensible starting\\nwidth and height. If you are providing sorted input (largest first) then this\\nwill not be an issue.\\n\\nA potential way to solve this limitation would be to allow growth in BOTH\\ndirections at once, but this requires maintaining a more complex tree\\nwith 3 children (down, right and center) and that complexity can be avoided\\nby simply chosing a sensible starting block.\\n\\nBest results occur when the input blocks are sorted by height, or even better\\nwhen sorted by max(width,height).\\n\\nInputs:\\n------\\n\\n  blocks: array of any objects that have .w and .h attributes\\n\\nOutputs:\\n-------\\n\\n  marks each block that fits with a .fit attribute pointing to a\\n  node with .x and .y coordinates\\n\\nExample:\\n-------\\n\\n  var blocks = [\\n    { w: 100, h: 100 },\\n    { w: 100, h: 100 },\\n    { w:  80, h:  80 },\\n    { w:  80, h:  80 },\\n    etc\\n    etc\\n  ];\\n\\n  var packer = new GrowingPacker();\\n  packer.fit(blocks);\\n\\n  for(var n = 0 ; n < blocks.length ; n++) {\\n    var block = blocks[n];\\n    if (block.fit) {\\n      Draw(block.fit.x, block.fit.y, block.w, block.h);\\n    }\\n  }\\n\\n\\n******************************************************************************/\\n-function (exports) {\\n\\nvar GrowingPacker = exports.GrowingPacker = function() { };\\n\\nGrowingPacker.prototype = {\\n\\n  fit: function(blocks) {\\n    var n, node, block, len = blocks.length;\\n    var w = len > 0 ? blocks[0].w : 0;\\n    var h = len > 0 ? blocks[0].h : 0;\\n    this.root = { x: 0, y: 0, w: w, h: h };\\n    for (n = 0; n < len ; n++) {\\n      block = blocks[n];\\n      if (node = this.findNode(this.root, block.w, block.h))\\n        block.fit = this.splitNode(node, block.w, block.h);\\n      else\\n        block.fit = this.growNode(block.w, block.h);\\n    }\\n  },\\n\\n  findNode: function(root, w, h) {\\n    if (root.used)\\n      return this.findNode(root.right, w, h) || this.findNode(root.down, w, h);\\n    else if ((w <= root.w) && (h <= root.h))\\n      return root;\\n    else\\n      return null;\\n  },\\n\\n  splitNode: function(node, w, h) {\\n    node.used = true;\\n    node.down  = { x: node.x,     y: node.y + h, w: node.w,     h: node.h - h };\\n    node.right = { x: node.x + w, y: node.y,     w: node.w - w, h: h          };\\n    return node;\\n  },\\n\\n  growNode: function(w, h) {\\n    var canGrowDown  = (w <= this.root.w);\\n    var canGrowRight = (h <= this.root.h);\\n\\n    var shouldGrowRight = canGrowRight && (this.root.h >= (this.root.w + w)); // attempt to keep square-ish by growing right when height is much greater than width\\n    var shouldGrowDown  = canGrowDown  && (this.root.w >= (this.root.h + h)); // attempt to keep square-ish by growing down  when width  is much greater than height\\n\\n    if (shouldGrowRight)\\n      return this.growRight(w, h);\\n    else if (shouldGrowDown)\\n      return this.growDown(w, h);\\n    else if (canGrowRight)\\n     return this.growRight(w, h);\\n    else if (canGrowDown)\\n      return this.growDown(w, h);\\n    else\\n      return null; // need to ensure sensible root starting size to avoid this happening\\n  },\\n\\n  growRight: function(w, h) {\\n    this.root = {\\n      used: true,\\n      x: 0,\\n      y: 0,\\n      w: this.root.w + w,\\n      h: this.root.h,\\n      down: this.root,\\n      right: { x: this.root.w, y: 0, w: w, h: this.root.h }\\n    };\\n    if (node = this.findNode(this.root, w, h))\\n      return this.splitNode(node, w, h);\\n    else\\n      return null;\\n  },\\n\\n  growDown: function(w, h) {\\n    this.root = {\\n      used: true,\\n      x: 0,\\n      y: 0,\\n      w: this.root.w,\\n      h: this.root.h + h,\\n      down:  { x: 0, y: this.root.h, w: this.root.w, h: h },\\n      right: this.root\\n    };\\n    if (node = this.findNode(this.root, w, h))\\n      return this.splitNode(node, w, h);\\n    else\\n      return null;\\n  }\\n\\n}\\n\\n}(typeof window !== 'undefined' ? window : module.exports);\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./~/binpacking/js/packer.growing.js\n// module id = 416\n// module chunks = 2","module.exports = \"/*!\\n * Bootstrap v4.0.0-alpha.6 (https://getbootstrap.com)\\n * Copyright 2011-2017 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\\n */\\n\\nif (typeof jQuery === 'undefined') {\\n  throw new Error('Bootstrap\\\\'s JavaScript requires jQuery. jQuery must be included before Bootstrap\\\\'s JavaScript.')\\n}\\n\\n+function ($) {\\n  var version = $.fn.jquery.split(' ')[0].split('.')\\n  if ((version[0] < 2 && version[1] < 9) || (version[0] == 1 && version[1] == 9 && version[2] < 1) || (version[0] >= 4)) {\\n    throw new Error('Bootstrap\\\\'s JavaScript requires at least jQuery v1.9.1 but less than v4.0.0')\\n  }\\n}(jQuery);\\n\\n\\n+function () {\\n\\nvar _typeof = typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; };\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\n/**\\n * --------------------------------------------------------------------------\\n * Bootstrap (v4.0.0-alpha.6): util.js\\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\\n * --------------------------------------------------------------------------\\n */\\n\\nvar Util = function ($) {\\n\\n  /**\\n   * ------------------------------------------------------------------------\\n   * Private TransitionEnd Helpers\\n   * ------------------------------------------------------------------------\\n   */\\n\\n  var transition = false;\\n\\n  var MAX_UID = 1000000;\\n\\n  var TransitionEndEvent = {\\n    WebkitTransition: 'webkitTransitionEnd',\\n    MozTransition: 'transitionend',\\n    OTransition: 'oTransitionEnd otransitionend',\\n    transition: 'transitionend'\\n  };\\n\\n  // shoutout AngusCroll (https://goo.gl/pxwQGp)\\n  function toType(obj) {\\n    return {}.toString.call(obj).match(/\\\\s([a-zA-Z]+)/)[1].toLowerCase();\\n  }\\n\\n  function isElement(obj) {\\n    return (obj[0] || obj).nodeType;\\n  }\\n\\n  function getSpecialTransitionEndEvent() {\\n    return {\\n      bindType: transition.end,\\n      delegateType: transition.end,\\n      handle: function handle(event) {\\n        if ($(event.target).is(this)) {\\n          return event.handleObj.handler.apply(this, arguments); // eslint-disable-line prefer-rest-params\\n        }\\n        return undefined;\\n      }\\n    };\\n  }\\n\\n  function transitionEndTest() {\\n    if (window.QUnit) {\\n      return false;\\n    }\\n\\n    var el = document.createElement('bootstrap');\\n\\n    for (var name in TransitionEndEvent) {\\n      if (el.style[name] !== undefined) {\\n        return {\\n          end: TransitionEndEvent[name]\\n        };\\n      }\\n    }\\n\\n    return false;\\n  }\\n\\n  function transitionEndEmulator(duration) {\\n    var _this = this;\\n\\n    var called = false;\\n\\n    $(this).one(Util.TRANSITION_END, function () {\\n      called = true;\\n    });\\n\\n    setTimeout(function () {\\n      if (!called) {\\n        Util.triggerTransitionEnd(_this);\\n      }\\n    }, duration);\\n\\n    return this;\\n  }\\n\\n  function setTransitionEndSupport() {\\n    transition = transitionEndTest();\\n\\n    $.fn.emulateTransitionEnd = transitionEndEmulator;\\n\\n    if (Util.supportsTransitionEnd()) {\\n      $.event.special[Util.TRANSITION_END] = getSpecialTransitionEndEvent();\\n    }\\n  }\\n\\n  /**\\n   * --------------------------------------------------------------------------\\n   * Public Util Api\\n   * --------------------------------------------------------------------------\\n   */\\n\\n  var Util = {\\n\\n    TRANSITION_END: 'bsTransitionEnd',\\n\\n    getUID: function getUID(prefix) {\\n      do {\\n        // eslint-disable-next-line no-bitwise\\n        prefix += ~~(Math.random() * MAX_UID); // \\\"~~\\\" acts like a faster Math.floor() here\\n      } while (document.getElementById(prefix));\\n      return prefix;\\n    },\\n    getSelectorFromElement: function getSelectorFromElement(element) {\\n      var selector = element.getAttribute('data-target');\\n\\n      if (!selector) {\\n        selector = element.getAttribute('href') || '';\\n        selector = /^#[a-z]/i.test(selector) ? selector : null;\\n      }\\n\\n      return selector;\\n    },\\n    reflow: function reflow(element) {\\n      return element.offsetHeight;\\n    },\\n    triggerTransitionEnd: function triggerTransitionEnd(element) {\\n      $(element).trigger(transition.end);\\n    },\\n    supportsTransitionEnd: function supportsTransitionEnd() {\\n      return Boolean(transition);\\n    },\\n    typeCheckConfig: function typeCheckConfig(componentName, config, configTypes) {\\n      for (var property in configTypes) {\\n        if (configTypes.hasOwnProperty(property)) {\\n          var expectedTypes = configTypes[property];\\n          var value = config[property];\\n          var valueType = value && isElement(value) ? 'element' : toType(value);\\n\\n          if (!new RegExp(expectedTypes).test(valueType)) {\\n            throw new Error(componentName.toUpperCase() + ': ' + ('Option \\\"' + property + '\\\" provided type \\\"' + valueType + '\\\" ') + ('but expected type \\\"' + expectedTypes + '\\\".'));\\n          }\\n        }\\n      }\\n    }\\n  };\\n\\n  setTransitionEndSupport();\\n\\n  return Util;\\n}(jQuery);\\n\\n/**\\n * --------------------------------------------------------------------------\\n * Bootstrap (v4.0.0-alpha.6): alert.js\\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\\n * --------------------------------------------------------------------------\\n */\\n\\nvar Alert = function ($) {\\n\\n  /**\\n   * ------------------------------------------------------------------------\\n   * Constants\\n   * ------------------------------------------------------------------------\\n   */\\n\\n  var NAME = 'alert';\\n  var VERSION = '4.0.0-alpha.6';\\n  var DATA_KEY = 'bs.alert';\\n  var EVENT_KEY = '.' + DATA_KEY;\\n  var DATA_API_KEY = '.data-api';\\n  var JQUERY_NO_CONFLICT = $.fn[NAME];\\n  var TRANSITION_DURATION = 150;\\n\\n  var Selector = {\\n    DISMISS: '[data-dismiss=\\\"alert\\\"]'\\n  };\\n\\n  var Event = {\\n    CLOSE: 'close' + EVENT_KEY,\\n    CLOSED: 'closed' + EVENT_KEY,\\n    CLICK_DATA_API: 'click' + EVENT_KEY + DATA_API_KEY\\n  };\\n\\n  var ClassName = {\\n    ALERT: 'alert',\\n    FADE: 'fade',\\n    SHOW: 'show'\\n  };\\n\\n  /**\\n   * ------------------------------------------------------------------------\\n   * Class Definition\\n   * ------------------------------------------------------------------------\\n   */\\n\\n  var Alert = function () {\\n    function Alert(element) {\\n      _classCallCheck(this, Alert);\\n\\n      this._element = element;\\n    }\\n\\n    // getters\\n\\n    // public\\n\\n    Alert.prototype.close = function close(element) {\\n      element = element || this._element;\\n\\n      var rootElement = this._getRootElement(element);\\n      var customEvent = this._triggerCloseEvent(rootElement);\\n\\n      if (customEvent.isDefaultPrevented()) {\\n        return;\\n      }\\n\\n      this._removeElement(rootElement);\\n    };\\n\\n    Alert.prototype.dispose = function dispose() {\\n      $.removeData(this._element, DATA_KEY);\\n      this._element = null;\\n    };\\n\\n    // private\\n\\n    Alert.prototype._getRootElement = function _getRootElement(element) {\\n      var selector = Util.getSelectorFromElement(element);\\n      var parent = false;\\n\\n      if (selector) {\\n        parent = $(selector)[0];\\n      }\\n\\n      if (!parent) {\\n        parent = $(element).closest('.' + ClassName.ALERT)[0];\\n      }\\n\\n      return parent;\\n    };\\n\\n    Alert.prototype._triggerCloseEvent = function _triggerCloseEvent(element) {\\n      var closeEvent = $.Event(Event.CLOSE);\\n\\n      $(element).trigger(closeEvent);\\n      return closeEvent;\\n    };\\n\\n    Alert.prototype._removeElement = function _removeElement(element) {\\n      var _this2 = this;\\n\\n      $(element).removeClass(ClassName.SHOW);\\n\\n      if (!Util.supportsTransitionEnd() || !$(element).hasClass(ClassName.FADE)) {\\n        this._destroyElement(element);\\n        return;\\n      }\\n\\n      $(element).one(Util.TRANSITION_END, function (event) {\\n        return _this2._destroyElement(element, event);\\n      }).emulateTransitionEnd(TRANSITION_DURATION);\\n    };\\n\\n    Alert.prototype._destroyElement = function _destroyElement(element) {\\n      $(element).detach().trigger(Event.CLOSED).remove();\\n    };\\n\\n    // static\\n\\n    Alert._jQueryInterface = function _jQueryInterface(config) {\\n      return this.each(function () {\\n        var $element = $(this);\\n        var data = $element.data(DATA_KEY);\\n\\n        if (!data) {\\n          data = new Alert(this);\\n          $element.data(DATA_KEY, data);\\n        }\\n\\n        if (config === 'close') {\\n          data[config](this);\\n        }\\n      });\\n    };\\n\\n    Alert._handleDismiss = function _handleDismiss(alertInstance) {\\n      return function (event) {\\n        if (event) {\\n          event.preventDefault();\\n        }\\n\\n        alertInstance.close(this);\\n      };\\n    };\\n\\n    _createClass(Alert, null, [{\\n      key: 'VERSION',\\n      get: function get() {\\n        return VERSION;\\n      }\\n    }]);\\n\\n    return Alert;\\n  }();\\n\\n  /**\\n   * ------------------------------------------------------------------------\\n   * Data Api implementation\\n   * ------------------------------------------------------------------------\\n   */\\n\\n  $(document).on(Event.CLICK_DATA_API, Selector.DISMISS, Alert._handleDismiss(new Alert()));\\n\\n  /**\\n   * ------------------------------------------------------------------------\\n   * jQuery\\n   * ------------------------------------------------------------------------\\n   */\\n\\n  $.fn[NAME] = Alert._jQueryInterface;\\n  $.fn[NAME].Constructor = Alert;\\n  $.fn[NAME].noConflict = function () {\\n    $.fn[NAME] = JQUERY_NO_CONFLICT;\\n    return Alert._jQueryInterface;\\n  };\\n\\n  return Alert;\\n}(jQuery);\\n\\n/**\\n * --------------------------------------------------------------------------\\n * Bootstrap (v4.0.0-alpha.6): button.js\\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\\n * --------------------------------------------------------------------------\\n */\\n\\nvar Button = function ($) {\\n\\n  /**\\n   * ------------------------------------------------------------------------\\n   * Constants\\n   * ------------------------------------------------------------------------\\n   */\\n\\n  var NAME = 'button';\\n  var VERSION = '4.0.0-alpha.6';\\n  var DATA_KEY = 'bs.button';\\n  var EVENT_KEY = '.' + DATA_KEY;\\n  var DATA_API_KEY = '.data-api';\\n  var JQUERY_NO_CONFLICT = $.fn[NAME];\\n\\n  var ClassName = {\\n    ACTIVE: 'active',\\n    BUTTON: 'btn',\\n    FOCUS: 'focus'\\n  };\\n\\n  var Selector = {\\n    DATA_TOGGLE_CARROT: '[data-toggle^=\\\"button\\\"]',\\n    DATA_TOGGLE: '[data-toggle=\\\"buttons\\\"]',\\n    INPUT: 'input',\\n    ACTIVE: '.active',\\n    BUTTON: '.btn'\\n  };\\n\\n  var Event = {\\n    CLICK_DATA_API: 'click' + EVENT_KEY + DATA_API_KEY,\\n    FOCUS_BLUR_DATA_API: 'focus' + EVENT_KEY + DATA_API_KEY + ' ' + ('blur' + EVENT_KEY + DATA_API_KEY)\\n  };\\n\\n  /**\\n   * ------------------------------------------------------------------------\\n   * Class Definition\\n   * ------------------------------------------------------------------------\\n   */\\n\\n  var Button = function () {\\n    function Button(element) {\\n      _classCallCheck(this, Button);\\n\\n      this._element = element;\\n    }\\n\\n    // getters\\n\\n    // public\\n\\n    Button.prototype.toggle = function toggle() {\\n      var triggerChangeEvent = true;\\n      var rootElement = $(this._element).closest(Selector.DATA_TOGGLE)[0];\\n\\n      if (rootElement) {\\n        var input = $(this._element).find(Selector.INPUT)[0];\\n\\n        if (input) {\\n          if (input.type === 'radio') {\\n            if (input.checked && $(this._element).hasClass(ClassName.ACTIVE)) {\\n              triggerChangeEvent = false;\\n            } else {\\n              var activeElement = $(rootElement).find(Selector.ACTIVE)[0];\\n\\n              if (activeElement) {\\n                $(activeElement).removeClass(ClassName.ACTIVE);\\n              }\\n            }\\n          }\\n\\n          if (triggerChangeEvent) {\\n            input.checked = !$(this._element).hasClass(ClassName.ACTIVE);\\n            $(input).trigger('change');\\n          }\\n\\n          input.focus();\\n        }\\n      }\\n\\n      this._element.setAttribute('aria-pressed', !$(this._element).hasClass(ClassName.ACTIVE));\\n\\n      if (triggerChangeEvent) {\\n        $(this._element).toggleClass(ClassName.ACTIVE);\\n      }\\n    };\\n\\n    Button.prototype.dispose = function dispose() {\\n      $.removeData(this._element, DATA_KEY);\\n      this._element = null;\\n    };\\n\\n    // static\\n\\n    Button._jQueryInterface = function _jQueryInterface(config) {\\n      return this.each(function () {\\n        var data = $(this).data(DATA_KEY);\\n\\n        if (!data) {\\n          data = new Button(this);\\n          $(this).data(DATA_KEY, data);\\n        }\\n\\n        if (config === 'toggle') {\\n          data[config]();\\n        }\\n      });\\n    };\\n\\n    _createClass(Button, null, [{\\n      key: 'VERSION',\\n      get: function get() {\\n        return VERSION;\\n      }\\n    }]);\\n\\n    return Button;\\n  }();\\n\\n  /**\\n   * ------------------------------------------------------------------------\\n   * Data Api implementation\\n   * ------------------------------------------------------------------------\\n   */\\n\\n  $(document).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE_CARROT, function (event) {\\n    event.preventDefault();\\n\\n    var button = event.target;\\n\\n    if (!$(button).hasClass(ClassName.BUTTON)) {\\n      button = $(button).closest(Selector.BUTTON);\\n    }\\n\\n    Button._jQueryInterface.call($(button), 'toggle');\\n  }).on(Event.FOCUS_BLUR_DATA_API, Selector.DATA_TOGGLE_CARROT, function (event) {\\n    var button = $(event.target).closest(Selector.BUTTON)[0];\\n    $(button).toggleClass(ClassName.FOCUS, /^focus(in)?$/.test(event.type));\\n  });\\n\\n  /**\\n   * ------------------------------------------------------------------------\\n   * jQuery\\n   * ------------------------------------------------------------------------\\n   */\\n\\n  $.fn[NAME] = Button._jQueryInterface;\\n  $.fn[NAME].Constructor = Button;\\n  $.fn[NAME].noConflict = function () {\\n    $.fn[NAME] = JQUERY_NO_CONFLICT;\\n    return Button._jQueryInterface;\\n  };\\n\\n  return Button;\\n}(jQuery);\\n\\n/**\\n * --------------------------------------------------------------------------\\n * Bootstrap (v4.0.0-alpha.6): carousel.js\\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\\n * --------------------------------------------------------------------------\\n */\\n\\nvar Carousel = function ($) {\\n\\n  /**\\n   * ------------------------------------------------------------------------\\n   * Constants\\n   * ------------------------------------------------------------------------\\n   */\\n\\n  var NAME = 'carousel';\\n  var VERSION = '4.0.0-alpha.6';\\n  var DATA_KEY = 'bs.carousel';\\n  var EVENT_KEY = '.' + DATA_KEY;\\n  var DATA_API_KEY = '.data-api';\\n  var JQUERY_NO_CONFLICT = $.fn[NAME];\\n  var TRANSITION_DURATION = 600;\\n  var ARROW_LEFT_KEYCODE = 37; // KeyboardEvent.which value for left arrow key\\n  var ARROW_RIGHT_KEYCODE = 39; // KeyboardEvent.which value for right arrow key\\n\\n  var Default = {\\n    interval: 5000,\\n    keyboard: true,\\n    slide: false,\\n    pause: 'hover',\\n    wrap: true\\n  };\\n\\n  var DefaultType = {\\n    interval: '(number|boolean)',\\n    keyboard: 'boolean',\\n    slide: '(boolean|string)',\\n    pause: '(string|boolean)',\\n    wrap: 'boolean'\\n  };\\n\\n  var Direction = {\\n    NEXT: 'next',\\n    PREV: 'prev',\\n    LEFT: 'left',\\n    RIGHT: 'right'\\n  };\\n\\n  var Event = {\\n    SLIDE: 'slide' + EVENT_KEY,\\n    SLID: 'slid' + EVENT_KEY,\\n    KEYDOWN: 'keydown' + EVENT_KEY,\\n    MOUSEENTER: 'mouseenter' + EVENT_KEY,\\n    MOUSELEAVE: 'mouseleave' + EVENT_KEY,\\n    LOAD_DATA_API: 'load' + EVENT_KEY + DATA_API_KEY,\\n    CLICK_DATA_API: 'click' + EVENT_KEY + DATA_API_KEY\\n  };\\n\\n  var ClassName = {\\n    CAROUSEL: 'carousel',\\n    ACTIVE: 'active',\\n    SLIDE: 'slide',\\n    RIGHT: 'carousel-item-right',\\n    LEFT: 'carousel-item-left',\\n    NEXT: 'carousel-item-next',\\n    PREV: 'carousel-item-prev',\\n    ITEM: 'carousel-item'\\n  };\\n\\n  var Selector = {\\n    ACTIVE: '.active',\\n    ACTIVE_ITEM: '.active.carousel-item',\\n    ITEM: '.carousel-item',\\n    NEXT_PREV: '.carousel-item-next, .carousel-item-prev',\\n    INDICATORS: '.carousel-indicators',\\n    DATA_SLIDE: '[data-slide], [data-slide-to]',\\n    DATA_RIDE: '[data-ride=\\\"carousel\\\"]'\\n  };\\n\\n  /**\\n   * ------------------------------------------------------------------------\\n   * Class Definition\\n   * ------------------------------------------------------------------------\\n   */\\n\\n  var Carousel = function () {\\n    function Carousel(element, config) {\\n      _classCallCheck(this, Carousel);\\n\\n      this._items = null;\\n      this._interval = null;\\n      this._activeElement = null;\\n\\n      this._isPaused = false;\\n      this._isSliding = false;\\n\\n      this._config = this._getConfig(config);\\n      this._element = $(element)[0];\\n      this._indicatorsElement = $(this._element).find(Selector.INDICATORS)[0];\\n\\n      this._addEventListeners();\\n    }\\n\\n    // getters\\n\\n    // public\\n\\n    Carousel.prototype.next = function next() {\\n      if (this._isSliding) {\\n        throw new Error('Carousel is sliding');\\n      }\\n      this._slide(Direction.NEXT);\\n    };\\n\\n    Carousel.prototype.nextWhenVisible = function nextWhenVisible() {\\n      // Don't call next when the page isn't visible\\n      if (!document.hidden) {\\n        this.next();\\n      }\\n    };\\n\\n    Carousel.prototype.prev = function prev() {\\n      if (this._isSliding) {\\n        throw new Error('Carousel is sliding');\\n      }\\n      this._slide(Direction.PREVIOUS);\\n    };\\n\\n    Carousel.prototype.pause = function pause(event) {\\n      if (!event) {\\n        this._isPaused = true;\\n      }\\n\\n      if ($(this._element).find(Selector.NEXT_PREV)[0] && Util.supportsTransitionEnd()) {\\n        Util.triggerTransitionEnd(this._element);\\n        this.cycle(true);\\n      }\\n\\n      clearInterval(this._interval);\\n      this._interval = null;\\n    };\\n\\n    Carousel.prototype.cycle = function cycle(event) {\\n      if (!event) {\\n        this._isPaused = false;\\n      }\\n\\n      if (this._interval) {\\n        clearInterval(this._interval);\\n        this._interval = null;\\n      }\\n\\n      if (this._config.interval && !this._isPaused) {\\n        this._interval = setInterval((document.visibilityState ? this.nextWhenVisible : this.next).bind(this), this._config.interval);\\n      }\\n    };\\n\\n    Carousel.prototype.to = function to(index) {\\n      var _this3 = this;\\n\\n      this._activeElement = $(this._element).find(Selector.ACTIVE_ITEM)[0];\\n\\n      var activeIndex = this._getItemIndex(this._activeElement);\\n\\n      if (index > this._items.length - 1 || index < 0) {\\n        return;\\n      }\\n\\n      if (this._isSliding) {\\n        $(this._element).one(Event.SLID, function () {\\n          return _this3.to(index);\\n        });\\n        return;\\n      }\\n\\n      if (activeIndex === index) {\\n        this.pause();\\n        this.cycle();\\n        return;\\n      }\\n\\n      var direction = index > activeIndex ? Direction.NEXT : Direction.PREVIOUS;\\n\\n      this._slide(direction, this._items[index]);\\n    };\\n\\n    Carousel.prototype.dispose = function dispose() {\\n      $(this._element).off(EVENT_KEY);\\n      $.removeData(this._element, DATA_KEY);\\n\\n      this._items = null;\\n      this._config = null;\\n      this._element = null;\\n      this._interval = null;\\n      this._isPaused = null;\\n      this._isSliding = null;\\n      this._activeElement = null;\\n      this._indicatorsElement = null;\\n    };\\n\\n    // private\\n\\n    Carousel.prototype._getConfig = function _getConfig(config) {\\n      config = $.extend({}, Default, config);\\n      Util.typeCheckConfig(NAME, config, DefaultType);\\n      return config;\\n    };\\n\\n    Carousel.prototype._addEventListeners = function _addEventListeners() {\\n      var _this4 = this;\\n\\n      if (this._config.keyboard) {\\n        $(this._element).on(Event.KEYDOWN, function (event) {\\n          return _this4._keydown(event);\\n        });\\n      }\\n\\n      if (this._config.pause === 'hover' && !('ontouchstart' in document.documentElement)) {\\n        $(this._element).on(Event.MOUSEENTER, function (event) {\\n          return _this4.pause(event);\\n        }).on(Event.MOUSELEAVE, function (event) {\\n          return _this4.cycle(event);\\n        });\\n      }\\n    };\\n\\n    Carousel.prototype._keydown = function _keydown(event) {\\n      if (/input|textarea/i.test(event.target.tagName)) {\\n        return;\\n      }\\n\\n      switch (event.which) {\\n        case ARROW_LEFT_KEYCODE:\\n          event.preventDefault();\\n          this.prev();\\n          break;\\n        case ARROW_RIGHT_KEYCODE:\\n          event.preventDefault();\\n          this.next();\\n          break;\\n        default:\\n          return;\\n      }\\n    };\\n\\n    Carousel.prototype._getItemIndex = function _getItemIndex(element) {\\n      this._items = $.makeArray($(element).parent().find(Selector.ITEM));\\n      return this._items.indexOf(element);\\n    };\\n\\n    Carousel.prototype._getItemByDirection = function _getItemByDirection(direction, activeElement) {\\n      var isNextDirection = direction === Direction.NEXT;\\n      var isPrevDirection = direction === Direction.PREVIOUS;\\n      var activeIndex = this._getItemIndex(activeElement);\\n      var lastItemIndex = this._items.length - 1;\\n      var isGoingToWrap = isPrevDirection && activeIndex === 0 || isNextDirection && activeIndex === lastItemIndex;\\n\\n      if (isGoingToWrap && !this._config.wrap) {\\n        return activeElement;\\n      }\\n\\n      var delta = direction === Direction.PREVIOUS ? -1 : 1;\\n      var itemIndex = (activeIndex + delta) % this._items.length;\\n\\n      return itemIndex === -1 ? this._items[this._items.length - 1] : this._items[itemIndex];\\n    };\\n\\n    Carousel.prototype._triggerSlideEvent = function _triggerSlideEvent(relatedTarget, eventDirectionName) {\\n      var slideEvent = $.Event(Event.SLIDE, {\\n        relatedTarget: relatedTarget,\\n        direction: eventDirectionName\\n      });\\n\\n      $(this._element).trigger(slideEvent);\\n\\n      return slideEvent;\\n    };\\n\\n    Carousel.prototype._setActiveIndicatorElement = function _setActiveIndicatorElement(element) {\\n      if (this._indicatorsElement) {\\n        $(this._indicatorsElement).find(Selector.ACTIVE).removeClass(ClassName.ACTIVE);\\n\\n        var nextIndicator = this._indicatorsElement.children[this._getItemIndex(element)];\\n\\n        if (nextIndicator) {\\n          $(nextIndicator).addClass(ClassName.ACTIVE);\\n        }\\n      }\\n    };\\n\\n    Carousel.prototype._slide = function _slide(direction, element) {\\n      var _this5 = this;\\n\\n      var activeElement = $(this._element).find(Selector.ACTIVE_ITEM)[0];\\n      var nextElement = element || activeElement && this._getItemByDirection(direction, activeElement);\\n\\n      var isCycling = Boolean(this._interval);\\n\\n      var directionalClassName = void 0;\\n      var orderClassName = void 0;\\n      var eventDirectionName = void 0;\\n\\n      if (direction === Direction.NEXT) {\\n        directionalClassName = ClassName.LEFT;\\n        orderClassName = ClassName.NEXT;\\n        eventDirectionName = Direction.LEFT;\\n      } else {\\n        directionalClassName = ClassName.RIGHT;\\n        orderClassName = ClassName.PREV;\\n        eventDirectionName = Direction.RIGHT;\\n      }\\n\\n      if (nextElement && $(nextElement).hasClass(ClassName.ACTIVE)) {\\n        this._isSliding = false;\\n        return;\\n      }\\n\\n      var slideEvent = this._triggerSlideEvent(nextElement, eventDirectionName);\\n      if (slideEvent.isDefaultPrevented()) {\\n        return;\\n      }\\n\\n      if (!activeElement || !nextElement) {\\n        // some weirdness is happening, so we bail\\n        return;\\n      }\\n\\n      this._isSliding = true;\\n\\n      if (isCycling) {\\n        this.pause();\\n      }\\n\\n      this._setActiveIndicatorElement(nextElement);\\n\\n      var slidEvent = $.Event(Event.SLID, {\\n        relatedTarget: nextElement,\\n        direction: eventDirectionName\\n      });\\n\\n      if (Util.supportsTransitionEnd() && $(this._element).hasClass(ClassName.SLIDE)) {\\n\\n        $(nextElement).addClass(orderClassName);\\n\\n        Util.reflow(nextElement);\\n\\n        $(activeElement).addClass(directionalClassName);\\n        $(nextElement).addClass(directionalClassName);\\n\\n        $(activeElement).one(Util.TRANSITION_END, function () {\\n          $(nextElement).removeClass(directionalClassName + ' ' + orderClassName).addClass(ClassName.ACTIVE);\\n\\n          $(activeElement).removeClass(ClassName.ACTIVE + ' ' + orderClassName + ' ' + directionalClassName);\\n\\n          _this5._isSliding = false;\\n\\n          setTimeout(function () {\\n            return $(_this5._element).trigger(slidEvent);\\n          }, 0);\\n        }).emulateTransitionEnd(TRANSITION_DURATION);\\n      } else {\\n        $(activeElement).removeClass(ClassName.ACTIVE);\\n        $(nextElement).addClass(ClassName.ACTIVE);\\n\\n        this._isSliding = false;\\n        $(this._element).trigger(slidEvent);\\n      }\\n\\n      if (isCycling) {\\n        this.cycle();\\n      }\\n    };\\n\\n    // static\\n\\n    Carousel._jQueryInterface = function _jQueryInterface(config) {\\n      return this.each(function () {\\n        var data = $(this).data(DATA_KEY);\\n        var _config = $.extend({}, Default, $(this).data());\\n\\n        if ((typeof config === 'undefined' ? 'undefined' : _typeof(config)) === 'object') {\\n          $.extend(_config, config);\\n        }\\n\\n        var action = typeof config === 'string' ? config : _config.slide;\\n\\n        if (!data) {\\n          data = new Carousel(this, _config);\\n          $(this).data(DATA_KEY, data);\\n        }\\n\\n        if (typeof config === 'number') {\\n          data.to(config);\\n        } else if (typeof action === 'string') {\\n          if (data[action] === undefined) {\\n            throw new Error('No method named \\\"' + action + '\\\"');\\n          }\\n          data[action]();\\n        } else if (_config.interval) {\\n          data.pause();\\n          data.cycle();\\n        }\\n      });\\n    };\\n\\n    Carousel._dataApiClickHandler = function _dataApiClickHandler(event) {\\n      var selector = Util.getSelectorFromElement(this);\\n\\n      if (!selector) {\\n        return;\\n      }\\n\\n      var target = $(selector)[0];\\n\\n      if (!target || !$(target).hasClass(ClassName.CAROUSEL)) {\\n        return;\\n      }\\n\\n      var config = $.extend({}, $(target).data(), $(this).data());\\n      var slideIndex = this.getAttribute('data-slide-to');\\n\\n      if (slideIndex) {\\n        config.interval = false;\\n      }\\n\\n      Carousel._jQueryInterface.call($(target), config);\\n\\n      if (slideIndex) {\\n        $(target).data(DATA_KEY).to(slideIndex);\\n      }\\n\\n      event.preventDefault();\\n    };\\n\\n    _createClass(Carousel, null, [{\\n      key: 'VERSION',\\n      get: function get() {\\n        return VERSION;\\n      }\\n    }, {\\n      key: 'Default',\\n      get: function get() {\\n        return Default;\\n      }\\n    }]);\\n\\n    return Carousel;\\n  }();\\n\\n  /**\\n   * ------------------------------------------------------------------------\\n   * Data Api implementation\\n   * ------------------------------------------------------------------------\\n   */\\n\\n  $(document).on(Event.CLICK_DATA_API, Selector.DATA_SLIDE, Carousel._dataApiClickHandler);\\n\\n  $(window).on(Event.LOAD_DATA_API, function () {\\n    $(Selector.DATA_RIDE).each(function () {\\n      var $carousel = $(this);\\n      Carousel._jQueryInterface.call($carousel, $carousel.data());\\n    });\\n  });\\n\\n  /**\\n   * ------------------------------------------------------------------------\\n   * jQuery\\n   * ------------------------------------------------------------------------\\n   */\\n\\n  $.fn[NAME] = Carousel._jQueryInterface;\\n  $.fn[NAME].Constructor = Carousel;\\n  $.fn[NAME].noConflict = function () {\\n    $.fn[NAME] = JQUERY_NO_CONFLICT;\\n    return Carousel._jQueryInterface;\\n  };\\n\\n  return Carousel;\\n}(jQuery);\\n\\n/**\\n * --------------------------------------------------------------------------\\n * Bootstrap (v4.0.0-alpha.6): collapse.js\\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\\n * --------------------------------------------------------------------------\\n */\\n\\nvar Collapse = function ($) {\\n\\n  /**\\n   * ------------------------------------------------------------------------\\n   * Constants\\n   * ------------------------------------------------------------------------\\n   */\\n\\n  var NAME = 'collapse';\\n  var VERSION = '4.0.0-alpha.6';\\n  var DATA_KEY = 'bs.collapse';\\n  var EVENT_KEY = '.' + DATA_KEY;\\n  var DATA_API_KEY = '.data-api';\\n  var JQUERY_NO_CONFLICT = $.fn[NAME];\\n  var TRANSITION_DURATION = 600;\\n\\n  var Default = {\\n    toggle: true,\\n    parent: ''\\n  };\\n\\n  var DefaultType = {\\n    toggle: 'boolean',\\n    parent: 'string'\\n  };\\n\\n  var Event = {\\n    SHOW: 'show' + EVENT_KEY,\\n    SHOWN: 'shown' + EVENT_KEY,\\n    HIDE: 'hide' + EVENT_KEY,\\n    HIDDEN: 'hidden' + EVENT_KEY,\\n    CLICK_DATA_API: 'click' + EVENT_KEY + DATA_API_KEY\\n  };\\n\\n  var ClassName = {\\n    SHOW: 'show',\\n    COLLAPSE: 'collapse',\\n    COLLAPSING: 'collapsing',\\n    COLLAPSED: 'collapsed'\\n  };\\n\\n  var Dimension = {\\n    WIDTH: 'width',\\n    HEIGHT: 'height'\\n  };\\n\\n  var Selector = {\\n    ACTIVES: '.card > .show, .card > .collapsing',\\n    DATA_TOGGLE: '[data-toggle=\\\"collapse\\\"]'\\n  };\\n\\n  /**\\n   * ------------------------------------------------------------------------\\n   * Class Definition\\n   * ------------------------------------------------------------------------\\n   */\\n\\n  var Collapse = function () {\\n    function Collapse(element, config) {\\n      _classCallCheck(this, Collapse);\\n\\n      this._isTransitioning = false;\\n      this._element = element;\\n      this._config = this._getConfig(config);\\n      this._triggerArray = $.makeArray($('[data-toggle=\\\"collapse\\\"][href=\\\"#' + element.id + '\\\"],' + ('[data-toggle=\\\"collapse\\\"][data-target=\\\"#' + element.id + '\\\"]')));\\n\\n      this._parent = this._config.parent ? this._getParent() : null;\\n\\n      if (!this._config.parent) {\\n        this._addAriaAndCollapsedClass(this._element, this._triggerArray);\\n      }\\n\\n      if (this._config.toggle) {\\n        this.toggle();\\n      }\\n    }\\n\\n    // getters\\n\\n    // public\\n\\n    Collapse.prototype.toggle = function toggle() {\\n      if ($(this._element).hasClass(ClassName.SHOW)) {\\n        this.hide();\\n      } else {\\n        this.show();\\n      }\\n    };\\n\\n    Collapse.prototype.show = function show() {\\n      var _this6 = this;\\n\\n      if (this._isTransitioning) {\\n        throw new Error('Collapse is transitioning');\\n      }\\n\\n      if ($(this._element).hasClass(ClassName.SHOW)) {\\n        return;\\n      }\\n\\n      var actives = void 0;\\n      var activesData = void 0;\\n\\n      if (this._parent) {\\n        actives = $.makeArray($(this._parent).find(Selector.ACTIVES));\\n        if (!actives.length) {\\n          actives = null;\\n        }\\n      }\\n\\n      if (actives) {\\n        activesData = $(actives).data(DATA_KEY);\\n        if (activesData && activesData._isTransitioning) {\\n          return;\\n        }\\n      }\\n\\n      var startEvent = $.Event(Event.SHOW);\\n      $(this._element).trigger(startEvent);\\n      if (startEvent.isDefaultPrevented()) {\\n        return;\\n      }\\n\\n      if (actives) {\\n        Collapse._jQueryInterface.call($(actives), 'hide');\\n        if (!activesData) {\\n          $(actives).data(DATA_KEY, null);\\n        }\\n      }\\n\\n      var dimension = this._getDimension();\\n\\n      $(this._element).removeClass(ClassName.COLLAPSE).addClass(ClassName.COLLAPSING);\\n\\n      this._element.style[dimension] = 0;\\n      this._element.setAttribute('aria-expanded', true);\\n\\n      if (this._triggerArray.length) {\\n        $(this._triggerArray).removeClass(ClassName.COLLAPSED).attr('aria-expanded', true);\\n      }\\n\\n      this.setTransitioning(true);\\n\\n      var complete = function complete() {\\n        $(_this6._element).removeClass(ClassName.COLLAPSING).addClass(ClassName.COLLAPSE).addClass(ClassName.SHOW);\\n\\n        _this6._element.style[dimension] = '';\\n\\n        _this6.setTransitioning(false);\\n\\n        $(_this6._element).trigger(Event.SHOWN);\\n      };\\n\\n      if (!Util.supportsTransitionEnd()) {\\n        complete();\\n        return;\\n      }\\n\\n      var capitalizedDimension = dimension[0].toUpperCase() + dimension.slice(1);\\n      var scrollSize = 'scroll' + capitalizedDimension;\\n\\n      $(this._element).one(Util.TRANSITION_END, complete).emulateTransitionEnd(TRANSITION_DURATION);\\n\\n      this._element.style[dimension] = this._element[scrollSize] + 'px';\\n    };\\n\\n    Collapse.prototype.hide = function hide() {\\n      var _this7 = this;\\n\\n      if (this._isTransitioning) {\\n        throw new Error('Collapse is transitioning');\\n      }\\n\\n      if (!$(this._element).hasClass(ClassName.SHOW)) {\\n        return;\\n      }\\n\\n      var startEvent = $.Event(Event.HIDE);\\n      $(this._element).trigger(startEvent);\\n      if (startEvent.isDefaultPrevented()) {\\n        return;\\n      }\\n\\n      var dimension = this._getDimension();\\n      var offsetDimension = dimension === Dimension.WIDTH ? 'offsetWidth' : 'offsetHeight';\\n\\n      this._element.style[dimension] = this._element[offsetDimension] + 'px';\\n\\n      Util.reflow(this._element);\\n\\n      $(this._element).addClass(ClassName.COLLAPSING).removeClass(ClassName.COLLAPSE).removeClass(ClassName.SHOW);\\n\\n      this._element.setAttribute('aria-expanded', false);\\n\\n      if (this._triggerArray.length) {\\n        $(this._triggerArray).addClass(ClassName.COLLAPSED).attr('aria-expanded', false);\\n      }\\n\\n      this.setTransitioning(true);\\n\\n      var complete = function complete() {\\n        _this7.setTransitioning(false);\\n        $(_this7._element).removeClass(ClassName.COLLAPSING).addClass(ClassName.COLLAPSE).trigger(Event.HIDDEN);\\n      };\\n\\n      this._element.style[dimension] = '';\\n\\n      if (!Util.supportsTransitionEnd()) {\\n        complete();\\n        return;\\n      }\\n\\n      $(this._element).one(Util.TRANSITION_END, complete).emulateTransitionEnd(TRANSITION_DURATION);\\n    };\\n\\n    Collapse.prototype.setTransitioning = function setTransitioning(isTransitioning) {\\n      this._isTransitioning = isTransitioning;\\n    };\\n\\n    Collapse.prototype.dispose = function dispose() {\\n      $.removeData(this._element, DATA_KEY);\\n\\n      this._config = null;\\n      this._parent = null;\\n      this._element = null;\\n      this._triggerArray = null;\\n      this._isTransitioning = null;\\n    };\\n\\n    // private\\n\\n    Collapse.prototype._getConfig = function _getConfig(config) {\\n      config = $.extend({}, Default, config);\\n      config.toggle = Boolean(config.toggle); // coerce string values\\n      Util.typeCheckConfig(NAME, config, DefaultType);\\n      return config;\\n    };\\n\\n    Collapse.prototype._getDimension = function _getDimension() {\\n      var hasWidth = $(this._element).hasClass(Dimension.WIDTH);\\n      return hasWidth ? Dimension.WIDTH : Dimension.HEIGHT;\\n    };\\n\\n    Collapse.prototype._getParent = function _getParent() {\\n      var _this8 = this;\\n\\n      var parent = $(this._config.parent)[0];\\n      var selector = '[data-toggle=\\\"collapse\\\"][data-parent=\\\"' + this._config.parent + '\\\"]';\\n\\n      $(parent).find(selector).each(function (i, element) {\\n        _this8._addAriaAndCollapsedClass(Collapse._getTargetFromElement(element), [element]);\\n      });\\n\\n      return parent;\\n    };\\n\\n    Collapse.prototype._addAriaAndCollapsedClass = function _addAriaAndCollapsedClass(element, triggerArray) {\\n      if (element) {\\n        var isOpen = $(element).hasClass(ClassName.SHOW);\\n        element.setAttribute('aria-expanded', isOpen);\\n\\n        if (triggerArray.length) {\\n          $(triggerArray).toggleClass(ClassName.COLLAPSED, !isOpen).attr('aria-expanded', isOpen);\\n        }\\n      }\\n    };\\n\\n    // static\\n\\n    Collapse._getTargetFromElement = function _getTargetFromElement(element) {\\n      var selector = Util.getSelectorFromElement(element);\\n      return selector ? $(selector)[0] : null;\\n    };\\n\\n    Collapse._jQueryInterface = function _jQueryInterface(config) {\\n      return this.each(function () {\\n        var $this = $(this);\\n        var data = $this.data(DATA_KEY);\\n        var _config = $.extend({}, Default, $this.data(), (typeof config === 'undefined' ? 'undefined' : _typeof(config)) === 'object' && config);\\n\\n        if (!data && _config.toggle && /show|hide/.test(config)) {\\n          _config.toggle = false;\\n        }\\n\\n        if (!data) {\\n          data = new Collapse(this, _config);\\n          $this.data(DATA_KEY, data);\\n        }\\n\\n        if (typeof config === 'string') {\\n          if (data[config] === undefined) {\\n            throw new Error('No method named \\\"' + config + '\\\"');\\n          }\\n          data[config]();\\n        }\\n      });\\n    };\\n\\n    _createClass(Collapse, null, [{\\n      key: 'VERSION',\\n      get: function get() {\\n        return VERSION;\\n      }\\n    }, {\\n      key: 'Default',\\n      get: function get() {\\n        return Default;\\n      }\\n    }]);\\n\\n    return Collapse;\\n  }();\\n\\n  /**\\n   * ------------------------------------------------------------------------\\n   * Data Api implementation\\n   * ------------------------------------------------------------------------\\n   */\\n\\n  $(document).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, function (event) {\\n    event.preventDefault();\\n\\n    var target = Collapse._getTargetFromElement(this);\\n    var data = $(target).data(DATA_KEY);\\n    var config = data ? 'toggle' : $(this).data();\\n\\n    Collapse._jQueryInterface.call($(target), config);\\n  });\\n\\n  /**\\n   * ------------------------------------------------------------------------\\n   * jQuery\\n   * ------------------------------------------------------------------------\\n   */\\n\\n  $.fn[NAME] = Collapse._jQueryInterface;\\n  $.fn[NAME].Constructor = Collapse;\\n  $.fn[NAME].noConflict = function () {\\n    $.fn[NAME] = JQUERY_NO_CONFLICT;\\n    return Collapse._jQueryInterface;\\n  };\\n\\n  return Collapse;\\n}(jQuery);\\n\\n/**\\n * --------------------------------------------------------------------------\\n * Bootstrap (v4.0.0-alpha.6): dropdown.js\\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\\n * --------------------------------------------------------------------------\\n */\\n\\nvar Dropdown = function ($) {\\n\\n  /**\\n   * ------------------------------------------------------------------------\\n   * Constants\\n   * ------------------------------------------------------------------------\\n   */\\n\\n  var NAME = 'dropdown';\\n  var VERSION = '4.0.0-alpha.6';\\n  var DATA_KEY = 'bs.dropdown';\\n  var EVENT_KEY = '.' + DATA_KEY;\\n  var DATA_API_KEY = '.data-api';\\n  var JQUERY_NO_CONFLICT = $.fn[NAME];\\n  var ESCAPE_KEYCODE = 27; // KeyboardEvent.which value for Escape (Esc) key\\n  var ARROW_UP_KEYCODE = 38; // KeyboardEvent.which value for up arrow key\\n  var ARROW_DOWN_KEYCODE = 40; // KeyboardEvent.which value for down arrow key\\n  var RIGHT_MOUSE_BUTTON_WHICH = 3; // MouseEvent.which value for the right button (assuming a right-handed mouse)\\n\\n  var Event = {\\n    HIDE: 'hide' + EVENT_KEY,\\n    HIDDEN: 'hidden' + EVENT_KEY,\\n    SHOW: 'show' + EVENT_KEY,\\n    SHOWN: 'shown' + EVENT_KEY,\\n    CLICK: 'click' + EVENT_KEY,\\n    CLICK_DATA_API: 'click' + EVENT_KEY + DATA_API_KEY,\\n    FOCUSIN_DATA_API: 'focusin' + EVENT_KEY + DATA_API_KEY,\\n    KEYDOWN_DATA_API: 'keydown' + EVENT_KEY + DATA_API_KEY\\n  };\\n\\n  var ClassName = {\\n    BACKDROP: 'dropdown-backdrop',\\n    DISABLED: 'disabled',\\n    SHOW: 'show'\\n  };\\n\\n  var Selector = {\\n    BACKDROP: '.dropdown-backdrop',\\n    DATA_TOGGLE: '[data-toggle=\\\"dropdown\\\"]',\\n    FORM_CHILD: '.dropdown form',\\n    ROLE_MENU: '[role=\\\"menu\\\"]',\\n    ROLE_LISTBOX: '[role=\\\"listbox\\\"]',\\n    NAVBAR_NAV: '.navbar-nav',\\n    VISIBLE_ITEMS: '[role=\\\"menu\\\"] li:not(.disabled) a, ' + '[role=\\\"listbox\\\"] li:not(.disabled) a'\\n  };\\n\\n  /**\\n   * ------------------------------------------------------------------------\\n   * Class Definition\\n   * ------------------------------------------------------------------------\\n   */\\n\\n  var Dropdown = function () {\\n    function Dropdown(element) {\\n      _classCallCheck(this, Dropdown);\\n\\n      this._element = element;\\n\\n      this._addEventListeners();\\n    }\\n\\n    // getters\\n\\n    // public\\n\\n    Dropdown.prototype.toggle = function toggle() {\\n      if (this.disabled || $(this).hasClass(ClassName.DISABLED)) {\\n        return false;\\n      }\\n\\n      var parent = Dropdown._getParentFromElement(this);\\n      var isActive = $(parent).hasClass(ClassName.SHOW);\\n\\n      Dropdown._clearMenus();\\n\\n      if (isActive) {\\n        return false;\\n      }\\n\\n      if ('ontouchstart' in document.documentElement && !$(parent).closest(Selector.NAVBAR_NAV).length) {\\n\\n        // if mobile we use a backdrop because click events don't delegate\\n        var dropdown = document.createElement('div');\\n        dropdown.className = ClassName.BACKDROP;\\n        $(dropdown).insertBefore(this);\\n        $(dropdown).on('click', Dropdown._clearMenus);\\n      }\\n\\n      var relatedTarget = {\\n        relatedTarget: this\\n      };\\n      var showEvent = $.Event(Event.SHOW, relatedTarget);\\n\\n      $(parent).trigger(showEvent);\\n\\n      if (showEvent.isDefaultPrevented()) {\\n        return false;\\n      }\\n\\n      this.focus();\\n      this.setAttribute('aria-expanded', true);\\n\\n      $(parent).toggleClass(ClassName.SHOW);\\n      $(parent).trigger($.Event(Event.SHOWN, relatedTarget));\\n\\n      return false;\\n    };\\n\\n    Dropdown.prototype.dispose = function dispose() {\\n      $.removeData(this._element, DATA_KEY);\\n      $(this._element).off(EVENT_KEY);\\n      this._element = null;\\n    };\\n\\n    // private\\n\\n    Dropdown.prototype._addEventListeners = function _addEventListeners() {\\n      $(this._element).on(Event.CLICK, this.toggle);\\n    };\\n\\n    // static\\n\\n    Dropdown._jQueryInterface = function _jQueryInterface(config) {\\n      return this.each(function () {\\n        var data = $(this).data(DATA_KEY);\\n\\n        if (!data) {\\n          data = new Dropdown(this);\\n          $(this).data(DATA_KEY, data);\\n        }\\n\\n        if (typeof config === 'string') {\\n          if (data[config] === undefined) {\\n            throw new Error('No method named \\\"' + config + '\\\"');\\n          }\\n          data[config].call(this);\\n        }\\n      });\\n    };\\n\\n    Dropdown._clearMenus = function _clearMenus(event) {\\n      if (event && event.which === RIGHT_MOUSE_BUTTON_WHICH) {\\n        return;\\n      }\\n\\n      var backdrop = $(Selector.BACKDROP)[0];\\n      if (backdrop) {\\n        backdrop.parentNode.removeChild(backdrop);\\n      }\\n\\n      var toggles = $.makeArray($(Selector.DATA_TOGGLE));\\n\\n      for (var i = 0; i < toggles.length; i++) {\\n        var parent = Dropdown._getParentFromElement(toggles[i]);\\n        var relatedTarget = {\\n          relatedTarget: toggles[i]\\n        };\\n\\n        if (!$(parent).hasClass(ClassName.SHOW)) {\\n          continue;\\n        }\\n\\n        if (event && (event.type === 'click' && /input|textarea/i.test(event.target.tagName) || event.type === 'focusin') && $.contains(parent, event.target)) {\\n          continue;\\n        }\\n\\n        var hideEvent = $.Event(Event.HIDE, relatedTarget);\\n        $(parent).trigger(hideEvent);\\n        if (hideEvent.isDefaultPrevented()) {\\n          continue;\\n        }\\n\\n        toggles[i].setAttribute('aria-expanded', 'false');\\n\\n        $(parent).removeClass(ClassName.SHOW).trigger($.Event(Event.HIDDEN, relatedTarget));\\n      }\\n    };\\n\\n    Dropdown._getParentFromElement = function _getParentFromElement(element) {\\n      var parent = void 0;\\n      var selector = Util.getSelectorFromElement(element);\\n\\n      if (selector) {\\n        parent = $(selector)[0];\\n      }\\n\\n      return parent || element.parentNode;\\n    };\\n\\n    Dropdown._dataApiKeydownHandler = function _dataApiKeydownHandler(event) {\\n      if (!/(38|40|27|32)/.test(event.which) || /input|textarea/i.test(event.target.tagName)) {\\n        return;\\n      }\\n\\n      event.preventDefault();\\n      event.stopPropagation();\\n\\n      if (this.disabled || $(this).hasClass(ClassName.DISABLED)) {\\n        return;\\n      }\\n\\n      var parent = Dropdown._getParentFromElement(this);\\n      var isActive = $(parent).hasClass(ClassName.SHOW);\\n\\n      if (!isActive && event.which !== ESCAPE_KEYCODE || isActive && event.which === ESCAPE_KEYCODE) {\\n\\n        if (event.which === ESCAPE_KEYCODE) {\\n          var toggle = $(parent).find(Selector.DATA_TOGGLE)[0];\\n          $(toggle).trigger('focus');\\n        }\\n\\n        $(this).trigger('click');\\n        return;\\n      }\\n\\n      var items = $(parent).find(Selector.VISIBLE_ITEMS).get();\\n\\n      if (!items.length) {\\n        return;\\n      }\\n\\n      var index = items.indexOf(event.target);\\n\\n      if (event.which === ARROW_UP_KEYCODE && index > 0) {\\n        // up\\n        index--;\\n      }\\n\\n      if (event.which === ARROW_DOWN_KEYCODE && index < items.length - 1) {\\n        // down\\n        index++;\\n      }\\n\\n      if (index < 0) {\\n        index = 0;\\n      }\\n\\n      items[index].focus();\\n    };\\n\\n    _createClass(Dropdown, null, [{\\n      key: 'VERSION',\\n      get: function get() {\\n        return VERSION;\\n      }\\n    }]);\\n\\n    return Dropdown;\\n  }();\\n\\n  /**\\n   * ------------------------------------------------------------------------\\n   * Data Api implementation\\n   * ------------------------------------------------------------------------\\n   */\\n\\n  $(document).on(Event.KEYDOWN_DATA_API, Selector.DATA_TOGGLE, Dropdown._dataApiKeydownHandler).on(Event.KEYDOWN_DATA_API, Selector.ROLE_MENU, Dropdown._dataApiKeydownHandler).on(Event.KEYDOWN_DATA_API, Selector.ROLE_LISTBOX, Dropdown._dataApiKeydownHandler).on(Event.CLICK_DATA_API + ' ' + Event.FOCUSIN_DATA_API, Dropdown._clearMenus).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, Dropdown.prototype.toggle).on(Event.CLICK_DATA_API, Selector.FORM_CHILD, function (e) {\\n    e.stopPropagation();\\n  });\\n\\n  /**\\n   * ------------------------------------------------------------------------\\n   * jQuery\\n   * ------------------------------------------------------------------------\\n   */\\n\\n  $.fn[NAME] = Dropdown._jQueryInterface;\\n  $.fn[NAME].Constructor = Dropdown;\\n  $.fn[NAME].noConflict = function () {\\n    $.fn[NAME] = JQUERY_NO_CONFLICT;\\n    return Dropdown._jQueryInterface;\\n  };\\n\\n  return Dropdown;\\n}(jQuery);\\n\\n/**\\n * --------------------------------------------------------------------------\\n * Bootstrap (v4.0.0-alpha.6): modal.js\\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\\n * --------------------------------------------------------------------------\\n */\\n\\nvar Modal = function ($) {\\n\\n  /**\\n   * ------------------------------------------------------------------------\\n   * Constants\\n   * ------------------------------------------------------------------------\\n   */\\n\\n  var NAME = 'modal';\\n  var VERSION = '4.0.0-alpha.6';\\n  var DATA_KEY = 'bs.modal';\\n  var EVENT_KEY = '.' + DATA_KEY;\\n  var DATA_API_KEY = '.data-api';\\n  var JQUERY_NO_CONFLICT = $.fn[NAME];\\n  var TRANSITION_DURATION = 300;\\n  var BACKDROP_TRANSITION_DURATION = 150;\\n  var ESCAPE_KEYCODE = 27; // KeyboardEvent.which value for Escape (Esc) key\\n\\n  var Default = {\\n    backdrop: true,\\n    keyboard: true,\\n    focus: true,\\n    show: true\\n  };\\n\\n  var DefaultType = {\\n    backdrop: '(boolean|string)',\\n    keyboard: 'boolean',\\n    focus: 'boolean',\\n    show: 'boolean'\\n  };\\n\\n  var Event = {\\n    HIDE: 'hide' + EVENT_KEY,\\n    HIDDEN: 'hidden' + EVENT_KEY,\\n    SHOW: 'show' + EVENT_KEY,\\n    SHOWN: 'shown' + EVENT_KEY,\\n    FOCUSIN: 'focusin' + EVENT_KEY,\\n    RESIZE: 'resize' + EVENT_KEY,\\n    CLICK_DISMISS: 'click.dismiss' + EVENT_KEY,\\n    KEYDOWN_DISMISS: 'keydown.dismiss' + EVENT_KEY,\\n    MOUSEUP_DISMISS: 'mouseup.dismiss' + EVENT_KEY,\\n    MOUSEDOWN_DISMISS: 'mousedown.dismiss' + EVENT_KEY,\\n    CLICK_DATA_API: 'click' + EVENT_KEY + DATA_API_KEY\\n  };\\n\\n  var ClassName = {\\n    SCROLLBAR_MEASURER: 'modal-scrollbar-measure',\\n    BACKDROP: 'modal-backdrop',\\n    OPEN: 'modal-open',\\n    FADE: 'fade',\\n    SHOW: 'show'\\n  };\\n\\n  var Selector = {\\n    DIALOG: '.modal-dialog',\\n    DATA_TOGGLE: '[data-toggle=\\\"modal\\\"]',\\n    DATA_DISMISS: '[data-dismiss=\\\"modal\\\"]',\\n    FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top'\\n  };\\n\\n  /**\\n   * ------------------------------------------------------------------------\\n   * Class Definition\\n   * ------------------------------------------------------------------------\\n   */\\n\\n  var Modal = function () {\\n    function Modal(element, config) {\\n      _classCallCheck(this, Modal);\\n\\n      this._config = this._getConfig(config);\\n      this._element = element;\\n      this._dialog = $(element).find(Selector.DIALOG)[0];\\n      this._backdrop = null;\\n      this._isShown = false;\\n      this._isBodyOverflowing = false;\\n      this._ignoreBackdropClick = false;\\n      this._isTransitioning = false;\\n      this._originalBodyPadding = 0;\\n      this._scrollbarWidth = 0;\\n    }\\n\\n    // getters\\n\\n    // public\\n\\n    Modal.prototype.toggle = function toggle(relatedTarget) {\\n      return this._isShown ? this.hide() : this.show(relatedTarget);\\n    };\\n\\n    Modal.prototype.show = function show(relatedTarget) {\\n      var _this9 = this;\\n\\n      if (this._isTransitioning) {\\n        throw new Error('Modal is transitioning');\\n      }\\n\\n      if (Util.supportsTransitionEnd() && $(this._element).hasClass(ClassName.FADE)) {\\n        this._isTransitioning = true;\\n      }\\n      var showEvent = $.Event(Event.SHOW, {\\n        relatedTarget: relatedTarget\\n      });\\n\\n      $(this._element).trigger(showEvent);\\n\\n      if (this._isShown || showEvent.isDefaultPrevented()) {\\n        return;\\n      }\\n\\n      this._isShown = true;\\n\\n      this._checkScrollbar();\\n      this._setScrollbar();\\n\\n      $(document.body).addClass(ClassName.OPEN);\\n\\n      this._setEscapeEvent();\\n      this._setResizeEvent();\\n\\n      $(this._element).on(Event.CLICK_DISMISS, Selector.DATA_DISMISS, function (event) {\\n        return _this9.hide(event);\\n      });\\n\\n      $(this._dialog).on(Event.MOUSEDOWN_DISMISS, function () {\\n        $(_this9._element).one(Event.MOUSEUP_DISMISS, function (event) {\\n          if ($(event.target).is(_this9._element)) {\\n            _this9._ignoreBackdropClick = true;\\n          }\\n        });\\n      });\\n\\n      this._showBackdrop(function () {\\n        return _this9._showElement(relatedTarget);\\n      });\\n    };\\n\\n    Modal.prototype.hide = function hide(event) {\\n      var _this10 = this;\\n\\n      if (event) {\\n        event.preventDefault();\\n      }\\n\\n      if (this._isTransitioning) {\\n        throw new Error('Modal is transitioning');\\n      }\\n\\n      var transition = Util.supportsTransitionEnd() && $(this._element).hasClass(ClassName.FADE);\\n      if (transition) {\\n        this._isTransitioning = true;\\n      }\\n\\n      var hideEvent = $.Event(Event.HIDE);\\n      $(this._element).trigger(hideEvent);\\n\\n      if (!this._isShown || hideEvent.isDefaultPrevented()) {\\n        return;\\n      }\\n\\n      this._isShown = false;\\n\\n      this._setEscapeEvent();\\n      this._setResizeEvent();\\n\\n      $(document).off(Event.FOCUSIN);\\n\\n      $(this._element).removeClass(ClassName.SHOW);\\n\\n      $(this._element).off(Event.CLICK_DISMISS);\\n      $(this._dialog).off(Event.MOUSEDOWN_DISMISS);\\n\\n      if (transition) {\\n        $(this._element).one(Util.TRANSITION_END, function (event) {\\n          return _this10._hideModal(event);\\n        }).emulateTransitionEnd(TRANSITION_DURATION);\\n      } else {\\n        this._hideModal();\\n      }\\n    };\\n\\n    Modal.prototype.dispose = function dispose() {\\n      $.removeData(this._element, DATA_KEY);\\n\\n      $(window, document, this._element, this._backdrop).off(EVENT_KEY);\\n\\n      this._config = null;\\n      this._element = null;\\n      this._dialog = null;\\n      this._backdrop = null;\\n      this._isShown = null;\\n      this._isBodyOverflowing = null;\\n      this._ignoreBackdropClick = null;\\n      this._originalBodyPadding = null;\\n      this._scrollbarWidth = null;\\n    };\\n\\n    // private\\n\\n    Modal.prototype._getConfig = function _getConfig(config) {\\n      config = $.extend({}, Default, config);\\n      Util.typeCheckConfig(NAME, config, DefaultType);\\n      return config;\\n    };\\n\\n    Modal.prototype._showElement = function _showElement(relatedTarget) {\\n      var _this11 = this;\\n\\n      var transition = Util.supportsTransitionEnd() && $(this._element).hasClass(ClassName.FADE);\\n\\n      if (!this._element.parentNode || this._element.parentNode.nodeType !== Node.ELEMENT_NODE) {\\n        // don't move modals dom position\\n        document.body.appendChild(this._element);\\n      }\\n\\n      this._element.style.display = 'block';\\n      this._element.removeAttribute('aria-hidden');\\n      this._element.scrollTop = 0;\\n\\n      if (transition) {\\n        Util.reflow(this._element);\\n      }\\n\\n      $(this._element).addClass(ClassName.SHOW);\\n\\n      if (this._config.focus) {\\n        this._enforceFocus();\\n      }\\n\\n      var shownEvent = $.Event(Event.SHOWN, {\\n        relatedTarget: relatedTarget\\n      });\\n\\n      var transitionComplete = function transitionComplete() {\\n        if (_this11._config.focus) {\\n          _this11._element.focus();\\n        }\\n        _this11._isTransitioning = false;\\n        $(_this11._element).trigger(shownEvent);\\n      };\\n\\n      if (transition) {\\n        $(this._dialog).one(Util.TRANSITION_END, transitionComplete).emulateTransitionEnd(TRANSITION_DURATION);\\n      } else {\\n        transitionComplete();\\n      }\\n    };\\n\\n    Modal.prototype._enforceFocus = function _enforceFocus() {\\n      var _this12 = this;\\n\\n      $(document).off(Event.FOCUSIN) // guard against infinite focus loop\\n      .on(Event.FOCUSIN, function (event) {\\n        if (document !== event.target && _this12._element !== event.target && !$(_this12._element).has(event.target).length) {\\n          _this12._element.focus();\\n        }\\n      });\\n    };\\n\\n    Modal.prototype._setEscapeEvent = function _setEscapeEvent() {\\n      var _this13 = this;\\n\\n      if (this._isShown && this._config.keyboard) {\\n        $(this._element).on(Event.KEYDOWN_DISMISS, function (event) {\\n          if (event.which === ESCAPE_KEYCODE) {\\n            _this13.hide();\\n          }\\n        });\\n      } else if (!this._isShown) {\\n        $(this._element).off(Event.KEYDOWN_DISMISS);\\n      }\\n    };\\n\\n    Modal.prototype._setResizeEvent = function _setResizeEvent() {\\n      var _this14 = this;\\n\\n      if (this._isShown) {\\n        $(window).on(Event.RESIZE, function (event) {\\n          return _this14._handleUpdate(event);\\n        });\\n      } else {\\n        $(window).off(Event.RESIZE);\\n      }\\n    };\\n\\n    Modal.prototype._hideModal = function _hideModal() {\\n      var _this15 = this;\\n\\n      this._element.style.display = 'none';\\n      this._element.setAttribute('aria-hidden', 'true');\\n      this._isTransitioning = false;\\n      this._showBackdrop(function () {\\n        $(document.body).removeClass(ClassName.OPEN);\\n        _this15._resetAdjustments();\\n        _this15._resetScrollbar();\\n        $(_this15._element).trigger(Event.HIDDEN);\\n      });\\n    };\\n\\n    Modal.prototype._removeBackdrop = function _removeBackdrop() {\\n      if (this._backdrop) {\\n        $(this._backdrop).remove();\\n        this._backdrop = null;\\n      }\\n    };\\n\\n    Modal.prototype._showBackdrop = function _showBackdrop(callback) {\\n      var _this16 = this;\\n\\n      var animate = $(this._element).hasClass(ClassName.FADE) ? ClassName.FADE : '';\\n\\n      if (this._isShown && this._config.backdrop) {\\n        var doAnimate = Util.supportsTransitionEnd() && animate;\\n\\n        this._backdrop = document.createElement('div');\\n        this._backdrop.className = ClassName.BACKDROP;\\n\\n        if (animate) {\\n          $(this._backdrop).addClass(animate);\\n        }\\n\\n        $(this._backdrop).appendTo(document.body);\\n\\n        $(this._element).on(Event.CLICK_DISMISS, function (event) {\\n          if (_this16._ignoreBackdropClick) {\\n            _this16._ignoreBackdropClick = false;\\n            return;\\n          }\\n          if (event.target !== event.currentTarget) {\\n            return;\\n          }\\n          if (_this16._config.backdrop === 'static') {\\n            _this16._element.focus();\\n          } else {\\n            _this16.hide();\\n          }\\n        });\\n\\n        if (doAnimate) {\\n          Util.reflow(this._backdrop);\\n        }\\n\\n        $(this._backdrop).addClass(ClassName.SHOW);\\n\\n        if (!callback) {\\n          return;\\n        }\\n\\n        if (!doAnimate) {\\n          callback();\\n          return;\\n        }\\n\\n        $(this._backdrop).one(Util.TRANSITION_END, callback).emulateTransitionEnd(BACKDROP_TRANSITION_DURATION);\\n      } else if (!this._isShown && this._backdrop) {\\n        $(this._backdrop).removeClass(ClassName.SHOW);\\n\\n        var callbackRemove = function callbackRemove() {\\n          _this16._removeBackdrop();\\n          if (callback) {\\n            callback();\\n          }\\n        };\\n\\n        if (Util.supportsTransitionEnd() && $(this._element).hasClass(ClassName.FADE)) {\\n          $(this._backdrop).one(Util.TRANSITION_END, callbackRemove).emulateTransitionEnd(BACKDROP_TRANSITION_DURATION);\\n        } else {\\n          callbackRemove();\\n        }\\n      } else if (callback) {\\n        callback();\\n      }\\n    };\\n\\n    // ----------------------------------------------------------------------\\n    // the following methods are used to handle overflowing modals\\n    // todo (fat): these should probably be refactored out of modal.js\\n    // ----------------------------------------------------------------------\\n\\n    Modal.prototype._handleUpdate = function _handleUpdate() {\\n      this._adjustDialog();\\n    };\\n\\n    Modal.prototype._adjustDialog = function _adjustDialog() {\\n      var isModalOverflowing = this._element.scrollHeight > document.documentElement.clientHeight;\\n\\n      if (!this._isBodyOverflowing && isModalOverflowing) {\\n        this._element.style.paddingLeft = this._scrollbarWidth + 'px';\\n      }\\n\\n      if (this._isBodyOverflowing && !isModalOverflowing) {\\n        this._element.style.paddingRight = this._scrollbarWidth + 'px';\\n      }\\n    };\\n\\n    Modal.prototype._resetAdjustments = function _resetAdjustments() {\\n      this._element.style.paddingLeft = '';\\n      this._element.style.paddingRight = '';\\n    };\\n\\n    Modal.prototype._checkScrollbar = function _checkScrollbar() {\\n      this._isBodyOverflowing = document.body.clientWidth < window.innerWidth;\\n      this._scrollbarWidth = this._getScrollbarWidth();\\n    };\\n\\n    Modal.prototype._setScrollbar = function _setScrollbar() {\\n      var bodyPadding = parseInt($(Selector.FIXED_CONTENT).css('padding-right') || 0, 10);\\n\\n      this._originalBodyPadding = document.body.style.paddingRight || '';\\n\\n      if (this._isBodyOverflowing) {\\n        document.body.style.paddingRight = bodyPadding + this._scrollbarWidth + 'px';\\n      }\\n    };\\n\\n    Modal.prototype._resetScrollbar = function _resetScrollbar() {\\n      document.body.style.paddingRight = this._originalBodyPadding;\\n    };\\n\\n    Modal.prototype._getScrollbarWidth = function _getScrollbarWidth() {\\n      // thx d.walsh\\n      var scrollDiv = document.createElement('div');\\n      scrollDiv.className = ClassName.SCROLLBAR_MEASURER;\\n      document.body.appendChild(scrollDiv);\\n      var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\\n      document.body.removeChild(scrollDiv);\\n      return scrollbarWidth;\\n    };\\n\\n    // static\\n\\n    Modal._jQueryInterface = function _jQueryInterface(config, relatedTarget) {\\n      return this.each(function () {\\n        var data = $(this).data(DATA_KEY);\\n        var _config = $.extend({}, Modal.Default, $(this).data(), (typeof config === 'undefined' ? 'undefined' : _typeof(config)) === 'object' && config);\\n\\n        if (!data) {\\n          data = new Modal(this, _config);\\n          $(this).data(DATA_KEY, data);\\n        }\\n\\n        if (typeof config === 'string') {\\n          if (data[config] === undefined) {\\n            throw new Error('No method named \\\"' + config + '\\\"');\\n          }\\n          data[config](relatedTarget);\\n        } else if (_config.show) {\\n          data.show(relatedTarget);\\n        }\\n      });\\n    };\\n\\n    _createClass(Modal, null, [{\\n      key: 'VERSION',\\n      get: function get() {\\n        return VERSION;\\n      }\\n    }, {\\n      key: 'Default',\\n      get: function get() {\\n        return Default;\\n      }\\n    }]);\\n\\n    return Modal;\\n  }();\\n\\n  /**\\n   * ------------------------------------------------------------------------\\n   * Data Api implementation\\n   * ------------------------------------------------------------------------\\n   */\\n\\n  $(document).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, function (event) {\\n    var _this17 = this;\\n\\n    var target = void 0;\\n    var selector = Util.getSelectorFromElement(this);\\n\\n    if (selector) {\\n      target = $(selector)[0];\\n    }\\n\\n    var config = $(target).data(DATA_KEY) ? 'toggle' : $.extend({}, $(target).data(), $(this).data());\\n\\n    if (this.tagName === 'A' || this.tagName === 'AREA') {\\n      event.preventDefault();\\n    }\\n\\n    var $target = $(target).one(Event.SHOW, function (showEvent) {\\n      if (showEvent.isDefaultPrevented()) {\\n        // only register focus restorer if modal will actually get shown\\n        return;\\n      }\\n\\n      $target.one(Event.HIDDEN, function () {\\n        if ($(_this17).is(':visible')) {\\n          _this17.focus();\\n        }\\n      });\\n    });\\n\\n    Modal._jQueryInterface.call($(target), config, this);\\n  });\\n\\n  /**\\n   * ------------------------------------------------------------------------\\n   * jQuery\\n   * ------------------------------------------------------------------------\\n   */\\n\\n  $.fn[NAME] = Modal._jQueryInterface;\\n  $.fn[NAME].Constructor = Modal;\\n  $.fn[NAME].noConflict = function () {\\n    $.fn[NAME] = JQUERY_NO_CONFLICT;\\n    return Modal._jQueryInterface;\\n  };\\n\\n  return Modal;\\n}(jQuery);\\n\\n/**\\n * --------------------------------------------------------------------------\\n * Bootstrap (v4.0.0-alpha.6): scrollspy.js\\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\\n * --------------------------------------------------------------------------\\n */\\n\\nvar ScrollSpy = function ($) {\\n\\n  /**\\n   * ------------------------------------------------------------------------\\n   * Constants\\n   * ------------------------------------------------------------------------\\n   */\\n\\n  var NAME = 'scrollspy';\\n  var VERSION = '4.0.0-alpha.6';\\n  var DATA_KEY = 'bs.scrollspy';\\n  var EVENT_KEY = '.' + DATA_KEY;\\n  var DATA_API_KEY = '.data-api';\\n  var JQUERY_NO_CONFLICT = $.fn[NAME];\\n\\n  var Default = {\\n    offset: 10,\\n    method: 'auto',\\n    target: ''\\n  };\\n\\n  var DefaultType = {\\n    offset: 'number',\\n    method: 'string',\\n    target: '(string|element)'\\n  };\\n\\n  var Event = {\\n    ACTIVATE: 'activate' + EVENT_KEY,\\n    SCROLL: 'scroll' + EVENT_KEY,\\n    LOAD_DATA_API: 'load' + EVENT_KEY + DATA_API_KEY\\n  };\\n\\n  var ClassName = {\\n    DROPDOWN_ITEM: 'dropdown-item',\\n    DROPDOWN_MENU: 'dropdown-menu',\\n    NAV_LINK: 'nav-link',\\n    NAV: 'nav',\\n    ACTIVE: 'active'\\n  };\\n\\n  var Selector = {\\n    DATA_SPY: '[data-spy=\\\"scroll\\\"]',\\n    ACTIVE: '.active',\\n    LIST_ITEM: '.list-item',\\n    LI: 'li',\\n    LI_DROPDOWN: 'li.dropdown',\\n    NAV_LINKS: '.nav-link',\\n    DROPDOWN: '.dropdown',\\n    DROPDOWN_ITEMS: '.dropdown-item',\\n    DROPDOWN_TOGGLE: '.dropdown-toggle'\\n  };\\n\\n  var OffsetMethod = {\\n    OFFSET: 'offset',\\n    POSITION: 'position'\\n  };\\n\\n  /**\\n   * ------------------------------------------------------------------------\\n   * Class Definition\\n   * ------------------------------------------------------------------------\\n   */\\n\\n  var ScrollSpy = function () {\\n    function ScrollSpy(element, config) {\\n      var _this18 = this;\\n\\n      _classCallCheck(this, ScrollSpy);\\n\\n      this._element = element;\\n      this._scrollElement = element.tagName === 'BODY' ? window : element;\\n      this._config = this._getConfig(config);\\n      this._selector = this._config.target + ' ' + Selector.NAV_LINKS + ',' + (this._config.target + ' ' + Selector.DROPDOWN_ITEMS);\\n      this._offsets = [];\\n      this._targets = [];\\n      this._activeTarget = null;\\n      this._scrollHeight = 0;\\n\\n      $(this._scrollElement).on(Event.SCROLL, function (event) {\\n        return _this18._process(event);\\n      });\\n\\n      this.refresh();\\n      this._process();\\n    }\\n\\n    // getters\\n\\n    // public\\n\\n    ScrollSpy.prototype.refresh = function refresh() {\\n      var _this19 = this;\\n\\n      var autoMethod = this._scrollElement !== this._scrollElement.window ? OffsetMethod.POSITION : OffsetMethod.OFFSET;\\n\\n      var offsetMethod = this._config.method === 'auto' ? autoMethod : this._config.method;\\n\\n      var offsetBase = offsetMethod === OffsetMethod.POSITION ? this._getScrollTop() : 0;\\n\\n      this._offsets = [];\\n      this._targets = [];\\n\\n      this._scrollHeight = this._getScrollHeight();\\n\\n      var targets = $.makeArray($(this._selector));\\n\\n      targets.map(function (element) {\\n        var target = void 0;\\n        var targetSelector = Util.getSelectorFromElement(element);\\n\\n        if (targetSelector) {\\n          target = $(targetSelector)[0];\\n        }\\n\\n        if (target && (target.offsetWidth || target.offsetHeight)) {\\n          // todo (fat): remove sketch reliance on jQuery position/offset\\n          return [$(target)[offsetMethod]().top + offsetBase, targetSelector];\\n        }\\n        return null;\\n      }).filter(function (item) {\\n        return item;\\n      }).sort(function (a, b) {\\n        return a[0] - b[0];\\n      }).forEach(function (item) {\\n        _this19._offsets.push(item[0]);\\n        _this19._targets.push(item[1]);\\n      });\\n    };\\n\\n    ScrollSpy.prototype.dispose = function dispose() {\\n      $.removeData(this._element, DATA_KEY);\\n      $(this._scrollElement).off(EVENT_KEY);\\n\\n      this._element = null;\\n      this._scrollElement = null;\\n      this._config = null;\\n      this._selector = null;\\n      this._offsets = null;\\n      this._targets = null;\\n      this._activeTarget = null;\\n      this._scrollHeight = null;\\n    };\\n\\n    // private\\n\\n    ScrollSpy.prototype._getConfig = function _getConfig(config) {\\n      config = $.extend({}, Default, config);\\n\\n      if (typeof config.target !== 'string') {\\n        var id = $(config.target).attr('id');\\n        if (!id) {\\n          id = Util.getUID(NAME);\\n          $(config.target).attr('id', id);\\n        }\\n        config.target = '#' + id;\\n      }\\n\\n      Util.typeCheckConfig(NAME, config, DefaultType);\\n\\n      return config;\\n    };\\n\\n    ScrollSpy.prototype._getScrollTop = function _getScrollTop() {\\n      return this._scrollElement === window ? this._scrollElement.pageYOffset : this._scrollElement.scrollTop;\\n    };\\n\\n    ScrollSpy.prototype._getScrollHeight = function _getScrollHeight() {\\n      return this._scrollElement.scrollHeight || Math.max(document.body.scrollHeight, document.documentElement.scrollHeight);\\n    };\\n\\n    ScrollSpy.prototype._getOffsetHeight = function _getOffsetHeight() {\\n      return this._scrollElement === window ? window.innerHeight : this._scrollElement.offsetHeight;\\n    };\\n\\n    ScrollSpy.prototype._process = function _process() {\\n      var scrollTop = this._getScrollTop() + this._config.offset;\\n      var scrollHeight = this._getScrollHeight();\\n      var maxScroll = this._config.offset + scrollHeight - this._getOffsetHeight();\\n\\n      if (this._scrollHeight !== scrollHeight) {\\n        this.refresh();\\n      }\\n\\n      if (scrollTop >= maxScroll) {\\n        var target = this._targets[this._targets.length - 1];\\n\\n        if (this._activeTarget !== target) {\\n          this._activate(target);\\n        }\\n        return;\\n      }\\n\\n      if (this._activeTarget && scrollTop < this._offsets[0] && this._offsets[0] > 0) {\\n        this._activeTarget = null;\\n        this._clear();\\n        return;\\n      }\\n\\n      for (var i = this._offsets.length; i--;) {\\n        var isActiveTarget = this._activeTarget !== this._targets[i] && scrollTop >= this._offsets[i] && (this._offsets[i + 1] === undefined || scrollTop < this._offsets[i + 1]);\\n\\n        if (isActiveTarget) {\\n          this._activate(this._targets[i]);\\n        }\\n      }\\n    };\\n\\n    ScrollSpy.prototype._activate = function _activate(target) {\\n      this._activeTarget = target;\\n\\n      this._clear();\\n\\n      var queries = this._selector.split(',');\\n      queries = queries.map(function (selector) {\\n        return selector + '[data-target=\\\"' + target + '\\\"],' + (selector + '[href=\\\"' + target + '\\\"]');\\n      });\\n\\n      var $link = $(queries.join(','));\\n\\n      if ($link.hasClass(ClassName.DROPDOWN_ITEM)) {\\n        $link.closest(Selector.DROPDOWN).find(Selector.DROPDOWN_TOGGLE).addClass(ClassName.ACTIVE);\\n        $link.addClass(ClassName.ACTIVE);\\n      } else {\\n        // todo (fat) this is kinda sus...\\n        // recursively add actives to tested nav-links\\n        $link.parents(Selector.LI).find('> ' + Selector.NAV_LINKS).addClass(ClassName.ACTIVE);\\n      }\\n\\n      $(this._scrollElement).trigger(Event.ACTIVATE, {\\n        relatedTarget: target\\n      });\\n    };\\n\\n    ScrollSpy.prototype._clear = function _clear() {\\n      $(this._selector).filter(Selector.ACTIVE).removeClass(ClassName.ACTIVE);\\n    };\\n\\n    // static\\n\\n    ScrollSpy._jQueryInterface = function _jQueryInterface(config) {\\n      return this.each(function () {\\n        var data = $(this).data(DATA_KEY);\\n        var _config = (typeof config === 'undefined' ? 'undefined' : _typeof(config)) === 'object' && config;\\n\\n        if (!data) {\\n          data = new ScrollSpy(this, _config);\\n          $(this).data(DATA_KEY, data);\\n        }\\n\\n        if (typeof config === 'string') {\\n          if (data[config] === undefined) {\\n            throw new Error('No method named \\\"' + config + '\\\"');\\n          }\\n          data[config]();\\n        }\\n      });\\n    };\\n\\n    _createClass(ScrollSpy, null, [{\\n      key: 'VERSION',\\n      get: function get() {\\n        return VERSION;\\n      }\\n    }, {\\n      key: 'Default',\\n      get: function get() {\\n        return Default;\\n      }\\n    }]);\\n\\n    return ScrollSpy;\\n  }();\\n\\n  /**\\n   * ------------------------------------------------------------------------\\n   * Data Api implementation\\n   * ------------------------------------------------------------------------\\n   */\\n\\n  $(window).on(Event.LOAD_DATA_API, function () {\\n    var scrollSpys = $.makeArray($(Selector.DATA_SPY));\\n\\n    for (var i = scrollSpys.length; i--;) {\\n      var $spy = $(scrollSpys[i]);\\n      ScrollSpy._jQueryInterface.call($spy, $spy.data());\\n    }\\n  });\\n\\n  /**\\n   * ------------------------------------------------------------------------\\n   * jQuery\\n   * ------------------------------------------------------------------------\\n   */\\n\\n  $.fn[NAME] = ScrollSpy._jQueryInterface;\\n  $.fn[NAME].Constructor = ScrollSpy;\\n  $.fn[NAME].noConflict = function () {\\n    $.fn[NAME] = JQUERY_NO_CONFLICT;\\n    return ScrollSpy._jQueryInterface;\\n  };\\n\\n  return ScrollSpy;\\n}(jQuery);\\n\\n/**\\n * --------------------------------------------------------------------------\\n * Bootstrap (v4.0.0-alpha.6): tab.js\\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\\n * --------------------------------------------------------------------------\\n */\\n\\nvar Tab = function ($) {\\n\\n  /**\\n   * ------------------------------------------------------------------------\\n   * Constants\\n   * ------------------------------------------------------------------------\\n   */\\n\\n  var NAME = 'tab';\\n  var VERSION = '4.0.0-alpha.6';\\n  var DATA_KEY = 'bs.tab';\\n  var EVENT_KEY = '.' + DATA_KEY;\\n  var DATA_API_KEY = '.data-api';\\n  var JQUERY_NO_CONFLICT = $.fn[NAME];\\n  var TRANSITION_DURATION = 150;\\n\\n  var Event = {\\n    HIDE: 'hide' + EVENT_KEY,\\n    HIDDEN: 'hidden' + EVENT_KEY,\\n    SHOW: 'show' + EVENT_KEY,\\n    SHOWN: 'shown' + EVENT_KEY,\\n    CLICK_DATA_API: 'click' + EVENT_KEY + DATA_API_KEY\\n  };\\n\\n  var ClassName = {\\n    DROPDOWN_MENU: 'dropdown-menu',\\n    ACTIVE: 'active',\\n    DISABLED: 'disabled',\\n    FADE: 'fade',\\n    SHOW: 'show'\\n  };\\n\\n  var Selector = {\\n    A: 'a',\\n    LI: 'li',\\n    DROPDOWN: '.dropdown',\\n    LIST: 'ul:not(.dropdown-menu), ol:not(.dropdown-menu), nav:not(.dropdown-menu)',\\n    FADE_CHILD: '> .nav-item .fade, > .fade',\\n    ACTIVE: '.active',\\n    ACTIVE_CHILD: '> .nav-item > .active, > .active',\\n    DATA_TOGGLE: '[data-toggle=\\\"tab\\\"], [data-toggle=\\\"pill\\\"]',\\n    DROPDOWN_TOGGLE: '.dropdown-toggle',\\n    DROPDOWN_ACTIVE_CHILD: '> .dropdown-menu .active'\\n  };\\n\\n  /**\\n   * ------------------------------------------------------------------------\\n   * Class Definition\\n   * ------------------------------------------------------------------------\\n   */\\n\\n  var Tab = function () {\\n    function Tab(element) {\\n      _classCallCheck(this, Tab);\\n\\n      this._element = element;\\n    }\\n\\n    // getters\\n\\n    // public\\n\\n    Tab.prototype.show = function show() {\\n      var _this20 = this;\\n\\n      if (this._element.parentNode && this._element.parentNode.nodeType === Node.ELEMENT_NODE && $(this._element).hasClass(ClassName.ACTIVE) || $(this._element).hasClass(ClassName.DISABLED)) {\\n        return;\\n      }\\n\\n      var target = void 0;\\n      var previous = void 0;\\n      var listElement = $(this._element).closest(Selector.LIST)[0];\\n      var selector = Util.getSelectorFromElement(this._element);\\n\\n      if (listElement) {\\n        previous = $.makeArray($(listElement).find(Selector.ACTIVE));\\n        previous = previous[previous.length - 1];\\n      }\\n\\n      var hideEvent = $.Event(Event.HIDE, {\\n        relatedTarget: this._element\\n      });\\n\\n      var showEvent = $.Event(Event.SHOW, {\\n        relatedTarget: previous\\n      });\\n\\n      if (previous) {\\n        $(previous).trigger(hideEvent);\\n      }\\n\\n      $(this._element).trigger(showEvent);\\n\\n      if (showEvent.isDefaultPrevented() || hideEvent.isDefaultPrevented()) {\\n        return;\\n      }\\n\\n      if (selector) {\\n        target = $(selector)[0];\\n      }\\n\\n      this._activate(this._element, listElement);\\n\\n      var complete = function complete() {\\n        var hiddenEvent = $.Event(Event.HIDDEN, {\\n          relatedTarget: _this20._element\\n        });\\n\\n        var shownEvent = $.Event(Event.SHOWN, {\\n          relatedTarget: previous\\n        });\\n\\n        $(previous).trigger(hiddenEvent);\\n        $(_this20._element).trigger(shownEvent);\\n      };\\n\\n      if (target) {\\n        this._activate(target, target.parentNode, complete);\\n      } else {\\n        complete();\\n      }\\n    };\\n\\n    Tab.prototype.dispose = function dispose() {\\n      $.removeClass(this._element, DATA_KEY);\\n      this._element = null;\\n    };\\n\\n    // private\\n\\n    Tab.prototype._activate = function _activate(element, container, callback) {\\n      var _this21 = this;\\n\\n      var active = $(container).find(Selector.ACTIVE_CHILD)[0];\\n      var isTransitioning = callback && Util.supportsTransitionEnd() && (active && $(active).hasClass(ClassName.FADE) || Boolean($(container).find(Selector.FADE_CHILD)[0]));\\n\\n      var complete = function complete() {\\n        return _this21._transitionComplete(element, active, isTransitioning, callback);\\n      };\\n\\n      if (active && isTransitioning) {\\n        $(active).one(Util.TRANSITION_END, complete).emulateTransitionEnd(TRANSITION_DURATION);\\n      } else {\\n        complete();\\n      }\\n\\n      if (active) {\\n        $(active).removeClass(ClassName.SHOW);\\n      }\\n    };\\n\\n    Tab.prototype._transitionComplete = function _transitionComplete(element, active, isTransitioning, callback) {\\n      if (active) {\\n        $(active).removeClass(ClassName.ACTIVE);\\n\\n        var dropdownChild = $(active.parentNode).find(Selector.DROPDOWN_ACTIVE_CHILD)[0];\\n\\n        if (dropdownChild) {\\n          $(dropdownChild).removeClass(ClassName.ACTIVE);\\n        }\\n\\n        active.setAttribute('aria-expanded', false);\\n      }\\n\\n      $(element).addClass(ClassName.ACTIVE);\\n      element.setAttribute('aria-expanded', true);\\n\\n      if (isTransitioning) {\\n        Util.reflow(element);\\n        $(element).addClass(ClassName.SHOW);\\n      } else {\\n        $(element).removeClass(ClassName.FADE);\\n      }\\n\\n      if (element.parentNode && $(element.parentNode).hasClass(ClassName.DROPDOWN_MENU)) {\\n\\n        var dropdownElement = $(element).closest(Selector.DROPDOWN)[0];\\n        if (dropdownElement) {\\n          $(dropdownElement).find(Selector.DROPDOWN_TOGGLE).addClass(ClassName.ACTIVE);\\n        }\\n\\n        element.setAttribute('aria-expanded', true);\\n      }\\n\\n      if (callback) {\\n        callback();\\n      }\\n    };\\n\\n    // static\\n\\n    Tab._jQueryInterface = function _jQueryInterface(config) {\\n      return this.each(function () {\\n        var $this = $(this);\\n        var data = $this.data(DATA_KEY);\\n\\n        if (!data) {\\n          data = new Tab(this);\\n          $this.data(DATA_KEY, data);\\n        }\\n\\n        if (typeof config === 'string') {\\n          if (data[config] === undefined) {\\n            throw new Error('No method named \\\"' + config + '\\\"');\\n          }\\n          data[config]();\\n        }\\n      });\\n    };\\n\\n    _createClass(Tab, null, [{\\n      key: 'VERSION',\\n      get: function get() {\\n        return VERSION;\\n      }\\n    }]);\\n\\n    return Tab;\\n  }();\\n\\n  /**\\n   * ------------------------------------------------------------------------\\n   * Data Api implementation\\n   * ------------------------------------------------------------------------\\n   */\\n\\n  $(document).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, function (event) {\\n    event.preventDefault();\\n    Tab._jQueryInterface.call($(this), 'show');\\n  });\\n\\n  /**\\n   * ------------------------------------------------------------------------\\n   * jQuery\\n   * ------------------------------------------------------------------------\\n   */\\n\\n  $.fn[NAME] = Tab._jQueryInterface;\\n  $.fn[NAME].Constructor = Tab;\\n  $.fn[NAME].noConflict = function () {\\n    $.fn[NAME] = JQUERY_NO_CONFLICT;\\n    return Tab._jQueryInterface;\\n  };\\n\\n  return Tab;\\n}(jQuery);\\n\\n/* global Tether */\\n\\n/**\\n * --------------------------------------------------------------------------\\n * Bootstrap (v4.0.0-alpha.6): tooltip.js\\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\\n * --------------------------------------------------------------------------\\n */\\n\\nvar Tooltip = function ($) {\\n\\n  /**\\n   * Check for Tether dependency\\n   * Tether - http://tether.io/\\n   */\\n  if (typeof Tether === 'undefined') {\\n    throw new Error('Bootstrap tooltips require Tether (http://tether.io/)');\\n  }\\n\\n  /**\\n   * ------------------------------------------------------------------------\\n   * Constants\\n   * ------------------------------------------------------------------------\\n   */\\n\\n  var NAME = 'tooltip';\\n  var VERSION = '4.0.0-alpha.6';\\n  var DATA_KEY = 'bs.tooltip';\\n  var EVENT_KEY = '.' + DATA_KEY;\\n  var JQUERY_NO_CONFLICT = $.fn[NAME];\\n  var TRANSITION_DURATION = 150;\\n  var CLASS_PREFIX = 'bs-tether';\\n\\n  var Default = {\\n    animation: true,\\n    template: '<div class=\\\"tooltip\\\" role=\\\"tooltip\\\">' + '<div class=\\\"tooltip-inner\\\"></div></div>',\\n    trigger: 'hover focus',\\n    title: '',\\n    delay: 0,\\n    html: false,\\n    selector: false,\\n    placement: 'top',\\n    offset: '0 0',\\n    constraints: [],\\n    container: false\\n  };\\n\\n  var DefaultType = {\\n    animation: 'boolean',\\n    template: 'string',\\n    title: '(string|element|function)',\\n    trigger: 'string',\\n    delay: '(number|object)',\\n    html: 'boolean',\\n    selector: '(string|boolean)',\\n    placement: '(string|function)',\\n    offset: 'string',\\n    constraints: 'array',\\n    container: '(string|element|boolean)'\\n  };\\n\\n  var AttachmentMap = {\\n    TOP: 'bottom center',\\n    RIGHT: 'middle left',\\n    BOTTOM: 'top center',\\n    LEFT: 'middle right'\\n  };\\n\\n  var HoverState = {\\n    SHOW: 'show',\\n    OUT: 'out'\\n  };\\n\\n  var Event = {\\n    HIDE: 'hide' + EVENT_KEY,\\n    HIDDEN: 'hidden' + EVENT_KEY,\\n    SHOW: 'show' + EVENT_KEY,\\n    SHOWN: 'shown' + EVENT_KEY,\\n    INSERTED: 'inserted' + EVENT_KEY,\\n    CLICK: 'click' + EVENT_KEY,\\n    FOCUSIN: 'focusin' + EVENT_KEY,\\n    FOCUSOUT: 'focusout' + EVENT_KEY,\\n    MOUSEENTER: 'mouseenter' + EVENT_KEY,\\n    MOUSELEAVE: 'mouseleave' + EVENT_KEY\\n  };\\n\\n  var ClassName = {\\n    FADE: 'fade',\\n    SHOW: 'show'\\n  };\\n\\n  var Selector = {\\n    TOOLTIP: '.tooltip',\\n    TOOLTIP_INNER: '.tooltip-inner'\\n  };\\n\\n  var TetherClass = {\\n    element: false,\\n    enabled: false\\n  };\\n\\n  var Trigger = {\\n    HOVER: 'hover',\\n    FOCUS: 'focus',\\n    CLICK: 'click',\\n    MANUAL: 'manual'\\n  };\\n\\n  /**\\n   * ------------------------------------------------------------------------\\n   * Class Definition\\n   * ------------------------------------------------------------------------\\n   */\\n\\n  var Tooltip = function () {\\n    function Tooltip(element, config) {\\n      _classCallCheck(this, Tooltip);\\n\\n      // private\\n      this._isEnabled = true;\\n      this._timeout = 0;\\n      this._hoverState = '';\\n      this._activeTrigger = {};\\n      this._isTransitioning = false;\\n      this._tether = null;\\n\\n      // protected\\n      this.element = element;\\n      this.config = this._getConfig(config);\\n      this.tip = null;\\n\\n      this._setListeners();\\n    }\\n\\n    // getters\\n\\n    // public\\n\\n    Tooltip.prototype.enable = function enable() {\\n      this._isEnabled = true;\\n    };\\n\\n    Tooltip.prototype.disable = function disable() {\\n      this._isEnabled = false;\\n    };\\n\\n    Tooltip.prototype.toggleEnabled = function toggleEnabled() {\\n      this._isEnabled = !this._isEnabled;\\n    };\\n\\n    Tooltip.prototype.toggle = function toggle(event) {\\n      if (event) {\\n        var dataKey = this.constructor.DATA_KEY;\\n        var context = $(event.currentTarget).data(dataKey);\\n\\n        if (!context) {\\n          context = new this.constructor(event.currentTarget, this._getDelegateConfig());\\n          $(event.currentTarget).data(dataKey, context);\\n        }\\n\\n        context._activeTrigger.click = !context._activeTrigger.click;\\n\\n        if (context._isWithActiveTrigger()) {\\n          context._enter(null, context);\\n        } else {\\n          context._leave(null, context);\\n        }\\n      } else {\\n\\n        if ($(this.getTipElement()).hasClass(ClassName.SHOW)) {\\n          this._leave(null, this);\\n          return;\\n        }\\n\\n        this._enter(null, this);\\n      }\\n    };\\n\\n    Tooltip.prototype.dispose = function dispose() {\\n      clearTimeout(this._timeout);\\n\\n      this.cleanupTether();\\n\\n      $.removeData(this.element, this.constructor.DATA_KEY);\\n\\n      $(this.element).off(this.constructor.EVENT_KEY);\\n      $(this.element).closest('.modal').off('hide.bs.modal');\\n\\n      if (this.tip) {\\n        $(this.tip).remove();\\n      }\\n\\n      this._isEnabled = null;\\n      this._timeout = null;\\n      this._hoverState = null;\\n      this._activeTrigger = null;\\n      this._tether = null;\\n\\n      this.element = null;\\n      this.config = null;\\n      this.tip = null;\\n    };\\n\\n    Tooltip.prototype.show = function show() {\\n      var _this22 = this;\\n\\n      if ($(this.element).css('display') === 'none') {\\n        throw new Error('Please use show on visible elements');\\n      }\\n\\n      var showEvent = $.Event(this.constructor.Event.SHOW);\\n      if (this.isWithContent() && this._isEnabled) {\\n        if (this._isTransitioning) {\\n          throw new Error('Tooltip is transitioning');\\n        }\\n        $(this.element).trigger(showEvent);\\n\\n        var isInTheDom = $.contains(this.element.ownerDocument.documentElement, this.element);\\n\\n        if (showEvent.isDefaultPrevented() || !isInTheDom) {\\n          return;\\n        }\\n\\n        var tip = this.getTipElement();\\n        var tipId = Util.getUID(this.constructor.NAME);\\n\\n        tip.setAttribute('id', tipId);\\n        this.element.setAttribute('aria-describedby', tipId);\\n\\n        this.setContent();\\n\\n        if (this.config.animation) {\\n          $(tip).addClass(ClassName.FADE);\\n        }\\n\\n        var placement = typeof this.config.placement === 'function' ? this.config.placement.call(this, tip, this.element) : this.config.placement;\\n\\n        var attachment = this._getAttachment(placement);\\n\\n        var container = this.config.container === false ? document.body : $(this.config.container);\\n\\n        $(tip).data(this.constructor.DATA_KEY, this).appendTo(container);\\n\\n        $(this.element).trigger(this.constructor.Event.INSERTED);\\n\\n        this._tether = new Tether({\\n          attachment: attachment,\\n          element: tip,\\n          target: this.element,\\n          classes: TetherClass,\\n          classPrefix: CLASS_PREFIX,\\n          offset: this.config.offset,\\n          constraints: this.config.constraints,\\n          addTargetClasses: false\\n        });\\n\\n        Util.reflow(tip);\\n        this._tether.position();\\n\\n        $(tip).addClass(ClassName.SHOW);\\n\\n        var complete = function complete() {\\n          var prevHoverState = _this22._hoverState;\\n          _this22._hoverState = null;\\n          _this22._isTransitioning = false;\\n\\n          $(_this22.element).trigger(_this22.constructor.Event.SHOWN);\\n\\n          if (prevHoverState === HoverState.OUT) {\\n            _this22._leave(null, _this22);\\n          }\\n        };\\n\\n        if (Util.supportsTransitionEnd() && $(this.tip).hasClass(ClassName.FADE)) {\\n          this._isTransitioning = true;\\n          $(this.tip).one(Util.TRANSITION_END, complete).emulateTransitionEnd(Tooltip._TRANSITION_DURATION);\\n          return;\\n        }\\n\\n        complete();\\n      }\\n    };\\n\\n    Tooltip.prototype.hide = function hide(callback) {\\n      var _this23 = this;\\n\\n      var tip = this.getTipElement();\\n      var hideEvent = $.Event(this.constructor.Event.HIDE);\\n      if (this._isTransitioning) {\\n        throw new Error('Tooltip is transitioning');\\n      }\\n      var complete = function complete() {\\n        if (_this23._hoverState !== HoverState.SHOW && tip.parentNode) {\\n          tip.parentNode.removeChild(tip);\\n        }\\n\\n        _this23.element.removeAttribute('aria-describedby');\\n        $(_this23.element).trigger(_this23.constructor.Event.HIDDEN);\\n        _this23._isTransitioning = false;\\n        _this23.cleanupTether();\\n\\n        if (callback) {\\n          callback();\\n        }\\n      };\\n\\n      $(this.element).trigger(hideEvent);\\n\\n      if (hideEvent.isDefaultPrevented()) {\\n        return;\\n      }\\n\\n      $(tip).removeClass(ClassName.SHOW);\\n\\n      this._activeTrigger[Trigger.CLICK] = false;\\n      this._activeTrigger[Trigger.FOCUS] = false;\\n      this._activeTrigger[Trigger.HOVER] = false;\\n\\n      if (Util.supportsTransitionEnd() && $(this.tip).hasClass(ClassName.FADE)) {\\n        this._isTransitioning = true;\\n        $(tip).one(Util.TRANSITION_END, complete).emulateTransitionEnd(TRANSITION_DURATION);\\n      } else {\\n        complete();\\n      }\\n\\n      this._hoverState = '';\\n    };\\n\\n    // protected\\n\\n    Tooltip.prototype.isWithContent = function isWithContent() {\\n      return Boolean(this.getTitle());\\n    };\\n\\n    Tooltip.prototype.getTipElement = function getTipElement() {\\n      return this.tip = this.tip || $(this.config.template)[0];\\n    };\\n\\n    Tooltip.prototype.setContent = function setContent() {\\n      var $tip = $(this.getTipElement());\\n\\n      this.setElementContent($tip.find(Selector.TOOLTIP_INNER), this.getTitle());\\n\\n      $tip.removeClass(ClassName.FADE + ' ' + ClassName.SHOW);\\n\\n      this.cleanupTether();\\n    };\\n\\n    Tooltip.prototype.setElementContent = function setElementContent($element, content) {\\n      var html = this.config.html;\\n      if ((typeof content === 'undefined' ? 'undefined' : _typeof(content)) === 'object' && (content.nodeType || content.jquery)) {\\n        // content is a DOM node or a jQuery\\n        if (html) {\\n          if (!$(content).parent().is($element)) {\\n            $element.empty().append(content);\\n          }\\n        } else {\\n          $element.text($(content).text());\\n        }\\n      } else {\\n        $element[html ? 'html' : 'text'](content);\\n      }\\n    };\\n\\n    Tooltip.prototype.getTitle = function getTitle() {\\n      var title = this.element.getAttribute('data-original-title');\\n\\n      if (!title) {\\n        title = typeof this.config.title === 'function' ? this.config.title.call(this.element) : this.config.title;\\n      }\\n\\n      return title;\\n    };\\n\\n    Tooltip.prototype.cleanupTether = function cleanupTether() {\\n      if (this._tether) {\\n        this._tether.destroy();\\n      }\\n    };\\n\\n    // private\\n\\n    Tooltip.prototype._getAttachment = function _getAttachment(placement) {\\n      return AttachmentMap[placement.toUpperCase()];\\n    };\\n\\n    Tooltip.prototype._setListeners = function _setListeners() {\\n      var _this24 = this;\\n\\n      var triggers = this.config.trigger.split(' ');\\n\\n      triggers.forEach(function (trigger) {\\n        if (trigger === 'click') {\\n          $(_this24.element).on(_this24.constructor.Event.CLICK, _this24.config.selector, function (event) {\\n            return _this24.toggle(event);\\n          });\\n        } else if (trigger !== Trigger.MANUAL) {\\n          var eventIn = trigger === Trigger.HOVER ? _this24.constructor.Event.MOUSEENTER : _this24.constructor.Event.FOCUSIN;\\n          var eventOut = trigger === Trigger.HOVER ? _this24.constructor.Event.MOUSELEAVE : _this24.constructor.Event.FOCUSOUT;\\n\\n          $(_this24.element).on(eventIn, _this24.config.selector, function (event) {\\n            return _this24._enter(event);\\n          }).on(eventOut, _this24.config.selector, function (event) {\\n            return _this24._leave(event);\\n          });\\n        }\\n\\n        $(_this24.element).closest('.modal').on('hide.bs.modal', function () {\\n          return _this24.hide();\\n        });\\n      });\\n\\n      if (this.config.selector) {\\n        this.config = $.extend({}, this.config, {\\n          trigger: 'manual',\\n          selector: ''\\n        });\\n      } else {\\n        this._fixTitle();\\n      }\\n    };\\n\\n    Tooltip.prototype._fixTitle = function _fixTitle() {\\n      var titleType = _typeof(this.element.getAttribute('data-original-title'));\\n      if (this.element.getAttribute('title') || titleType !== 'string') {\\n        this.element.setAttribute('data-original-title', this.element.getAttribute('title') || '');\\n        this.element.setAttribute('title', '');\\n      }\\n    };\\n\\n    Tooltip.prototype._enter = function _enter(event, context) {\\n      var dataKey = this.constructor.DATA_KEY;\\n\\n      context = context || $(event.currentTarget).data(dataKey);\\n\\n      if (!context) {\\n        context = new this.constructor(event.currentTarget, this._getDelegateConfig());\\n        $(event.currentTarget).data(dataKey, context);\\n      }\\n\\n      if (event) {\\n        context._activeTrigger[event.type === 'focusin' ? Trigger.FOCUS : Trigger.HOVER] = true;\\n      }\\n\\n      if ($(context.getTipElement()).hasClass(ClassName.SHOW) || context._hoverState === HoverState.SHOW) {\\n        context._hoverState = HoverState.SHOW;\\n        return;\\n      }\\n\\n      clearTimeout(context._timeout);\\n\\n      context._hoverState = HoverState.SHOW;\\n\\n      if (!context.config.delay || !context.config.delay.show) {\\n        context.show();\\n        return;\\n      }\\n\\n      context._timeout = setTimeout(function () {\\n        if (context._hoverState === HoverState.SHOW) {\\n          context.show();\\n        }\\n      }, context.config.delay.show);\\n    };\\n\\n    Tooltip.prototype._leave = function _leave(event, context) {\\n      var dataKey = this.constructor.DATA_KEY;\\n\\n      context = context || $(event.currentTarget).data(dataKey);\\n\\n      if (!context) {\\n        context = new this.constructor(event.currentTarget, this._getDelegateConfig());\\n        $(event.currentTarget).data(dataKey, context);\\n      }\\n\\n      if (event) {\\n        context._activeTrigger[event.type === 'focusout' ? Trigger.FOCUS : Trigger.HOVER] = false;\\n      }\\n\\n      if (context._isWithActiveTrigger()) {\\n        return;\\n      }\\n\\n      clearTimeout(context._timeout);\\n\\n      context._hoverState = HoverState.OUT;\\n\\n      if (!context.config.delay || !context.config.delay.hide) {\\n        context.hide();\\n        return;\\n      }\\n\\n      context._timeout = setTimeout(function () {\\n        if (context._hoverState === HoverState.OUT) {\\n          context.hide();\\n        }\\n      }, context.config.delay.hide);\\n    };\\n\\n    Tooltip.prototype._isWithActiveTrigger = function _isWithActiveTrigger() {\\n      for (var trigger in this._activeTrigger) {\\n        if (this._activeTrigger[trigger]) {\\n          return true;\\n        }\\n      }\\n\\n      return false;\\n    };\\n\\n    Tooltip.prototype._getConfig = function _getConfig(config) {\\n      config = $.extend({}, this.constructor.Default, $(this.element).data(), config);\\n\\n      if (config.delay && typeof config.delay === 'number') {\\n        config.delay = {\\n          show: config.delay,\\n          hide: config.delay\\n        };\\n      }\\n\\n      Util.typeCheckConfig(NAME, config, this.constructor.DefaultType);\\n\\n      return config;\\n    };\\n\\n    Tooltip.prototype._getDelegateConfig = function _getDelegateConfig() {\\n      var config = {};\\n\\n      if (this.config) {\\n        for (var key in this.config) {\\n          if (this.constructor.Default[key] !== this.config[key]) {\\n            config[key] = this.config[key];\\n          }\\n        }\\n      }\\n\\n      return config;\\n    };\\n\\n    // static\\n\\n    Tooltip._jQueryInterface = function _jQueryInterface(config) {\\n      return this.each(function () {\\n        var data = $(this).data(DATA_KEY);\\n        var _config = (typeof config === 'undefined' ? 'undefined' : _typeof(config)) === 'object' && config;\\n\\n        if (!data && /dispose|hide/.test(config)) {\\n          return;\\n        }\\n\\n        if (!data) {\\n          data = new Tooltip(this, _config);\\n          $(this).data(DATA_KEY, data);\\n        }\\n\\n        if (typeof config === 'string') {\\n          if (data[config] === undefined) {\\n            throw new Error('No method named \\\"' + config + '\\\"');\\n          }\\n          data[config]();\\n        }\\n      });\\n    };\\n\\n    _createClass(Tooltip, null, [{\\n      key: 'VERSION',\\n      get: function get() {\\n        return VERSION;\\n      }\\n    }, {\\n      key: 'Default',\\n      get: function get() {\\n        return Default;\\n      }\\n    }, {\\n      key: 'NAME',\\n      get: function get() {\\n        return NAME;\\n      }\\n    }, {\\n      key: 'DATA_KEY',\\n      get: function get() {\\n        return DATA_KEY;\\n      }\\n    }, {\\n      key: 'Event',\\n      get: function get() {\\n        return Event;\\n      }\\n    }, {\\n      key: 'EVENT_KEY',\\n      get: function get() {\\n        return EVENT_KEY;\\n      }\\n    }, {\\n      key: 'DefaultType',\\n      get: function get() {\\n        return DefaultType;\\n      }\\n    }]);\\n\\n    return Tooltip;\\n  }();\\n\\n  /**\\n   * ------------------------------------------------------------------------\\n   * jQuery\\n   * ------------------------------------------------------------------------\\n   */\\n\\n  $.fn[NAME] = Tooltip._jQueryInterface;\\n  $.fn[NAME].Constructor = Tooltip;\\n  $.fn[NAME].noConflict = function () {\\n    $.fn[NAME] = JQUERY_NO_CONFLICT;\\n    return Tooltip._jQueryInterface;\\n  };\\n\\n  return Tooltip;\\n}(jQuery);\\n\\n/**\\n * --------------------------------------------------------------------------\\n * Bootstrap (v4.0.0-alpha.6): popover.js\\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\\n * --------------------------------------------------------------------------\\n */\\n\\nvar Popover = function ($) {\\n\\n  /**\\n   * ------------------------------------------------------------------------\\n   * Constants\\n   * ------------------------------------------------------------------------\\n   */\\n\\n  var NAME = 'popover';\\n  var VERSION = '4.0.0-alpha.6';\\n  var DATA_KEY = 'bs.popover';\\n  var EVENT_KEY = '.' + DATA_KEY;\\n  var JQUERY_NO_CONFLICT = $.fn[NAME];\\n\\n  var Default = $.extend({}, Tooltip.Default, {\\n    placement: 'right',\\n    trigger: 'click',\\n    content: '',\\n    template: '<div class=\\\"popover\\\" role=\\\"tooltip\\\">' + '<h3 class=\\\"popover-title\\\"></h3>' + '<div class=\\\"popover-content\\\"></div></div>'\\n  });\\n\\n  var DefaultType = $.extend({}, Tooltip.DefaultType, {\\n    content: '(string|element|function)'\\n  });\\n\\n  var ClassName = {\\n    FADE: 'fade',\\n    SHOW: 'show'\\n  };\\n\\n  var Selector = {\\n    TITLE: '.popover-title',\\n    CONTENT: '.popover-content'\\n  };\\n\\n  var Event = {\\n    HIDE: 'hide' + EVENT_KEY,\\n    HIDDEN: 'hidden' + EVENT_KEY,\\n    SHOW: 'show' + EVENT_KEY,\\n    SHOWN: 'shown' + EVENT_KEY,\\n    INSERTED: 'inserted' + EVENT_KEY,\\n    CLICK: 'click' + EVENT_KEY,\\n    FOCUSIN: 'focusin' + EVENT_KEY,\\n    FOCUSOUT: 'focusout' + EVENT_KEY,\\n    MOUSEENTER: 'mouseenter' + EVENT_KEY,\\n    MOUSELEAVE: 'mouseleave' + EVENT_KEY\\n  };\\n\\n  /**\\n   * ------------------------------------------------------------------------\\n   * Class Definition\\n   * ------------------------------------------------------------------------\\n   */\\n\\n  var Popover = function (_Tooltip) {\\n    _inherits(Popover, _Tooltip);\\n\\n    function Popover() {\\n      _classCallCheck(this, Popover);\\n\\n      return _possibleConstructorReturn(this, _Tooltip.apply(this, arguments));\\n    }\\n\\n    // overrides\\n\\n    Popover.prototype.isWithContent = function isWithContent() {\\n      return this.getTitle() || this._getContent();\\n    };\\n\\n    Popover.prototype.getTipElement = function getTipElement() {\\n      return this.tip = this.tip || $(this.config.template)[0];\\n    };\\n\\n    Popover.prototype.setContent = function setContent() {\\n      var $tip = $(this.getTipElement());\\n\\n      // we use append for html objects to maintain js events\\n      this.setElementContent($tip.find(Selector.TITLE), this.getTitle());\\n      this.setElementContent($tip.find(Selector.CONTENT), this._getContent());\\n\\n      $tip.removeClass(ClassName.FADE + ' ' + ClassName.SHOW);\\n\\n      this.cleanupTether();\\n    };\\n\\n    // private\\n\\n    Popover.prototype._getContent = function _getContent() {\\n      return this.element.getAttribute('data-content') || (typeof this.config.content === 'function' ? this.config.content.call(this.element) : this.config.content);\\n    };\\n\\n    // static\\n\\n    Popover._jQueryInterface = function _jQueryInterface(config) {\\n      return this.each(function () {\\n        var data = $(this).data(DATA_KEY);\\n        var _config = (typeof config === 'undefined' ? 'undefined' : _typeof(config)) === 'object' ? config : null;\\n\\n        if (!data && /destroy|hide/.test(config)) {\\n          return;\\n        }\\n\\n        if (!data) {\\n          data = new Popover(this, _config);\\n          $(this).data(DATA_KEY, data);\\n        }\\n\\n        if (typeof config === 'string') {\\n          if (data[config] === undefined) {\\n            throw new Error('No method named \\\"' + config + '\\\"');\\n          }\\n          data[config]();\\n        }\\n      });\\n    };\\n\\n    _createClass(Popover, null, [{\\n      key: 'VERSION',\\n\\n\\n      // getters\\n\\n      get: function get() {\\n        return VERSION;\\n      }\\n    }, {\\n      key: 'Default',\\n      get: function get() {\\n        return Default;\\n      }\\n    }, {\\n      key: 'NAME',\\n      get: function get() {\\n        return NAME;\\n      }\\n    }, {\\n      key: 'DATA_KEY',\\n      get: function get() {\\n        return DATA_KEY;\\n      }\\n    }, {\\n      key: 'Event',\\n      get: function get() {\\n        return Event;\\n      }\\n    }, {\\n      key: 'EVENT_KEY',\\n      get: function get() {\\n        return EVENT_KEY;\\n      }\\n    }, {\\n      key: 'DefaultType',\\n      get: function get() {\\n        return DefaultType;\\n      }\\n    }]);\\n\\n    return Popover;\\n  }(Tooltip);\\n\\n  /**\\n   * ------------------------------------------------------------------------\\n   * jQuery\\n   * ------------------------------------------------------------------------\\n   */\\n\\n  $.fn[NAME] = Popover._jQueryInterface;\\n  $.fn[NAME].Constructor = Popover;\\n  $.fn[NAME].noConflict = function () {\\n    $.fn[NAME] = JQUERY_NO_CONFLICT;\\n    return Popover._jQueryInterface;\\n  };\\n\\n  return Popover;\\n}(jQuery);\\n\\n}();\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./~/bootstrap/dist/js/bootstrap.js\n// module id = 417\n// module chunks = 2","module.exports = \"/*\\nchroma.js - JavaScript library for color conversions\\n\\nCopyright (c) 2011-2017, Gregor Aisch\\nAll rights reserved.\\n\\nRedistribution and use in source and binary forms, with or without\\nmodification, are permitted provided that the following conditions are met:\\n\\n1. Redistributions of source code must retain the above copyright notice, this\\n   list of conditions and the following disclaimer.\\n\\n2. Redistributions in binary form must reproduce the above copyright notice,\\n   this list of conditions and the following disclaimer in the documentation\\n   and/or other materials provided with the distribution.\\n\\n3. The name Gregor Aisch may not be used to endorse or promote products\\n   derived from this software without specific prior written permission.\\n\\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \\\"AS IS\\\"\\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\\nDISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\\nINDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\\nBUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\\nOF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\\nNEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\\nEVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n\\n*/\\n(function(){var a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,$,_,aa,ba,ca,da,ea,fa,ga,ha,ia,ja,ka,la,ma,na,oa,pa,qa,ra,sa,ta,ua,va,wa,xa,ya,za,Aa=[].slice;va=function(){var a,b,c,d,e;for(a={},e=\\\"Boolean Number String Function Array Date RegExp Undefined Null\\\".split(\\\" \\\"),d=0,b=e.length;d<b;d++)c=e[d],a[\\\"[object \\\"+c+\\\"]\\\"]=c.toLowerCase();return function(b){var c;return c=Object.prototype.toString.call(b),a[c]||\\\"object\\\"}}(),S=function(a,b,c){return null==b&&(b=0),null==c&&(c=1),a<b&&(a=b),a>c&&(a=c),a},wa=function(a){return a.length>=3?[].slice.call(a):a[0]},t=function(a){var b,c;for(a._clipped=!1,a._unclipped=a.slice(0),b=c=0;c<3;b=++c)b<3?((a[b]<0||a[b]>255)&&(a._clipped=!0),a[b]<0&&(a[b]=0),a[b]>255&&(a[b]=255)):3===b&&(a[b]<0&&(a[b]=0),a[b]>1&&(a[b]=1));return a._clipped||delete a._unclipped,a},d=Math.PI,qa=Math.round,v=Math.cos,A=Math.floor,_=Math.pow,T=Math.log,sa=Math.sin,ta=Math.sqrt,m=Math.atan2,W=Math.max,l=Math.abs,g=2*d,e=d/3,b=d/180,f=180/d,s=function(){return arguments[0]instanceof a?arguments[0]:function(a,b,c){c.prototype=a.prototype;var d=new c,e=a.apply(d,b);return Object(e)===e?e:d}(a,arguments,function(){})},k=[],\\\"undefined\\\"!=typeof module&&null!==module&&null!=module.exports&&(module.exports=s),\\\"function\\\"==typeof define&&define.amd?define([],function(){return s}):(pa=\\\"undefined\\\"!=typeof exports&&null!==exports?exports:this,pa.chroma=s),s.version=\\\"1.3.3\\\",j={},h=[],i=!1,a=function(){function a(){var a,b,c,d,e,f,g,k,l;for(f=this,b=[],k=0,d=arguments.length;k<d;k++)null!=(a=arguments[k])&&b.push(a);if(g=b[b.length-1],null!=j[g])f._rgb=t(j[g](wa(b.slice(0,-1))));else{for(i||(h=h.sort(function(a,b){return b.p-a.p}),i=!0),l=0,e=h.length;l<e&&(c=h[l],!(g=c.test.apply(c,b)));l++);g&&(f._rgb=t(j[g].apply(j,b)))}null==f._rgb&&console.warn(\\\"unknown format: \\\"+b),null==f._rgb&&(f._rgb=[0,0,0]),3===f._rgb.length&&f._rgb.push(1)}return a.prototype.toString=function(){return this.hex()},a}(),s._input=j,s.brewer=q={OrRd:[\\\"#fff7ec\\\",\\\"#fee8c8\\\",\\\"#fdd49e\\\",\\\"#fdbb84\\\",\\\"#fc8d59\\\",\\\"#ef6548\\\",\\\"#d7301f\\\",\\\"#b30000\\\",\\\"#7f0000\\\"],PuBu:[\\\"#fff7fb\\\",\\\"#ece7f2\\\",\\\"#d0d1e6\\\",\\\"#a6bddb\\\",\\\"#74a9cf\\\",\\\"#3690c0\\\",\\\"#0570b0\\\",\\\"#045a8d\\\",\\\"#023858\\\"],BuPu:[\\\"#f7fcfd\\\",\\\"#e0ecf4\\\",\\\"#bfd3e6\\\",\\\"#9ebcda\\\",\\\"#8c96c6\\\",\\\"#8c6bb1\\\",\\\"#88419d\\\",\\\"#810f7c\\\",\\\"#4d004b\\\"],Oranges:[\\\"#fff5eb\\\",\\\"#fee6ce\\\",\\\"#fdd0a2\\\",\\\"#fdae6b\\\",\\\"#fd8d3c\\\",\\\"#f16913\\\",\\\"#d94801\\\",\\\"#a63603\\\",\\\"#7f2704\\\"],BuGn:[\\\"#f7fcfd\\\",\\\"#e5f5f9\\\",\\\"#ccece6\\\",\\\"#99d8c9\\\",\\\"#66c2a4\\\",\\\"#41ae76\\\",\\\"#238b45\\\",\\\"#006d2c\\\",\\\"#00441b\\\"],YlOrBr:[\\\"#ffffe5\\\",\\\"#fff7bc\\\",\\\"#fee391\\\",\\\"#fec44f\\\",\\\"#fe9929\\\",\\\"#ec7014\\\",\\\"#cc4c02\\\",\\\"#993404\\\",\\\"#662506\\\"],YlGn:[\\\"#ffffe5\\\",\\\"#f7fcb9\\\",\\\"#d9f0a3\\\",\\\"#addd8e\\\",\\\"#78c679\\\",\\\"#41ab5d\\\",\\\"#238443\\\",\\\"#006837\\\",\\\"#004529\\\"],Reds:[\\\"#fff5f0\\\",\\\"#fee0d2\\\",\\\"#fcbba1\\\",\\\"#fc9272\\\",\\\"#fb6a4a\\\",\\\"#ef3b2c\\\",\\\"#cb181d\\\",\\\"#a50f15\\\",\\\"#67000d\\\"],RdPu:[\\\"#fff7f3\\\",\\\"#fde0dd\\\",\\\"#fcc5c0\\\",\\\"#fa9fb5\\\",\\\"#f768a1\\\",\\\"#dd3497\\\",\\\"#ae017e\\\",\\\"#7a0177\\\",\\\"#49006a\\\"],Greens:[\\\"#f7fcf5\\\",\\\"#e5f5e0\\\",\\\"#c7e9c0\\\",\\\"#a1d99b\\\",\\\"#74c476\\\",\\\"#41ab5d\\\",\\\"#238b45\\\",\\\"#006d2c\\\",\\\"#00441b\\\"],YlGnBu:[\\\"#ffffd9\\\",\\\"#edf8b1\\\",\\\"#c7e9b4\\\",\\\"#7fcdbb\\\",\\\"#41b6c4\\\",\\\"#1d91c0\\\",\\\"#225ea8\\\",\\\"#253494\\\",\\\"#081d58\\\"],Purples:[\\\"#fcfbfd\\\",\\\"#efedf5\\\",\\\"#dadaeb\\\",\\\"#bcbddc\\\",\\\"#9e9ac8\\\",\\\"#807dba\\\",\\\"#6a51a3\\\",\\\"#54278f\\\",\\\"#3f007d\\\"],GnBu:[\\\"#f7fcf0\\\",\\\"#e0f3db\\\",\\\"#ccebc5\\\",\\\"#a8ddb5\\\",\\\"#7bccc4\\\",\\\"#4eb3d3\\\",\\\"#2b8cbe\\\",\\\"#0868ac\\\",\\\"#084081\\\"],Greys:[\\\"#ffffff\\\",\\\"#f0f0f0\\\",\\\"#d9d9d9\\\",\\\"#bdbdbd\\\",\\\"#969696\\\",\\\"#737373\\\",\\\"#525252\\\",\\\"#252525\\\",\\\"#000000\\\"],YlOrRd:[\\\"#ffffcc\\\",\\\"#ffeda0\\\",\\\"#fed976\\\",\\\"#feb24c\\\",\\\"#fd8d3c\\\",\\\"#fc4e2a\\\",\\\"#e31a1c\\\",\\\"#bd0026\\\",\\\"#800026\\\"],PuRd:[\\\"#f7f4f9\\\",\\\"#e7e1ef\\\",\\\"#d4b9da\\\",\\\"#c994c7\\\",\\\"#df65b0\\\",\\\"#e7298a\\\",\\\"#ce1256\\\",\\\"#980043\\\",\\\"#67001f\\\"],Blues:[\\\"#f7fbff\\\",\\\"#deebf7\\\",\\\"#c6dbef\\\",\\\"#9ecae1\\\",\\\"#6baed6\\\",\\\"#4292c6\\\",\\\"#2171b5\\\",\\\"#08519c\\\",\\\"#08306b\\\"],PuBuGn:[\\\"#fff7fb\\\",\\\"#ece2f0\\\",\\\"#d0d1e6\\\",\\\"#a6bddb\\\",\\\"#67a9cf\\\",\\\"#3690c0\\\",\\\"#02818a\\\",\\\"#016c59\\\",\\\"#014636\\\"],Viridis:[\\\"#440154\\\",\\\"#482777\\\",\\\"#3f4a8a\\\",\\\"#31678e\\\",\\\"#26838f\\\",\\\"#1f9d8a\\\",\\\"#6cce5a\\\",\\\"#b6de2b\\\",\\\"#fee825\\\"],Spectral:[\\\"#9e0142\\\",\\\"#d53e4f\\\",\\\"#f46d43\\\",\\\"#fdae61\\\",\\\"#fee08b\\\",\\\"#ffffbf\\\",\\\"#e6f598\\\",\\\"#abdda4\\\",\\\"#66c2a5\\\",\\\"#3288bd\\\",\\\"#5e4fa2\\\"],RdYlGn:[\\\"#a50026\\\",\\\"#d73027\\\",\\\"#f46d43\\\",\\\"#fdae61\\\",\\\"#fee08b\\\",\\\"#ffffbf\\\",\\\"#d9ef8b\\\",\\\"#a6d96a\\\",\\\"#66bd63\\\",\\\"#1a9850\\\",\\\"#006837\\\"],RdBu:[\\\"#67001f\\\",\\\"#b2182b\\\",\\\"#d6604d\\\",\\\"#f4a582\\\",\\\"#fddbc7\\\",\\\"#f7f7f7\\\",\\\"#d1e5f0\\\",\\\"#92c5de\\\",\\\"#4393c3\\\",\\\"#2166ac\\\",\\\"#053061\\\"],PiYG:[\\\"#8e0152\\\",\\\"#c51b7d\\\",\\\"#de77ae\\\",\\\"#f1b6da\\\",\\\"#fde0ef\\\",\\\"#f7f7f7\\\",\\\"#e6f5d0\\\",\\\"#b8e186\\\",\\\"#7fbc41\\\",\\\"#4d9221\\\",\\\"#276419\\\"],PRGn:[\\\"#40004b\\\",\\\"#762a83\\\",\\\"#9970ab\\\",\\\"#c2a5cf\\\",\\\"#e7d4e8\\\",\\\"#f7f7f7\\\",\\\"#d9f0d3\\\",\\\"#a6dba0\\\",\\\"#5aae61\\\",\\\"#1b7837\\\",\\\"#00441b\\\"],RdYlBu:[\\\"#a50026\\\",\\\"#d73027\\\",\\\"#f46d43\\\",\\\"#fdae61\\\",\\\"#fee090\\\",\\\"#ffffbf\\\",\\\"#e0f3f8\\\",\\\"#abd9e9\\\",\\\"#74add1\\\",\\\"#4575b4\\\",\\\"#313695\\\"],BrBG:[\\\"#543005\\\",\\\"#8c510a\\\",\\\"#bf812d\\\",\\\"#dfc27d\\\",\\\"#f6e8c3\\\",\\\"#f5f5f5\\\",\\\"#c7eae5\\\",\\\"#80cdc1\\\",\\\"#35978f\\\",\\\"#01665e\\\",\\\"#003c30\\\"],RdGy:[\\\"#67001f\\\",\\\"#b2182b\\\",\\\"#d6604d\\\",\\\"#f4a582\\\",\\\"#fddbc7\\\",\\\"#ffffff\\\",\\\"#e0e0e0\\\",\\\"#bababa\\\",\\\"#878787\\\",\\\"#4d4d4d\\\",\\\"#1a1a1a\\\"],PuOr:[\\\"#7f3b08\\\",\\\"#b35806\\\",\\\"#e08214\\\",\\\"#fdb863\\\",\\\"#fee0b6\\\",\\\"#f7f7f7\\\",\\\"#d8daeb\\\",\\\"#b2abd2\\\",\\\"#8073ac\\\",\\\"#542788\\\",\\\"#2d004b\\\"],Set2:[\\\"#66c2a5\\\",\\\"#fc8d62\\\",\\\"#8da0cb\\\",\\\"#e78ac3\\\",\\\"#a6d854\\\",\\\"#ffd92f\\\",\\\"#e5c494\\\",\\\"#b3b3b3\\\"],Accent:[\\\"#7fc97f\\\",\\\"#beaed4\\\",\\\"#fdc086\\\",\\\"#ffff99\\\",\\\"#386cb0\\\",\\\"#f0027f\\\",\\\"#bf5b17\\\",\\\"#666666\\\"],Set1:[\\\"#e41a1c\\\",\\\"#377eb8\\\",\\\"#4daf4a\\\",\\\"#984ea3\\\",\\\"#ff7f00\\\",\\\"#ffff33\\\",\\\"#a65628\\\",\\\"#f781bf\\\",\\\"#999999\\\"],Set3:[\\\"#8dd3c7\\\",\\\"#ffffb3\\\",\\\"#bebada\\\",\\\"#fb8072\\\",\\\"#80b1d3\\\",\\\"#fdb462\\\",\\\"#b3de69\\\",\\\"#fccde5\\\",\\\"#d9d9d9\\\",\\\"#bc80bd\\\",\\\"#ccebc5\\\",\\\"#ffed6f\\\"],Dark2:[\\\"#1b9e77\\\",\\\"#d95f02\\\",\\\"#7570b3\\\",\\\"#e7298a\\\",\\\"#66a61e\\\",\\\"#e6ab02\\\",\\\"#a6761d\\\",\\\"#666666\\\"],Paired:[\\\"#a6cee3\\\",\\\"#1f78b4\\\",\\\"#b2df8a\\\",\\\"#33a02c\\\",\\\"#fb9a99\\\",\\\"#e31a1c\\\",\\\"#fdbf6f\\\",\\\"#ff7f00\\\",\\\"#cab2d6\\\",\\\"#6a3d9a\\\",\\\"#ffff99\\\",\\\"#b15928\\\"],Pastel2:[\\\"#b3e2cd\\\",\\\"#fdcdac\\\",\\\"#cbd5e8\\\",\\\"#f4cae4\\\",\\\"#e6f5c9\\\",\\\"#fff2ae\\\",\\\"#f1e2cc\\\",\\\"#cccccc\\\"],Pastel1:[\\\"#fbb4ae\\\",\\\"#b3cde3\\\",\\\"#ccebc5\\\",\\\"#decbe4\\\",\\\"#fed9a6\\\",\\\"#ffffcc\\\",\\\"#e5d8bd\\\",\\\"#fddaec\\\",\\\"#f2f2f2\\\"]},function(){var a,b;b=[];for(a in q)b.push(q[a.toLowerCase()]=q[a]);b}(),xa={aliceblue:\\\"#f0f8ff\\\",antiquewhite:\\\"#faebd7\\\",aqua:\\\"#00ffff\\\",aquamarine:\\\"#7fffd4\\\",azure:\\\"#f0ffff\\\",beige:\\\"#f5f5dc\\\",bisque:\\\"#ffe4c4\\\",black:\\\"#000000\\\",blanchedalmond:\\\"#ffebcd\\\",blue:\\\"#0000ff\\\",blueviolet:\\\"#8a2be2\\\",brown:\\\"#a52a2a\\\",burlywood:\\\"#deb887\\\",cadetblue:\\\"#5f9ea0\\\",chartreuse:\\\"#7fff00\\\",chocolate:\\\"#d2691e\\\",coral:\\\"#ff7f50\\\",cornflower:\\\"#6495ed\\\",cornflowerblue:\\\"#6495ed\\\",cornsilk:\\\"#fff8dc\\\",crimson:\\\"#dc143c\\\",cyan:\\\"#00ffff\\\",darkblue:\\\"#00008b\\\",darkcyan:\\\"#008b8b\\\",darkgoldenrod:\\\"#b8860b\\\",darkgray:\\\"#a9a9a9\\\",darkgreen:\\\"#006400\\\",darkgrey:\\\"#a9a9a9\\\",darkkhaki:\\\"#bdb76b\\\",darkmagenta:\\\"#8b008b\\\",darkolivegreen:\\\"#556b2f\\\",darkorange:\\\"#ff8c00\\\",darkorchid:\\\"#9932cc\\\",darkred:\\\"#8b0000\\\",darksalmon:\\\"#e9967a\\\",darkseagreen:\\\"#8fbc8f\\\",darkslateblue:\\\"#483d8b\\\",darkslategray:\\\"#2f4f4f\\\",darkslategrey:\\\"#2f4f4f\\\",darkturquoise:\\\"#00ced1\\\",darkviolet:\\\"#9400d3\\\",deeppink:\\\"#ff1493\\\",deepskyblue:\\\"#00bfff\\\",dimgray:\\\"#696969\\\",dimgrey:\\\"#696969\\\",dodgerblue:\\\"#1e90ff\\\",firebrick:\\\"#b22222\\\",floralwhite:\\\"#fffaf0\\\",forestgreen:\\\"#228b22\\\",fuchsia:\\\"#ff00ff\\\",gainsboro:\\\"#dcdcdc\\\",ghostwhite:\\\"#f8f8ff\\\",gold:\\\"#ffd700\\\",goldenrod:\\\"#daa520\\\",gray:\\\"#808080\\\",green:\\\"#008000\\\",greenyellow:\\\"#adff2f\\\",grey:\\\"#808080\\\",honeydew:\\\"#f0fff0\\\",hotpink:\\\"#ff69b4\\\",indianred:\\\"#cd5c5c\\\",indigo:\\\"#4b0082\\\",ivory:\\\"#fffff0\\\",khaki:\\\"#f0e68c\\\",laserlemon:\\\"#ffff54\\\",lavender:\\\"#e6e6fa\\\",lavenderblush:\\\"#fff0f5\\\",lawngreen:\\\"#7cfc00\\\",lemonchiffon:\\\"#fffacd\\\",lightblue:\\\"#add8e6\\\",lightcoral:\\\"#f08080\\\",lightcyan:\\\"#e0ffff\\\",lightgoldenrod:\\\"#fafad2\\\",lightgoldenrodyellow:\\\"#fafad2\\\",lightgray:\\\"#d3d3d3\\\",lightgreen:\\\"#90ee90\\\",lightgrey:\\\"#d3d3d3\\\",lightpink:\\\"#ffb6c1\\\",lightsalmon:\\\"#ffa07a\\\",lightseagreen:\\\"#20b2aa\\\",lightskyblue:\\\"#87cefa\\\",lightslategray:\\\"#778899\\\",lightslategrey:\\\"#778899\\\",lightsteelblue:\\\"#b0c4de\\\",lightyellow:\\\"#ffffe0\\\",lime:\\\"#00ff00\\\",limegreen:\\\"#32cd32\\\",linen:\\\"#faf0e6\\\",magenta:\\\"#ff00ff\\\",maroon:\\\"#800000\\\",maroon2:\\\"#7f0000\\\",maroon3:\\\"#b03060\\\",mediumaquamarine:\\\"#66cdaa\\\",mediumblue:\\\"#0000cd\\\",mediumorchid:\\\"#ba55d3\\\",mediumpurple:\\\"#9370db\\\",mediumseagreen:\\\"#3cb371\\\",mediumslateblue:\\\"#7b68ee\\\",mediumspringgreen:\\\"#00fa9a\\\",mediumturquoise:\\\"#48d1cc\\\",mediumvioletred:\\\"#c71585\\\",midnightblue:\\\"#191970\\\",mintcream:\\\"#f5fffa\\\",mistyrose:\\\"#ffe4e1\\\",moccasin:\\\"#ffe4b5\\\",navajowhite:\\\"#ffdead\\\",navy:\\\"#000080\\\",oldlace:\\\"#fdf5e6\\\",olive:\\\"#808000\\\",olivedrab:\\\"#6b8e23\\\",orange:\\\"#ffa500\\\",orangered:\\\"#ff4500\\\",orchid:\\\"#da70d6\\\",palegoldenrod:\\\"#eee8aa\\\",palegreen:\\\"#98fb98\\\",paleturquoise:\\\"#afeeee\\\",palevioletred:\\\"#db7093\\\",papayawhip:\\\"#ffefd5\\\",peachpuff:\\\"#ffdab9\\\",peru:\\\"#cd853f\\\",pink:\\\"#ffc0cb\\\",plum:\\\"#dda0dd\\\",powderblue:\\\"#b0e0e6\\\",purple:\\\"#800080\\\",purple2:\\\"#7f007f\\\",purple3:\\\"#a020f0\\\",rebeccapurple:\\\"#663399\\\",red:\\\"#ff0000\\\",rosybrown:\\\"#bc8f8f\\\",royalblue:\\\"#4169e1\\\",saddlebrown:\\\"#8b4513\\\",salmon:\\\"#fa8072\\\",sandybrown:\\\"#f4a460\\\",seagreen:\\\"#2e8b57\\\",seashell:\\\"#fff5ee\\\",sienna:\\\"#a0522d\\\",silver:\\\"#c0c0c0\\\",skyblue:\\\"#87ceeb\\\",slateblue:\\\"#6a5acd\\\",slategray:\\\"#708090\\\",slategrey:\\\"#708090\\\",snow:\\\"#fffafa\\\",springgreen:\\\"#00ff7f\\\",steelblue:\\\"#4682b4\\\",tan:\\\"#d2b48c\\\",teal:\\\"#008080\\\",thistle:\\\"#d8bfd8\\\",tomato:\\\"#ff6347\\\",turquoise:\\\"#40e0d0\\\",violet:\\\"#ee82ee\\\",wheat:\\\"#f5deb3\\\",white:\\\"#ffffff\\\",whitesmoke:\\\"#f5f5f5\\\",yellow:\\\"#ffff00\\\",yellowgreen:\\\"#9acd32\\\"},s.colors=xa,N=function(){var a,b,d,e,f,g,h,i,j;return b=wa(arguments),f=b[0],a=b[1],d=b[2],i=(f+16)/116,h=isNaN(a)?i:i+a/500,j=isNaN(d)?i:i-d/200,i=c.Yn*O(i),h=c.Xn*O(h),j=c.Zn*O(j),g=za(3.2404542*h-1.5371385*i-.4985314*j),e=za(-.969266*h+1.8760108*i+.041556*j),d=za(.0556434*h-.2040259*i+1.0572252*j),[g,e,d,b.length>3?b[3]:1]},za=function(a){return 255*(a<=.00304?12.92*a:1.055*_(a,1/2.4)-.055)},O=function(a){return a>c.t1?a*a*a:c.t2*(a-c.t0)},c={Kn:18,Xn:.95047,Yn:1,Zn:1.08883,t0:.137931034,t1:.206896552,t2:.12841855,t3:.008856452},ha=function(){var a,b,c,d,e,f,g,h;return d=wa(arguments),c=d[0],b=d[1],a=d[2],e=ma(c,b,a),f=e[0],g=e[1],h=e[2],[116*g-16,500*(f-g),200*(g-h)]},na=function(a){return(a/=255)<=.04045?a/12.92:_((a+.055)/1.055,2.4)},ya=function(a){return a>c.t3?_(a,1/3):a/c.t2+c.t0},ma=function(){var a,b,d,e,f,g,h;return e=wa(arguments),d=e[0],b=e[1],a=e[2],d=na(d),b=na(b),a=na(a),f=ya((.4124564*d+.3575761*b+.1804375*a)/c.Xn),g=ya((.2126729*d+.7151522*b+.072175*a)/c.Yn),h=ya((.0193339*d+.119192*b+.9503041*a)/c.Zn),[f,g,h]},s.lab=function(){return function(a,b,c){c.prototype=a.prototype;var d=new c,e=a.apply(d,b);return Object(e)===e?e:d}(a,Aa.call(arguments).concat([\\\"lab\\\"]),function(){})},j.lab=N,a.prototype.lab=function(){return ha(this._rgb)},n=function(a){var b,c,d,e,f,g,h,i,j,k,l;return a=function(){var b,c,d;for(d=[],c=0,b=a.length;c<b;c++)e=a[c],d.push(s(e));return d}(),2===a.length?(j=function(){var b,c,d;for(d=[],c=0,b=a.length;c<b;c++)e=a[c],d.push(e.lab());return d}(),f=j[0],g=j[1],b=function(a){var b,c;return c=function(){var c,d;for(d=[],b=c=0;c<=2;b=++c)d.push(f[b]+a*(g[b]-f[b]));return d}(),s.lab.apply(s,c)}):3===a.length?(k=function(){var b,c,d;for(d=[],c=0,b=a.length;c<b;c++)e=a[c],d.push(e.lab());return d}(),f=k[0],g=k[1],h=k[2],b=function(a){var b,c;return c=function(){var c,d;for(d=[],b=c=0;c<=2;b=++c)d.push((1-a)*(1-a)*f[b]+2*(1-a)*a*g[b]+a*a*h[b]);return d}(),s.lab.apply(s,c)}):4===a.length?(l=function(){var b,c,d;for(d=[],c=0,b=a.length;c<b;c++)e=a[c],d.push(e.lab());return d}(),f=l[0],g=l[1],h=l[2],i=l[3],b=function(a){var b,c;return c=function(){var c,d;for(d=[],b=c=0;c<=2;b=++c)d.push((1-a)*(1-a)*(1-a)*f[b]+3*(1-a)*(1-a)*a*g[b]+3*(1-a)*a*a*h[b]+a*a*a*i[b]);return d}(),s.lab.apply(s,c)}):5===a.length&&(c=n(a.slice(0,3)),d=n(a.slice(2,5)),b=function(a){return a<.5?c(2*a):d(2*(a-.5))}),b},s.bezier=function(a){var b;return b=n(a),b.scale=function(){return s.scale(b)},b},s.cubehelix=function(a,b,c,d,e){var f,h,i;return null==a&&(a=300),null==b&&(b=-1.5),null==c&&(c=1),null==d&&(d=1),null==e&&(e=[0,1]),f=0,\\\"array\\\"===va(e)?h=e[1]-e[0]:(h=0,e=[e,e]),i=function(i){var j,k,l,m,n,o,p,q,r;return j=g*((a+120)/360+b*i),p=_(e[0]+h*i,d),o=0!==f?c[0]+i*f:c,k=o*p*(1-p)/2,m=v(j),r=sa(j),q=p+k*(-.14861*m+1.78277*r),n=p+k*(-.29227*m-.90649*r),l=p+k*(1.97294*m),s(t([255*q,255*n,255*l]))},i.start=function(b){return null==b?a:(a=b,i)},i.rotations=function(a){return null==a?b:(b=a,i)},i.gamma=function(a){return null==a?d:(d=a,i)},i.hue=function(a){return null==a?c:(c=a,\\\"array\\\"===va(c)?0===(f=c[1]-c[0])&&(c=c[1]):f=0,i)},i.lightness=function(a){return null==a?e:(\\\"array\\\"===va(a)?(e=a,h=a[1]-a[0]):(e=[a,a],h=0),i)},i.scale=function(){return s.scale(i)},i.hue(c),i},s.random=function(){var b,c,d;for(c=\\\"0123456789abcdef\\\",b=\\\"#\\\",d=0;d<6;++d)b+=c.charAt(A(16*Math.random()));return new a(b)},s.average=function(a,b){var c,e,f,g,h,i,j,k,l,n,o,p,q;null==b&&(b=\\\"rgb\\\"),l=a.length,a=a.map(function(a){return s(a)}),j=a.splice(0,1)[0],p=j.get(b),g=[],h=0,i=0;for(k in p)p[k]=p[k]||0,g.push(isNaN(p[k])?0:1),\\\"h\\\"!==b.charAt(k)||isNaN(p[k])||(c=p[k]/180*d,h+=v(c),i+=sa(c));for(e=j.alpha(),o=0,n=a.length;o<n;o++){f=a[o],q=f.get(b),e+=f.alpha();for(k in p)isNaN(q[k])||(p[k]+=q[k],g[k]+=1,\\\"h\\\"===b.charAt(k)&&(c=p[k]/180*d,h+=v(c),i+=sa(c)))}for(k in p)if(p[k]=p[k]/g[k],\\\"h\\\"===b.charAt(k)){for(c=m(i/g[k],h/g[k])/d*180;c<0;)c+=360;for(;c>=360;)c-=360;p[k]=c}return s(p,b).alpha(e/l)},j.rgb=function(){var a,b,c,d;b=wa(arguments),c=[];for(a in b)d=b[a],c.push(d);return c},s.rgb=function(){return function(a,b,c){c.prototype=a.prototype;var d=new c,e=a.apply(d,b);return Object(e)===e?e:d}(a,Aa.call(arguments).concat([\\\"rgb\\\"]),function(){})},a.prototype.rgb=function(a){return null==a&&(a=!0),a?this._rgb.map(Math.round).slice(0,3):this._rgb.slice(0,3)},a.prototype.rgba=function(a){return null==a&&(a=!0),a?[Math.round(this._rgb[0]),Math.round(this._rgb[1]),Math.round(this._rgb[2]),this._rgb[3]]:this._rgb.slice(0)},h.push({p:3,test:function(a){var b;return b=wa(arguments),\\\"array\\\"===va(b)&&3===b.length?\\\"rgb\\\":4===b.length&&\\\"number\\\"===va(b[3])&&b[3]>=0&&b[3]<=1?\\\"rgb\\\":void 0}}),C=function(a){var b,c,d,e,f,g;if(a.match(/^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/))return 4!==a.length&&7!==a.length||(a=a.substr(1)),3===a.length&&(a=a.split(\\\"\\\"),a=a[0]+a[0]+a[1]+a[1]+a[2]+a[2]),g=parseInt(a,16),e=g>>16,d=g>>8&255,c=255&g,[e,d,c,1];if(a.match(/^#?([A-Fa-f0-9]{8})$/))return 9===a.length&&(a=a.substr(1)),g=parseInt(a,16),e=g>>24&255,d=g>>16&255,c=g>>8&255,b=qa((255&g)/255*100)/100,[e,d,c,b];if(null!=j.css&&(f=j.css(a)))return f;throw\\\"unknown color: \\\"+a},da=function(a,b){var c,d,e,f,g,h,i;return null==b&&(b=\\\"rgb\\\"),g=a[0],e=a[1],d=a[2],c=a[3],g=Math.round(g),e=Math.round(e),d=Math.round(d),i=g<<16|e<<8|d,h=\\\"000000\\\"+i.toString(16),h=h.substr(h.length-6),f=\\\"0\\\"+qa(255*c).toString(16),f=f.substr(f.length-2),\\\"#\\\"+function(){switch(b.toLowerCase()){case\\\"rgba\\\":return h+f;case\\\"argb\\\":return f+h;default:return h}}()},j.hex=function(a){return C(a)},s.hex=function(){return function(a,b,c){c.prototype=a.prototype;var d=new c,e=a.apply(d,b);return Object(e)===e?e:d}(a,Aa.call(arguments).concat([\\\"hex\\\"]),function(){})},a.prototype.hex=function(a){return null==a&&(a=\\\"rgb\\\"),da(this._rgb,a)},h.push({p:4,test:function(a){if(1===arguments.length&&\\\"string\\\"===va(a))return\\\"hex\\\"}}),F=function(){var a,b,c,d,e,f,g,h,i,j,k,l,m,n;if(a=wa(arguments),e=a[0],k=a[1],g=a[2],0===k)i=d=b=255*g;else{for(n=[0,0,0],c=[0,0,0],m=g<.5?g*(1+k):g+k-g*k,l=2*g-m,e/=360,n[0]=e+1/3,n[1]=e,n[2]=e-1/3,f=h=0;h<=2;f=++h)n[f]<0&&(n[f]+=1),n[f]>1&&(n[f]-=1),6*n[f]<1?c[f]=l+6*(m-l)*n[f]:2*n[f]<1?c[f]=m:3*n[f]<2?c[f]=l+(m-l)*(2/3-n[f])*6:c[f]=l;j=[qa(255*c[0]),qa(255*c[1]),qa(255*c[2])],i=j[0],d=j[1],b=j[2]}return a.length>3?[i,d,b,a[3]]:[i,d,b]},fa=function(a,b,c){var d,e,f,g,h;return void 0!==a&&a.length>=3&&(g=a,a=g[0],b=g[1],c=g[2]),a/=255,b/=255,c/=255,f=Math.min(a,b,c),W=Math.max(a,b,c),e=(W+f)/2,W===f?(h=0,d=Number.NaN):h=e<.5?(W-f)/(W+f):(W-f)/(2-W-f),a===W?d=(b-c)/(W-f):b===W?d=2+(c-a)/(W-f):c===W&&(d=4+(a-b)/(W-f)),d*=60,d<0&&(d+=360),[d,h,e]},s.hsl=function(){return function(a,b,c){c.prototype=a.prototype;var d=new c,e=a.apply(d,b);return Object(e)===e?e:d}(a,Aa.call(arguments).concat([\\\"hsl\\\"]),function(){})},j.hsl=F,a.prototype.hsl=function(){return fa(this._rgb)},G=function(){var a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r;if(a=wa(arguments),e=a[0],p=a[1],r=a[2],r*=255,0===p)i=d=b=r;else switch(360===e&&(e=0),e>360&&(e-=360),e<0&&(e+=360),e/=60,f=A(e),c=e-f,g=r*(1-p),h=r*(1-p*c),q=r*(1-p*(1-c)),f){case 0:j=[r,q,g],i=j[0],d=j[1],b=j[2];break;case 1:k=[h,r,g],i=k[0],d=k[1],b=k[2];break;case 2:l=[g,r,q],i=l[0],d=l[1],b=l[2];break;case 3:m=[g,h,r],i=m[0],d=m[1],b=m[2];break;case 4:n=[q,g,r],i=n[0],d=n[1],b=n[2];break;case 5:o=[r,g,h],i=o[0],d=o[1],b=o[2]}return[i,d,b,a.length>3?a[3]:1]},ga=function(){var a,b,c,d,e,f,g,h,i;return g=wa(arguments),f=g[0],c=g[1],a=g[2],e=Math.min(f,c,a),W=Math.max(f,c,a),b=W-e,i=W/255,0===W?(d=Number.NaN,h=0):(h=b/W,f===W&&(d=(c-a)/b),c===W&&(d=2+(a-f)/b),a===W&&(d=4+(f-c)/b),(d*=60)<0&&(d+=360)),[d,h,i]},s.hsv=function(){return function(a,b,c){c.prototype=a.prototype;var d=new c,e=a.apply(d,b);return Object(e)===e?e:d}(a,Aa.call(arguments).concat([\\\"hsv\\\"]),function(){})},j.hsv=G,a.prototype.hsv=function(){return ga(this._rgb)},Z=function(a){var b,c,d;return\\\"number\\\"===va(a)&&a>=0&&a<=16777215?(d=a>>16,c=a>>8&255,b=255&a,[d,c,b,1]):(console.warn(\\\"unknown num color: \\\"+a),[0,0,0,1])},ka=function(){var a,b,c,d;return d=wa(arguments),c=d[0],b=d[1],a=d[2],(c<<16)+(b<<8)+a},s.num=function(b){return new a(b,\\\"num\\\")},a.prototype.num=function(a){return null==a&&(a=\\\"rgb\\\"),ka(this._rgb,a)},j.num=Z,h.push({p:1,test:function(a){if(1===arguments.length&&\\\"number\\\"===va(a)&&a>=0&&a<=16777215)return\\\"num\\\"}}),B=function(){var a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t;if(c=wa(arguments),h=c[0],e=c[1],b=c[2],e/=100,g=g/100*255,a=255*e,0===e)l=g=d=b;else switch(360===h&&(h=0),h>360&&(h-=360),h<0&&(h+=360),h/=60,i=A(h),f=h-i,j=b*(1-e),k=j+a*(1-f),s=j+a*f,t=j+a,i){case 0:m=[t,s,j],l=m[0],g=m[1],d=m[2];break;case 1:n=[k,t,j],l=n[0],g=n[1],d=n[2];break;case 2:o=[j,t,s],l=o[0],g=o[1],d=o[2];break;case 3:p=[j,k,t],l=p[0],g=p[1],d=p[2];break;case 4:q=[s,j,t],l=q[0],g=q[1],d=q[2];break;case 5:r=[t,j,k],l=r[0],g=r[1],d=r[2]}return[l,g,d,c.length>3?c[3]:1]},ca=function(){var a,b,c,d,e,f,g,h,i;return i=wa(arguments),h=i[0],e=i[1],b=i[2],g=Math.min(h,e,b),W=Math.max(h,e,b),d=W-g,c=100*d/255,a=g/(255-d)*100,0===d?f=Number.NaN:(h===W&&(f=(e-b)/d),e===W&&(f=2+(b-h)/d),b===W&&(f=4+(h-e)/d),(f*=60)<0&&(f+=360)),[f,c,a]},s.hcg=function(){return function(a,b,c){c.prototype=a.prototype;var d=new c,e=a.apply(d,b);return Object(e)===e?e:d}(a,Aa.call(arguments).concat([\\\"hcg\\\"]),function(){})},j.hcg=B,a.prototype.hcg=function(){return ca(this._rgb)},w=function(a){var b,c,d,e,f,g,h,i;if(a=a.toLowerCase(),null!=s.colors&&s.colors[a])return C(s.colors[a]);if(f=a.match(/rgb\\\\(\\\\s*(\\\\-?\\\\d+),\\\\s*(\\\\-?\\\\d+)\\\\s*,\\\\s*(\\\\-?\\\\d+)\\\\s*\\\\)/)){for(h=f.slice(1,4),e=g=0;g<=2;e=++g)h[e]=+h[e];h[3]=1}else if(f=a.match(/rgba\\\\(\\\\s*(\\\\-?\\\\d+),\\\\s*(\\\\-?\\\\d+)\\\\s*,\\\\s*(\\\\-?\\\\d+)\\\\s*,\\\\s*([01]|[01]?\\\\.\\\\d+)\\\\)/))for(h=f.slice(1,5),e=i=0;i<=3;e=++i)h[e]=+h[e];else if(f=a.match(/rgb\\\\(\\\\s*(\\\\-?\\\\d+(?:\\\\.\\\\d+)?)%,\\\\s*(\\\\-?\\\\d+(?:\\\\.\\\\d+)?)%\\\\s*,\\\\s*(\\\\-?\\\\d+(?:\\\\.\\\\d+)?)%\\\\s*\\\\)/)){for(h=f.slice(1,4),e=b=0;b<=2;e=++b)h[e]=qa(2.55*h[e]);h[3]=1}else if(f=a.match(/rgba\\\\(\\\\s*(\\\\-?\\\\d+(?:\\\\.\\\\d+)?)%,\\\\s*(\\\\-?\\\\d+(?:\\\\.\\\\d+)?)%\\\\s*,\\\\s*(\\\\-?\\\\d+(?:\\\\.\\\\d+)?)%\\\\s*,\\\\s*([01]|[01]?\\\\.\\\\d+)\\\\)/)){for(h=f.slice(1,5),e=c=0;c<=2;e=++c)h[e]=qa(2.55*h[e]);h[3]=+h[3]}else(f=a.match(/hsl\\\\(\\\\s*(\\\\-?\\\\d+(?:\\\\.\\\\d+)?),\\\\s*(\\\\-?\\\\d+(?:\\\\.\\\\d+)?)%\\\\s*,\\\\s*(\\\\-?\\\\d+(?:\\\\.\\\\d+)?)%\\\\s*\\\\)/))?(d=f.slice(1,4),d[1]*=.01,d[2]*=.01,h=F(d),h[3]=1):(f=a.match(/hsla\\\\(\\\\s*(\\\\-?\\\\d+(?:\\\\.\\\\d+)?),\\\\s*(\\\\-?\\\\d+(?:\\\\.\\\\d+)?)%\\\\s*,\\\\s*(\\\\-?\\\\d+(?:\\\\.\\\\d+)?)%\\\\s*,\\\\s*([01]|[01]?\\\\.\\\\d+)\\\\)/))&&(d=f.slice(1,4),d[1]*=.01,d[2]*=.01,h=F(d),h[3]=+f[4]);return h},ba=function(a){var b;return b=a[3]<1?\\\"rgba\\\":\\\"rgb\\\",\\\"rgb\\\"===b?b+\\\"(\\\"+a.slice(0,3).map(qa).join(\\\",\\\")+\\\")\\\":\\\"rgba\\\"===b?b+\\\"(\\\"+a.slice(0,3).map(qa).join(\\\",\\\")+\\\",\\\"+a[3]+\\\")\\\":void 0},oa=function(a){return qa(100*a)/100},E=function(a,b){var c;return c=b<1?\\\"hsla\\\":\\\"hsl\\\",a[0]=oa(a[0]||0),a[1]=oa(100*a[1])+\\\"%\\\",a[2]=oa(100*a[2])+\\\"%\\\",\\\"hsla\\\"===c&&(a[3]=b),c+\\\"(\\\"+a.join(\\\",\\\")+\\\")\\\"},j.css=function(a){return w(a)},s.css=function(){return function(a,b,c){c.prototype=a.prototype;var d=new c,e=a.apply(d,b);return Object(e)===e?e:d}(a,Aa.call(arguments).concat([\\\"css\\\"]),function(){})},a.prototype.css=function(a){return null==a&&(a=\\\"rgb\\\"),\\\"rgb\\\"===a.slice(0,3)?ba(this._rgb):\\\"hsl\\\"===a.slice(0,3)?E(this.hsl(),this.alpha()):void 0},j.named=function(a){return C(xa[a])},h.push({p:5,test:function(a){if(1===arguments.length&&null!=xa[a])return\\\"named\\\"}}),a.prototype.name=function(a){var b,c;arguments.length&&(xa[a]&&(this._rgb=C(xa[a])),this._rgb[3]=1),b=this.hex();for(c in xa)if(b===xa[c])return c;return b},P=function(){var a,c,d,e;return e=wa(arguments),d=e[0],a=e[1],c=e[2],c*=b,[d,v(c)*a,sa(c)*a]},Q=function(){var a,b,c,d,e,f,g,h,i,j,k;return c=wa(arguments),h=c[0],e=c[1],g=c[2],j=P(h,e,g),a=j[0],b=j[1],d=j[2],k=N(a,b,d),i=k[0],f=k[1],d=k[2],[i,f,d,c.length>3?c[3]:1]},M=function(){var a,b,c,d,e,g;return g=wa(arguments),e=g[0],a=g[1],b=g[2],c=ta(a*a+b*b),d=(m(b,a)*f+360)%360,0===qa(1e4*c)&&(d=Number.NaN),[e,c,d]},ia=function(){var a,b,c,d,e,f,g;return f=wa(arguments),e=f[0],c=f[1],b=f[2],g=ha(e,c,b),d=g[0],a=g[1],b=g[2],M(d,a,b)},s.lch=function(){var b;return b=wa(arguments),new a(b,\\\"lch\\\")},s.hcl=function(){var b;return b=wa(arguments),new a(b,\\\"hcl\\\")},j.lch=Q,j.hcl=function(){var a,b,c,d;return d=wa(arguments),b=d[0],a=d[1],c=d[2],Q([c,a,b])},a.prototype.lch=function(){return ia(this._rgb)},a.prototype.hcl=function(){return ia(this._rgb).reverse()},aa=function(a){var b,c,d,e,f,g,h,i,j;return null==a&&(a=\\\"rgb\\\"),i=wa(arguments),h=i[0],e=i[1],b=i[2],h/=255,e/=255,b/=255,f=1-Math.max(h,Math.max(e,b)),d=f<1?1/(1-f):0,c=(1-h-f)*d,g=(1-e-f)*d,j=(1-b-f)*d,[c,g,j,f]},u=function(){var a,b,c,d,e,f,g,h,i;return b=wa(arguments),d=b[0],g=b[1],i=b[2],f=b[3],a=b.length>4?b[4]:1,1===f?[0,0,0,a]:(h=d>=1?0:255*(1-d)*(1-f),e=g>=1?0:255*(1-g)*(1-f),c=i>=1?0:255*(1-i)*(1-f),[h,e,c,a])},j.cmyk=function(){return u(wa(arguments))},s.cmyk=function(){return function(a,b,c){c.prototype=a.prototype;var d=new c,e=a.apply(d,b);return Object(e)===e?e:d}(a,Aa.call(arguments).concat([\\\"cmyk\\\"]),function(){})},a.prototype.cmyk=function(){return aa(this._rgb)},j.gl=function(){var a,b,c,d,e;for(d=function(){var a,c;a=wa(arguments),c=[];for(b in a)e=a[b],c.push(e);return c}.apply(this,arguments),a=c=0;c<=2;a=++c)d[a]*=255;return d},s.gl=function(){return function(a,b,c){c.prototype=a.prototype;var d=new c,e=a.apply(d,b);return Object(e)===e?e:d}(a,Aa.call(arguments).concat([\\\"gl\\\"]),function(){})},a.prototype.gl=function(){var a;return a=this._rgb,[a[0]/255,a[1]/255,a[2]/255,a[3]]},ja=function(a,b,c){var d;return d=wa(arguments),a=d[0],b=d[1],c=d[2],a=U(a),b=U(b),c=U(c),.2126*a+.7152*b+.0722*c},U=function(a){return a/=255,a<=.03928?a/12.92:_((a+.055)/1.055,2.4)},k=[],H=function(a,b,c,d){var e,f,g,h;for(null==c&&(c=.5),null==d&&(d=\\\"rgb\\\"),\\\"object\\\"!==va(a)&&(a=s(a)),\\\"object\\\"!==va(b)&&(b=s(b)),g=0,f=k.length;g<f;g++)if(e=k[g],d===e[0]){h=e[1](a,b,c,d);break}if(null==h)throw\\\"color mode \\\"+d+\\\" is not supported\\\";return h.alpha(a.alpha()+c*(b.alpha()-a.alpha()))},s.interpolate=H,a.prototype.interpolate=function(a,b,c){return H(this,a,b,c)},s.mix=H,a.prototype.mix=a.prototype.interpolate,L=function(b,c,d,e){var f,g;return f=b._rgb,g=c._rgb,new a(f[0]+d*(g[0]-f[0]),f[1]+d*(g[1]-f[1]),f[2]+d*(g[2]-f[2]),e)},k.push([\\\"rgb\\\",L]),a.prototype.luminance=function(a,b){var c,d,e,f;return null==b&&(b=\\\"rgb\\\"),arguments.length?(0===a?this._rgb=[0,0,0,this._rgb[3]]:1===a?this._rgb=[255,255,255,this._rgb[3]]:(d=1e-7,e=20,f=function(c,g){var h,i;return i=c.interpolate(g,.5,b),h=i.luminance(),Math.abs(a-h)<d||!e--?i:h>a?f(c,i):f(i,g)},c=ja(this._rgb),this._rgb=(c>a?f(s(\\\"black\\\"),this):f(this,s(\\\"white\\\"))).rgba()),this):ja(this._rgb)},ua=function(a){var b,c,d,e;return e=a/100,e<66?(d=255,c=-155.25485562709179-.44596950469579133*(c=e-2)+104.49216199393888*T(c),b=e<20?0:-254.76935184120902+.8274096064007395*(b=e-10)+115.67994401066147*T(b)):(d=351.97690566805693+.114206453784165*(d=e-55)-40.25366309332127*T(d),c=325.4494125711974+.07943456536662342*(c=e-50)-28.0852963507957*T(c),b=255),[d,c,b]},la=function(){var a,b,c,d,e,f,g,h;for(f=wa(arguments),e=f[0],f[1],a=f[2],d=1e3,c=4e4,b=.4;c-d>b;)h=.5*(c+d),g=ua(h),g[2]/g[0]>=a/e?c=h:d=h;return qa(h)},s.temperature=s.kelvin=function(){return function(a,b,c){c.prototype=a.prototype;var d=new c,e=a.apply(d,b);return Object(e)===e?e:d}(a,Aa.call(arguments).concat([\\\"temperature\\\"]),function(){})},j.temperature=j.kelvin=j.K=ua,a.prototype.temperature=function(){return la(this._rgb)},a.prototype.kelvin=a.prototype.temperature,s.contrast=function(b,c){var d,e,f,g;return\\\"string\\\"!==(f=va(b))&&\\\"number\\\"!==f||(b=new a(b)),\\\"string\\\"!==(g=va(c))&&\\\"number\\\"!==g||(c=new a(c)),d=b.luminance(),e=c.luminance(),d>e?(d+.05)/(e+.05):(e+.05)/(d+.05)},s.distance=function(b,c,d){var e,f,g,h,i,j,k;null==d&&(d=\\\"lab\\\"),\\\"string\\\"!==(i=va(b))&&\\\"number\\\"!==i||(b=new a(b)),\\\"string\\\"!==(j=va(c))&&\\\"number\\\"!==j||(c=new a(c)),g=b.get(d),h=c.get(d),k=0;for(f in g)e=(g[f]||0)-(h[f]||0),k+=e*e;return Math.sqrt(k)},s.deltaE=function(b,c,e,f){var g,h,i,j,k,n,o,p,q,r,s,t,u,w,x,y,z,A,B,C,D,E,F,G,H,I,J;for(null==e&&(e=1),null==f&&(f=1),\\\"string\\\"!==(z=va(b))&&\\\"number\\\"!==z||(b=new a(b)),\\\"string\\\"!==(A=va(c))&&\\\"number\\\"!==A||(c=new a(c)),B=b.lab(),g=B[0],i=B[1],k=B[2],C=c.lab(),h=C[0],j=C[1],n=C[2],o=ta(i*i+k*k),p=ta(j*j+n*n),F=g<16?.511:.040975*g/(1+.01765*g),D=.0638*o/(1+.0131*o)+.638,y=o<1e-6?0:180*m(k,i)/d;y<0;)y+=360;for(;y>=360;)y-=360;return G=y>=164&&y<=345?.56+l(.2*v(d*(y+168)/180)):.36+l(.4*v(d*(y+35)/180)),q=o*o*o*o,x=ta(q/(q+1900)),E=D*(x*G+1-x),w=g-h,u=o-p,s=i-j,t=k-n,r=s*s+t*t-u*u,H=w/(e*F),I=u/(f*D),J=E,ta(H*H+I*I+r/(J*J))},a.prototype.get=function(a){var b,c,d,e,f,g;return d=this,f=a.split(\\\".\\\"),e=f[0],b=f[1],g=d[e](),b?(c=e.indexOf(b),c>-1?g[c]:console.warn(\\\"unknown channel \\\"+b+\\\" in mode \\\"+e)):g},a.prototype.set=function(a,b){var c,d,e,f,g,h;if(e=this,g=a.split(\\\".\\\"),f=g[0],c=g[1],c)if(h=e[f](),(d=f.indexOf(c))>-1)if(\\\"string\\\"===va(b))switch(b.charAt(0)){case\\\"+\\\":case\\\"-\\\":h[d]+=+b;break;case\\\"*\\\":h[d]*=+b.substr(1);break;case\\\"/\\\":h[d]/=+b.substr(1);break;default:h[d]=+b}else h[d]=b;else console.warn(\\\"unknown channel \\\"+c+\\\" in mode \\\"+f);else h=b;return s(h,f).alpha(e.alpha())},a.prototype.clipped=function(){return this._rgb._clipped||!1},a.prototype.alpha=function(a){return arguments.length?s.rgb([this._rgb[0],this._rgb[1],this._rgb[2],a]):this._rgb[3]},a.prototype.darken=function(a){var b,d;return null==a&&(a=1),d=this,b=d.lab(),b[0]-=c.Kn*a,s.lab(b).alpha(d.alpha())},a.prototype.brighten=function(a){return null==a&&(a=1),this.darken(-a)},a.prototype.darker=a.prototype.darken,a.prototype.brighter=a.prototype.brighten,a.prototype.saturate=function(a){var b,d;return null==a&&(a=1),d=this,b=d.lch(),b[1]+=a*c.Kn,b[1]<0&&(b[1]=0),s.lch(b).alpha(d.alpha())},a.prototype.desaturate=function(a){return null==a&&(a=1),this.saturate(-a)},a.prototype.premultiply=function(){var a,b;return b=this.rgb(),a=this.alpha(),s(b[0]*a,b[1]*a,b[2]*a,a)},o=function(a,b,c){if(!o[c])throw\\\"unknown blend mode \\\"+c;return o[c](a,b)},p=function(a){return function(b,c){var d,e;return d=s(c).rgb(),e=s(b).rgb(),s(a(d,e),\\\"rgb\\\")}},z=function(a){return function(b,c){var d,e,f;for(f=[],d=e=0;e<=3;d=++e)f[d]=a(b[d],c[d]);return f}},Y=function(a,b){return a},X=function(a,b){return a*b/255},x=function(a,b){return a>b?b:a},R=function(a,b){return a>b?a:b},ra=function(a,b){return 255*(1-(1-a/255)*(1-b/255))},$=function(a,b){return b<128?2*a*b/255:255*(1-2*(1-a/255)*(1-b/255))},r=function(a,b){return 255*(1-(1-b/255)/(a/255))},y=function(a,b){return 255===a?255:(a=b/255*255/(1-a/255),a>255?255:a)},o.normal=p(z(Y)),o.multiply=p(z(X)),o.screen=p(z(ra)),o.overlay=p(z($)),o.darken=p(z(x)),o.lighten=p(z(R)),o.dodge=p(z(y)),o.burn=p(z(r)),s.blend=o,s.analyze=function(a){var b,c,d,e;for(d={min:Number.MAX_VALUE,max:Number.MAX_VALUE*-1,sum:0,values:[],count:0},c=0,b=a.length;c<b;c++)null==(e=a[c])||isNaN(e)||(d.values.push(e),d.sum+=e,e<d.min&&(d.min=e),e>d.max&&(d.max=e),d.count+=1);return d.domain=[d.min,d.max],d.limits=function(a,b){return s.limits(d,a,b)},d},s.scale=function(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,t,u,v,w;return j=\\\"rgb\\\",k=s(\\\"#ccc\\\"),o=0,!1,g=[0,1],n=[],m=[0,0],c=!1,e=[],l=!1,i=0,h=1,f=!1,d={},p=!0,v=function(a){var b,c,d,f,g,h;if(null==a&&(a=[\\\"#fff\\\",\\\"#000\\\"]),null!=a&&\\\"string\\\"===va(a)&&null!=s.brewer&&(a=s.brewer[a]||s.brewer[a.toLowerCase()]||a),\\\"array\\\"===va(a)){for(a=a.slice(0),b=d=0,f=a.length-1;0<=f?d<=f:d>=f;b=0<=f?++d:--d)c=a[b],\\\"string\\\"===va(c)&&(a[b]=s(c));for(n.length=0,b=h=0,g=a.length-1;0<=g?h<=g:h>=g;b=0<=g?++h:--h)n.push(b/(a.length-1))}return u(),e=a},r=function(a){var b,d;if(null!=c){for(d=c.length-1,b=0;b<d&&a>=c[b];)b++;return b-1}return 0},w=function(a){return a},function(a){var b,d,e,f,g;return g=a,c.length>2&&(f=c.length-1,b=r(a),e=c[0]+(c[1]-c[0])*(0+.5*o),d=c[f-1]+(c[f]-c[f-1])*(1-.5*o),g=i+(c[b]+.5*(c[b+1]-c[b])-e)/(d-e)*(h-i)),g},t=function(a,b){var f,g,l,o,q,t,u,v;if(null==b&&(b=!1),isNaN(a))return k;if(b?v=a:c&&c.length>2?(f=r(a),v=f/(c.length-2),v=m[0]+v*(1-m[0]-m[1])):h!==i?(v=(a-i)/(h-i),v=m[0]+v*(1-m[0]-m[1]),v=Math.min(1,Math.max(0,v))):v=1,b||(v=w(v)),o=Math.floor(1e4*v),p&&d[o])g=d[o];else{if(\\\"array\\\"===va(e))for(l=q=0,u=n.length-1;0<=u?q<=u:q>=u;l=0<=u?++q:--q){if(t=n[l],v<=t){g=e[l];break}if(v>=t&&l===n.length-1){g=e[l];break}if(v>t&&v<n[l+1]){v=(v-t)/(n[l+1]-t),g=s.interpolate(e[l],e[l+1],v,j);break}}else\\\"function\\\"===va(e)&&(g=e(v));p&&(d[o]=g)}return g},u=function(){return d={}},v(a),q=function(a){var b;return b=s(t(a)),l&&b[l]?b[l]():b},q.classes=function(a){var b;return null!=a?(\\\"array\\\"===va(a)?(c=a,g=[a[0],a[a.length-1]]):(b=s.analyze(g),c=0===a?[b.min,b.max]:s.limits(b,\\\"e\\\",a)),q):c},q.domain=function(a){var b,c,d,f,j,k,l;if(!arguments.length)return g;if(i=a[0],h=a[a.length-1],n=[],d=e.length,a.length===d&&i!==h)for(j=0,f=a.length;j<f;j++)c=a[j],n.push((c-i)/(h-i));else for(b=l=0,k=d-1;0<=k?l<=k:l>=k;b=0<=k?++l:--l)n.push(b/(d-1));return g=[i,h],q},q.mode=function(a){return arguments.length?(j=a,u(),q):j},q.range=function(a,b){return v(a,b),q},q.out=function(a){return l=a,q},q.spread=function(a){return arguments.length?(o=a,q):o},q.correctLightness=function(a){return null==a&&(a=!0),f=a,u(),w=f?function(a){var b,c,d,e,f,g,h,i,j;for(b=t(0,!0).lab()[0],c=t(1,!0).lab()[0],h=b>c,d=t(a,!0).lab()[0],f=b+(c-b)*a,e=d-f,i=0,j=1,g=20;Math.abs(e)>.01&&g-- >0;)!function(){h&&(e*=-1),e<0?(i=a,a+=.5*(j-a)):(j=a,a+=.5*(i-a)),d=t(a,!0).lab()[0],e=d-f}();return a}:function(a){return a},q},q.padding=function(a){return null!=a?(\\\"number\\\"===va(a)&&(a=[a,a]),m=a,q):m},q.colors=function(b,d){var f,h,i,j,k,l,m;if(null==d&&(d=\\\"hex\\\"),0===arguments.length)return e.map(function(a){return a[d]()});if(b)return 1===b?q(.5)[d]():(h=g[0],f=g[1]-h,function(){k=[];for(var a=0;0<=b?a<b:a>b;0<=b?a++:a--)k.push(a);return k}.apply(this).map(function(a){return q(h+a/(b-1)*f)[d]()}));if(a=[],l=[],c&&c.length>2)for(i=m=1,j=c.length;1<=j?m<j:m>j;i=1<=j?++m:--m)l.push(.5*(c[i-1]+c[i]));else l=g;return l.map(function(a){return q(a)[d]()})},q.cache=function(a){return null!=a?p=a:p},q},null==s.scales&&(s.scales={}),s.scales.cool=function(){return s.scale([s.hsl(180,1,.9),s.hsl(250,.7,.4)])},s.scales.hot=function(){return s.scale([\\\"#000\\\",\\\"#f00\\\",\\\"#ff0\\\",\\\"#fff\\\"],[0,.25,.75,1]).mode(\\\"rgb\\\")},s.analyze=function(a,b,c){var d,e,f,g,h,i,j;if(h={min:Number.MAX_VALUE,max:Number.MAX_VALUE*-1,sum:0,values:[],count:0},null==c&&(c=function(){return!0}),d=function(a){null==a||isNaN(a)||(h.values.push(a),h.sum+=a,a<h.min&&(h.min=a),a>h.max&&(h.max=a),h.count+=1)},j=function(a,e){if(c(a,e))return d(null!=b&&\\\"function\\\"===va(b)?b(a):null!=b&&\\\"string\\\"===va(b)||\\\"number\\\"===va(b)?a[b]:a)},\\\"array\\\"===va(a))for(g=0,f=a.length;g<f;g++)i=a[g],j(i);else for(e in a)i=a[e],j(i,e);return h.domain=[h.min,h.max],h.limits=function(a,b){return s.limits(h,a,b)},h},s.limits=function(a,b,c){var d,e,f,g,h,i,j,k,m,n,o,p,q,r,t,u,v,w,x,y,z,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,U,V,X,Y,Z,$,aa,ba,ca,da,ea,fa,ga,ha,ia,ja;if(null==b&&(b=\\\"equal\\\"),null==c&&(c=7),\\\"array\\\"===va(a)&&(a=s.analyze(a)),E=a.min,W=a.max,a.sum,ia=a.values.sort(function(a,b){return a-b}),1===c)return[E,W];if(C=[],\\\"c\\\"===b.substr(0,1)&&(C.push(E),C.push(W)),\\\"e\\\"===b.substr(0,1)){for(C.push(E),y=K=1,O=c-1;1<=O?K<=O:K>=O;y=1<=O?++K:--K)C.push(E+y/c*(W-E));C.push(W)}else if(\\\"l\\\"===b.substr(0,1)){\\nif(E<=0)throw\\\"Logarithmic scales are only possible for values > 0\\\";for(F=Math.LOG10E*T(E),D=Math.LOG10E*T(W),C.push(E),y=ja=1,P=c-1;1<=P?ja<=P:ja>=P;y=1<=P?++ja:--ja)C.push(_(10,F+y/c*(D-F)));C.push(W)}else if(\\\"q\\\"===b.substr(0,1)){for(C.push(E),y=d=1,X=c-1;1<=X?d<=X:d>=X;y=1<=X?++d:--d)L=(ia.length-1)*y/c,M=A(L),M===L?C.push(ia[M]):(N=L-M,C.push(ia[M]*(1-N)+ia[M+1]*N));C.push(W)}else if(\\\"k\\\"===b.substr(0,1)){for(H=ia.length,r=new Array(H),w=new Array(c),ea=!0,I=0,u=null,u=[],u.push(E),y=e=1,Y=c-1;1<=Y?e<=Y:e>=Y;y=1<=Y?++e:--e)u.push(E+y/c*(W-E));for(u.push(W);ea;){for(z=f=0,Z=c-1;0<=Z?f<=Z:f>=Z;z=0<=Z?++f:--f)w[z]=0;for(y=g=0,$=H-1;0<=$?g<=$:g>=$;y=0<=$?++g:--g){for(ha=ia[y],G=Number.MAX_VALUE,z=h=0,aa=c-1;0<=aa?h<=aa:h>=aa;z=0<=aa?++h:--h)(x=l(u[z]-ha))<G&&(G=x,t=z);w[t]++,r[y]=t}for(J=new Array(c),z=i=0,ba=c-1;0<=ba?i<=ba:i>=ba;z=0<=ba?++i:--i)J[z]=null;for(y=j=0,ca=H-1;0<=ca?j<=ca:j>=ca;y=0<=ca?++j:--j)v=r[y],null===J[v]?J[v]=ia[y]:J[v]+=ia[y];for(z=k=0,da=c-1;0<=da?k<=da:k>=da;z=0<=da?++k:--k)J[z]*=1/w[z];for(ea=!1,z=m=0,Q=c-1;0<=Q?m<=Q:m>=Q;z=0<=Q?++m:--m)if(J[z]!==u[y]){ea=!0;break}u=J,I++,I>200&&(ea=!1)}for(B={},z=n=0,R=c-1;0<=R?n<=R:n>=R;z=0<=R?++n:--n)B[z]=[];for(y=o=0,S=H-1;0<=S?o<=S:o>=S;y=0<=S?++o:--o)v=r[y],B[v].push(ia[y]);for(fa=[],z=p=0,U=c-1;0<=U?p<=U:p>=U;z=0<=U?++p:--p)fa.push(B[z][0]),fa.push(B[z][B[z].length-1]);for(fa=fa.sort(function(a,b){return a-b}),C.push(fa[0]),y=q=1,V=fa.length-1;q<=V;y=q+=2)ga=fa[y],isNaN(ga)||C.indexOf(ga)!==-1||C.push(ga)}return C},D=function(a,b,c){var d,f,h,i;return d=wa(arguments),a=d[0],b=d[1],c=d[2],isNaN(a)&&(a=0),a/=360,a<1/3?(f=(1-b)/3,i=(1+b*v(g*a)/v(e-g*a))/3,h=1-(f+i)):a<2/3?(a-=1/3,i=(1-b)/3,h=(1+b*v(g*a)/v(e-g*a))/3,f=1-(i+h)):(a-=2/3,h=(1-b)/3,f=(1+b*v(g*a)/v(e-g*a))/3,i=1-(h+f)),i=S(c*i*3),h=S(c*h*3),f=S(c*f*3),[255*i,255*h,255*f,d.length>3?d[3]:1]},ea=function(){var a,b,c,d,e,f,h,i;return h=wa(arguments),f=h[0],b=h[1],a=h[2],g=2*Math.PI,f/=255,b/=255,a/=255,e=Math.min(f,b,a),d=(f+b+a)/3,i=1-e/d,0===i?c=0:(c=(f-b+(f-a))/2,c/=Math.sqrt((f-b)*(f-b)+(f-a)*(b-a)),c=Math.acos(c),a>b&&(c=g-c),c/=g),[360*c,i,d]},s.hsi=function(){return function(a,b,c){c.prototype=a.prototype;var d=new c,e=a.apply(d,b);return Object(e)===e?e:d}(a,Aa.call(arguments).concat([\\\"hsi\\\"]),function(){})},j.hsi=D,a.prototype.hsi=function(){return ea(this._rgb)},I=function(a,b,c,d){var e,f,g,h,i,j,k,l,m,n,o,p;return\\\"hsl\\\"===d?(o=a.hsl(),p=b.hsl()):\\\"hsv\\\"===d?(o=a.hsv(),p=b.hsv()):\\\"hcg\\\"===d?(o=a.hcg(),p=b.hcg()):\\\"hsi\\\"===d?(o=a.hsi(),p=b.hsi()):\\\"lch\\\"!==d&&\\\"hcl\\\"!==d||(d=\\\"hcl\\\",o=a.hcl(),p=b.hcl()),\\\"h\\\"===d.substr(0,1)&&(g=o[0],m=o[1],j=o[2],h=p[0],n=p[1],k=p[2]),isNaN(g)||isNaN(h)?isNaN(g)?isNaN(h)?f=Number.NaN:(f=h,1!==j&&0!==j||\\\"hsv\\\"===d||(l=n)):(f=g,1!==k&&0!==k||\\\"hsv\\\"===d||(l=m)):(e=h>g&&h-g>180?h-(g+360):h<g&&g-h>180?h+360-g:h-g,f=g+c*e),null==l&&(l=m+c*(n-m)),i=j+c*(k-j),s[d](f,l,i)},k=k.concat(function(){var a,b,c,d;for(c=[\\\"hsv\\\",\\\"hsl\\\",\\\"hsi\\\",\\\"hcl\\\",\\\"lch\\\",\\\"hcg\\\"],d=[],b=0,a=c.length;b<a;b++)V=c[b],d.push([V,I]);return d}()),K=function(a,b,c,d){var e,f;return e=a.num(),f=b.num(),s.num(e+(f-e)*c,\\\"num\\\")},k.push([\\\"num\\\",K]),J=function(b,c,d,e){var f,g;return f=b.lab(),g=c.lab(),new a(f[0]+d*(g[0]-f[0]),f[1]+d*(g[1]-f[1]),f[2]+d*(g[2]-f[2]),e)},k.push([\\\"lab\\\",J])}).call(this);\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./~/chroma-js/chroma.min.js\n// module id = 418\n// module chunks = 2","module.exports = \"/*Copyrights for code authored by Yahoo Inc. is licensed under the following terms:\\nMIT License\\nCopyright  2015 Yahoo Inc.\\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \\\"Software\\\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\\nTHE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\\n*/\\n;(function(window, document, navigator, undefined) {\\nvar utils, error, defaultOptions, isSupported, isWebCamGIFSupported, isExistingImagesGIFSupported, isExistingVideoGIFSupported, NeuQuant, processFrameWorker, gifWriter, AnimatedGIF, getBase64GIF, existingImages, screenShot, videoStream, stopVideoStreaming, createAndGetGIF, existingVideo, existingWebcam, createGIF, takeSnapShot, API;\\nutils = function () {\\n  var utils = {\\n    'URL': window.URL || window.webkitURL || window.mozURL || window.msURL,\\n    'getUserMedia': function () {\\n      var getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;\\n      return getUserMedia ? getUserMedia.bind(navigator) : getUserMedia;\\n    }(),\\n    'requestAnimFrame': window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame,\\n    'requestTimeout': function (callback, delay) {\\n      callback = callback || utils.noop;\\n      delay = delay || 0;\\n      if (!utils.requestAnimFrame) {\\n        return setTimeout(callback, delay);\\n      }\\n      var start = new Date().getTime(), handle = new Object(), requestAnimFrame = utils.requestAnimFrame;\\n      function loop() {\\n        var current = new Date().getTime(), delta = current - start;\\n        delta >= delay ? callback.call() : handle.value = requestAnimFrame(loop);\\n      }\\n      handle.value = requestAnimFrame(loop);\\n      return handle;\\n    },\\n    'Blob': window.Blob || window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder,\\n    'btoa': function () {\\n      var btoa = window.btoa || function (input) {\\n        var output = '', i = 0, l = input.length, key = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=', chr1, chr2, chr3, enc1, enc2, enc3, enc4;\\n        while (i < l) {\\n          chr1 = input.charCodeAt(i++);\\n          chr2 = input.charCodeAt(i++);\\n          chr3 = input.charCodeAt(i++);\\n          enc1 = chr1 >> 2;\\n          enc2 = (chr1 & 3) << 4 | chr2 >> 4;\\n          enc3 = (chr2 & 15) << 2 | chr3 >> 6;\\n          enc4 = chr3 & 63;\\n          if (isNaN(chr2))\\n            enc3 = enc4 = 64;\\n          else if (isNaN(chr3))\\n            enc4 = 64;\\n          output = output + key.charAt(enc1) + key.charAt(enc2) + key.charAt(enc3) + key.charAt(enc4);\\n        }\\n        return output;\\n      };\\n      return btoa ? btoa.bind(window) : function () {\\n      };\\n    }(),\\n    'isObject': function (obj) {\\n      return obj && Object.prototype.toString.call(obj) === '[object Object]';\\n    },\\n    'isEmptyObject': function (obj) {\\n      return utils.isObject(obj) && !Object.keys(obj).length;\\n    },\\n    'isArray': function (arr) {\\n      return arr && Array.isArray(arr);\\n    },\\n    'isFunction': function (func) {\\n      return func && typeof func === 'function';\\n    },\\n    'isElement': function (elem) {\\n      return elem && elem.nodeType === 1;\\n    },\\n    'isString': function (value) {\\n      return typeof value === 'string' || Object.prototype.toString.call(value) === '[object String]';\\n    },\\n    'isSupported': {\\n      'canvas': function () {\\n        var el = document.createElement('canvas');\\n        return el && el.getContext && el.getContext('2d');\\n      },\\n      'webworkers': function () {\\n        return window.Worker;\\n      },\\n      'blob': function () {\\n        return utils.Blob;\\n      },\\n      'Uint8Array': function () {\\n        return window.Uint8Array;\\n      },\\n      'Uint32Array': function () {\\n        return window.Uint32Array;\\n      },\\n      'videoCodecs': function () {\\n        var testEl = document.createElement('video'), supportObj = {\\n            'mp4': false,\\n            'h264': false,\\n            'ogv': false,\\n            'ogg': false,\\n            'webm': false\\n          };\\n        try {\\n          if (testEl && testEl.canPlayType) {\\n            supportObj.mp4 = testEl.canPlayType('video/mp4; codecs=\\\"mp4v.20.8\\\"') !== '';\\n            supportObj.h264 = (testEl.canPlayType('video/mp4; codecs=\\\"avc1.42E01E\\\"') || testEl.canPlayType('video/mp4; codecs=\\\"avc1.42E01E, mp4a.40.2\\\"')) !== '';\\n            supportObj.ogv = testEl.canPlayType('video/ogg; codecs=\\\"theora\\\"') !== '';\\n            supportObj.ogg = testEl.canPlayType('video/ogg; codecs=\\\"theora\\\"') !== '';\\n            supportObj.webm = testEl.canPlayType('video/webm; codecs=\\\"vp8, vorbis\\\"') !== -1;\\n          }\\n        } catch (e) {\\n        }\\n        return supportObj;\\n      }()\\n    },\\n    'noop': function () {\\n    },\\n    'each': function (collection, callback) {\\n      var x, len;\\n      if (utils.isArray(collection)) {\\n        x = -1;\\n        len = collection.length;\\n        while (++x < len) {\\n          if (callback(x, collection[x]) === false) {\\n            break;\\n          }\\n        }\\n      } else if (utils.isObject(collection)) {\\n        for (x in collection) {\\n          if (collection.hasOwnProperty(x)) {\\n            if (callback(x, collection[x]) === false) {\\n              break;\\n            }\\n          }\\n        }\\n      }\\n    },\\n    'mergeOptions': function deepMerge(defaultOptions, userOptions) {\\n      if (!utils.isObject(defaultOptions) || !utils.isObject(userOptions) || !Object.keys) {\\n        return;\\n      }\\n      var newObj = {};\\n      utils.each(defaultOptions, function (key, val) {\\n        newObj[key] = defaultOptions[key];\\n      });\\n      utils.each(userOptions, function (key, val) {\\n        var currentUserOption = userOptions[key];\\n        if (!utils.isObject(currentUserOption)) {\\n          newObj[key] = currentUserOption;\\n        } else {\\n          if (!defaultOptions[key]) {\\n            newObj[key] = currentUserOption;\\n          } else {\\n            newObj[key] = deepMerge(defaultOptions[key], currentUserOption);\\n          }\\n        }\\n      });\\n      return newObj;\\n    },\\n    'setCSSAttr': function (elem, attr, val) {\\n      if (!utils.isElement(elem)) {\\n        return;\\n      }\\n      if (utils.isString(attr) && utils.isString(val)) {\\n        elem.style[attr] = val;\\n      } else if (utils.isObject(attr)) {\\n        utils.each(attr, function (key, val) {\\n          elem.style[key] = val;\\n        });\\n      }\\n    },\\n    'removeElement': function (node) {\\n      if (!utils.isElement(node)) {\\n        return;\\n      }\\n      if (node.parentNode) {\\n        node.parentNode.removeChild(node);\\n      }\\n    },\\n    'createWebWorker': function (content) {\\n      if (!utils.isString(content)) {\\n        return {};\\n      }\\n      try {\\n        var blob = new utils.Blob([content], { 'type': 'text/javascript' }), objectUrl = utils.URL.createObjectURL(blob), worker = new Worker(objectUrl);\\n        return {\\n          'objectUrl': objectUrl,\\n          'worker': worker\\n        };\\n      } catch (e) {\\n        return '' + e;\\n      }\\n    },\\n    'getExtension': function (src) {\\n      return src.substr(src.lastIndexOf('.') + 1, src.length);\\n    },\\n    'getFontSize': function (options) {\\n      options = options || {};\\n      if (!document.body || options.resizeFont === false) {\\n        return options.fontSize;\\n      }\\n      var text = options.text, containerWidth = options.gifWidth, fontSize = parseInt(options.fontSize, 10), minFontSize = parseInt(options.minFontSize, 10), div = document.createElement('div'), span = document.createElement('span');\\n      div.setAttribute('width', containerWidth);\\n      div.appendChild(span);\\n      span.innerHTML = text;\\n      span.style.fontSize = fontSize + 'px';\\n      span.style.textIndent = '-9999px';\\n      span.style.visibility = 'hidden';\\n      document.body.appendChild(span);\\n      while (span.offsetWidth > containerWidth && fontSize >= minFontSize) {\\n        span.style.fontSize = --fontSize + 'px';\\n      }\\n      document.body.removeChild(span);\\n      return fontSize + 'px';\\n    },\\n    'webWorkerError': false\\n  };\\n  return utils;\\n}();\\nerror = function (utils) {\\n  var error = {\\n    'validate': function (skipObj) {\\n      skipObj = utils.isObject(skipObj) ? skipObj : {};\\n      var errorObj = {};\\n      utils.each(error.validators, function (indece, currentValidator) {\\n        var errorCode = currentValidator.errorCode;\\n        if (!skipObj[errorCode] && !currentValidator.condition) {\\n          errorObj = currentValidator;\\n          errorObj.error = true;\\n          return false;\\n        }\\n      });\\n      delete errorObj.condition;\\n      return errorObj;\\n    },\\n    'isValid': function (skipObj) {\\n      var errorObj = error.validate(skipObj), isValid = errorObj.error !== true ? true : false;\\n      return isValid;\\n    },\\n    'validators': [\\n      {\\n        'condition': utils.isFunction(utils.getUserMedia),\\n        'errorCode': 'getUserMedia',\\n        'errorMsg': 'The getUserMedia API is not supported in your browser'\\n      },\\n      {\\n        'condition': utils.isSupported.canvas(),\\n        'errorCode': 'canvas',\\n        'errorMsg': 'Canvas elements are not supported in your browser'\\n      },\\n      {\\n        'condition': utils.isSupported.webworkers(),\\n        'errorCode': 'webworkers',\\n        'errorMsg': 'The Web Workers API is not supported in your browser'\\n      },\\n      {\\n        'condition': utils.isFunction(utils.URL),\\n        'errorCode': 'window.URL',\\n        'errorMsg': 'The window.URL API is not supported in your browser'\\n      },\\n      {\\n        'condition': utils.isSupported.blob(),\\n        'errorCode': 'window.Blob',\\n        'errorMsg': 'The window.Blob File API is not supported in your browser'\\n      },\\n      {\\n        'condition': utils.isSupported.Uint8Array(),\\n        'errorCode': 'window.Uint8Array',\\n        'errorMsg': 'The window.Uint8Array function constructor is not supported in your browser'\\n      },\\n      {\\n        'condition': utils.isSupported.Uint32Array(),\\n        'errorCode': 'window.Uint32Array',\\n        'errorMsg': 'The window.Uint32Array function constructor is not supported in your browser'\\n      }\\n    ],\\n    'messages': {\\n      'videoCodecs': {\\n        'errorCode': 'videocodec',\\n        'errorMsg': 'The video codec you are trying to use is not supported in your browser'\\n      }\\n    }\\n  };\\n  return error;\\n}(utils);\\ndefaultOptions = {\\n  'sampleInterval': 10,\\n  'numWorkers': 2,\\n  'gifWidth': 200,\\n  'gifHeight': 200,\\n  'interval': 0.1,\\n  'numFrames': 10,\\n  'keepCameraOn': false,\\n  'images': [],\\n  'video': null,\\n  'webcamVideoElement': null,\\n  'cameraStream': null,\\n  'text': '',\\n  'fontWeight': 'normal',\\n  'fontSize': '16px',\\n  'minFontSize': '10px',\\n  'resizeFont': false,\\n  'fontFamily': 'sans-serif',\\n  'fontColor': '#ffffff',\\n  'textAlign': 'center',\\n  'textBaseline': 'bottom',\\n  'textXCoordinate': null,\\n  'textYCoordinate': null,\\n  'progressCallback': function (captureProgress) {\\n  },\\n  'completeCallback': function () {\\n  },\\n  'saveRenderingContexts': false,\\n  'savedRenderingContexts': [],\\n  'crossOrigin': 'Anonymous'\\n};\\nisSupported = function () {\\n  return error.isValid();\\n};\\nisWebCamGIFSupported = function () {\\n  return error.isValid();\\n};\\nisExistingImagesGIFSupported = function () {\\n  var skipObj = { 'getUserMedia': true };\\n  return error.isValid(skipObj);\\n};\\nisExistingVideoGIFSupported = function (codecs) {\\n  var isSupported = false, hasValidCodec = false;\\n  if (utils.isArray(codecs) && codecs.length) {\\n    utils.each(codecs, function (indece, currentCodec) {\\n      if (utils.isSupported.videoCodecs[currentCodec]) {\\n        hasValidCodec = true;\\n      }\\n    });\\n    if (!hasValidCodec) {\\n      return false;\\n    }\\n  } else if (utils.isString(codecs) && codecs.length) {\\n    if (!utils.isSupported.videoCodecs[codecs]) {\\n      return false;\\n    }\\n  }\\n  return error.isValid({ 'getUserMedia': true });\\n};\\nNeuQuant = function () {\\n  function NeuQuant() {\\n    var netsize = 256;\\n    var prime1 = 499;\\n    var prime2 = 491;\\n    var prime3 = 487;\\n    var prime4 = 503;\\n    var minpicturebytes = 3 * prime4;\\n    var maxnetpos = netsize - 1;\\n    var netbiasshift = 4;\\n    var ncycles = 100;\\n    var intbiasshift = 16;\\n    var intbias = 1 << intbiasshift;\\n    var gammashift = 10;\\n    var gamma = 1 << gammashift;\\n    var betashift = 10;\\n    var beta = intbias >> betashift;\\n    var betagamma = intbias << gammashift - betashift;\\n    var initrad = netsize >> 3;\\n    var radiusbiasshift = 6;\\n    var radiusbias = 1 << radiusbiasshift;\\n    var initradius = initrad * radiusbias;\\n    var radiusdec = 30;\\n    var alphabiasshift = 10;\\n    var initalpha = 1 << alphabiasshift;\\n    var alphadec;\\n    var radbiasshift = 8;\\n    var radbias = 1 << radbiasshift;\\n    var alpharadbshift = alphabiasshift + radbiasshift;\\n    var alpharadbias = 1 << alpharadbshift;\\n    var thepicture;\\n    var lengthcount;\\n    var samplefac;\\n    var network;\\n    var netindex = [];\\n    var bias = [];\\n    var freq = [];\\n    var radpower = [];\\n    function NeuQuantConstructor(thepic, len, sample) {\\n      var i;\\n      var p;\\n      thepicture = thepic;\\n      lengthcount = len;\\n      samplefac = sample;\\n      network = new Array(netsize);\\n      for (i = 0; i < netsize; i++) {\\n        network[i] = new Array(4);\\n        p = network[i];\\n        p[0] = p[1] = p[2] = (i << netbiasshift + 8) / netsize | 0;\\n        freq[i] = intbias / netsize | 0;\\n        bias[i] = 0;\\n      }\\n    }\\n    function colorMap() {\\n      var map = [];\\n      var index = new Array(netsize);\\n      for (var i = 0; i < netsize; i++)\\n        index[network[i][3]] = i;\\n      var k = 0;\\n      for (var l = 0; l < netsize; l++) {\\n        var j = index[l];\\n        map[k++] = network[j][0];\\n        map[k++] = network[j][1];\\n        map[k++] = network[j][2];\\n      }\\n      return map;\\n    }\\n    function inxbuild() {\\n      var i;\\n      var j;\\n      var smallpos;\\n      var smallval;\\n      var p;\\n      var q;\\n      var previouscol;\\n      var startpos;\\n      previouscol = 0;\\n      startpos = 0;\\n      for (i = 0; i < netsize; i++) {\\n        p = network[i];\\n        smallpos = i;\\n        smallval = p[1];\\n        for (j = i + 1; j < netsize; j++) {\\n          q = network[j];\\n          if (q[1] < smallval) {\\n            smallpos = j;\\n            smallval = q[1];\\n          }\\n        }\\n        q = network[smallpos];\\n        if (i != smallpos) {\\n          j = q[0];\\n          q[0] = p[0];\\n          p[0] = j;\\n          j = q[1];\\n          q[1] = p[1];\\n          p[1] = j;\\n          j = q[2];\\n          q[2] = p[2];\\n          p[2] = j;\\n          j = q[3];\\n          q[3] = p[3];\\n          p[3] = j;\\n        }\\n        if (smallval != previouscol) {\\n          netindex[previouscol] = startpos + i >> 1;\\n          for (j = previouscol + 1; j < smallval; j++) {\\n            netindex[j] = i;\\n          }\\n          previouscol = smallval;\\n          startpos = i;\\n        }\\n      }\\n      netindex[previouscol] = startpos + maxnetpos >> 1;\\n      for (j = previouscol + 1; j < 256; j++) {\\n        netindex[j] = maxnetpos;\\n      }\\n    }\\n    function learn() {\\n      var i;\\n      var j;\\n      var b;\\n      var g;\\n      var r;\\n      var radius;\\n      var rad;\\n      var alpha;\\n      var step;\\n      var delta;\\n      var samplepixels;\\n      var p;\\n      var pix;\\n      var lim;\\n      if (lengthcount < minpicturebytes) {\\n        samplefac = 1;\\n      }\\n      alphadec = 30 + (samplefac - 1) / 3;\\n      p = thepicture;\\n      pix = 0;\\n      lim = lengthcount;\\n      samplepixels = lengthcount / (3 * samplefac);\\n      delta = samplepixels / ncycles | 0;\\n      alpha = initalpha;\\n      radius = initradius;\\n      rad = radius >> radiusbiasshift;\\n      if (rad <= 1) {\\n        rad = 0;\\n      }\\n      for (i = 0; i < rad; i++) {\\n        radpower[i] = alpha * ((rad * rad - i * i) * radbias / (rad * rad));\\n      }\\n      if (lengthcount < minpicturebytes) {\\n        step = 3;\\n      } else if (lengthcount % prime1 !== 0) {\\n        step = 3 * prime1;\\n      } else {\\n        if (lengthcount % prime2 !== 0) {\\n          step = 3 * prime2;\\n        } else {\\n          if (lengthcount % prime3 !== 0) {\\n            step = 3 * prime3;\\n          } else {\\n            step = 3 * prime4;\\n          }\\n        }\\n      }\\n      i = 0;\\n      while (i < samplepixels) {\\n        b = (p[pix + 0] & 255) << netbiasshift;\\n        g = (p[pix + 1] & 255) << netbiasshift;\\n        r = (p[pix + 2] & 255) << netbiasshift;\\n        j = contest(b, g, r);\\n        altersingle(alpha, j, b, g, r);\\n        if (rad !== 0) {\\n          alterneigh(rad, j, b, g, r);\\n        }\\n        pix += step;\\n        if (pix >= lim) {\\n          pix -= lengthcount;\\n        }\\n        i++;\\n        if (delta === 0) {\\n          delta = 1;\\n        }\\n        if (i % delta === 0) {\\n          alpha -= alpha / alphadec;\\n          radius -= radius / radiusdec;\\n          rad = radius >> radiusbiasshift;\\n          if (rad <= 1) {\\n            rad = 0;\\n          }\\n          for (j = 0; j < rad; j++) {\\n            radpower[j] = alpha * ((rad * rad - j * j) * radbias / (rad * rad));\\n          }\\n        }\\n      }\\n    }\\n    function map(b, g, r) {\\n      var i;\\n      var j;\\n      var dist;\\n      var a;\\n      var bestd;\\n      var p;\\n      var best;\\n      bestd = 1000;\\n      best = -1;\\n      i = netindex[g];\\n      j = i - 1;\\n      while (i < netsize || j >= 0) {\\n        if (i < netsize) {\\n          p = network[i];\\n          dist = p[1] - g;\\n          if (dist >= bestd) {\\n            i = netsize;\\n          } else {\\n            i++;\\n            if (dist < 0) {\\n              dist = -dist;\\n            }\\n            a = p[0] - b;\\n            if (a < 0) {\\n              a = -a;\\n            }\\n            dist += a;\\n            if (dist < bestd) {\\n              a = p[2] - r;\\n              if (a < 0) {\\n                a = -a;\\n              }\\n              dist += a;\\n              if (dist < bestd) {\\n                bestd = dist;\\n                best = p[3];\\n              }\\n            }\\n          }\\n        }\\n        if (j >= 0) {\\n          p = network[j];\\n          dist = g - p[1];\\n          if (dist >= bestd) {\\n            j = -1;\\n          } else {\\n            j--;\\n            if (dist < 0) {\\n              dist = -dist;\\n            }\\n            a = p[0] - b;\\n            if (a < 0) {\\n              a = -a;\\n            }\\n            dist += a;\\n            if (dist < bestd) {\\n              a = p[2] - r;\\n              if (a < 0) {\\n                a = -a;\\n              }\\n              dist += a;\\n              if (dist < bestd) {\\n                bestd = dist;\\n                best = p[3];\\n              }\\n            }\\n          }\\n        }\\n      }\\n      return best;\\n    }\\n    function process() {\\n      learn();\\n      unbiasnet();\\n      inxbuild();\\n      return colorMap();\\n    }\\n    function unbiasnet() {\\n      var i;\\n      var j;\\n      for (i = 0; i < netsize; i++) {\\n        network[i][0] >>= netbiasshift;\\n        network[i][1] >>= netbiasshift;\\n        network[i][2] >>= netbiasshift;\\n        network[i][3] = i;\\n      }\\n    }\\n    function alterneigh(rad, i, b, g, r) {\\n      var j;\\n      var k;\\n      var lo;\\n      var hi;\\n      var a;\\n      var m;\\n      var p;\\n      lo = i - rad;\\n      if (lo < -1) {\\n        lo = -1;\\n      }\\n      hi = i + rad;\\n      if (hi > netsize) {\\n        hi = netsize;\\n      }\\n      j = i + 1;\\n      k = i - 1;\\n      m = 1;\\n      while (j < hi || k > lo) {\\n        a = radpower[m++];\\n        if (j < hi) {\\n          p = network[j++];\\n          try {\\n            p[0] -= a * (p[0] - b) / alpharadbias | 0;\\n            p[1] -= a * (p[1] - g) / alpharadbias | 0;\\n            p[2] -= a * (p[2] - r) / alpharadbias | 0;\\n          } catch (e) {\\n          }\\n        }\\n        if (k > lo) {\\n          p = network[k--];\\n          try {\\n            p[0] -= a * (p[0] - b) / alpharadbias | 0;\\n            p[1] -= a * (p[1] - g) / alpharadbias | 0;\\n            p[2] -= a * (p[2] - r) / alpharadbias | 0;\\n          } catch (e) {\\n          }\\n        }\\n      }\\n    }\\n    function altersingle(alpha, i, b, g, r) {\\n      var n = network[i];\\n      var alphaMult = alpha / initalpha;\\n      n[0] -= alphaMult * (n[0] - b) | 0;\\n      n[1] -= alphaMult * (n[1] - g) | 0;\\n      n[2] -= alphaMult * (n[2] - r) | 0;\\n    }\\n    function contest(b, g, r) {\\n      var i;\\n      var dist;\\n      var a;\\n      var biasdist;\\n      var betafreq;\\n      var bestpos;\\n      var bestbiaspos;\\n      var bestd;\\n      var bestbiasd;\\n      var n;\\n      bestd = ~(1 << 31);\\n      bestbiasd = bestd;\\n      bestpos = -1;\\n      bestbiaspos = bestpos;\\n      for (i = 0; i < netsize; i++) {\\n        n = network[i];\\n        dist = n[0] - b;\\n        if (dist < 0) {\\n          dist = -dist;\\n        }\\n        a = n[1] - g;\\n        if (a < 0) {\\n          a = -a;\\n        }\\n        dist += a;\\n        a = n[2] - r;\\n        if (a < 0) {\\n          a = -a;\\n        }\\n        dist += a;\\n        if (dist < bestd) {\\n          bestd = dist;\\n          bestpos = i;\\n        }\\n        biasdist = dist - (bias[i] >> intbiasshift - netbiasshift);\\n        if (biasdist < bestbiasd) {\\n          bestbiasd = biasdist;\\n          bestbiaspos = i;\\n        }\\n        betafreq = freq[i] >> betashift;\\n        freq[i] -= betafreq;\\n        bias[i] += betafreq << gammashift;\\n      }\\n      freq[bestpos] += beta;\\n      bias[bestpos] -= betagamma;\\n      return bestbiaspos;\\n    }\\n    NeuQuantConstructor.apply(this, arguments);\\n    var exports = {};\\n    exports.map = map;\\n    exports.process = process;\\n    return exports;\\n  }\\n  return NeuQuant;\\n}();\\nprocessFrameWorker = function (NeuQuant) {\\n  var workerCode = function () {\\n    try {\\n      self.onmessage = function (ev) {\\n        var data = ev.data || {};\\n        var response;\\n        if (data.gifshot) {\\n          response = workerMethods.run(data);\\n          postMessage(response);\\n        }\\n      };\\n    } catch (e) {\\n    }\\n    var workerMethods = {\\n      'dataToRGB': function (data, width, height) {\\n        var i = 0, length = width * height * 4, rgb = [];\\n        while (i < length) {\\n          rgb.push(data[i++]);\\n          rgb.push(data[i++]);\\n          rgb.push(data[i++]);\\n          i++;\\n        }\\n        return rgb;\\n      },\\n      'componentizedPaletteToArray': function (paletteRGB) {\\n        var paletteArray = [], i, r, g, b;\\n        for (i = 0; i < paletteRGB.length; i += 3) {\\n          r = paletteRGB[i];\\n          g = paletteRGB[i + 1];\\n          b = paletteRGB[i + 2];\\n          paletteArray.push(r << 16 | g << 8 | b);\\n        }\\n        return paletteArray;\\n      },\\n      'processFrameWithQuantizer': function (imageData, width, height, sampleInterval) {\\n        var rgbComponents = this.dataToRGB(imageData, width, height), nq = new NeuQuant(rgbComponents, rgbComponents.length, sampleInterval), paletteRGB = nq.process(), paletteArray = new Uint32Array(this.componentizedPaletteToArray(paletteRGB)), numberPixels = width * height, indexedPixels = new Uint8Array(numberPixels), k = 0, i, r, g, b;\\n        for (i = 0; i < numberPixels; i++) {\\n          r = rgbComponents[k++];\\n          g = rgbComponents[k++];\\n          b = rgbComponents[k++];\\n          indexedPixels[i] = nq.map(r, g, b);\\n        }\\n        return {\\n          pixels: indexedPixels,\\n          palette: paletteArray\\n        };\\n      },\\n      'run': function (frame) {\\n        var width = frame.width, height = frame.height, imageData = frame.data, palette = frame.palette, sampleInterval = frame.sampleInterval;\\n        return this.processFrameWithQuantizer(imageData, width, height, sampleInterval);\\n      }\\n    };\\n    return workerMethods;\\n  };\\n  return workerCode;\\n}(NeuQuant);\\ngifWriter = function gifWriter(buf, width, height, gopts) {\\n  var p = 0;\\n  gopts = gopts === undefined ? {} : gopts;\\n  var loop_count = gopts.loop === undefined ? null : gopts.loop;\\n  var global_palette = gopts.palette === undefined ? null : gopts.palette;\\n  if (width <= 0 || height <= 0 || width > 65535 || height > 65535)\\n    throw 'Width/Height invalid.';\\n  function check_palette_and_num_colors(palette) {\\n    var num_colors = palette.length;\\n    if (num_colors < 2 || num_colors > 256 || num_colors & num_colors - 1)\\n      throw 'Invalid code/color length, must be power of 2 and 2 .. 256.';\\n    return num_colors;\\n  }\\n  buf[p++] = 71;\\n  buf[p++] = 73;\\n  buf[p++] = 70;\\n  buf[p++] = 56;\\n  buf[p++] = 57;\\n  buf[p++] = 97;\\n  var gp_num_colors_pow2 = 0;\\n  var background = 0;\\n  buf[p++] = width & 255;\\n  buf[p++] = width >> 8 & 255;\\n  buf[p++] = height & 255;\\n  buf[p++] = height >> 8 & 255;\\n  buf[p++] = (global_palette !== null ? 128 : 0) | gp_num_colors_pow2;\\n  buf[p++] = background;\\n  buf[p++] = 0;\\n  if (loop_count !== null) {\\n    if (loop_count < 0 || loop_count > 65535)\\n      throw 'Loop count invalid.';\\n    buf[p++] = 33;\\n    buf[p++] = 255;\\n    buf[p++] = 11;\\n    buf[p++] = 78;\\n    buf[p++] = 69;\\n    buf[p++] = 84;\\n    buf[p++] = 83;\\n    buf[p++] = 67;\\n    buf[p++] = 65;\\n    buf[p++] = 80;\\n    buf[p++] = 69;\\n    buf[p++] = 50;\\n    buf[p++] = 46;\\n    buf[p++] = 48;\\n    buf[p++] = 3;\\n    buf[p++] = 1;\\n    buf[p++] = loop_count & 255;\\n    buf[p++] = loop_count >> 8 & 255;\\n    buf[p++] = 0;\\n  }\\n  var ended = false;\\n  this.addFrame = function (x, y, w, h, indexed_pixels, opts) {\\n    if (ended === true) {\\n      --p;\\n      ended = false;\\n    }\\n    opts = opts === undefined ? {} : opts;\\n    if (x < 0 || y < 0 || x > 65535 || y > 65535)\\n      throw 'x/y invalid.';\\n    if (w <= 0 || h <= 0 || w > 65535 || h > 65535)\\n      throw 'Width/Height invalid.';\\n    if (indexed_pixels.length < w * h)\\n      throw 'Not enough pixels for the frame size.';\\n    var using_local_palette = true;\\n    var palette = opts.palette;\\n    if (palette === undefined || palette === null) {\\n      using_local_palette = false;\\n      palette = global_palette;\\n    }\\n    if (palette === undefined || palette === null)\\n      throw 'Must supply either a local or global palette.';\\n    var num_colors = check_palette_and_num_colors(palette);\\n    var min_code_size = 0;\\n    while (num_colors >>= 1)\\n      ++min_code_size;\\n    num_colors = 1 << min_code_size;\\n    var delay = opts.delay === undefined ? 0 : opts.delay;\\n    var disposal = opts.disposal === undefined ? 0 : opts.disposal;\\n    if (disposal < 0 || disposal > 3)\\n      throw 'Disposal out of range.';\\n    var use_transparency = false;\\n    var transparent_index = 0;\\n    if (opts.transparent !== undefined && opts.transparent !== null) {\\n      use_transparency = true;\\n      transparent_index = opts.transparent;\\n      if (transparent_index < 0 || transparent_index >= num_colors)\\n        throw 'Transparent color index.';\\n    }\\n    if (disposal !== 0 || use_transparency || delay !== 0) {\\n      buf[p++] = 33;\\n      buf[p++] = 249;\\n      buf[p++] = 4;\\n      buf[p++] = disposal << 2 | (use_transparency === true ? 1 : 0);\\n      buf[p++] = delay & 255;\\n      buf[p++] = delay >> 8 & 255;\\n      buf[p++] = transparent_index;\\n      buf[p++] = 0;\\n    }\\n    buf[p++] = 44;\\n    buf[p++] = x & 255;\\n    buf[p++] = x >> 8 & 255;\\n    buf[p++] = y & 255;\\n    buf[p++] = y >> 8 & 255;\\n    buf[p++] = w & 255;\\n    buf[p++] = w >> 8 & 255;\\n    buf[p++] = h & 255;\\n    buf[p++] = h >> 8 & 255;\\n    buf[p++] = using_local_palette === true ? 128 | min_code_size - 1 : 0;\\n    if (using_local_palette === true) {\\n      for (var i = 0, il = palette.length; i < il; ++i) {\\n        var rgb = palette[i];\\n        buf[p++] = rgb >> 16 & 255;\\n        buf[p++] = rgb >> 8 & 255;\\n        buf[p++] = rgb & 255;\\n      }\\n    }\\n    p = GifWriterOutputLZWCodeStream(buf, p, min_code_size < 2 ? 2 : min_code_size, indexed_pixels);\\n  };\\n  this.end = function () {\\n    if (ended === false) {\\n      buf[p++] = 59;\\n      ended = true;\\n    }\\n    return p;\\n  };\\n  function GifWriterOutputLZWCodeStream(buf, p, min_code_size, index_stream) {\\n    buf[p++] = min_code_size;\\n    var cur_subblock = p++;\\n    var clear_code = 1 << min_code_size;\\n    var code_mask = clear_code - 1;\\n    var eoi_code = clear_code + 1;\\n    var next_code = eoi_code + 1;\\n    var cur_code_size = min_code_size + 1;\\n    var cur_shift = 0;\\n    var cur = 0;\\n    function emit_bytes_to_buffer(bit_block_size) {\\n      while (cur_shift >= bit_block_size) {\\n        buf[p++] = cur & 255;\\n        cur >>= 8;\\n        cur_shift -= 8;\\n        if (p === cur_subblock + 256) {\\n          buf[cur_subblock] = 255;\\n          cur_subblock = p++;\\n        }\\n      }\\n    }\\n    function emit_code(c) {\\n      cur |= c << cur_shift;\\n      cur_shift += cur_code_size;\\n      emit_bytes_to_buffer(8);\\n    }\\n    var ib_code = index_stream[0] & code_mask;\\n    var code_table = {};\\n    emit_code(clear_code);\\n    for (var i = 1, il = index_stream.length; i < il; ++i) {\\n      var k = index_stream[i] & code_mask;\\n      var cur_key = ib_code << 8 | k;\\n      var cur_code = code_table[cur_key];\\n      if (cur_code === undefined) {\\n        cur |= ib_code << cur_shift;\\n        cur_shift += cur_code_size;\\n        while (cur_shift >= 8) {\\n          buf[p++] = cur & 255;\\n          cur >>= 8;\\n          cur_shift -= 8;\\n          if (p === cur_subblock + 256) {\\n            buf[cur_subblock] = 255;\\n            cur_subblock = p++;\\n          }\\n        }\\n        if (next_code === 4096) {\\n          emit_code(clear_code);\\n          next_code = eoi_code + 1;\\n          cur_code_size = min_code_size + 1;\\n          code_table = {};\\n        } else {\\n          if (next_code >= 1 << cur_code_size)\\n            ++cur_code_size;\\n          code_table[cur_key] = next_code++;\\n        }\\n        ib_code = k;\\n      } else {\\n        ib_code = cur_code;\\n      }\\n    }\\n    emit_code(ib_code);\\n    emit_code(eoi_code);\\n    emit_bytes_to_buffer(1);\\n    if (cur_subblock + 1 === p) {\\n      buf[cur_subblock] = 0;\\n    } else {\\n      buf[cur_subblock] = p - cur_subblock - 1;\\n      buf[p++] = 0;\\n    }\\n    return p;\\n  }\\n};\\nAnimatedGIF = function (utils, frameWorkerCode, NeuQuant, GifWriter) {\\n  var AnimatedGIF = function (options) {\\n    this.canvas = null;\\n    this.ctx = null;\\n    this.repeat = 0;\\n    this.frames = [];\\n    this.numRenderedFrames = 0;\\n    this.onRenderCompleteCallback = utils.noop;\\n    this.onRenderProgressCallback = utils.noop;\\n    this.workers = [];\\n    this.availableWorkers = [];\\n    this.generatingGIF = false;\\n    this.options = options;\\n    this.initializeWebWorkers(options);\\n  };\\n  AnimatedGIF.prototype = {\\n    'workerMethods': frameWorkerCode(),\\n    'initializeWebWorkers': function (options) {\\n      var processFrameWorkerCode = NeuQuant.toString() + '(' + frameWorkerCode.toString() + '());', webWorkerObj, objectUrl, webWorker, numWorkers, x = -1, workerError = '';\\n      numWorkers = options.numWorkers;\\n      while (++x < numWorkers) {\\n        webWorkerObj = utils.createWebWorker(processFrameWorkerCode);\\n        if (utils.isObject(webWorkerObj)) {\\n          objectUrl = webWorkerObj.objectUrl;\\n          webWorker = webWorkerObj.worker;\\n          this.workers.push({\\n            'worker': webWorker,\\n            'objectUrl': objectUrl\\n          });\\n          this.availableWorkers.push(webWorker);\\n        } else {\\n          workerError = webWorkerObj;\\n          utils.webWorkerError = !!webWorkerObj;\\n        }\\n      }\\n      this.workerError = workerError;\\n      this.canvas = document.createElement('canvas');\\n      this.canvas.width = options.gifWidth;\\n      this.canvas.height = options.gifHeight;\\n      this.ctx = this.canvas.getContext('2d');\\n      this.frames = [];\\n    },\\n    'getWorker': function () {\\n      return this.availableWorkers.pop();\\n    },\\n    'freeWorker': function (worker) {\\n      this.availableWorkers.push(worker);\\n    },\\n    'byteMap': function () {\\n      var byteMap = [];\\n      for (var i = 0; i < 256; i++) {\\n        byteMap[i] = String.fromCharCode(i);\\n      }\\n      return byteMap;\\n    }(),\\n    'bufferToString': function (buffer) {\\n      var numberValues = buffer.length, str = '', x = -1;\\n      while (++x < numberValues) {\\n        str += this.byteMap[buffer[x]];\\n      }\\n      return str;\\n    },\\n    'onFrameFinished': function (progressCallback) {\\n      var self = this, frames = self.frames, options = self.options;\\n      hasExistingImages = !!(options.images || []).length;\\n      allDone = frames.every(function (frame) {\\n        return !frame.beingProcessed && frame.done;\\n      });\\n      self.numRenderedFrames++;\\n      if (hasExistingImages) {\\n        progressCallback(self.numRenderedFrames / frames.length);\\n      }\\n      self.onRenderProgressCallback(self.numRenderedFrames * 0.75 / frames.length);\\n      if (allDone) {\\n        if (!self.generatingGIF) {\\n          self.generateGIF(frames, self.onRenderCompleteCallback);\\n        }\\n      } else {\\n        utils.requestTimeout(function () {\\n          self.processNextFrame();\\n        }, 1);\\n      }\\n    },\\n    'processFrame': function (position) {\\n      var AnimatedGifContext = this, options = this.options, progressCallback = options.progressCallback, sampleInterval = options.sampleInterval, frames = this.frames, frame, worker, done = function (ev) {\\n          var data = ev.data;\\n          delete frame.data;\\n          frame.pixels = Array.prototype.slice.call(data.pixels);\\n          frame.palette = Array.prototype.slice.call(data.palette);\\n          frame.done = true;\\n          frame.beingProcessed = false;\\n          AnimatedGifContext.freeWorker(worker);\\n          AnimatedGifContext.onFrameFinished(progressCallback);\\n        };\\n      frame = frames[position];\\n      if (frame.beingProcessed || frame.done) {\\n        this.onFrameFinished();\\n        return;\\n      }\\n      frame.sampleInterval = sampleInterval;\\n      frame.beingProcessed = true;\\n      frame.gifshot = true;\\n      worker = this.getWorker();\\n      if (worker) {\\n        worker.onmessage = done;\\n        worker.postMessage(frame);\\n      } else {\\n        done({ 'data': AnimatedGifContext.workerMethods.run(frame) });\\n      }\\n    },\\n    'startRendering': function (completeCallback) {\\n      this.onRenderCompleteCallback = completeCallback;\\n      for (var i = 0; i < this.options.numWorkers && i < this.frames.length; i++) {\\n        this.processFrame(i);\\n      }\\n    },\\n    'processNextFrame': function () {\\n      var position = -1;\\n      for (var i = 0; i < this.frames.length; i++) {\\n        var frame = this.frames[i];\\n        if (!frame.done && !frame.beingProcessed) {\\n          position = i;\\n          break;\\n        }\\n      }\\n      if (position >= 0) {\\n        this.processFrame(position);\\n      }\\n    },\\n    'generateGIF': function (frames, callback) {\\n      var buffer = [], gifOptions = { 'loop': this.repeat }, options = this.options, interval = options.interval, existingImages = options.images, hasExistingImages = !!existingImages.length, height = options.gifHeight, width = options.gifWidth, gifWriter = new GifWriter(buffer, width, height, gifOptions), onRenderProgressCallback = this.onRenderProgressCallback, delay = hasExistingImages ? interval * 100 : 0, bufferToString, gif;\\n      this.generatingGIF = true;\\n      utils.each(frames, function (iterator, frame) {\\n        var framePalette = frame.palette;\\n        onRenderProgressCallback(0.75 + 0.25 * frame.position * 1 / frames.length);\\n        gifWriter.addFrame(0, 0, width, height, frame.pixels, {\\n          palette: framePalette,\\n          delay: delay\\n        });\\n      });\\n      gifWriter.end();\\n      onRenderProgressCallback(1);\\n      this.frames = [];\\n      this.generatingGIF = false;\\n      if (utils.isFunction(callback)) {\\n        bufferToString = this.bufferToString(buffer);\\n        gif = 'data:image/gif;base64,' + utils.btoa(bufferToString);\\n        callback(gif);\\n      }\\n    },\\n    'setRepeat': function (r) {\\n      this.repeat = r;\\n    },\\n    'addFrame': function (element, gifshotOptions) {\\n      gifshotOptions = utils.isObject(gifshotOptions) ? gifshotOptions : {};\\n      var self = this, ctx = self.ctx, options = self.options, width = options.gifWidth, height = options.gifHeight, gifHeight = gifshotOptions.gifHeight, gifWidth = gifshotOptions.gifWidth, text = gifshotOptions.text, fontWeight = gifshotOptions.fontWeight, fontSize = utils.getFontSize(gifshotOptions), fontFamily = gifshotOptions.fontFamily, fontColor = gifshotOptions.fontColor, textAlign = gifshotOptions.textAlign, textBaseline = gifshotOptions.textBaseline, textXCoordinate = gifshotOptions.textXCoordinate ? gifshotOptions.textXCoordinate : textAlign === 'left' ? 1 : textAlign === 'right' ? width : width / 2, textYCoordinate = gifshotOptions.textYCoordinate ? gifshotOptions.textYCoordinate : textBaseline === 'top' ? 1 : textBaseline === 'center' ? height / 2 : height, font = fontWeight + ' ' + fontSize + ' ' + fontFamily, imageData;\\n      try {\\n        ctx.drawImage(element, 0, 0, width, height);\\n        if (text) {\\n          ctx.font = font;\\n          ctx.fillStyle = fontColor;\\n          ctx.textAlign = textAlign;\\n          ctx.textBaseline = textBaseline;\\n          ctx.fillText(text, textXCoordinate, textYCoordinate);\\n        }\\n        imageData = ctx.getImageData(0, 0, width, height);\\n        self.addFrameImageData(imageData);\\n      } catch (e) {\\n        return '' + e;\\n      }\\n    },\\n    'addFrameImageData': function (imageData) {\\n      var frames = this.frames, imageDataArray = imageData.data;\\n      this.frames.push({\\n        'data': imageDataArray,\\n        'width': imageData.width,\\n        'height': imageData.height,\\n        'palette': null,\\n        'dithering': null,\\n        'done': false,\\n        'beingProcessed': false,\\n        'position': frames.length\\n      });\\n    },\\n    'onRenderProgress': function (callback) {\\n      this.onRenderProgressCallback = callback;\\n    },\\n    'isRendering': function () {\\n      return this.generatingGIF;\\n    },\\n    'getBase64GIF': function (completeCallback) {\\n      var self = this, onRenderComplete = function (gif) {\\n          self.destroyWorkers();\\n          utils.requestTimeout(function () {\\n            completeCallback(gif);\\n          }, 0);\\n        };\\n      self.startRendering(onRenderComplete);\\n    },\\n    'destroyWorkers': function () {\\n      if (this.workerError) {\\n        return;\\n      }\\n      var workers = this.workers;\\n      utils.each(workers, function (iterator, workerObj) {\\n        var worker = workerObj.worker, objectUrl = workerObj.objectUrl;\\n        worker.terminate();\\n        utils.URL.revokeObjectURL(objectUrl);\\n      });\\n    }\\n  };\\n  return AnimatedGIF;\\n}(utils, processFrameWorker, NeuQuant, gifWriter);\\ngetBase64GIF = function getBase64GIF(animatedGifInstance, callback) {\\n  animatedGifInstance.getBase64GIF(function (image) {\\n    callback({\\n      'error': false,\\n      'errorCode': '',\\n      'errorMsg': '',\\n      'image': image\\n    });\\n  });\\n};\\nexistingImages = function (obj) {\\n  var images = obj.images, imagesLength = obj.imagesLength, callback = obj.callback, options = obj.options, skipObj = {\\n      'getUserMedia': true,\\n      'window.URL': true\\n    }, errorObj = error.validate(skipObj), loadedImages = [], loadedImagesLength = 0, tempImage, ag;\\n  if (errorObj.error) {\\n    return callback(errorObj);\\n  }\\n  ag = new AnimatedGIF(options);\\n  utils.each(images, function (index, currentImage) {\\n    if (utils.isElement(currentImage)) {\\n      if (options.crossOrigin) {\\n        currentImage.crossOrigin = options.crossOrigin;\\n      }\\n      loadedImages[index] = currentImage;\\n      loadedImagesLength += 1;\\n      if (loadedImagesLength === imagesLength) {\\n        addLoadedImagesToGif();\\n      }\\n    } else if (utils.isString(currentImage)) {\\n      tempImage = document.createElement('img');\\n      if (options.crossOrigin) {\\n        tempImage.crossOrigin = options.crossOrigin;\\n      }\\n      tempImage.onerror = function (e) {\\n        if (loadedImages.length > index) {\\n          loadedImages[index] = undefined;\\n        }\\n      }(function (tempImage) {\\n        tempImage.onload = function () {\\n          loadedImages[index] = tempImage;\\n          loadedImagesLength += 1;\\n          if (loadedImagesLength === imagesLength) {\\n            addLoadedImagesToGif();\\n          }\\n          utils.removeElement(tempImage);\\n        };\\n      }(tempImage));\\n      tempImage.src = currentImage;\\n      utils.setCSSAttr(tempImage, {\\n        'position': 'fixed',\\n        'opacity': '0'\\n      });\\n      document.body.appendChild(tempImage);\\n    }\\n  });\\n  function addLoadedImagesToGif() {\\n    utils.each(loadedImages, function (index, loadedImage) {\\n      if (loadedImage) {\\n        ag.addFrame(loadedImage, options);\\n      }\\n    });\\n    getBase64GIF(ag, callback);\\n  }\\n};\\nscreenShot = {\\n  getGIF: function (options, callback) {\\n    callback = utils.isFunction(callback) ? callback : utils.noop;\\n    var canvas = document.createElement('canvas'), context, existingImages = options.images, hasExistingImages = !!existingImages.length, videoElement = options.videoElement, keepCameraOn = options.keepCameraOn, webcamVideoElement = options.webcamVideoElement, cameraStream = options.cameraStream, gifWidth = +options.gifWidth, gifHeight = +options.gifHeight, videoWidth = options.videoWidth, videoHeight = options.videoHeight, sampleInterval = +options.sampleInterval, numWorkers = +options.numWorkers, crop = options.crop, interval = +options.interval, waitBetweenFrames = hasExistingImages ? 0 : interval * 1000, progressCallback = options.progressCallback, savedRenderingContexts = options.savedRenderingContexts, saveRenderingContexts = options.saveRenderingContexts, renderingContextsToSave = [], numFrames = savedRenderingContexts.length ? savedRenderingContexts.length : options.numFrames, pendingFrames = numFrames, ag = new AnimatedGIF(options), text = options.text, fontWeight = options.fontWeight, fontSize = utils.getFontSize(options), fontFamily = options.fontFamily, fontColor = options.fontColor, textAlign = options.textAlign, textBaseline = options.textBaseline, textXCoordinate = options.textXCoordinate ? options.textXCoordinate : textAlign === 'left' ? 1 : textAlign === 'right' ? gifWidth : gifWidth / 2, textYCoordinate = options.textYCoordinate ? options.textYCoordinate : textBaseline === 'top' ? 1 : textBaseline === 'center' ? gifHeight / 2 : gifHeight, font = fontWeight + ' ' + fontSize + ' ' + fontFamily, sourceX = crop ? Math.floor(crop.scaledWidth / 2) : 0, sourceWidth = crop ? videoWidth - crop.scaledWidth : 0, sourceY = crop ? Math.floor(crop.scaledHeight / 2) : 0, sourceHeight = crop ? videoHeight - crop.scaledHeight : 0, captureFrames = function captureFrame() {\\n        var framesLeft = pendingFrames - 1;\\n        if (savedRenderingContexts.length) {\\n          context.putImageData(savedRenderingContexts[numFrames - pendingFrames], 0, 0);\\n          finishCapture();\\n        } else {\\n          drawVideo();\\n        }\\n        function drawVideo() {\\n          try {\\n            if (sourceWidth > videoWidth) {\\n              sourceWidth = videoWidth;\\n            }\\n            if (sourceHeight > videoHeight) {\\n              sourceHeight = videoHeight;\\n            }\\n            if (sourceX < 0) {\\n              sourceX = 0;\\n            }\\n            if (sourceY < 0) {\\n              sourceY = 0;\\n            }\\n            context.drawImage(videoElement, sourceX, sourceY, sourceWidth, sourceHeight, 0, 0, gifWidth, gifHeight);\\n            finishCapture();\\n          } catch (e) {\\n            if (e.name === 'NS_ERROR_NOT_AVAILABLE') {\\n              utils.requestTimeout(drawVideo, 100);\\n            } else {\\n              throw e;\\n            }\\n          }\\n        }\\n        function finishCapture() {\\n          pendingFrames = framesLeft;\\n          var processedFrames = numFrames - pendingFrames;\\n          var imageData;\\n          var data;\\n          var rgba;\\n          var isBlackFrame;\\n          if (saveRenderingContexts) {\\n            renderingContextsToSave.push(context.getImageData(0, 0, gifWidth, gifHeight));\\n          }\\n          if (text) {\\n            context.font = font;\\n            context.fillStyle = fontColor;\\n            context.textAlign = textAlign;\\n            context.textBaseline = textBaseline;\\n            context.fillText(text, textXCoordinate, textYCoordinate);\\n          }\\n          imageData = context.getImageData(0, 0, gifWidth, gifHeight);\\n          data = imageData.data;\\n          rgba = data[0] + data[1] + data[2] + data[3];\\n          isBlackFrame = rgba === 0;\\n          if (!isBlackFrame) {\\n            ag.addFrameImageData(imageData);\\n          } else if (processedFrames === 1 && numFrames === 1) {\\n            drawVideo();\\n          }\\n          progressCallback(processedFrames / numFrames);\\n          if (framesLeft > 0) {\\n            utils.requestTimeout(captureFrame, waitBetweenFrames);\\n          }\\n          if (!pendingFrames) {\\n            ag.getBase64GIF(function (image) {\\n              callback({\\n                'error': false,\\n                'errorCode': '',\\n                'errorMsg': '',\\n                'image': image,\\n                'cameraStream': cameraStream,\\n                'videoElement': videoElement,\\n                'webcamVideoElement': webcamVideoElement,\\n                'savedRenderingContexts': renderingContextsToSave,\\n                'keepCameraOn': keepCameraOn\\n              });\\n            });\\n          }\\n        }\\n      };\\n    numFrames = numFrames != null ? numFrames : 10;\\n    interval = interval != null ? interval : 0.1;\\n    canvas.width = gifWidth;\\n    canvas.height = gifHeight;\\n    context = canvas.getContext('2d');\\n    (function capture() {\\n      if (!savedRenderingContexts.length && videoElement.currentTime === 0) {\\n        utils.requestTimeout(capture, 100);\\n        return;\\n      }\\n      captureFrames();\\n    }());\\n  },\\n  'getCropDimensions': function (obj) {\\n    var width = obj.videoWidth, height = obj.videoHeight, gifWidth = obj.gifWidth, gifHeight = obj.gifHeight, result = {\\n        width: 0,\\n        height: 0,\\n        scaledWidth: 0,\\n        scaledHeight: 0\\n      };\\n    if (width > height) {\\n      result.width = Math.round(width * (gifHeight / height)) - gifWidth;\\n      result.scaledWidth = Math.round(result.width * (height / gifHeight));\\n    } else {\\n      result.height = Math.round(height * (gifWidth / width)) - gifHeight;\\n      result.scaledHeight = Math.round(result.height * (width / gifWidth));\\n    }\\n    return result;\\n  }\\n};\\nvideoStream = {\\n  'loadedData': false,\\n  'defaultVideoDimensions': {\\n    'width': 640,\\n    'height': 480\\n  },\\n  'findVideoSize': function findVideoSizeMethod(obj) {\\n    findVideoSizeMethod.attempts = findVideoSizeMethod.attempts || 0;\\n    var self = this, videoElement = obj.videoElement, cameraStream = obj.cameraStream, completedCallback = obj.completedCallback;\\n    if (!videoElement) {\\n      return;\\n    }\\n    if (videoElement.videoWidth > 0 && videoElement.videoHeight > 0) {\\n      videoElement.removeEventListener('loadeddata', self.findVideoSize);\\n      completedCallback({\\n        'videoElement': videoElement,\\n        'cameraStream': cameraStream,\\n        'videoWidth': videoElement.videoWidth,\\n        'videoHeight': videoElement.videoHeight\\n      });\\n    } else {\\n      if (findVideoSizeMethod.attempts < 10) {\\n        findVideoSizeMethod.attempts += 1;\\n        utils.requestTimeout(function () {\\n          self.findVideoSize(obj);\\n        }, 200);\\n      } else {\\n        completedCallback({\\n          'videoElement': videoElement,\\n          'cameraStream': cameraStream,\\n          'videoWidth': self.defaultVideoDimensions.width,\\n          'videoHeight': self.defaultVideoDimensions.height\\n        });\\n      }\\n    }\\n  },\\n  'onStreamingTimeout': function (callback) {\\n    if (utils.isFunction(callback)) {\\n      callback({\\n        'error': true,\\n        'errorCode': 'getUserMedia',\\n        'errorMsg': 'There was an issue with the getUserMedia API - Timed out while trying to start streaming',\\n        'image': null,\\n        'cameraStream': {}\\n      });\\n    }\\n  },\\n  'stream': function (obj) {\\n    var self = this, existingVideo = utils.isArray(obj.existingVideo) ? obj.existingVideo[0] : obj.existingVideo, videoElement = obj.videoElement, cameraStream = obj.cameraStream, streamedCallback = obj.streamedCallback, completedCallback = obj.completedCallback;\\n    if (utils.isFunction(streamedCallback)) {\\n      streamedCallback();\\n    }\\n    if (existingVideo) {\\n      if (utils.isString(existingVideo)) {\\n        videoElement.src = existingVideo;\\n        videoElement.innerHTML = '<source src=\\\"' + existingVideo + '\\\" type=\\\"video/' + utils.getExtension(existingVideo) + '\\\" />';\\n      }\\n    } else if (videoElement.mozSrcObject) {\\n      videoElement.mozSrcObject = cameraStream;\\n    } else if (utils.URL) {\\n      videoElement.src = utils.URL.createObjectURL(cameraStream);\\n    }\\n    videoElement.play();\\n    utils.requestTimeout(function checkLoadedData() {\\n      checkLoadedData.count = checkLoadedData.count || 0;\\n      if (self.loadedData === true) {\\n        self.findVideoSize({\\n          'videoElement': videoElement,\\n          'cameraStream': cameraStream,\\n          'completedCallback': completedCallback\\n        });\\n        self.loadedData = false;\\n      } else {\\n        checkLoadedData.count += 1;\\n        if (checkLoadedData.count > 10) {\\n          self.findVideoSize({\\n            'videoElement': videoElement,\\n            'cameraStream': cameraStream,\\n            'completedCallback': completedCallback\\n          });\\n        } else {\\n          checkLoadedData();\\n        }\\n      }\\n    }, 100);\\n  },\\n  'startStreaming': function (obj) {\\n    var self = this, errorCallback = utils.isFunction(obj.error) ? obj.error : utils.noop, streamedCallback = utils.isFunction(obj.streamed) ? obj.streamed : utils.noop, completedCallback = utils.isFunction(obj.completed) ? obj.completed : utils.noop, existingVideo = obj.existingVideo, webcamVideoElement = obj.webcamVideoElement, videoElement = utils.isElement(existingVideo) ? existingVideo : webcamVideoElement ? webcamVideoElement : document.createElement('video'), lastCameraStream = obj.lastCameraStream, crossOrigin = obj.crossOrigin, options = obj.options, cameraStream;\\n    if (crossOrigin) {\\n      videoElement.crossOrigin = options.crossOrigin;\\n    }\\n    videoElement.autoplay = true;\\n    videoElement.loop = true;\\n    videoElement.muted = true;\\n    videoElement.addEventListener('loadeddata', function (event) {\\n      self.loadedData = true;\\n    });\\n    if (existingVideo) {\\n      self.stream({\\n        'videoElement': videoElement,\\n        'existingVideo': existingVideo,\\n        'completedCallback': completedCallback\\n      });\\n    } else if (lastCameraStream) {\\n      self.stream({\\n        'videoElement': videoElement,\\n        'cameraStream': lastCameraStream,\\n        'streamedCallback': streamedCallback,\\n        'completedCallback': completedCallback\\n      });\\n    } else {\\n      utils.getUserMedia({ 'video': true }, function (stream) {\\n        self.stream({\\n          'videoElement': videoElement,\\n          'cameraStream': stream,\\n          'streamedCallback': streamedCallback,\\n          'completedCallback': completedCallback\\n        });\\n      }, errorCallback);\\n    }\\n  },\\n  startVideoStreaming: function (callback, options) {\\n    options = options || {};\\n    var self = this, noGetUserMediaSupportTimeout, timeoutLength = options.timeout !== undefined ? options.timeout : 0, originalCallback = options.callback, webcamVideoElement = options.webcamVideoElement;\\n    if (timeoutLength > 0) {\\n      noGetUserMediaSupportTimeout = utils.requestTimeout(function () {\\n        self.onStreamingTimeout(originalCallback);\\n      }, 10000);\\n    }\\n    this.startStreaming({\\n      'error': function () {\\n        originalCallback({\\n          'error': true,\\n          'errorCode': 'getUserMedia',\\n          'errorMsg': 'There was an issue with the getUserMedia API - the user probably denied permission',\\n          'image': null,\\n          'cameraStream': {}\\n        });\\n      },\\n      'streamed': function () {\\n        clearTimeout(noGetUserMediaSupportTimeout);\\n      },\\n      'completed': function (obj) {\\n        var cameraStream = obj.cameraStream, videoElement = obj.videoElement, videoWidth = obj.videoWidth, videoHeight = obj.videoHeight;\\n        callback({\\n          'cameraStream': cameraStream,\\n          'videoElement': videoElement,\\n          'videoWidth': videoWidth,\\n          'videoHeight': videoHeight\\n        });\\n      },\\n      'lastCameraStream': options.lastCameraStream,\\n      'webcamVideoElement': webcamVideoElement,\\n      'crossOrigin': options.crossOrigin,\\n      'options': options\\n    });\\n  },\\n  'stopVideoStreaming': function (obj) {\\n    obj = utils.isObject(obj) ? obj : {};\\n    var cameraStream = obj.cameraStream, videoElement = obj.videoElement, keepCameraOn = obj.keepCameraOn, webcamVideoElement = obj.webcamVideoElement;\\n    if (!keepCameraOn && cameraStream && utils.isFunction(cameraStream.stop)) {\\n      cameraStream.stop();\\n    }\\n    if (utils.isElement(videoElement) && !webcamVideoElement) {\\n      videoElement.pause();\\n      if (utils.isFunction(utils.URL.revokeObjectURL) && !utils.webWorkerError) {\\n        if (videoElement.src) {\\n          utils.URL.revokeObjectURL(videoElement.src);\\n        }\\n      }\\n      utils.removeElement(videoElement);\\n    }\\n  }\\n};\\nstopVideoStreaming = function (obj) {\\n  obj = utils.isObject(obj) ? obj : {};\\n  var options = utils.isObject(obj.options) ? obj.options : {}, cameraStream = obj.cameraStream, videoElement = obj.videoElement, webcamVideoElement = obj.webcamVideoElement, keepCameraOn = obj.keepCameraOn;\\n  videoStream.stopVideoStreaming({\\n    'cameraStream': cameraStream,\\n    'videoElement': videoElement,\\n    'keepCameraOn': keepCameraOn,\\n    'webcamVideoElement': webcamVideoElement\\n  });\\n};\\ncreateAndGetGIF = function (obj, callback) {\\n  var options = obj.options || {}, images = options.images, video = options.video, numFrames = +options.numFrames, cameraStream = obj.cameraStream, videoElement = obj.videoElement, videoWidth = obj.videoWidth, videoHeight = obj.videoHeight, gifWidth = +options.gifWidth, gifHeight = +options.gifHeight, cropDimensions = screenShot.getCropDimensions({\\n      'videoWidth': videoWidth,\\n      'videoHeight': videoHeight,\\n      'gifHeight': gifHeight,\\n      'gifWidth': gifWidth\\n    }), completeCallback = callback;\\n  options.crop = cropDimensions;\\n  options.videoElement = videoElement;\\n  options.videoWidth = videoWidth;\\n  options.videoHeight = videoHeight;\\n  options.cameraStream = cameraStream;\\n  if (!utils.isElement(videoElement)) {\\n    return;\\n  }\\n  videoElement.width = gifWidth + cropDimensions.width;\\n  videoElement.height = gifHeight + cropDimensions.height;\\n  if (!options.webcamVideoElement) {\\n    utils.setCSSAttr(videoElement, {\\n      'position': 'fixed',\\n      'opacity': '0'\\n    });\\n    document.body.appendChild(videoElement);\\n  }\\n  videoElement.play();\\n  screenShot.getGIF(options, function (obj) {\\n    if ((!images || !images.length) && (!video || !video.length)) {\\n      stopVideoStreaming(obj);\\n    }\\n    completeCallback(obj);\\n  });\\n};\\nexistingVideo = function (obj) {\\n  var existingVideo = obj.existingVideo, callback = obj.callback, options = obj.options, skipObj = {\\n      'getUserMedia': true,\\n      'window.URL': true\\n    }, errorObj = error.validate(skipObj), loadedImages = 0, videoType, videoSrc, tempImage, ag;\\n  if (errorObj.error) {\\n    return callback(errorObj);\\n  }\\n  if (utils.isElement(existingVideo) && existingVideo.src) {\\n    videoSrc = existingVideo.src;\\n    videoType = utils.getExtension(videoSrc);\\n    if (!utils.isSupported.videoCodecs[videoType]) {\\n      return callback(error.messages.videoCodecs);\\n    }\\n  } else if (utils.isArray(existingVideo)) {\\n    utils.each(existingVideo, function (iterator, videoSrc) {\\n      videoType = videoSrc.substr(videoSrc.lastIndexOf('.') + 1, videoSrc.length);\\n      if (utils.isSupported.videoCodecs[videoType]) {\\n        existingVideo = videoSrc;\\n        return false;\\n      }\\n    });\\n  }\\n  videoStream.startStreaming({\\n    'completed': function (obj) {\\n      obj.options = options || {};\\n      createAndGetGIF(obj, callback);\\n    },\\n    'existingVideo': existingVideo,\\n    'crossOrigin': options.crossOrigin,\\n    'options': options\\n  });\\n};\\nexistingWebcam = function (obj) {\\n  var lastCameraStream = obj.lastCameraStream, callback = obj.callback, webcamVideoElement = obj.webcamVideoElement, options = obj.options;\\n  if (!isWebCamGIFSupported()) {\\n    return callback(error.validate());\\n  }\\n  if (options.savedRenderingContexts.length) {\\n    screenShot.getWebcamGIF(options, function (obj) {\\n      callback(obj);\\n    });\\n    return;\\n  }\\n  videoStream.startVideoStreaming(function (obj) {\\n    obj.options = options || {};\\n    createAndGetGIF(obj, callback);\\n  }, {\\n    'lastCameraStream': lastCameraStream,\\n    'callback': callback,\\n    'webcamVideoElement': webcamVideoElement,\\n    'crossOrigin': options.crossOrigin\\n  });\\n};\\ncreateGIF = function (userOptions, callback) {\\n  callback = utils.isFunction(userOptions) ? userOptions : callback;\\n  userOptions = utils.isObject(userOptions) ? userOptions : {};\\n  if (!utils.isFunction(callback)) {\\n    return;\\n  }\\n  var options = utils.mergeOptions(defaultOptions, userOptions) || {}, lastCameraStream = userOptions.cameraStream, images = options.images, imagesLength = images ? images.length : 0, video = options.video, webcamVideoElement = options.webcamVideoElement;\\n  options = utils.mergeOptions(options, {\\n    'gifWidth': Math.floor(options.gifWidth),\\n    'gifHeight': Math.floor(options.gifHeight)\\n  });\\n  if (imagesLength) {\\n    existingImages({\\n      'images': images,\\n      'imagesLength': imagesLength,\\n      'callback': callback,\\n      'options': options\\n    });\\n  } else if (video) {\\n    existingVideo({\\n      'existingVideo': video,\\n      'callback': callback,\\n      'options': options\\n    });\\n  } else {\\n    existingWebcam({\\n      'lastCameraStream': lastCameraStream,\\n      'callback': callback,\\n      'webcamVideoElement': webcamVideoElement,\\n      'options': options\\n    });\\n  }\\n};\\ntakeSnapShot = function (userOptions, callback) {\\n  callback = utils.isFunction(userOptions) ? userOptions : callback;\\n  userOptions = utils.isObject(userOptions) ? userOptions : {};\\n  if (!utils.isFunction(callback)) {\\n    return;\\n  }\\n  var mergedOptions = utils.mergeOptions(defaultOptions, userOptions), options = utils.mergeOptions(mergedOptions, {\\n      'interval': 0.1,\\n      'numFrames': 1,\\n      'gifWidth': Math.floor(mergedOptions.gifWidth),\\n      'gifHeight': Math.floor(mergedOptions.gifHeight)\\n    });\\n  createGIF(options, callback);\\n};\\nAPI = function (utils, error, defaultOptions, isSupported, isWebCamGIFSupported, isExistingImagesGIFSupported, isExistingVideoGIFSupported, createGIF, takeSnapShot, stopVideoStreaming) {\\n  var gifshot = {\\n    'utils': utils,\\n    'error': error,\\n    'defaultOptions': defaultOptions,\\n    'createGIF': createGIF,\\n    'takeSnapShot': takeSnapShot,\\n    'stopVideoStreaming': stopVideoStreaming,\\n    'isSupported': isSupported,\\n    'isWebCamGIFSupported': isWebCamGIFSupported,\\n    'isExistingVideoGIFSupported': isExistingVideoGIFSupported,\\n    'isExistingImagesGIFSupported': isExistingImagesGIFSupported,\\n    'VERSION': '0.3.2'\\n  };\\n  return gifshot;\\n}(utils, error, defaultOptions, isSupported, isWebCamGIFSupported, isExistingImagesGIFSupported, isExistingVideoGIFSupported, createGIF, takeSnapShot, stopVideoStreaming);\\n(function (API) {\\n  if (typeof define === 'function' && define.amd) {\\n    define([], function () {\\n      return API;\\n    });\\n  } else if (typeof exports !== 'undefined') {\\n    module.exports = API;\\n  } else {\\n    window.gifshot = API;\\n  }\\n}(API));\\n}(typeof window !== \\\"undefined\\\" ? window : {}, typeof document !== \\\"undefined\\\" ? document : { createElement: function() {} }, typeof window !== \\\"undefined\\\" ? window.navigator : {}));\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./~/gifshot/build/gifshot.js\n// module id = 419\n// module chunks = 2","module.exports = \"/*!\\n * jQuery JavaScript Library v3.2.1\\n * https://jquery.com/\\n *\\n * Includes Sizzle.js\\n * https://sizzlejs.com/\\n *\\n * Copyright JS Foundation and other contributors\\n * Released under the MIT license\\n * https://jquery.org/license\\n *\\n * Date: 2017-03-20T18:59Z\\n */\\n( function( global, factory ) {\\n\\n\\t\\\"use strict\\\";\\n\\n\\tif ( typeof module === \\\"object\\\" && typeof module.exports === \\\"object\\\" ) {\\n\\n\\t\\t// For CommonJS and CommonJS-like environments where a proper `window`\\n\\t\\t// is present, execute the factory and get jQuery.\\n\\t\\t// For environments that do not have a `window` with a `document`\\n\\t\\t// (such as Node.js), expose a factory as module.exports.\\n\\t\\t// This accentuates the need for the creation of a real `window`.\\n\\t\\t// e.g. var jQuery = require(\\\"jquery\\\")(window);\\n\\t\\t// See ticket #14549 for more info.\\n\\t\\tmodule.exports = global.document ?\\n\\t\\t\\tfactory( global, true ) :\\n\\t\\t\\tfunction( w ) {\\n\\t\\t\\t\\tif ( !w.document ) {\\n\\t\\t\\t\\t\\tthrow new Error( \\\"jQuery requires a window with a document\\\" );\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\treturn factory( w );\\n\\t\\t\\t};\\n\\t} else {\\n\\t\\tfactory( global );\\n\\t}\\n\\n// Pass this if window is not defined yet\\n} )( typeof window !== \\\"undefined\\\" ? window : this, function( window, noGlobal ) {\\n\\n// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1\\n// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode\\n// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common\\n// enough that all such attempts are guarded in a try block.\\n\\\"use strict\\\";\\n\\nvar arr = [];\\n\\nvar document = window.document;\\n\\nvar getProto = Object.getPrototypeOf;\\n\\nvar slice = arr.slice;\\n\\nvar concat = arr.concat;\\n\\nvar push = arr.push;\\n\\nvar indexOf = arr.indexOf;\\n\\nvar class2type = {};\\n\\nvar toString = class2type.toString;\\n\\nvar hasOwn = class2type.hasOwnProperty;\\n\\nvar fnToString = hasOwn.toString;\\n\\nvar ObjectFunctionString = fnToString.call( Object );\\n\\nvar support = {};\\n\\n\\n\\n\\tfunction DOMEval( code, doc ) {\\n\\t\\tdoc = doc || document;\\n\\n\\t\\tvar script = doc.createElement( \\\"script\\\" );\\n\\n\\t\\tscript.text = code;\\n\\t\\tdoc.head.appendChild( script ).parentNode.removeChild( script );\\n\\t}\\n/* global Symbol */\\n// Defining this global in .eslintrc.json would create a danger of using the global\\n// unguarded in another place, it seems safer to define global only for this module\\n\\n\\n\\nvar\\n\\tversion = \\\"3.2.1\\\",\\n\\n\\t// Define a local copy of jQuery\\n\\tjQuery = function( selector, context ) {\\n\\n\\t\\t// The jQuery object is actually just the init constructor 'enhanced'\\n\\t\\t// Need init if jQuery is called (just allow error to be thrown if not included)\\n\\t\\treturn new jQuery.fn.init( selector, context );\\n\\t},\\n\\n\\t// Support: Android <=4.0 only\\n\\t// Make sure we trim BOM and NBSP\\n\\trtrim = /^[\\\\s\\\\uFEFF\\\\xA0]+|[\\\\s\\\\uFEFF\\\\xA0]+$/g,\\n\\n\\t// Matches dashed string for camelizing\\n\\trmsPrefix = /^-ms-/,\\n\\trdashAlpha = /-([a-z])/g,\\n\\n\\t// Used by jQuery.camelCase as callback to replace()\\n\\tfcamelCase = function( all, letter ) {\\n\\t\\treturn letter.toUpperCase();\\n\\t};\\n\\njQuery.fn = jQuery.prototype = {\\n\\n\\t// The current version of jQuery being used\\n\\tjquery: version,\\n\\n\\tconstructor: jQuery,\\n\\n\\t// The default length of a jQuery object is 0\\n\\tlength: 0,\\n\\n\\ttoArray: function() {\\n\\t\\treturn slice.call( this );\\n\\t},\\n\\n\\t// Get the Nth element in the matched element set OR\\n\\t// Get the whole matched element set as a clean array\\n\\tget: function( num ) {\\n\\n\\t\\t// Return all the elements in a clean array\\n\\t\\tif ( num == null ) {\\n\\t\\t\\treturn slice.call( this );\\n\\t\\t}\\n\\n\\t\\t// Return just the one element from the set\\n\\t\\treturn num < 0 ? this[ num + this.length ] : this[ num ];\\n\\t},\\n\\n\\t// Take an array of elements and push it onto the stack\\n\\t// (returning the new matched element set)\\n\\tpushStack: function( elems ) {\\n\\n\\t\\t// Build a new jQuery matched element set\\n\\t\\tvar ret = jQuery.merge( this.constructor(), elems );\\n\\n\\t\\t// Add the old object onto the stack (as a reference)\\n\\t\\tret.prevObject = this;\\n\\n\\t\\t// Return the newly-formed element set\\n\\t\\treturn ret;\\n\\t},\\n\\n\\t// Execute a callback for every element in the matched set.\\n\\teach: function( callback ) {\\n\\t\\treturn jQuery.each( this, callback );\\n\\t},\\n\\n\\tmap: function( callback ) {\\n\\t\\treturn this.pushStack( jQuery.map( this, function( elem, i ) {\\n\\t\\t\\treturn callback.call( elem, i, elem );\\n\\t\\t} ) );\\n\\t},\\n\\n\\tslice: function() {\\n\\t\\treturn this.pushStack( slice.apply( this, arguments ) );\\n\\t},\\n\\n\\tfirst: function() {\\n\\t\\treturn this.eq( 0 );\\n\\t},\\n\\n\\tlast: function() {\\n\\t\\treturn this.eq( -1 );\\n\\t},\\n\\n\\teq: function( i ) {\\n\\t\\tvar len = this.length,\\n\\t\\t\\tj = +i + ( i < 0 ? len : 0 );\\n\\t\\treturn this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );\\n\\t},\\n\\n\\tend: function() {\\n\\t\\treturn this.prevObject || this.constructor();\\n\\t},\\n\\n\\t// For internal use only.\\n\\t// Behaves like an Array's method, not like a jQuery method.\\n\\tpush: push,\\n\\tsort: arr.sort,\\n\\tsplice: arr.splice\\n};\\n\\njQuery.extend = jQuery.fn.extend = function() {\\n\\tvar options, name, src, copy, copyIsArray, clone,\\n\\t\\ttarget = arguments[ 0 ] || {},\\n\\t\\ti = 1,\\n\\t\\tlength = arguments.length,\\n\\t\\tdeep = false;\\n\\n\\t// Handle a deep copy situation\\n\\tif ( typeof target === \\\"boolean\\\" ) {\\n\\t\\tdeep = target;\\n\\n\\t\\t// Skip the boolean and the target\\n\\t\\ttarget = arguments[ i ] || {};\\n\\t\\ti++;\\n\\t}\\n\\n\\t// Handle case when target is a string or something (possible in deep copy)\\n\\tif ( typeof target !== \\\"object\\\" && !jQuery.isFunction( target ) ) {\\n\\t\\ttarget = {};\\n\\t}\\n\\n\\t// Extend jQuery itself if only one argument is passed\\n\\tif ( i === length ) {\\n\\t\\ttarget = this;\\n\\t\\ti--;\\n\\t}\\n\\n\\tfor ( ; i < length; i++ ) {\\n\\n\\t\\t// Only deal with non-null/undefined values\\n\\t\\tif ( ( options = arguments[ i ] ) != null ) {\\n\\n\\t\\t\\t// Extend the base object\\n\\t\\t\\tfor ( name in options ) {\\n\\t\\t\\t\\tsrc = target[ name ];\\n\\t\\t\\t\\tcopy = options[ name ];\\n\\n\\t\\t\\t\\t// Prevent never-ending loop\\n\\t\\t\\t\\tif ( target === copy ) {\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Recurse if we're merging plain objects or arrays\\n\\t\\t\\t\\tif ( deep && copy && ( jQuery.isPlainObject( copy ) ||\\n\\t\\t\\t\\t\\t( copyIsArray = Array.isArray( copy ) ) ) ) {\\n\\n\\t\\t\\t\\t\\tif ( copyIsArray ) {\\n\\t\\t\\t\\t\\t\\tcopyIsArray = false;\\n\\t\\t\\t\\t\\t\\tclone = src && Array.isArray( src ) ? src : [];\\n\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\tclone = src && jQuery.isPlainObject( src ) ? src : {};\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t// Never move original objects, clone them\\n\\t\\t\\t\\t\\ttarget[ name ] = jQuery.extend( deep, clone, copy );\\n\\n\\t\\t\\t\\t// Don't bring in undefined values\\n\\t\\t\\t\\t} else if ( copy !== undefined ) {\\n\\t\\t\\t\\t\\ttarget[ name ] = copy;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t// Return the modified object\\n\\treturn target;\\n};\\n\\njQuery.extend( {\\n\\n\\t// Unique for each copy of jQuery on the page\\n\\texpando: \\\"jQuery\\\" + ( version + Math.random() ).replace( /\\\\D/g, \\\"\\\" ),\\n\\n\\t// Assume jQuery is ready without the ready module\\n\\tisReady: true,\\n\\n\\terror: function( msg ) {\\n\\t\\tthrow new Error( msg );\\n\\t},\\n\\n\\tnoop: function() {},\\n\\n\\tisFunction: function( obj ) {\\n\\t\\treturn jQuery.type( obj ) === \\\"function\\\";\\n\\t},\\n\\n\\tisWindow: function( obj ) {\\n\\t\\treturn obj != null && obj === obj.window;\\n\\t},\\n\\n\\tisNumeric: function( obj ) {\\n\\n\\t\\t// As of jQuery 3.0, isNumeric is limited to\\n\\t\\t// strings and numbers (primitives or objects)\\n\\t\\t// that can be coerced to finite numbers (gh-2662)\\n\\t\\tvar type = jQuery.type( obj );\\n\\t\\treturn ( type === \\\"number\\\" || type === \\\"string\\\" ) &&\\n\\n\\t\\t\\t// parseFloat NaNs numeric-cast false positives (\\\"\\\")\\n\\t\\t\\t// ...but misinterprets leading-number strings, particularly hex literals (\\\"0x...\\\")\\n\\t\\t\\t// subtraction forces infinities to NaN\\n\\t\\t\\t!isNaN( obj - parseFloat( obj ) );\\n\\t},\\n\\n\\tisPlainObject: function( obj ) {\\n\\t\\tvar proto, Ctor;\\n\\n\\t\\t// Detect obvious negatives\\n\\t\\t// Use toString instead of jQuery.type to catch host objects\\n\\t\\tif ( !obj || toString.call( obj ) !== \\\"[object Object]\\\" ) {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\tproto = getProto( obj );\\n\\n\\t\\t// Objects with no prototype (e.g., `Object.create( null )`) are plain\\n\\t\\tif ( !proto ) {\\n\\t\\t\\treturn true;\\n\\t\\t}\\n\\n\\t\\t// Objects with prototype are plain iff they were constructed by a global Object function\\n\\t\\tCtor = hasOwn.call( proto, \\\"constructor\\\" ) && proto.constructor;\\n\\t\\treturn typeof Ctor === \\\"function\\\" && fnToString.call( Ctor ) === ObjectFunctionString;\\n\\t},\\n\\n\\tisEmptyObject: function( obj ) {\\n\\n\\t\\t/* eslint-disable no-unused-vars */\\n\\t\\t// See https://github.com/eslint/eslint/issues/6125\\n\\t\\tvar name;\\n\\n\\t\\tfor ( name in obj ) {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\t\\treturn true;\\n\\t},\\n\\n\\ttype: function( obj ) {\\n\\t\\tif ( obj == null ) {\\n\\t\\t\\treturn obj + \\\"\\\";\\n\\t\\t}\\n\\n\\t\\t// Support: Android <=2.3 only (functionish RegExp)\\n\\t\\treturn typeof obj === \\\"object\\\" || typeof obj === \\\"function\\\" ?\\n\\t\\t\\tclass2type[ toString.call( obj ) ] || \\\"object\\\" :\\n\\t\\t\\ttypeof obj;\\n\\t},\\n\\n\\t// Evaluates a script in a global context\\n\\tglobalEval: function( code ) {\\n\\t\\tDOMEval( code );\\n\\t},\\n\\n\\t// Convert dashed to camelCase; used by the css and data modules\\n\\t// Support: IE <=9 - 11, Edge 12 - 13\\n\\t// Microsoft forgot to hump their vendor prefix (#9572)\\n\\tcamelCase: function( string ) {\\n\\t\\treturn string.replace( rmsPrefix, \\\"ms-\\\" ).replace( rdashAlpha, fcamelCase );\\n\\t},\\n\\n\\teach: function( obj, callback ) {\\n\\t\\tvar length, i = 0;\\n\\n\\t\\tif ( isArrayLike( obj ) ) {\\n\\t\\t\\tlength = obj.length;\\n\\t\\t\\tfor ( ; i < length; i++ ) {\\n\\t\\t\\t\\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\\n\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t} else {\\n\\t\\t\\tfor ( i in obj ) {\\n\\t\\t\\t\\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\\n\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn obj;\\n\\t},\\n\\n\\t// Support: Android <=4.0 only\\n\\ttrim: function( text ) {\\n\\t\\treturn text == null ?\\n\\t\\t\\t\\\"\\\" :\\n\\t\\t\\t( text + \\\"\\\" ).replace( rtrim, \\\"\\\" );\\n\\t},\\n\\n\\t// results is for internal usage only\\n\\tmakeArray: function( arr, results ) {\\n\\t\\tvar ret = results || [];\\n\\n\\t\\tif ( arr != null ) {\\n\\t\\t\\tif ( isArrayLike( Object( arr ) ) ) {\\n\\t\\t\\t\\tjQuery.merge( ret,\\n\\t\\t\\t\\t\\ttypeof arr === \\\"string\\\" ?\\n\\t\\t\\t\\t\\t[ arr ] : arr\\n\\t\\t\\t\\t);\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tpush.call( ret, arr );\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn ret;\\n\\t},\\n\\n\\tinArray: function( elem, arr, i ) {\\n\\t\\treturn arr == null ? -1 : indexOf.call( arr, elem, i );\\n\\t},\\n\\n\\t// Support: Android <=4.0 only, PhantomJS 1 only\\n\\t// push.apply(_, arraylike) throws on ancient WebKit\\n\\tmerge: function( first, second ) {\\n\\t\\tvar len = +second.length,\\n\\t\\t\\tj = 0,\\n\\t\\t\\ti = first.length;\\n\\n\\t\\tfor ( ; j < len; j++ ) {\\n\\t\\t\\tfirst[ i++ ] = second[ j ];\\n\\t\\t}\\n\\n\\t\\tfirst.length = i;\\n\\n\\t\\treturn first;\\n\\t},\\n\\n\\tgrep: function( elems, callback, invert ) {\\n\\t\\tvar callbackInverse,\\n\\t\\t\\tmatches = [],\\n\\t\\t\\ti = 0,\\n\\t\\t\\tlength = elems.length,\\n\\t\\t\\tcallbackExpect = !invert;\\n\\n\\t\\t// Go through the array, only saving the items\\n\\t\\t// that pass the validator function\\n\\t\\tfor ( ; i < length; i++ ) {\\n\\t\\t\\tcallbackInverse = !callback( elems[ i ], i );\\n\\t\\t\\tif ( callbackInverse !== callbackExpect ) {\\n\\t\\t\\t\\tmatches.push( elems[ i ] );\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn matches;\\n\\t},\\n\\n\\t// arg is for internal usage only\\n\\tmap: function( elems, callback, arg ) {\\n\\t\\tvar length, value,\\n\\t\\t\\ti = 0,\\n\\t\\t\\tret = [];\\n\\n\\t\\t// Go through the array, translating each of the items to their new values\\n\\t\\tif ( isArrayLike( elems ) ) {\\n\\t\\t\\tlength = elems.length;\\n\\t\\t\\tfor ( ; i < length; i++ ) {\\n\\t\\t\\t\\tvalue = callback( elems[ i ], i, arg );\\n\\n\\t\\t\\t\\tif ( value != null ) {\\n\\t\\t\\t\\t\\tret.push( value );\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t// Go through every key on the object,\\n\\t\\t} else {\\n\\t\\t\\tfor ( i in elems ) {\\n\\t\\t\\t\\tvalue = callback( elems[ i ], i, arg );\\n\\n\\t\\t\\t\\tif ( value != null ) {\\n\\t\\t\\t\\t\\tret.push( value );\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// Flatten any nested arrays\\n\\t\\treturn concat.apply( [], ret );\\n\\t},\\n\\n\\t// A global GUID counter for objects\\n\\tguid: 1,\\n\\n\\t// Bind a function to a context, optionally partially applying any\\n\\t// arguments.\\n\\tproxy: function( fn, context ) {\\n\\t\\tvar tmp, args, proxy;\\n\\n\\t\\tif ( typeof context === \\\"string\\\" ) {\\n\\t\\t\\ttmp = fn[ context ];\\n\\t\\t\\tcontext = fn;\\n\\t\\t\\tfn = tmp;\\n\\t\\t}\\n\\n\\t\\t// Quick check to determine if target is callable, in the spec\\n\\t\\t// this throws a TypeError, but we will just return undefined.\\n\\t\\tif ( !jQuery.isFunction( fn ) ) {\\n\\t\\t\\treturn undefined;\\n\\t\\t}\\n\\n\\t\\t// Simulated bind\\n\\t\\targs = slice.call( arguments, 2 );\\n\\t\\tproxy = function() {\\n\\t\\t\\treturn fn.apply( context || this, args.concat( slice.call( arguments ) ) );\\n\\t\\t};\\n\\n\\t\\t// Set the guid of unique handler to the same of original handler, so it can be removed\\n\\t\\tproxy.guid = fn.guid = fn.guid || jQuery.guid++;\\n\\n\\t\\treturn proxy;\\n\\t},\\n\\n\\tnow: Date.now,\\n\\n\\t// jQuery.support is not used in Core but other projects attach their\\n\\t// properties to it so it needs to exist.\\n\\tsupport: support\\n} );\\n\\nif ( typeof Symbol === \\\"function\\\" ) {\\n\\tjQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];\\n}\\n\\n// Populate the class2type map\\njQuery.each( \\\"Boolean Number String Function Array Date RegExp Object Error Symbol\\\".split( \\\" \\\" ),\\nfunction( i, name ) {\\n\\tclass2type[ \\\"[object \\\" + name + \\\"]\\\" ] = name.toLowerCase();\\n} );\\n\\nfunction isArrayLike( obj ) {\\n\\n\\t// Support: real iOS 8.2 only (not reproducible in simulator)\\n\\t// `in` check used to prevent JIT error (gh-2145)\\n\\t// hasOwn isn't used here due to false negatives\\n\\t// regarding Nodelist length in IE\\n\\tvar length = !!obj && \\\"length\\\" in obj && obj.length,\\n\\t\\ttype = jQuery.type( obj );\\n\\n\\tif ( type === \\\"function\\\" || jQuery.isWindow( obj ) ) {\\n\\t\\treturn false;\\n\\t}\\n\\n\\treturn type === \\\"array\\\" || length === 0 ||\\n\\t\\ttypeof length === \\\"number\\\" && length > 0 && ( length - 1 ) in obj;\\n}\\nvar Sizzle =\\n/*!\\n * Sizzle CSS Selector Engine v2.3.3\\n * https://sizzlejs.com/\\n *\\n * Copyright jQuery Foundation and other contributors\\n * Released under the MIT license\\n * http://jquery.org/license\\n *\\n * Date: 2016-08-08\\n */\\n(function( window ) {\\n\\nvar i,\\n\\tsupport,\\n\\tExpr,\\n\\tgetText,\\n\\tisXML,\\n\\ttokenize,\\n\\tcompile,\\n\\tselect,\\n\\toutermostContext,\\n\\tsortInput,\\n\\thasDuplicate,\\n\\n\\t// Local document vars\\n\\tsetDocument,\\n\\tdocument,\\n\\tdocElem,\\n\\tdocumentIsHTML,\\n\\trbuggyQSA,\\n\\trbuggyMatches,\\n\\tmatches,\\n\\tcontains,\\n\\n\\t// Instance-specific data\\n\\texpando = \\\"sizzle\\\" + 1 * new Date(),\\n\\tpreferredDoc = window.document,\\n\\tdirruns = 0,\\n\\tdone = 0,\\n\\tclassCache = createCache(),\\n\\ttokenCache = createCache(),\\n\\tcompilerCache = createCache(),\\n\\tsortOrder = function( a, b ) {\\n\\t\\tif ( a === b ) {\\n\\t\\t\\thasDuplicate = true;\\n\\t\\t}\\n\\t\\treturn 0;\\n\\t},\\n\\n\\t// Instance methods\\n\\thasOwn = ({}).hasOwnProperty,\\n\\tarr = [],\\n\\tpop = arr.pop,\\n\\tpush_native = arr.push,\\n\\tpush = arr.push,\\n\\tslice = arr.slice,\\n\\t// Use a stripped-down indexOf as it's faster than native\\n\\t// https://jsperf.com/thor-indexof-vs-for/5\\n\\tindexOf = function( list, elem ) {\\n\\t\\tvar i = 0,\\n\\t\\t\\tlen = list.length;\\n\\t\\tfor ( ; i < len; i++ ) {\\n\\t\\t\\tif ( list[i] === elem ) {\\n\\t\\t\\t\\treturn i;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\treturn -1;\\n\\t},\\n\\n\\tbooleans = \\\"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\\\",\\n\\n\\t// Regular expressions\\n\\n\\t// http://www.w3.org/TR/css3-selectors/#whitespace\\n\\twhitespace = \\\"[\\\\\\\\x20\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\f]\\\",\\n\\n\\t// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\\n\\tidentifier = \\\"(?:\\\\\\\\\\\\\\\\.|[\\\\\\\\w-]|[^\\\\0-\\\\\\\\xa0])+\\\",\\n\\n\\t// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\\n\\tattributes = \\\"\\\\\\\\[\\\" + whitespace + \\\"*(\\\" + identifier + \\\")(?:\\\" + whitespace +\\n\\t\\t// Operator (capture 2)\\n\\t\\t\\\"*([*^$|!~]?=)\\\" + whitespace +\\n\\t\\t// \\\"Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]\\\"\\n\\t\\t\\\"*(?:'((?:\\\\\\\\\\\\\\\\.|[^\\\\\\\\\\\\\\\\'])*)'|\\\\\\\"((?:\\\\\\\\\\\\\\\\.|[^\\\\\\\\\\\\\\\\\\\\\\\"])*)\\\\\\\"|(\\\" + identifier + \\\"))|)\\\" + whitespace +\\n\\t\\t\\\"*\\\\\\\\]\\\",\\n\\n\\tpseudos = \\\":(\\\" + identifier + \\\")(?:\\\\\\\\((\\\" +\\n\\t\\t// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\\n\\t\\t// 1. quoted (capture 3; capture 4 or capture 5)\\n\\t\\t\\\"('((?:\\\\\\\\\\\\\\\\.|[^\\\\\\\\\\\\\\\\'])*)'|\\\\\\\"((?:\\\\\\\\\\\\\\\\.|[^\\\\\\\\\\\\\\\\\\\\\\\"])*)\\\\\\\")|\\\" +\\n\\t\\t// 2. simple (capture 6)\\n\\t\\t\\\"((?:\\\\\\\\\\\\\\\\.|[^\\\\\\\\\\\\\\\\()[\\\\\\\\]]|\\\" + attributes + \\\")*)|\\\" +\\n\\t\\t// 3. anything else (capture 2)\\n\\t\\t\\\".*\\\" +\\n\\t\\t\\\")\\\\\\\\)|)\\\",\\n\\n\\t// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\\n\\trwhitespace = new RegExp( whitespace + \\\"+\\\", \\\"g\\\" ),\\n\\trtrim = new RegExp( \\\"^\\\" + whitespace + \\\"+|((?:^|[^\\\\\\\\\\\\\\\\])(?:\\\\\\\\\\\\\\\\.)*)\\\" + whitespace + \\\"+$\\\", \\\"g\\\" ),\\n\\n\\trcomma = new RegExp( \\\"^\\\" + whitespace + \\\"*,\\\" + whitespace + \\\"*\\\" ),\\n\\trcombinators = new RegExp( \\\"^\\\" + whitespace + \\\"*([>+~]|\\\" + whitespace + \\\")\\\" + whitespace + \\\"*\\\" ),\\n\\n\\trattributeQuotes = new RegExp( \\\"=\\\" + whitespace + \\\"*([^\\\\\\\\]'\\\\\\\"]*?)\\\" + whitespace + \\\"*\\\\\\\\]\\\", \\\"g\\\" ),\\n\\n\\trpseudo = new RegExp( pseudos ),\\n\\tridentifier = new RegExp( \\\"^\\\" + identifier + \\\"$\\\" ),\\n\\n\\tmatchExpr = {\\n\\t\\t\\\"ID\\\": new RegExp( \\\"^#(\\\" + identifier + \\\")\\\" ),\\n\\t\\t\\\"CLASS\\\": new RegExp( \\\"^\\\\\\\\.(\\\" + identifier + \\\")\\\" ),\\n\\t\\t\\\"TAG\\\": new RegExp( \\\"^(\\\" + identifier + \\\"|[*])\\\" ),\\n\\t\\t\\\"ATTR\\\": new RegExp( \\\"^\\\" + attributes ),\\n\\t\\t\\\"PSEUDO\\\": new RegExp( \\\"^\\\" + pseudos ),\\n\\t\\t\\\"CHILD\\\": new RegExp( \\\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\\\\\(\\\" + whitespace +\\n\\t\\t\\t\\\"*(even|odd|(([+-]|)(\\\\\\\\d*)n|)\\\" + whitespace + \\\"*(?:([+-]|)\\\" + whitespace +\\n\\t\\t\\t\\\"*(\\\\\\\\d+)|))\\\" + whitespace + \\\"*\\\\\\\\)|)\\\", \\\"i\\\" ),\\n\\t\\t\\\"bool\\\": new RegExp( \\\"^(?:\\\" + booleans + \\\")$\\\", \\\"i\\\" ),\\n\\t\\t// For use in libraries implementing .is()\\n\\t\\t// We use this for POS matching in `select`\\n\\t\\t\\\"needsContext\\\": new RegExp( \\\"^\\\" + whitespace + \\\"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\\\\\(\\\" +\\n\\t\\t\\twhitespace + \\\"*((?:-\\\\\\\\d)?\\\\\\\\d*)\\\" + whitespace + \\\"*\\\\\\\\)|)(?=[^-]|$)\\\", \\\"i\\\" )\\n\\t},\\n\\n\\trinputs = /^(?:input|select|textarea|button)$/i,\\n\\trheader = /^h\\\\d$/i,\\n\\n\\trnative = /^[^{]+\\\\{\\\\s*\\\\[native \\\\w/,\\n\\n\\t// Easily-parseable/retrievable ID or TAG or CLASS selectors\\n\\trquickExpr = /^(?:#([\\\\w-]+)|(\\\\w+)|\\\\.([\\\\w-]+))$/,\\n\\n\\trsibling = /[+~]/,\\n\\n\\t// CSS escapes\\n\\t// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\\n\\trunescape = new RegExp( \\\"\\\\\\\\\\\\\\\\([\\\\\\\\da-f]{1,6}\\\" + whitespace + \\\"?|(\\\" + whitespace + \\\")|.)\\\", \\\"ig\\\" ),\\n\\tfunescape = function( _, escaped, escapedWhitespace ) {\\n\\t\\tvar high = \\\"0x\\\" + escaped - 0x10000;\\n\\t\\t// NaN means non-codepoint\\n\\t\\t// Support: Firefox<24\\n\\t\\t// Workaround erroneous numeric interpretation of +\\\"0x\\\"\\n\\t\\treturn high !== high || escapedWhitespace ?\\n\\t\\t\\tescaped :\\n\\t\\t\\thigh < 0 ?\\n\\t\\t\\t\\t// BMP codepoint\\n\\t\\t\\t\\tString.fromCharCode( high + 0x10000 ) :\\n\\t\\t\\t\\t// Supplemental Plane codepoint (surrogate pair)\\n\\t\\t\\t\\tString.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );\\n\\t},\\n\\n\\t// CSS string/identifier serialization\\n\\t// https://drafts.csswg.org/cssom/#common-serializing-idioms\\n\\trcssescape = /([\\\\0-\\\\x1f\\\\x7f]|^-?\\\\d)|^-$|[^\\\\0-\\\\x1f\\\\x7f-\\\\uFFFF\\\\w-]/g,\\n\\tfcssescape = function( ch, asCodePoint ) {\\n\\t\\tif ( asCodePoint ) {\\n\\n\\t\\t\\t// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER\\n\\t\\t\\tif ( ch === \\\"\\\\0\\\" ) {\\n\\t\\t\\t\\treturn \\\"\\\\uFFFD\\\";\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Control characters and (dependent upon position) numbers get escaped as code points\\n\\t\\t\\treturn ch.slice( 0, -1 ) + \\\"\\\\\\\\\\\" + ch.charCodeAt( ch.length - 1 ).toString( 16 ) + \\\" \\\";\\n\\t\\t}\\n\\n\\t\\t// Other potentially-special ASCII characters get backslash-escaped\\n\\t\\treturn \\\"\\\\\\\\\\\" + ch;\\n\\t},\\n\\n\\t// Used for iframes\\n\\t// See setDocument()\\n\\t// Removing the function wrapper causes a \\\"Permission Denied\\\"\\n\\t// error in IE\\n\\tunloadHandler = function() {\\n\\t\\tsetDocument();\\n\\t},\\n\\n\\tdisabledAncestor = addCombinator(\\n\\t\\tfunction( elem ) {\\n\\t\\t\\treturn elem.disabled === true && (\\\"form\\\" in elem || \\\"label\\\" in elem);\\n\\t\\t},\\n\\t\\t{ dir: \\\"parentNode\\\", next: \\\"legend\\\" }\\n\\t);\\n\\n// Optimize for push.apply( _, NodeList )\\ntry {\\n\\tpush.apply(\\n\\t\\t(arr = slice.call( preferredDoc.childNodes )),\\n\\t\\tpreferredDoc.childNodes\\n\\t);\\n\\t// Support: Android<4.0\\n\\t// Detect silently failing push.apply\\n\\tarr[ preferredDoc.childNodes.length ].nodeType;\\n} catch ( e ) {\\n\\tpush = { apply: arr.length ?\\n\\n\\t\\t// Leverage slice if possible\\n\\t\\tfunction( target, els ) {\\n\\t\\t\\tpush_native.apply( target, slice.call(els) );\\n\\t\\t} :\\n\\n\\t\\t// Support: IE<9\\n\\t\\t// Otherwise append directly\\n\\t\\tfunction( target, els ) {\\n\\t\\t\\tvar j = target.length,\\n\\t\\t\\t\\ti = 0;\\n\\t\\t\\t// Can't trust NodeList.length\\n\\t\\t\\twhile ( (target[j++] = els[i++]) ) {}\\n\\t\\t\\ttarget.length = j - 1;\\n\\t\\t}\\n\\t};\\n}\\n\\nfunction Sizzle( selector, context, results, seed ) {\\n\\tvar m, i, elem, nid, match, groups, newSelector,\\n\\t\\tnewContext = context && context.ownerDocument,\\n\\n\\t\\t// nodeType defaults to 9, since context defaults to document\\n\\t\\tnodeType = context ? context.nodeType : 9;\\n\\n\\tresults = results || [];\\n\\n\\t// Return early from calls with invalid selector or context\\n\\tif ( typeof selector !== \\\"string\\\" || !selector ||\\n\\t\\tnodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {\\n\\n\\t\\treturn results;\\n\\t}\\n\\n\\t// Try to shortcut find operations (as opposed to filters) in HTML documents\\n\\tif ( !seed ) {\\n\\n\\t\\tif ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {\\n\\t\\t\\tsetDocument( context );\\n\\t\\t}\\n\\t\\tcontext = context || document;\\n\\n\\t\\tif ( documentIsHTML ) {\\n\\n\\t\\t\\t// If the selector is sufficiently simple, try using a \\\"get*By*\\\" DOM method\\n\\t\\t\\t// (excepting DocumentFragment context, where the methods don't exist)\\n\\t\\t\\tif ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {\\n\\n\\t\\t\\t\\t// ID selector\\n\\t\\t\\t\\tif ( (m = match[1]) ) {\\n\\n\\t\\t\\t\\t\\t// Document context\\n\\t\\t\\t\\t\\tif ( nodeType === 9 ) {\\n\\t\\t\\t\\t\\t\\tif ( (elem = context.getElementById( m )) ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t// Support: IE, Opera, Webkit\\n\\t\\t\\t\\t\\t\\t\\t// TODO: identify versions\\n\\t\\t\\t\\t\\t\\t\\t// getElementById can match elements by name instead of ID\\n\\t\\t\\t\\t\\t\\t\\tif ( elem.id === m ) {\\n\\t\\t\\t\\t\\t\\t\\t\\tresults.push( elem );\\n\\t\\t\\t\\t\\t\\t\\t\\treturn results;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\treturn results;\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t// Element context\\n\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\t// Support: IE, Opera, Webkit\\n\\t\\t\\t\\t\\t\\t// TODO: identify versions\\n\\t\\t\\t\\t\\t\\t// getElementById can match elements by name instead of ID\\n\\t\\t\\t\\t\\t\\tif ( newContext && (elem = newContext.getElementById( m )) &&\\n\\t\\t\\t\\t\\t\\t\\tcontains( context, elem ) &&\\n\\t\\t\\t\\t\\t\\t\\telem.id === m ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tresults.push( elem );\\n\\t\\t\\t\\t\\t\\t\\treturn results;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Type selector\\n\\t\\t\\t\\t} else if ( match[2] ) {\\n\\t\\t\\t\\t\\tpush.apply( results, context.getElementsByTagName( selector ) );\\n\\t\\t\\t\\t\\treturn results;\\n\\n\\t\\t\\t\\t// Class selector\\n\\t\\t\\t\\t} else if ( (m = match[3]) && support.getElementsByClassName &&\\n\\t\\t\\t\\t\\tcontext.getElementsByClassName ) {\\n\\n\\t\\t\\t\\t\\tpush.apply( results, context.getElementsByClassName( m ) );\\n\\t\\t\\t\\t\\treturn results;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Take advantage of querySelectorAll\\n\\t\\t\\tif ( support.qsa &&\\n\\t\\t\\t\\t!compilerCache[ selector + \\\" \\\" ] &&\\n\\t\\t\\t\\t(!rbuggyQSA || !rbuggyQSA.test( selector )) ) {\\n\\n\\t\\t\\t\\tif ( nodeType !== 1 ) {\\n\\t\\t\\t\\t\\tnewContext = context;\\n\\t\\t\\t\\t\\tnewSelector = selector;\\n\\n\\t\\t\\t\\t// qSA looks outside Element context, which is not what we want\\n\\t\\t\\t\\t// Thanks to Andrew Dupont for this workaround technique\\n\\t\\t\\t\\t// Support: IE <=8\\n\\t\\t\\t\\t// Exclude object elements\\n\\t\\t\\t\\t} else if ( context.nodeName.toLowerCase() !== \\\"object\\\" ) {\\n\\n\\t\\t\\t\\t\\t// Capture the context ID, setting it first if necessary\\n\\t\\t\\t\\t\\tif ( (nid = context.getAttribute( \\\"id\\\" )) ) {\\n\\t\\t\\t\\t\\t\\tnid = nid.replace( rcssescape, fcssescape );\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\tcontext.setAttribute( \\\"id\\\", (nid = expando) );\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t// Prefix every selector in the list\\n\\t\\t\\t\\t\\tgroups = tokenize( selector );\\n\\t\\t\\t\\t\\ti = groups.length;\\n\\t\\t\\t\\t\\twhile ( i-- ) {\\n\\t\\t\\t\\t\\t\\tgroups[i] = \\\"#\\\" + nid + \\\" \\\" + toSelector( groups[i] );\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tnewSelector = groups.join( \\\",\\\" );\\n\\n\\t\\t\\t\\t\\t// Expand context for sibling selectors\\n\\t\\t\\t\\t\\tnewContext = rsibling.test( selector ) && testContext( context.parentNode ) ||\\n\\t\\t\\t\\t\\t\\tcontext;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( newSelector ) {\\n\\t\\t\\t\\t\\ttry {\\n\\t\\t\\t\\t\\t\\tpush.apply( results,\\n\\t\\t\\t\\t\\t\\t\\tnewContext.querySelectorAll( newSelector )\\n\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\treturn results;\\n\\t\\t\\t\\t\\t} catch ( qsaError ) {\\n\\t\\t\\t\\t\\t} finally {\\n\\t\\t\\t\\t\\t\\tif ( nid === expando ) {\\n\\t\\t\\t\\t\\t\\t\\tcontext.removeAttribute( \\\"id\\\" );\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t// All others\\n\\treturn select( selector.replace( rtrim, \\\"$1\\\" ), context, results, seed );\\n}\\n\\n/**\\n * Create key-value caches of limited size\\n * @returns {function(string, object)} Returns the Object data after storing it on itself with\\n *\\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\\n *\\tdeleting the oldest entry\\n */\\nfunction createCache() {\\n\\tvar keys = [];\\n\\n\\tfunction cache( key, value ) {\\n\\t\\t// Use (key + \\\" \\\") to avoid collision with native prototype properties (see Issue #157)\\n\\t\\tif ( keys.push( key + \\\" \\\" ) > Expr.cacheLength ) {\\n\\t\\t\\t// Only keep the most recent entries\\n\\t\\t\\tdelete cache[ keys.shift() ];\\n\\t\\t}\\n\\t\\treturn (cache[ key + \\\" \\\" ] = value);\\n\\t}\\n\\treturn cache;\\n}\\n\\n/**\\n * Mark a function for special use by Sizzle\\n * @param {Function} fn The function to mark\\n */\\nfunction markFunction( fn ) {\\n\\tfn[ expando ] = true;\\n\\treturn fn;\\n}\\n\\n/**\\n * Support testing using an element\\n * @param {Function} fn Passed the created element and returns a boolean result\\n */\\nfunction assert( fn ) {\\n\\tvar el = document.createElement(\\\"fieldset\\\");\\n\\n\\ttry {\\n\\t\\treturn !!fn( el );\\n\\t} catch (e) {\\n\\t\\treturn false;\\n\\t} finally {\\n\\t\\t// Remove from its parent by default\\n\\t\\tif ( el.parentNode ) {\\n\\t\\t\\tel.parentNode.removeChild( el );\\n\\t\\t}\\n\\t\\t// release memory in IE\\n\\t\\tel = null;\\n\\t}\\n}\\n\\n/**\\n * Adds the same handler for all of the specified attrs\\n * @param {String} attrs Pipe-separated list of attributes\\n * @param {Function} handler The method that will be applied\\n */\\nfunction addHandle( attrs, handler ) {\\n\\tvar arr = attrs.split(\\\"|\\\"),\\n\\t\\ti = arr.length;\\n\\n\\twhile ( i-- ) {\\n\\t\\tExpr.attrHandle[ arr[i] ] = handler;\\n\\t}\\n}\\n\\n/**\\n * Checks document order of two siblings\\n * @param {Element} a\\n * @param {Element} b\\n * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\\n */\\nfunction siblingCheck( a, b ) {\\n\\tvar cur = b && a,\\n\\t\\tdiff = cur && a.nodeType === 1 && b.nodeType === 1 &&\\n\\t\\t\\ta.sourceIndex - b.sourceIndex;\\n\\n\\t// Use IE sourceIndex if available on both nodes\\n\\tif ( diff ) {\\n\\t\\treturn diff;\\n\\t}\\n\\n\\t// Check if b follows a\\n\\tif ( cur ) {\\n\\t\\twhile ( (cur = cur.nextSibling) ) {\\n\\t\\t\\tif ( cur === b ) {\\n\\t\\t\\t\\treturn -1;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\treturn a ? 1 : -1;\\n}\\n\\n/**\\n * Returns a function to use in pseudos for input types\\n * @param {String} type\\n */\\nfunction createInputPseudo( type ) {\\n\\treturn function( elem ) {\\n\\t\\tvar name = elem.nodeName.toLowerCase();\\n\\t\\treturn name === \\\"input\\\" && elem.type === type;\\n\\t};\\n}\\n\\n/**\\n * Returns a function to use in pseudos for buttons\\n * @param {String} type\\n */\\nfunction createButtonPseudo( type ) {\\n\\treturn function( elem ) {\\n\\t\\tvar name = elem.nodeName.toLowerCase();\\n\\t\\treturn (name === \\\"input\\\" || name === \\\"button\\\") && elem.type === type;\\n\\t};\\n}\\n\\n/**\\n * Returns a function to use in pseudos for :enabled/:disabled\\n * @param {Boolean} disabled true for :disabled; false for :enabled\\n */\\nfunction createDisabledPseudo( disabled ) {\\n\\n\\t// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable\\n\\treturn function( elem ) {\\n\\n\\t\\t// Only certain elements can match :enabled or :disabled\\n\\t\\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled\\n\\t\\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled\\n\\t\\tif ( \\\"form\\\" in elem ) {\\n\\n\\t\\t\\t// Check for inherited disabledness on relevant non-disabled elements:\\n\\t\\t\\t// * listed form-associated elements in a disabled fieldset\\n\\t\\t\\t//   https://html.spec.whatwg.org/multipage/forms.html#category-listed\\n\\t\\t\\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled\\n\\t\\t\\t// * option elements in a disabled optgroup\\n\\t\\t\\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled\\n\\t\\t\\t// All such elements have a \\\"form\\\" property.\\n\\t\\t\\tif ( elem.parentNode && elem.disabled === false ) {\\n\\n\\t\\t\\t\\t// Option elements defer to a parent optgroup if present\\n\\t\\t\\t\\tif ( \\\"label\\\" in elem ) {\\n\\t\\t\\t\\t\\tif ( \\\"label\\\" in elem.parentNode ) {\\n\\t\\t\\t\\t\\t\\treturn elem.parentNode.disabled === disabled;\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\treturn elem.disabled === disabled;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Support: IE 6 - 11\\n\\t\\t\\t\\t// Use the isDisabled shortcut property to check for disabled fieldset ancestors\\n\\t\\t\\t\\treturn elem.isDisabled === disabled ||\\n\\n\\t\\t\\t\\t\\t// Where there is no isDisabled, check manually\\n\\t\\t\\t\\t\\t/* jshint -W018 */\\n\\t\\t\\t\\t\\telem.isDisabled !== !disabled &&\\n\\t\\t\\t\\t\\t\\tdisabledAncestor( elem ) === disabled;\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn elem.disabled === disabled;\\n\\n\\t\\t// Try to winnow out elements that can't be disabled before trusting the disabled property.\\n\\t\\t// Some victims get caught in our net (label, legend, menu, track), but it shouldn't\\n\\t\\t// even exist on them, let alone have a boolean value.\\n\\t\\t} else if ( \\\"label\\\" in elem ) {\\n\\t\\t\\treturn elem.disabled === disabled;\\n\\t\\t}\\n\\n\\t\\t// Remaining elements are neither :enabled nor :disabled\\n\\t\\treturn false;\\n\\t};\\n}\\n\\n/**\\n * Returns a function to use in pseudos for positionals\\n * @param {Function} fn\\n */\\nfunction createPositionalPseudo( fn ) {\\n\\treturn markFunction(function( argument ) {\\n\\t\\targument = +argument;\\n\\t\\treturn markFunction(function( seed, matches ) {\\n\\t\\t\\tvar j,\\n\\t\\t\\t\\tmatchIndexes = fn( [], seed.length, argument ),\\n\\t\\t\\t\\ti = matchIndexes.length;\\n\\n\\t\\t\\t// Match elements found at the specified indexes\\n\\t\\t\\twhile ( i-- ) {\\n\\t\\t\\t\\tif ( seed[ (j = matchIndexes[i]) ] ) {\\n\\t\\t\\t\\t\\tseed[j] = !(matches[j] = seed[j]);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t});\\n\\t});\\n}\\n\\n/**\\n * Checks a node for validity as a Sizzle context\\n * @param {Element|Object=} context\\n * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\\n */\\nfunction testContext( context ) {\\n\\treturn context && typeof context.getElementsByTagName !== \\\"undefined\\\" && context;\\n}\\n\\n// Expose support vars for convenience\\nsupport = Sizzle.support = {};\\n\\n/**\\n * Detects XML nodes\\n * @param {Element|Object} elem An element or a document\\n * @returns {Boolean} True iff elem is a non-HTML XML node\\n */\\nisXML = Sizzle.isXML = function( elem ) {\\n\\t// documentElement is verified for cases where it doesn't yet exist\\n\\t// (such as loading iframes in IE - #4833)\\n\\tvar documentElement = elem && (elem.ownerDocument || elem).documentElement;\\n\\treturn documentElement ? documentElement.nodeName !== \\\"HTML\\\" : false;\\n};\\n\\n/**\\n * Sets document-related variables once based on the current document\\n * @param {Element|Object} [doc] An element or document object to use to set the document\\n * @returns {Object} Returns the current document\\n */\\nsetDocument = Sizzle.setDocument = function( node ) {\\n\\tvar hasCompare, subWindow,\\n\\t\\tdoc = node ? node.ownerDocument || node : preferredDoc;\\n\\n\\t// Return early if doc is invalid or already selected\\n\\tif ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {\\n\\t\\treturn document;\\n\\t}\\n\\n\\t// Update global variables\\n\\tdocument = doc;\\n\\tdocElem = document.documentElement;\\n\\tdocumentIsHTML = !isXML( document );\\n\\n\\t// Support: IE 9-11, Edge\\n\\t// Accessing iframe documents after unload throws \\\"permission denied\\\" errors (jQuery #13936)\\n\\tif ( preferredDoc !== document &&\\n\\t\\t(subWindow = document.defaultView) && subWindow.top !== subWindow ) {\\n\\n\\t\\t// Support: IE 11, Edge\\n\\t\\tif ( subWindow.addEventListener ) {\\n\\t\\t\\tsubWindow.addEventListener( \\\"unload\\\", unloadHandler, false );\\n\\n\\t\\t// Support: IE 9 - 10 only\\n\\t\\t} else if ( subWindow.attachEvent ) {\\n\\t\\t\\tsubWindow.attachEvent( \\\"onunload\\\", unloadHandler );\\n\\t\\t}\\n\\t}\\n\\n\\t/* Attributes\\n\\t---------------------------------------------------------------------- */\\n\\n\\t// Support: IE<8\\n\\t// Verify that getAttribute really returns attributes and not properties\\n\\t// (excepting IE8 booleans)\\n\\tsupport.attributes = assert(function( el ) {\\n\\t\\tel.className = \\\"i\\\";\\n\\t\\treturn !el.getAttribute(\\\"className\\\");\\n\\t});\\n\\n\\t/* getElement(s)By*\\n\\t---------------------------------------------------------------------- */\\n\\n\\t// Check if getElementsByTagName(\\\"*\\\") returns only elements\\n\\tsupport.getElementsByTagName = assert(function( el ) {\\n\\t\\tel.appendChild( document.createComment(\\\"\\\") );\\n\\t\\treturn !el.getElementsByTagName(\\\"*\\\").length;\\n\\t});\\n\\n\\t// Support: IE<9\\n\\tsupport.getElementsByClassName = rnative.test( document.getElementsByClassName );\\n\\n\\t// Support: IE<10\\n\\t// Check if getElementById returns elements by name\\n\\t// The broken getElementById methods don't pick up programmatically-set names,\\n\\t// so use a roundabout getElementsByName test\\n\\tsupport.getById = assert(function( el ) {\\n\\t\\tdocElem.appendChild( el ).id = expando;\\n\\t\\treturn !document.getElementsByName || !document.getElementsByName( expando ).length;\\n\\t});\\n\\n\\t// ID filter and find\\n\\tif ( support.getById ) {\\n\\t\\tExpr.filter[\\\"ID\\\"] = function( id ) {\\n\\t\\t\\tvar attrId = id.replace( runescape, funescape );\\n\\t\\t\\treturn function( elem ) {\\n\\t\\t\\t\\treturn elem.getAttribute(\\\"id\\\") === attrId;\\n\\t\\t\\t};\\n\\t\\t};\\n\\t\\tExpr.find[\\\"ID\\\"] = function( id, context ) {\\n\\t\\t\\tif ( typeof context.getElementById !== \\\"undefined\\\" && documentIsHTML ) {\\n\\t\\t\\t\\tvar elem = context.getElementById( id );\\n\\t\\t\\t\\treturn elem ? [ elem ] : [];\\n\\t\\t\\t}\\n\\t\\t};\\n\\t} else {\\n\\t\\tExpr.filter[\\\"ID\\\"] =  function( id ) {\\n\\t\\t\\tvar attrId = id.replace( runescape, funescape );\\n\\t\\t\\treturn function( elem ) {\\n\\t\\t\\t\\tvar node = typeof elem.getAttributeNode !== \\\"undefined\\\" &&\\n\\t\\t\\t\\t\\telem.getAttributeNode(\\\"id\\\");\\n\\t\\t\\t\\treturn node && node.value === attrId;\\n\\t\\t\\t};\\n\\t\\t};\\n\\n\\t\\t// Support: IE 6 - 7 only\\n\\t\\t// getElementById is not reliable as a find shortcut\\n\\t\\tExpr.find[\\\"ID\\\"] = function( id, context ) {\\n\\t\\t\\tif ( typeof context.getElementById !== \\\"undefined\\\" && documentIsHTML ) {\\n\\t\\t\\t\\tvar node, i, elems,\\n\\t\\t\\t\\t\\telem = context.getElementById( id );\\n\\n\\t\\t\\t\\tif ( elem ) {\\n\\n\\t\\t\\t\\t\\t// Verify the id attribute\\n\\t\\t\\t\\t\\tnode = elem.getAttributeNode(\\\"id\\\");\\n\\t\\t\\t\\t\\tif ( node && node.value === id ) {\\n\\t\\t\\t\\t\\t\\treturn [ elem ];\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t// Fall back on getElementsByName\\n\\t\\t\\t\\t\\telems = context.getElementsByName( id );\\n\\t\\t\\t\\t\\ti = 0;\\n\\t\\t\\t\\t\\twhile ( (elem = elems[i++]) ) {\\n\\t\\t\\t\\t\\t\\tnode = elem.getAttributeNode(\\\"id\\\");\\n\\t\\t\\t\\t\\t\\tif ( node && node.value === id ) {\\n\\t\\t\\t\\t\\t\\t\\treturn [ elem ];\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn [];\\n\\t\\t\\t}\\n\\t\\t};\\n\\t}\\n\\n\\t// Tag\\n\\tExpr.find[\\\"TAG\\\"] = support.getElementsByTagName ?\\n\\t\\tfunction( tag, context ) {\\n\\t\\t\\tif ( typeof context.getElementsByTagName !== \\\"undefined\\\" ) {\\n\\t\\t\\t\\treturn context.getElementsByTagName( tag );\\n\\n\\t\\t\\t// DocumentFragment nodes don't have gEBTN\\n\\t\\t\\t} else if ( support.qsa ) {\\n\\t\\t\\t\\treturn context.querySelectorAll( tag );\\n\\t\\t\\t}\\n\\t\\t} :\\n\\n\\t\\tfunction( tag, context ) {\\n\\t\\t\\tvar elem,\\n\\t\\t\\t\\ttmp = [],\\n\\t\\t\\t\\ti = 0,\\n\\t\\t\\t\\t// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\\n\\t\\t\\t\\tresults = context.getElementsByTagName( tag );\\n\\n\\t\\t\\t// Filter out possible comments\\n\\t\\t\\tif ( tag === \\\"*\\\" ) {\\n\\t\\t\\t\\twhile ( (elem = results[i++]) ) {\\n\\t\\t\\t\\t\\tif ( elem.nodeType === 1 ) {\\n\\t\\t\\t\\t\\t\\ttmp.push( elem );\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn tmp;\\n\\t\\t\\t}\\n\\t\\t\\treturn results;\\n\\t\\t};\\n\\n\\t// Class\\n\\tExpr.find[\\\"CLASS\\\"] = support.getElementsByClassName && function( className, context ) {\\n\\t\\tif ( typeof context.getElementsByClassName !== \\\"undefined\\\" && documentIsHTML ) {\\n\\t\\t\\treturn context.getElementsByClassName( className );\\n\\t\\t}\\n\\t};\\n\\n\\t/* QSA/matchesSelector\\n\\t---------------------------------------------------------------------- */\\n\\n\\t// QSA and matchesSelector support\\n\\n\\t// matchesSelector(:active) reports false when true (IE9/Opera 11.5)\\n\\trbuggyMatches = [];\\n\\n\\t// qSa(:focus) reports false when true (Chrome 21)\\n\\t// We allow this because of a bug in IE8/9 that throws an error\\n\\t// whenever `document.activeElement` is accessed on an iframe\\n\\t// So, we allow :focus to pass through QSA all the time to avoid the IE error\\n\\t// See https://bugs.jquery.com/ticket/13378\\n\\trbuggyQSA = [];\\n\\n\\tif ( (support.qsa = rnative.test( document.querySelectorAll )) ) {\\n\\t\\t// Build QSA regex\\n\\t\\t// Regex strategy adopted from Diego Perini\\n\\t\\tassert(function( el ) {\\n\\t\\t\\t// Select is set to empty string on purpose\\n\\t\\t\\t// This is to test IE's treatment of not explicitly\\n\\t\\t\\t// setting a boolean content attribute,\\n\\t\\t\\t// since its presence should be enough\\n\\t\\t\\t// https://bugs.jquery.com/ticket/12359\\n\\t\\t\\tdocElem.appendChild( el ).innerHTML = \\\"<a id='\\\" + expando + \\\"'></a>\\\" +\\n\\t\\t\\t\\t\\\"<select id='\\\" + expando + \\\"-\\\\r\\\\\\\\' msallowcapture=''>\\\" +\\n\\t\\t\\t\\t\\\"<option selected=''></option></select>\\\";\\n\\n\\t\\t\\t// Support: IE8, Opera 11-12.16\\n\\t\\t\\t// Nothing should be selected when empty strings follow ^= or $= or *=\\n\\t\\t\\t// The test attribute must be unknown in Opera but \\\"safe\\\" for WinRT\\n\\t\\t\\t// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\\n\\t\\t\\tif ( el.querySelectorAll(\\\"[msallowcapture^='']\\\").length ) {\\n\\t\\t\\t\\trbuggyQSA.push( \\\"[*^$]=\\\" + whitespace + \\\"*(?:''|\\\\\\\"\\\\\\\")\\\" );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Support: IE8\\n\\t\\t\\t// Boolean attributes and \\\"value\\\" are not treated correctly\\n\\t\\t\\tif ( !el.querySelectorAll(\\\"[selected]\\\").length ) {\\n\\t\\t\\t\\trbuggyQSA.push( \\\"\\\\\\\\[\\\" + whitespace + \\\"*(?:value|\\\" + booleans + \\\")\\\" );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+\\n\\t\\t\\tif ( !el.querySelectorAll( \\\"[id~=\\\" + expando + \\\"-]\\\" ).length ) {\\n\\t\\t\\t\\trbuggyQSA.push(\\\"~=\\\");\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Webkit/Opera - :checked should return selected option elements\\n\\t\\t\\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\\n\\t\\t\\t// IE8 throws error here and will not see later tests\\n\\t\\t\\tif ( !el.querySelectorAll(\\\":checked\\\").length ) {\\n\\t\\t\\t\\trbuggyQSA.push(\\\":checked\\\");\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Support: Safari 8+, iOS 8+\\n\\t\\t\\t// https://bugs.webkit.org/show_bug.cgi?id=136851\\n\\t\\t\\t// In-page `selector#id sibling-combinator selector` fails\\n\\t\\t\\tif ( !el.querySelectorAll( \\\"a#\\\" + expando + \\\"+*\\\" ).length ) {\\n\\t\\t\\t\\trbuggyQSA.push(\\\".#.+[+~]\\\");\\n\\t\\t\\t}\\n\\t\\t});\\n\\n\\t\\tassert(function( el ) {\\n\\t\\t\\tel.innerHTML = \\\"<a href='' disabled='disabled'></a>\\\" +\\n\\t\\t\\t\\t\\\"<select disabled='disabled'><option/></select>\\\";\\n\\n\\t\\t\\t// Support: Windows 8 Native Apps\\n\\t\\t\\t// The type and name attributes are restricted during .innerHTML assignment\\n\\t\\t\\tvar input = document.createElement(\\\"input\\\");\\n\\t\\t\\tinput.setAttribute( \\\"type\\\", \\\"hidden\\\" );\\n\\t\\t\\tel.appendChild( input ).setAttribute( \\\"name\\\", \\\"D\\\" );\\n\\n\\t\\t\\t// Support: IE8\\n\\t\\t\\t// Enforce case-sensitivity of name attribute\\n\\t\\t\\tif ( el.querySelectorAll(\\\"[name=d]\\\").length ) {\\n\\t\\t\\t\\trbuggyQSA.push( \\\"name\\\" + whitespace + \\\"*[*^$|!~]?=\\\" );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\\n\\t\\t\\t// IE8 throws error here and will not see later tests\\n\\t\\t\\tif ( el.querySelectorAll(\\\":enabled\\\").length !== 2 ) {\\n\\t\\t\\t\\trbuggyQSA.push( \\\":enabled\\\", \\\":disabled\\\" );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Support: IE9-11+\\n\\t\\t\\t// IE's :disabled selector does not pick up the children of disabled fieldsets\\n\\t\\t\\tdocElem.appendChild( el ).disabled = true;\\n\\t\\t\\tif ( el.querySelectorAll(\\\":disabled\\\").length !== 2 ) {\\n\\t\\t\\t\\trbuggyQSA.push( \\\":enabled\\\", \\\":disabled\\\" );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Opera 10-11 does not throw on post-comma invalid pseudos\\n\\t\\t\\tel.querySelectorAll(\\\"*,:x\\\");\\n\\t\\t\\trbuggyQSA.push(\\\",.*:\\\");\\n\\t\\t});\\n\\t}\\n\\n\\tif ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||\\n\\t\\tdocElem.webkitMatchesSelector ||\\n\\t\\tdocElem.mozMatchesSelector ||\\n\\t\\tdocElem.oMatchesSelector ||\\n\\t\\tdocElem.msMatchesSelector) )) ) {\\n\\n\\t\\tassert(function( el ) {\\n\\t\\t\\t// Check to see if it's possible to do matchesSelector\\n\\t\\t\\t// on a disconnected node (IE 9)\\n\\t\\t\\tsupport.disconnectedMatch = matches.call( el, \\\"*\\\" );\\n\\n\\t\\t\\t// This should fail with an exception\\n\\t\\t\\t// Gecko does not error, returns false instead\\n\\t\\t\\tmatches.call( el, \\\"[s!='']:x\\\" );\\n\\t\\t\\trbuggyMatches.push( \\\"!=\\\", pseudos );\\n\\t\\t});\\n\\t}\\n\\n\\trbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join(\\\"|\\\") );\\n\\trbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join(\\\"|\\\") );\\n\\n\\t/* Contains\\n\\t---------------------------------------------------------------------- */\\n\\thasCompare = rnative.test( docElem.compareDocumentPosition );\\n\\n\\t// Element contains another\\n\\t// Purposefully self-exclusive\\n\\t// As in, an element does not contain itself\\n\\tcontains = hasCompare || rnative.test( docElem.contains ) ?\\n\\t\\tfunction( a, b ) {\\n\\t\\t\\tvar adown = a.nodeType === 9 ? a.documentElement : a,\\n\\t\\t\\t\\tbup = b && b.parentNode;\\n\\t\\t\\treturn a === bup || !!( bup && bup.nodeType === 1 && (\\n\\t\\t\\t\\tadown.contains ?\\n\\t\\t\\t\\t\\tadown.contains( bup ) :\\n\\t\\t\\t\\t\\ta.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\\n\\t\\t\\t));\\n\\t\\t} :\\n\\t\\tfunction( a, b ) {\\n\\t\\t\\tif ( b ) {\\n\\t\\t\\t\\twhile ( (b = b.parentNode) ) {\\n\\t\\t\\t\\t\\tif ( b === a ) {\\n\\t\\t\\t\\t\\t\\treturn true;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\treturn false;\\n\\t\\t};\\n\\n\\t/* Sorting\\n\\t---------------------------------------------------------------------- */\\n\\n\\t// Document order sorting\\n\\tsortOrder = hasCompare ?\\n\\tfunction( a, b ) {\\n\\n\\t\\t// Flag for duplicate removal\\n\\t\\tif ( a === b ) {\\n\\t\\t\\thasDuplicate = true;\\n\\t\\t\\treturn 0;\\n\\t\\t}\\n\\n\\t\\t// Sort on method existence if only one input has compareDocumentPosition\\n\\t\\tvar compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\\n\\t\\tif ( compare ) {\\n\\t\\t\\treturn compare;\\n\\t\\t}\\n\\n\\t\\t// Calculate position if both inputs belong to the same document\\n\\t\\tcompare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?\\n\\t\\t\\ta.compareDocumentPosition( b ) :\\n\\n\\t\\t\\t// Otherwise we know they are disconnected\\n\\t\\t\\t1;\\n\\n\\t\\t// Disconnected nodes\\n\\t\\tif ( compare & 1 ||\\n\\t\\t\\t(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {\\n\\n\\t\\t\\t// Choose the first element that is related to our preferred document\\n\\t\\t\\tif ( a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {\\n\\t\\t\\t\\treturn -1;\\n\\t\\t\\t}\\n\\t\\t\\tif ( b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {\\n\\t\\t\\t\\treturn 1;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Maintain original order\\n\\t\\t\\treturn sortInput ?\\n\\t\\t\\t\\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\\n\\t\\t\\t\\t0;\\n\\t\\t}\\n\\n\\t\\treturn compare & 4 ? -1 : 1;\\n\\t} :\\n\\tfunction( a, b ) {\\n\\t\\t// Exit early if the nodes are identical\\n\\t\\tif ( a === b ) {\\n\\t\\t\\thasDuplicate = true;\\n\\t\\t\\treturn 0;\\n\\t\\t}\\n\\n\\t\\tvar cur,\\n\\t\\t\\ti = 0,\\n\\t\\t\\taup = a.parentNode,\\n\\t\\t\\tbup = b.parentNode,\\n\\t\\t\\tap = [ a ],\\n\\t\\t\\tbp = [ b ];\\n\\n\\t\\t// Parentless nodes are either documents or disconnected\\n\\t\\tif ( !aup || !bup ) {\\n\\t\\t\\treturn a === document ? -1 :\\n\\t\\t\\t\\tb === document ? 1 :\\n\\t\\t\\t\\taup ? -1 :\\n\\t\\t\\t\\tbup ? 1 :\\n\\t\\t\\t\\tsortInput ?\\n\\t\\t\\t\\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\\n\\t\\t\\t\\t0;\\n\\n\\t\\t// If the nodes are siblings, we can do a quick check\\n\\t\\t} else if ( aup === bup ) {\\n\\t\\t\\treturn siblingCheck( a, b );\\n\\t\\t}\\n\\n\\t\\t// Otherwise we need full lists of their ancestors for comparison\\n\\t\\tcur = a;\\n\\t\\twhile ( (cur = cur.parentNode) ) {\\n\\t\\t\\tap.unshift( cur );\\n\\t\\t}\\n\\t\\tcur = b;\\n\\t\\twhile ( (cur = cur.parentNode) ) {\\n\\t\\t\\tbp.unshift( cur );\\n\\t\\t}\\n\\n\\t\\t// Walk down the tree looking for a discrepancy\\n\\t\\twhile ( ap[i] === bp[i] ) {\\n\\t\\t\\ti++;\\n\\t\\t}\\n\\n\\t\\treturn i ?\\n\\t\\t\\t// Do a sibling check if the nodes have a common ancestor\\n\\t\\t\\tsiblingCheck( ap[i], bp[i] ) :\\n\\n\\t\\t\\t// Otherwise nodes in our document sort first\\n\\t\\t\\tap[i] === preferredDoc ? -1 :\\n\\t\\t\\tbp[i] === preferredDoc ? 1 :\\n\\t\\t\\t0;\\n\\t};\\n\\n\\treturn document;\\n};\\n\\nSizzle.matches = function( expr, elements ) {\\n\\treturn Sizzle( expr, null, null, elements );\\n};\\n\\nSizzle.matchesSelector = function( elem, expr ) {\\n\\t// Set document vars if needed\\n\\tif ( ( elem.ownerDocument || elem ) !== document ) {\\n\\t\\tsetDocument( elem );\\n\\t}\\n\\n\\t// Make sure that attribute selectors are quoted\\n\\texpr = expr.replace( rattributeQuotes, \\\"='$1']\\\" );\\n\\n\\tif ( support.matchesSelector && documentIsHTML &&\\n\\t\\t!compilerCache[ expr + \\\" \\\" ] &&\\n\\t\\t( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&\\n\\t\\t( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {\\n\\n\\t\\ttry {\\n\\t\\t\\tvar ret = matches.call( elem, expr );\\n\\n\\t\\t\\t// IE 9's matchesSelector returns false on disconnected nodes\\n\\t\\t\\tif ( ret || support.disconnectedMatch ||\\n\\t\\t\\t\\t\\t// As well, disconnected nodes are said to be in a document\\n\\t\\t\\t\\t\\t// fragment in IE 9\\n\\t\\t\\t\\t\\telem.document && elem.document.nodeType !== 11 ) {\\n\\t\\t\\t\\treturn ret;\\n\\t\\t\\t}\\n\\t\\t} catch (e) {}\\n\\t}\\n\\n\\treturn Sizzle( expr, document, null, [ elem ] ).length > 0;\\n};\\n\\nSizzle.contains = function( context, elem ) {\\n\\t// Set document vars if needed\\n\\tif ( ( context.ownerDocument || context ) !== document ) {\\n\\t\\tsetDocument( context );\\n\\t}\\n\\treturn contains( context, elem );\\n};\\n\\nSizzle.attr = function( elem, name ) {\\n\\t// Set document vars if needed\\n\\tif ( ( elem.ownerDocument || elem ) !== document ) {\\n\\t\\tsetDocument( elem );\\n\\t}\\n\\n\\tvar fn = Expr.attrHandle[ name.toLowerCase() ],\\n\\t\\t// Don't get fooled by Object.prototype properties (jQuery #13807)\\n\\t\\tval = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?\\n\\t\\t\\tfn( elem, name, !documentIsHTML ) :\\n\\t\\t\\tundefined;\\n\\n\\treturn val !== undefined ?\\n\\t\\tval :\\n\\t\\tsupport.attributes || !documentIsHTML ?\\n\\t\\t\\telem.getAttribute( name ) :\\n\\t\\t\\t(val = elem.getAttributeNode(name)) && val.specified ?\\n\\t\\t\\t\\tval.value :\\n\\t\\t\\t\\tnull;\\n};\\n\\nSizzle.escape = function( sel ) {\\n\\treturn (sel + \\\"\\\").replace( rcssescape, fcssescape );\\n};\\n\\nSizzle.error = function( msg ) {\\n\\tthrow new Error( \\\"Syntax error, unrecognized expression: \\\" + msg );\\n};\\n\\n/**\\n * Document sorting and removing duplicates\\n * @param {ArrayLike} results\\n */\\nSizzle.uniqueSort = function( results ) {\\n\\tvar elem,\\n\\t\\tduplicates = [],\\n\\t\\tj = 0,\\n\\t\\ti = 0;\\n\\n\\t// Unless we *know* we can detect duplicates, assume their presence\\n\\thasDuplicate = !support.detectDuplicates;\\n\\tsortInput = !support.sortStable && results.slice( 0 );\\n\\tresults.sort( sortOrder );\\n\\n\\tif ( hasDuplicate ) {\\n\\t\\twhile ( (elem = results[i++]) ) {\\n\\t\\t\\tif ( elem === results[ i ] ) {\\n\\t\\t\\t\\tj = duplicates.push( i );\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\twhile ( j-- ) {\\n\\t\\t\\tresults.splice( duplicates[ j ], 1 );\\n\\t\\t}\\n\\t}\\n\\n\\t// Clear input after sorting to release objects\\n\\t// See https://github.com/jquery/sizzle/pull/225\\n\\tsortInput = null;\\n\\n\\treturn results;\\n};\\n\\n/**\\n * Utility function for retrieving the text value of an array of DOM nodes\\n * @param {Array|Element} elem\\n */\\ngetText = Sizzle.getText = function( elem ) {\\n\\tvar node,\\n\\t\\tret = \\\"\\\",\\n\\t\\ti = 0,\\n\\t\\tnodeType = elem.nodeType;\\n\\n\\tif ( !nodeType ) {\\n\\t\\t// If no nodeType, this is expected to be an array\\n\\t\\twhile ( (node = elem[i++]) ) {\\n\\t\\t\\t// Do not traverse comment nodes\\n\\t\\t\\tret += getText( node );\\n\\t\\t}\\n\\t} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {\\n\\t\\t// Use textContent for elements\\n\\t\\t// innerText usage removed for consistency of new lines (jQuery #11153)\\n\\t\\tif ( typeof elem.textContent === \\\"string\\\" ) {\\n\\t\\t\\treturn elem.textContent;\\n\\t\\t} else {\\n\\t\\t\\t// Traverse its children\\n\\t\\t\\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\\n\\t\\t\\t\\tret += getText( elem );\\n\\t\\t\\t}\\n\\t\\t}\\n\\t} else if ( nodeType === 3 || nodeType === 4 ) {\\n\\t\\treturn elem.nodeValue;\\n\\t}\\n\\t// Do not include comment or processing instruction nodes\\n\\n\\treturn ret;\\n};\\n\\nExpr = Sizzle.selectors = {\\n\\n\\t// Can be adjusted by the user\\n\\tcacheLength: 50,\\n\\n\\tcreatePseudo: markFunction,\\n\\n\\tmatch: matchExpr,\\n\\n\\tattrHandle: {},\\n\\n\\tfind: {},\\n\\n\\trelative: {\\n\\t\\t\\\">\\\": { dir: \\\"parentNode\\\", first: true },\\n\\t\\t\\\" \\\": { dir: \\\"parentNode\\\" },\\n\\t\\t\\\"+\\\": { dir: \\\"previousSibling\\\", first: true },\\n\\t\\t\\\"~\\\": { dir: \\\"previousSibling\\\" }\\n\\t},\\n\\n\\tpreFilter: {\\n\\t\\t\\\"ATTR\\\": function( match ) {\\n\\t\\t\\tmatch[1] = match[1].replace( runescape, funescape );\\n\\n\\t\\t\\t// Move the given value to match[3] whether quoted or unquoted\\n\\t\\t\\tmatch[3] = ( match[3] || match[4] || match[5] || \\\"\\\" ).replace( runescape, funescape );\\n\\n\\t\\t\\tif ( match[2] === \\\"~=\\\" ) {\\n\\t\\t\\t\\tmatch[3] = \\\" \\\" + match[3] + \\\" \\\";\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn match.slice( 0, 4 );\\n\\t\\t},\\n\\n\\t\\t\\\"CHILD\\\": function( match ) {\\n\\t\\t\\t/* matches from matchExpr[\\\"CHILD\\\"]\\n\\t\\t\\t\\t1 type (only|nth|...)\\n\\t\\t\\t\\t2 what (child|of-type)\\n\\t\\t\\t\\t3 argument (even|odd|\\\\d*|\\\\d*n([+-]\\\\d+)?|...)\\n\\t\\t\\t\\t4 xn-component of xn+y argument ([+-]?\\\\d*n|)\\n\\t\\t\\t\\t5 sign of xn-component\\n\\t\\t\\t\\t6 x of xn-component\\n\\t\\t\\t\\t7 sign of y-component\\n\\t\\t\\t\\t8 y of y-component\\n\\t\\t\\t*/\\n\\t\\t\\tmatch[1] = match[1].toLowerCase();\\n\\n\\t\\t\\tif ( match[1].slice( 0, 3 ) === \\\"nth\\\" ) {\\n\\t\\t\\t\\t// nth-* requires argument\\n\\t\\t\\t\\tif ( !match[3] ) {\\n\\t\\t\\t\\t\\tSizzle.error( match[0] );\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// numeric x and y parameters for Expr.filter.CHILD\\n\\t\\t\\t\\t// remember that false/true cast respectively to 0/1\\n\\t\\t\\t\\tmatch[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === \\\"even\\\" || match[3] === \\\"odd\\\" ) );\\n\\t\\t\\t\\tmatch[5] = +( ( match[7] + match[8] ) || match[3] === \\\"odd\\\" );\\n\\n\\t\\t\\t// other types prohibit arguments\\n\\t\\t\\t} else if ( match[3] ) {\\n\\t\\t\\t\\tSizzle.error( match[0] );\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn match;\\n\\t\\t},\\n\\n\\t\\t\\\"PSEUDO\\\": function( match ) {\\n\\t\\t\\tvar excess,\\n\\t\\t\\t\\tunquoted = !match[6] && match[2];\\n\\n\\t\\t\\tif ( matchExpr[\\\"CHILD\\\"].test( match[0] ) ) {\\n\\t\\t\\t\\treturn null;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Accept quoted arguments as-is\\n\\t\\t\\tif ( match[3] ) {\\n\\t\\t\\t\\tmatch[2] = match[4] || match[5] || \\\"\\\";\\n\\n\\t\\t\\t// Strip excess characters from unquoted arguments\\n\\t\\t\\t} else if ( unquoted && rpseudo.test( unquoted ) &&\\n\\t\\t\\t\\t// Get excess from tokenize (recursively)\\n\\t\\t\\t\\t(excess = tokenize( unquoted, true )) &&\\n\\t\\t\\t\\t// advance to the next closing parenthesis\\n\\t\\t\\t\\t(excess = unquoted.indexOf( \\\")\\\", unquoted.length - excess ) - unquoted.length) ) {\\n\\n\\t\\t\\t\\t// excess is a negative index\\n\\t\\t\\t\\tmatch[0] = match[0].slice( 0, excess );\\n\\t\\t\\t\\tmatch[2] = unquoted.slice( 0, excess );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Return only captures needed by the pseudo filter method (type and argument)\\n\\t\\t\\treturn match.slice( 0, 3 );\\n\\t\\t}\\n\\t},\\n\\n\\tfilter: {\\n\\n\\t\\t\\\"TAG\\\": function( nodeNameSelector ) {\\n\\t\\t\\tvar nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();\\n\\t\\t\\treturn nodeNameSelector === \\\"*\\\" ?\\n\\t\\t\\t\\tfunction() { return true; } :\\n\\t\\t\\t\\tfunction( elem ) {\\n\\t\\t\\t\\t\\treturn elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\\n\\t\\t\\t\\t};\\n\\t\\t},\\n\\n\\t\\t\\\"CLASS\\\": function( className ) {\\n\\t\\t\\tvar pattern = classCache[ className + \\\" \\\" ];\\n\\n\\t\\t\\treturn pattern ||\\n\\t\\t\\t\\t(pattern = new RegExp( \\\"(^|\\\" + whitespace + \\\")\\\" + className + \\\"(\\\" + whitespace + \\\"|$)\\\" )) &&\\n\\t\\t\\t\\tclassCache( className, function( elem ) {\\n\\t\\t\\t\\t\\treturn pattern.test( typeof elem.className === \\\"string\\\" && elem.className || typeof elem.getAttribute !== \\\"undefined\\\" && elem.getAttribute(\\\"class\\\") || \\\"\\\" );\\n\\t\\t\\t\\t});\\n\\t\\t},\\n\\n\\t\\t\\\"ATTR\\\": function( name, operator, check ) {\\n\\t\\t\\treturn function( elem ) {\\n\\t\\t\\t\\tvar result = Sizzle.attr( elem, name );\\n\\n\\t\\t\\t\\tif ( result == null ) {\\n\\t\\t\\t\\t\\treturn operator === \\\"!=\\\";\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tif ( !operator ) {\\n\\t\\t\\t\\t\\treturn true;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tresult += \\\"\\\";\\n\\n\\t\\t\\t\\treturn operator === \\\"=\\\" ? result === check :\\n\\t\\t\\t\\t\\toperator === \\\"!=\\\" ? result !== check :\\n\\t\\t\\t\\t\\toperator === \\\"^=\\\" ? check && result.indexOf( check ) === 0 :\\n\\t\\t\\t\\t\\toperator === \\\"*=\\\" ? check && result.indexOf( check ) > -1 :\\n\\t\\t\\t\\t\\toperator === \\\"$=\\\" ? check && result.slice( -check.length ) === check :\\n\\t\\t\\t\\t\\toperator === \\\"~=\\\" ? ( \\\" \\\" + result.replace( rwhitespace, \\\" \\\" ) + \\\" \\\" ).indexOf( check ) > -1 :\\n\\t\\t\\t\\t\\toperator === \\\"|=\\\" ? result === check || result.slice( 0, check.length + 1 ) === check + \\\"-\\\" :\\n\\t\\t\\t\\t\\tfalse;\\n\\t\\t\\t};\\n\\t\\t},\\n\\n\\t\\t\\\"CHILD\\\": function( type, what, argument, first, last ) {\\n\\t\\t\\tvar simple = type.slice( 0, 3 ) !== \\\"nth\\\",\\n\\t\\t\\t\\tforward = type.slice( -4 ) !== \\\"last\\\",\\n\\t\\t\\t\\tofType = what === \\\"of-type\\\";\\n\\n\\t\\t\\treturn first === 1 && last === 0 ?\\n\\n\\t\\t\\t\\t// Shortcut for :nth-*(n)\\n\\t\\t\\t\\tfunction( elem ) {\\n\\t\\t\\t\\t\\treturn !!elem.parentNode;\\n\\t\\t\\t\\t} :\\n\\n\\t\\t\\t\\tfunction( elem, context, xml ) {\\n\\t\\t\\t\\t\\tvar cache, uniqueCache, outerCache, node, nodeIndex, start,\\n\\t\\t\\t\\t\\t\\tdir = simple !== forward ? \\\"nextSibling\\\" : \\\"previousSibling\\\",\\n\\t\\t\\t\\t\\t\\tparent = elem.parentNode,\\n\\t\\t\\t\\t\\t\\tname = ofType && elem.nodeName.toLowerCase(),\\n\\t\\t\\t\\t\\t\\tuseCache = !xml && !ofType,\\n\\t\\t\\t\\t\\t\\tdiff = false;\\n\\n\\t\\t\\t\\t\\tif ( parent ) {\\n\\n\\t\\t\\t\\t\\t\\t// :(first|last|only)-(child|of-type)\\n\\t\\t\\t\\t\\t\\tif ( simple ) {\\n\\t\\t\\t\\t\\t\\t\\twhile ( dir ) {\\n\\t\\t\\t\\t\\t\\t\\t\\tnode = elem;\\n\\t\\t\\t\\t\\t\\t\\t\\twhile ( (node = node[ dir ]) ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( ofType ?\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tnode.nodeName.toLowerCase() === name :\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tnode.nodeType === 1 ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\treturn false;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t// Reverse direction for :only-* (if we haven't yet done so)\\n\\t\\t\\t\\t\\t\\t\\t\\tstart = dir = type === \\\"only\\\" && !start && \\\"nextSibling\\\";\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\treturn true;\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\tstart = [ forward ? parent.firstChild : parent.lastChild ];\\n\\n\\t\\t\\t\\t\\t\\t// non-xml :nth-child(...) stores cache data on `parent`\\n\\t\\t\\t\\t\\t\\tif ( forward && useCache ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t// Seek `elem` from a previously-cached index\\n\\n\\t\\t\\t\\t\\t\\t\\t// ...in a gzip-friendly way\\n\\t\\t\\t\\t\\t\\t\\tnode = parent;\\n\\t\\t\\t\\t\\t\\t\\touterCache = node[ expando ] || (node[ expando ] = {});\\n\\n\\t\\t\\t\\t\\t\\t\\t// Support: IE <9 only\\n\\t\\t\\t\\t\\t\\t\\t// Defend against cloned attroperties (jQuery gh-1709)\\n\\t\\t\\t\\t\\t\\t\\tuniqueCache = outerCache[ node.uniqueID ] ||\\n\\t\\t\\t\\t\\t\\t\\t\\t(outerCache[ node.uniqueID ] = {});\\n\\n\\t\\t\\t\\t\\t\\t\\tcache = uniqueCache[ type ] || [];\\n\\t\\t\\t\\t\\t\\t\\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\\n\\t\\t\\t\\t\\t\\t\\tdiff = nodeIndex && cache[ 2 ];\\n\\t\\t\\t\\t\\t\\t\\tnode = nodeIndex && parent.childNodes[ nodeIndex ];\\n\\n\\t\\t\\t\\t\\t\\t\\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t// Fallback to seeking `elem` from the start\\n\\t\\t\\t\\t\\t\\t\\t\\t(diff = nodeIndex = 0) || start.pop()) ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t// When found, cache indexes on `parent` and break\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( node.nodeType === 1 && ++diff && node === elem ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tuniqueCache[ type ] = [ dirruns, nodeIndex, diff ];\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t// Use previously-cached element index if available\\n\\t\\t\\t\\t\\t\\t\\tif ( useCache ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t// ...in a gzip-friendly way\\n\\t\\t\\t\\t\\t\\t\\t\\tnode = elem;\\n\\t\\t\\t\\t\\t\\t\\t\\touterCache = node[ expando ] || (node[ expando ] = {});\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t// Support: IE <9 only\\n\\t\\t\\t\\t\\t\\t\\t\\t// Defend against cloned attroperties (jQuery gh-1709)\\n\\t\\t\\t\\t\\t\\t\\t\\tuniqueCache = outerCache[ node.uniqueID ] ||\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t(outerCache[ node.uniqueID ] = {});\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tcache = uniqueCache[ type ] || [];\\n\\t\\t\\t\\t\\t\\t\\t\\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\\n\\t\\t\\t\\t\\t\\t\\t\\tdiff = nodeIndex;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t// xml :nth-child(...)\\n\\t\\t\\t\\t\\t\\t\\t// or :nth-last-child(...) or :nth(-last)?-of-type(...)\\n\\t\\t\\t\\t\\t\\t\\tif ( diff === false ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t// Use the same loop as above to seek `elem` from the start\\n\\t\\t\\t\\t\\t\\t\\t\\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t(diff = nodeIndex = 0) || start.pop()) ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( ( ofType ?\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tnode.nodeName.toLowerCase() === name :\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tnode.nodeType === 1 ) &&\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t++diff ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Cache the index of each encountered element\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( useCache ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\touterCache = node[ expando ] || (node[ expando ] = {});\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Support: IE <9 only\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Defend against cloned attroperties (jQuery gh-1709)\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tuniqueCache = outerCache[ node.uniqueID ] ||\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(outerCache[ node.uniqueID ] = {});\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tuniqueCache[ type ] = [ dirruns, diff ];\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( node === elem ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t// Incorporate the offset, then check against cycle size\\n\\t\\t\\t\\t\\t\\tdiff -= last;\\n\\t\\t\\t\\t\\t\\treturn diff === first || ( diff % first === 0 && diff / first >= 0 );\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t};\\n\\t\\t},\\n\\n\\t\\t\\\"PSEUDO\\\": function( pseudo, argument ) {\\n\\t\\t\\t// pseudo-class names are case-insensitive\\n\\t\\t\\t// http://www.w3.org/TR/selectors/#pseudo-classes\\n\\t\\t\\t// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\\n\\t\\t\\t// Remember that setFilters inherits from pseudos\\n\\t\\t\\tvar args,\\n\\t\\t\\t\\tfn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||\\n\\t\\t\\t\\t\\tSizzle.error( \\\"unsupported pseudo: \\\" + pseudo );\\n\\n\\t\\t\\t// The user may use createPseudo to indicate that\\n\\t\\t\\t// arguments are needed to create the filter function\\n\\t\\t\\t// just as Sizzle does\\n\\t\\t\\tif ( fn[ expando ] ) {\\n\\t\\t\\t\\treturn fn( argument );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// But maintain support for old signatures\\n\\t\\t\\tif ( fn.length > 1 ) {\\n\\t\\t\\t\\targs = [ pseudo, pseudo, \\\"\\\", argument ];\\n\\t\\t\\t\\treturn Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?\\n\\t\\t\\t\\t\\tmarkFunction(function( seed, matches ) {\\n\\t\\t\\t\\t\\t\\tvar idx,\\n\\t\\t\\t\\t\\t\\t\\tmatched = fn( seed, argument ),\\n\\t\\t\\t\\t\\t\\t\\ti = matched.length;\\n\\t\\t\\t\\t\\t\\twhile ( i-- ) {\\n\\t\\t\\t\\t\\t\\t\\tidx = indexOf( seed, matched[i] );\\n\\t\\t\\t\\t\\t\\t\\tseed[ idx ] = !( matches[ idx ] = matched[i] );\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}) :\\n\\t\\t\\t\\t\\tfunction( elem ) {\\n\\t\\t\\t\\t\\t\\treturn fn( elem, 0, args );\\n\\t\\t\\t\\t\\t};\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn fn;\\n\\t\\t}\\n\\t},\\n\\n\\tpseudos: {\\n\\t\\t// Potentially complex pseudos\\n\\t\\t\\\"not\\\": markFunction(function( selector ) {\\n\\t\\t\\t// Trim the selector passed to compile\\n\\t\\t\\t// to avoid treating leading and trailing\\n\\t\\t\\t// spaces as combinators\\n\\t\\t\\tvar input = [],\\n\\t\\t\\t\\tresults = [],\\n\\t\\t\\t\\tmatcher = compile( selector.replace( rtrim, \\\"$1\\\" ) );\\n\\n\\t\\t\\treturn matcher[ expando ] ?\\n\\t\\t\\t\\tmarkFunction(function( seed, matches, context, xml ) {\\n\\t\\t\\t\\t\\tvar elem,\\n\\t\\t\\t\\t\\t\\tunmatched = matcher( seed, null, xml, [] ),\\n\\t\\t\\t\\t\\t\\ti = seed.length;\\n\\n\\t\\t\\t\\t\\t// Match elements unmatched by `matcher`\\n\\t\\t\\t\\t\\twhile ( i-- ) {\\n\\t\\t\\t\\t\\t\\tif ( (elem = unmatched[i]) ) {\\n\\t\\t\\t\\t\\t\\t\\tseed[i] = !(matches[i] = elem);\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}) :\\n\\t\\t\\t\\tfunction( elem, context, xml ) {\\n\\t\\t\\t\\t\\tinput[0] = elem;\\n\\t\\t\\t\\t\\tmatcher( input, null, xml, results );\\n\\t\\t\\t\\t\\t// Don't keep the element (issue #299)\\n\\t\\t\\t\\t\\tinput[0] = null;\\n\\t\\t\\t\\t\\treturn !results.pop();\\n\\t\\t\\t\\t};\\n\\t\\t}),\\n\\n\\t\\t\\\"has\\\": markFunction(function( selector ) {\\n\\t\\t\\treturn function( elem ) {\\n\\t\\t\\t\\treturn Sizzle( selector, elem ).length > 0;\\n\\t\\t\\t};\\n\\t\\t}),\\n\\n\\t\\t\\\"contains\\\": markFunction(function( text ) {\\n\\t\\t\\ttext = text.replace( runescape, funescape );\\n\\t\\t\\treturn function( elem ) {\\n\\t\\t\\t\\treturn ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;\\n\\t\\t\\t};\\n\\t\\t}),\\n\\n\\t\\t// \\\"Whether an element is represented by a :lang() selector\\n\\t\\t// is based solely on the element's language value\\n\\t\\t// being equal to the identifier C,\\n\\t\\t// or beginning with the identifier C immediately followed by \\\"-\\\".\\n\\t\\t// The matching of C against the element's language value is performed case-insensitively.\\n\\t\\t// The identifier C does not have to be a valid language name.\\\"\\n\\t\\t// http://www.w3.org/TR/selectors/#lang-pseudo\\n\\t\\t\\\"lang\\\": markFunction( function( lang ) {\\n\\t\\t\\t// lang value must be a valid identifier\\n\\t\\t\\tif ( !ridentifier.test(lang || \\\"\\\") ) {\\n\\t\\t\\t\\tSizzle.error( \\\"unsupported lang: \\\" + lang );\\n\\t\\t\\t}\\n\\t\\t\\tlang = lang.replace( runescape, funescape ).toLowerCase();\\n\\t\\t\\treturn function( elem ) {\\n\\t\\t\\t\\tvar elemLang;\\n\\t\\t\\t\\tdo {\\n\\t\\t\\t\\t\\tif ( (elemLang = documentIsHTML ?\\n\\t\\t\\t\\t\\t\\telem.lang :\\n\\t\\t\\t\\t\\t\\telem.getAttribute(\\\"xml:lang\\\") || elem.getAttribute(\\\"lang\\\")) ) {\\n\\n\\t\\t\\t\\t\\t\\telemLang = elemLang.toLowerCase();\\n\\t\\t\\t\\t\\t\\treturn elemLang === lang || elemLang.indexOf( lang + \\\"-\\\" ) === 0;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t} while ( (elem = elem.parentNode) && elem.nodeType === 1 );\\n\\t\\t\\t\\treturn false;\\n\\t\\t\\t};\\n\\t\\t}),\\n\\n\\t\\t// Miscellaneous\\n\\t\\t\\\"target\\\": function( elem ) {\\n\\t\\t\\tvar hash = window.location && window.location.hash;\\n\\t\\t\\treturn hash && hash.slice( 1 ) === elem.id;\\n\\t\\t},\\n\\n\\t\\t\\\"root\\\": function( elem ) {\\n\\t\\t\\treturn elem === docElem;\\n\\t\\t},\\n\\n\\t\\t\\\"focus\\\": function( elem ) {\\n\\t\\t\\treturn elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\\n\\t\\t},\\n\\n\\t\\t// Boolean properties\\n\\t\\t\\\"enabled\\\": createDisabledPseudo( false ),\\n\\t\\t\\\"disabled\\\": createDisabledPseudo( true ),\\n\\n\\t\\t\\\"checked\\\": function( elem ) {\\n\\t\\t\\t// In CSS3, :checked should return both checked and selected elements\\n\\t\\t\\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\\n\\t\\t\\tvar nodeName = elem.nodeName.toLowerCase();\\n\\t\\t\\treturn (nodeName === \\\"input\\\" && !!elem.checked) || (nodeName === \\\"option\\\" && !!elem.selected);\\n\\t\\t},\\n\\n\\t\\t\\\"selected\\\": function( elem ) {\\n\\t\\t\\t// Accessing this property makes selected-by-default\\n\\t\\t\\t// options in Safari work properly\\n\\t\\t\\tif ( elem.parentNode ) {\\n\\t\\t\\t\\telem.parentNode.selectedIndex;\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn elem.selected === true;\\n\\t\\t},\\n\\n\\t\\t// Contents\\n\\t\\t\\\"empty\\\": function( elem ) {\\n\\t\\t\\t// http://www.w3.org/TR/selectors/#empty-pseudo\\n\\t\\t\\t// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\\n\\t\\t\\t//   but not by others (comment: 8; processing instruction: 7; etc.)\\n\\t\\t\\t// nodeType < 6 works because attributes (2) do not appear as children\\n\\t\\t\\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\\n\\t\\t\\t\\tif ( elem.nodeType < 6 ) {\\n\\t\\t\\t\\t\\treturn false;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\treturn true;\\n\\t\\t},\\n\\n\\t\\t\\\"parent\\\": function( elem ) {\\n\\t\\t\\treturn !Expr.pseudos[\\\"empty\\\"]( elem );\\n\\t\\t},\\n\\n\\t\\t// Element/input types\\n\\t\\t\\\"header\\\": function( elem ) {\\n\\t\\t\\treturn rheader.test( elem.nodeName );\\n\\t\\t},\\n\\n\\t\\t\\\"input\\\": function( elem ) {\\n\\t\\t\\treturn rinputs.test( elem.nodeName );\\n\\t\\t},\\n\\n\\t\\t\\\"button\\\": function( elem ) {\\n\\t\\t\\tvar name = elem.nodeName.toLowerCase();\\n\\t\\t\\treturn name === \\\"input\\\" && elem.type === \\\"button\\\" || name === \\\"button\\\";\\n\\t\\t},\\n\\n\\t\\t\\\"text\\\": function( elem ) {\\n\\t\\t\\tvar attr;\\n\\t\\t\\treturn elem.nodeName.toLowerCase() === \\\"input\\\" &&\\n\\t\\t\\t\\telem.type === \\\"text\\\" &&\\n\\n\\t\\t\\t\\t// Support: IE<8\\n\\t\\t\\t\\t// New HTML5 attribute values (e.g., \\\"search\\\") appear with elem.type === \\\"text\\\"\\n\\t\\t\\t\\t( (attr = elem.getAttribute(\\\"type\\\")) == null || attr.toLowerCase() === \\\"text\\\" );\\n\\t\\t},\\n\\n\\t\\t// Position-in-collection\\n\\t\\t\\\"first\\\": createPositionalPseudo(function() {\\n\\t\\t\\treturn [ 0 ];\\n\\t\\t}),\\n\\n\\t\\t\\\"last\\\": createPositionalPseudo(function( matchIndexes, length ) {\\n\\t\\t\\treturn [ length - 1 ];\\n\\t\\t}),\\n\\n\\t\\t\\\"eq\\\": createPositionalPseudo(function( matchIndexes, length, argument ) {\\n\\t\\t\\treturn [ argument < 0 ? argument + length : argument ];\\n\\t\\t}),\\n\\n\\t\\t\\\"even\\\": createPositionalPseudo(function( matchIndexes, length ) {\\n\\t\\t\\tvar i = 0;\\n\\t\\t\\tfor ( ; i < length; i += 2 ) {\\n\\t\\t\\t\\tmatchIndexes.push( i );\\n\\t\\t\\t}\\n\\t\\t\\treturn matchIndexes;\\n\\t\\t}),\\n\\n\\t\\t\\\"odd\\\": createPositionalPseudo(function( matchIndexes, length ) {\\n\\t\\t\\tvar i = 1;\\n\\t\\t\\tfor ( ; i < length; i += 2 ) {\\n\\t\\t\\t\\tmatchIndexes.push( i );\\n\\t\\t\\t}\\n\\t\\t\\treturn matchIndexes;\\n\\t\\t}),\\n\\n\\t\\t\\\"lt\\\": createPositionalPseudo(function( matchIndexes, length, argument ) {\\n\\t\\t\\tvar i = argument < 0 ? argument + length : argument;\\n\\t\\t\\tfor ( ; --i >= 0; ) {\\n\\t\\t\\t\\tmatchIndexes.push( i );\\n\\t\\t\\t}\\n\\t\\t\\treturn matchIndexes;\\n\\t\\t}),\\n\\n\\t\\t\\\"gt\\\": createPositionalPseudo(function( matchIndexes, length, argument ) {\\n\\t\\t\\tvar i = argument < 0 ? argument + length : argument;\\n\\t\\t\\tfor ( ; ++i < length; ) {\\n\\t\\t\\t\\tmatchIndexes.push( i );\\n\\t\\t\\t}\\n\\t\\t\\treturn matchIndexes;\\n\\t\\t})\\n\\t}\\n};\\n\\nExpr.pseudos[\\\"nth\\\"] = Expr.pseudos[\\\"eq\\\"];\\n\\n// Add button/input type pseudos\\nfor ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\\n\\tExpr.pseudos[ i ] = createInputPseudo( i );\\n}\\nfor ( i in { submit: true, reset: true } ) {\\n\\tExpr.pseudos[ i ] = createButtonPseudo( i );\\n}\\n\\n// Easy API for creating new setFilters\\nfunction setFilters() {}\\nsetFilters.prototype = Expr.filters = Expr.pseudos;\\nExpr.setFilters = new setFilters();\\n\\ntokenize = Sizzle.tokenize = function( selector, parseOnly ) {\\n\\tvar matched, match, tokens, type,\\n\\t\\tsoFar, groups, preFilters,\\n\\t\\tcached = tokenCache[ selector + \\\" \\\" ];\\n\\n\\tif ( cached ) {\\n\\t\\treturn parseOnly ? 0 : cached.slice( 0 );\\n\\t}\\n\\n\\tsoFar = selector;\\n\\tgroups = [];\\n\\tpreFilters = Expr.preFilter;\\n\\n\\twhile ( soFar ) {\\n\\n\\t\\t// Comma and first run\\n\\t\\tif ( !matched || (match = rcomma.exec( soFar )) ) {\\n\\t\\t\\tif ( match ) {\\n\\t\\t\\t\\t// Don't consume trailing commas as valid\\n\\t\\t\\t\\tsoFar = soFar.slice( match[0].length ) || soFar;\\n\\t\\t\\t}\\n\\t\\t\\tgroups.push( (tokens = []) );\\n\\t\\t}\\n\\n\\t\\tmatched = false;\\n\\n\\t\\t// Combinators\\n\\t\\tif ( (match = rcombinators.exec( soFar )) ) {\\n\\t\\t\\tmatched = match.shift();\\n\\t\\t\\ttokens.push({\\n\\t\\t\\t\\tvalue: matched,\\n\\t\\t\\t\\t// Cast descendant combinators to space\\n\\t\\t\\t\\ttype: match[0].replace( rtrim, \\\" \\\" )\\n\\t\\t\\t});\\n\\t\\t\\tsoFar = soFar.slice( matched.length );\\n\\t\\t}\\n\\n\\t\\t// Filters\\n\\t\\tfor ( type in Expr.filter ) {\\n\\t\\t\\tif ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||\\n\\t\\t\\t\\t(match = preFilters[ type ]( match ))) ) {\\n\\t\\t\\t\\tmatched = match.shift();\\n\\t\\t\\t\\ttokens.push({\\n\\t\\t\\t\\t\\tvalue: matched,\\n\\t\\t\\t\\t\\ttype: type,\\n\\t\\t\\t\\t\\tmatches: match\\n\\t\\t\\t\\t});\\n\\t\\t\\t\\tsoFar = soFar.slice( matched.length );\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tif ( !matched ) {\\n\\t\\t\\tbreak;\\n\\t\\t}\\n\\t}\\n\\n\\t// Return the length of the invalid excess\\n\\t// if we're just parsing\\n\\t// Otherwise, throw an error or return tokens\\n\\treturn parseOnly ?\\n\\t\\tsoFar.length :\\n\\t\\tsoFar ?\\n\\t\\t\\tSizzle.error( selector ) :\\n\\t\\t\\t// Cache the tokens\\n\\t\\t\\ttokenCache( selector, groups ).slice( 0 );\\n};\\n\\nfunction toSelector( tokens ) {\\n\\tvar i = 0,\\n\\t\\tlen = tokens.length,\\n\\t\\tselector = \\\"\\\";\\n\\tfor ( ; i < len; i++ ) {\\n\\t\\tselector += tokens[i].value;\\n\\t}\\n\\treturn selector;\\n}\\n\\nfunction addCombinator( matcher, combinator, base ) {\\n\\tvar dir = combinator.dir,\\n\\t\\tskip = combinator.next,\\n\\t\\tkey = skip || dir,\\n\\t\\tcheckNonElements = base && key === \\\"parentNode\\\",\\n\\t\\tdoneName = done++;\\n\\n\\treturn combinator.first ?\\n\\t\\t// Check against closest ancestor/preceding element\\n\\t\\tfunction( elem, context, xml ) {\\n\\t\\t\\twhile ( (elem = elem[ dir ]) ) {\\n\\t\\t\\t\\tif ( elem.nodeType === 1 || checkNonElements ) {\\n\\t\\t\\t\\t\\treturn matcher( elem, context, xml );\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\treturn false;\\n\\t\\t} :\\n\\n\\t\\t// Check against all ancestor/preceding elements\\n\\t\\tfunction( elem, context, xml ) {\\n\\t\\t\\tvar oldCache, uniqueCache, outerCache,\\n\\t\\t\\t\\tnewCache = [ dirruns, doneName ];\\n\\n\\t\\t\\t// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching\\n\\t\\t\\tif ( xml ) {\\n\\t\\t\\t\\twhile ( (elem = elem[ dir ]) ) {\\n\\t\\t\\t\\t\\tif ( elem.nodeType === 1 || checkNonElements ) {\\n\\t\\t\\t\\t\\t\\tif ( matcher( elem, context, xml ) ) {\\n\\t\\t\\t\\t\\t\\t\\treturn true;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else {\\n\\t\\t\\t\\twhile ( (elem = elem[ dir ]) ) {\\n\\t\\t\\t\\t\\tif ( elem.nodeType === 1 || checkNonElements ) {\\n\\t\\t\\t\\t\\t\\touterCache = elem[ expando ] || (elem[ expando ] = {});\\n\\n\\t\\t\\t\\t\\t\\t// Support: IE <9 only\\n\\t\\t\\t\\t\\t\\t// Defend against cloned attroperties (jQuery gh-1709)\\n\\t\\t\\t\\t\\t\\tuniqueCache = outerCache[ elem.uniqueID ] || (outerCache[ elem.uniqueID ] = {});\\n\\n\\t\\t\\t\\t\\t\\tif ( skip && skip === elem.nodeName.toLowerCase() ) {\\n\\t\\t\\t\\t\\t\\t\\telem = elem[ dir ] || elem;\\n\\t\\t\\t\\t\\t\\t} else if ( (oldCache = uniqueCache[ key ]) &&\\n\\t\\t\\t\\t\\t\\t\\toldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t// Assign to newCache so results back-propagate to previous elements\\n\\t\\t\\t\\t\\t\\t\\treturn (newCache[ 2 ] = oldCache[ 2 ]);\\n\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t// Reuse newcache so results back-propagate to previous elements\\n\\t\\t\\t\\t\\t\\t\\tuniqueCache[ key ] = newCache;\\n\\n\\t\\t\\t\\t\\t\\t\\t// A match means we're done; a fail means we have to keep checking\\n\\t\\t\\t\\t\\t\\t\\tif ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {\\n\\t\\t\\t\\t\\t\\t\\t\\treturn true;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\treturn false;\\n\\t\\t};\\n}\\n\\nfunction elementMatcher( matchers ) {\\n\\treturn matchers.length > 1 ?\\n\\t\\tfunction( elem, context, xml ) {\\n\\t\\t\\tvar i = matchers.length;\\n\\t\\t\\twhile ( i-- ) {\\n\\t\\t\\t\\tif ( !matchers[i]( elem, context, xml ) ) {\\n\\t\\t\\t\\t\\treturn false;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\treturn true;\\n\\t\\t} :\\n\\t\\tmatchers[0];\\n}\\n\\nfunction multipleContexts( selector, contexts, results ) {\\n\\tvar i = 0,\\n\\t\\tlen = contexts.length;\\n\\tfor ( ; i < len; i++ ) {\\n\\t\\tSizzle( selector, contexts[i], results );\\n\\t}\\n\\treturn results;\\n}\\n\\nfunction condense( unmatched, map, filter, context, xml ) {\\n\\tvar elem,\\n\\t\\tnewUnmatched = [],\\n\\t\\ti = 0,\\n\\t\\tlen = unmatched.length,\\n\\t\\tmapped = map != null;\\n\\n\\tfor ( ; i < len; i++ ) {\\n\\t\\tif ( (elem = unmatched[i]) ) {\\n\\t\\t\\tif ( !filter || filter( elem, context, xml ) ) {\\n\\t\\t\\t\\tnewUnmatched.push( elem );\\n\\t\\t\\t\\tif ( mapped ) {\\n\\t\\t\\t\\t\\tmap.push( i );\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\treturn newUnmatched;\\n}\\n\\nfunction setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {\\n\\tif ( postFilter && !postFilter[ expando ] ) {\\n\\t\\tpostFilter = setMatcher( postFilter );\\n\\t}\\n\\tif ( postFinder && !postFinder[ expando ] ) {\\n\\t\\tpostFinder = setMatcher( postFinder, postSelector );\\n\\t}\\n\\treturn markFunction(function( seed, results, context, xml ) {\\n\\t\\tvar temp, i, elem,\\n\\t\\t\\tpreMap = [],\\n\\t\\t\\tpostMap = [],\\n\\t\\t\\tpreexisting = results.length,\\n\\n\\t\\t\\t// Get initial elements from seed or context\\n\\t\\t\\telems = seed || multipleContexts( selector || \\\"*\\\", context.nodeType ? [ context ] : context, [] ),\\n\\n\\t\\t\\t// Prefilter to get matcher input, preserving a map for seed-results synchronization\\n\\t\\t\\tmatcherIn = preFilter && ( seed || !selector ) ?\\n\\t\\t\\t\\tcondense( elems, preMap, preFilter, context, xml ) :\\n\\t\\t\\t\\telems,\\n\\n\\t\\t\\tmatcherOut = matcher ?\\n\\t\\t\\t\\t// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\\n\\t\\t\\t\\tpostFinder || ( seed ? preFilter : preexisting || postFilter ) ?\\n\\n\\t\\t\\t\\t\\t// ...intermediate processing is necessary\\n\\t\\t\\t\\t\\t[] :\\n\\n\\t\\t\\t\\t\\t// ...otherwise use results directly\\n\\t\\t\\t\\t\\tresults :\\n\\t\\t\\t\\tmatcherIn;\\n\\n\\t\\t// Find primary matches\\n\\t\\tif ( matcher ) {\\n\\t\\t\\tmatcher( matcherIn, matcherOut, context, xml );\\n\\t\\t}\\n\\n\\t\\t// Apply postFilter\\n\\t\\tif ( postFilter ) {\\n\\t\\t\\ttemp = condense( matcherOut, postMap );\\n\\t\\t\\tpostFilter( temp, [], context, xml );\\n\\n\\t\\t\\t// Un-match failing elements by moving them back to matcherIn\\n\\t\\t\\ti = temp.length;\\n\\t\\t\\twhile ( i-- ) {\\n\\t\\t\\t\\tif ( (elem = temp[i]) ) {\\n\\t\\t\\t\\t\\tmatcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tif ( seed ) {\\n\\t\\t\\tif ( postFinder || preFilter ) {\\n\\t\\t\\t\\tif ( postFinder ) {\\n\\t\\t\\t\\t\\t// Get the final matcherOut by condensing this intermediate into postFinder contexts\\n\\t\\t\\t\\t\\ttemp = [];\\n\\t\\t\\t\\t\\ti = matcherOut.length;\\n\\t\\t\\t\\t\\twhile ( i-- ) {\\n\\t\\t\\t\\t\\t\\tif ( (elem = matcherOut[i]) ) {\\n\\t\\t\\t\\t\\t\\t\\t// Restore matcherIn since elem is not yet a final match\\n\\t\\t\\t\\t\\t\\t\\ttemp.push( (matcherIn[i] = elem) );\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tpostFinder( null, (matcherOut = []), temp, xml );\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Move matched elements from seed to results to keep them synchronized\\n\\t\\t\\t\\ti = matcherOut.length;\\n\\t\\t\\t\\twhile ( i-- ) {\\n\\t\\t\\t\\t\\tif ( (elem = matcherOut[i]) &&\\n\\t\\t\\t\\t\\t\\t(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {\\n\\n\\t\\t\\t\\t\\t\\tseed[temp] = !(results[temp] = elem);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t// Add elements to results, through postFinder if defined\\n\\t\\t} else {\\n\\t\\t\\tmatcherOut = condense(\\n\\t\\t\\t\\tmatcherOut === results ?\\n\\t\\t\\t\\t\\tmatcherOut.splice( preexisting, matcherOut.length ) :\\n\\t\\t\\t\\t\\tmatcherOut\\n\\t\\t\\t);\\n\\t\\t\\tif ( postFinder ) {\\n\\t\\t\\t\\tpostFinder( null, results, matcherOut, xml );\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tpush.apply( results, matcherOut );\\n\\t\\t\\t}\\n\\t\\t}\\n\\t});\\n}\\n\\nfunction matcherFromTokens( tokens ) {\\n\\tvar checkContext, matcher, j,\\n\\t\\tlen = tokens.length,\\n\\t\\tleadingRelative = Expr.relative[ tokens[0].type ],\\n\\t\\timplicitRelative = leadingRelative || Expr.relative[\\\" \\\"],\\n\\t\\ti = leadingRelative ? 1 : 0,\\n\\n\\t\\t// The foundational matcher ensures that elements are reachable from top-level context(s)\\n\\t\\tmatchContext = addCombinator( function( elem ) {\\n\\t\\t\\treturn elem === checkContext;\\n\\t\\t}, implicitRelative, true ),\\n\\t\\tmatchAnyContext = addCombinator( function( elem ) {\\n\\t\\t\\treturn indexOf( checkContext, elem ) > -1;\\n\\t\\t}, implicitRelative, true ),\\n\\t\\tmatchers = [ function( elem, context, xml ) {\\n\\t\\t\\tvar ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (\\n\\t\\t\\t\\t(checkContext = context).nodeType ?\\n\\t\\t\\t\\t\\tmatchContext( elem, context, xml ) :\\n\\t\\t\\t\\t\\tmatchAnyContext( elem, context, xml ) );\\n\\t\\t\\t// Avoid hanging onto element (issue #299)\\n\\t\\t\\tcheckContext = null;\\n\\t\\t\\treturn ret;\\n\\t\\t} ];\\n\\n\\tfor ( ; i < len; i++ ) {\\n\\t\\tif ( (matcher = Expr.relative[ tokens[i].type ]) ) {\\n\\t\\t\\tmatchers = [ addCombinator(elementMatcher( matchers ), matcher) ];\\n\\t\\t} else {\\n\\t\\t\\tmatcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );\\n\\n\\t\\t\\t// Return special upon seeing a positional matcher\\n\\t\\t\\tif ( matcher[ expando ] ) {\\n\\t\\t\\t\\t// Find the next relative operator (if any) for proper handling\\n\\t\\t\\t\\tj = ++i;\\n\\t\\t\\t\\tfor ( ; j < len; j++ ) {\\n\\t\\t\\t\\t\\tif ( Expr.relative[ tokens[j].type ] ) {\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\treturn setMatcher(\\n\\t\\t\\t\\t\\ti > 1 && elementMatcher( matchers ),\\n\\t\\t\\t\\t\\ti > 1 && toSelector(\\n\\t\\t\\t\\t\\t\\t// If the preceding token was a descendant combinator, insert an implicit any-element `*`\\n\\t\\t\\t\\t\\t\\ttokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === \\\" \\\" ? \\\"*\\\" : \\\"\\\" })\\n\\t\\t\\t\\t\\t).replace( rtrim, \\\"$1\\\" ),\\n\\t\\t\\t\\t\\tmatcher,\\n\\t\\t\\t\\t\\ti < j && matcherFromTokens( tokens.slice( i, j ) ),\\n\\t\\t\\t\\t\\tj < len && matcherFromTokens( (tokens = tokens.slice( j )) ),\\n\\t\\t\\t\\t\\tj < len && toSelector( tokens )\\n\\t\\t\\t\\t);\\n\\t\\t\\t}\\n\\t\\t\\tmatchers.push( matcher );\\n\\t\\t}\\n\\t}\\n\\n\\treturn elementMatcher( matchers );\\n}\\n\\nfunction matcherFromGroupMatchers( elementMatchers, setMatchers ) {\\n\\tvar bySet = setMatchers.length > 0,\\n\\t\\tbyElement = elementMatchers.length > 0,\\n\\t\\tsuperMatcher = function( seed, context, xml, results, outermost ) {\\n\\t\\t\\tvar elem, j, matcher,\\n\\t\\t\\t\\tmatchedCount = 0,\\n\\t\\t\\t\\ti = \\\"0\\\",\\n\\t\\t\\t\\tunmatched = seed && [],\\n\\t\\t\\t\\tsetMatched = [],\\n\\t\\t\\t\\tcontextBackup = outermostContext,\\n\\t\\t\\t\\t// We must always have either seed elements or outermost context\\n\\t\\t\\t\\telems = seed || byElement && Expr.find[\\\"TAG\\\"]( \\\"*\\\", outermost ),\\n\\t\\t\\t\\t// Use integer dirruns iff this is the outermost matcher\\n\\t\\t\\t\\tdirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),\\n\\t\\t\\t\\tlen = elems.length;\\n\\n\\t\\t\\tif ( outermost ) {\\n\\t\\t\\t\\toutermostContext = context === document || context || outermost;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Add elements passing elementMatchers directly to results\\n\\t\\t\\t// Support: IE<9, Safari\\n\\t\\t\\t// Tolerate NodeList properties (IE: \\\"length\\\"; Safari: <number>) matching elements by id\\n\\t\\t\\tfor ( ; i !== len && (elem = elems[i]) != null; i++ ) {\\n\\t\\t\\t\\tif ( byElement && elem ) {\\n\\t\\t\\t\\t\\tj = 0;\\n\\t\\t\\t\\t\\tif ( !context && elem.ownerDocument !== document ) {\\n\\t\\t\\t\\t\\t\\tsetDocument( elem );\\n\\t\\t\\t\\t\\t\\txml = !documentIsHTML;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\twhile ( (matcher = elementMatchers[j++]) ) {\\n\\t\\t\\t\\t\\t\\tif ( matcher( elem, context || document, xml) ) {\\n\\t\\t\\t\\t\\t\\t\\tresults.push( elem );\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tif ( outermost ) {\\n\\t\\t\\t\\t\\t\\tdirruns = dirrunsUnique;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Track unmatched elements for set filters\\n\\t\\t\\t\\tif ( bySet ) {\\n\\t\\t\\t\\t\\t// They will have gone through all possible matchers\\n\\t\\t\\t\\t\\tif ( (elem = !matcher && elem) ) {\\n\\t\\t\\t\\t\\t\\tmatchedCount--;\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t// Lengthen the array for every element, matched or not\\n\\t\\t\\t\\t\\tif ( seed ) {\\n\\t\\t\\t\\t\\t\\tunmatched.push( elem );\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t// `i` is now the count of elements visited above, and adding it to `matchedCount`\\n\\t\\t\\t// makes the latter nonnegative.\\n\\t\\t\\tmatchedCount += i;\\n\\n\\t\\t\\t// Apply set filters to unmatched elements\\n\\t\\t\\t// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\\n\\t\\t\\t// equals `i`), unless we didn't visit _any_ elements in the above loop because we have\\n\\t\\t\\t// no element matchers and no seed.\\n\\t\\t\\t// Incrementing an initially-string \\\"0\\\" `i` allows `i` to remain a string only in that\\n\\t\\t\\t// case, which will result in a \\\"00\\\" `matchedCount` that differs from `i` but is also\\n\\t\\t\\t// numerically zero.\\n\\t\\t\\tif ( bySet && i !== matchedCount ) {\\n\\t\\t\\t\\tj = 0;\\n\\t\\t\\t\\twhile ( (matcher = setMatchers[j++]) ) {\\n\\t\\t\\t\\t\\tmatcher( unmatched, setMatched, context, xml );\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( seed ) {\\n\\t\\t\\t\\t\\t// Reintegrate element matches to eliminate the need for sorting\\n\\t\\t\\t\\t\\tif ( matchedCount > 0 ) {\\n\\t\\t\\t\\t\\t\\twhile ( i-- ) {\\n\\t\\t\\t\\t\\t\\t\\tif ( !(unmatched[i] || setMatched[i]) ) {\\n\\t\\t\\t\\t\\t\\t\\t\\tsetMatched[i] = pop.call( results );\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t// Discard index placeholder values to get only actual matches\\n\\t\\t\\t\\t\\tsetMatched = condense( setMatched );\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Add matches to results\\n\\t\\t\\t\\tpush.apply( results, setMatched );\\n\\n\\t\\t\\t\\t// Seedless set matches succeeding multiple successful matchers stipulate sorting\\n\\t\\t\\t\\tif ( outermost && !seed && setMatched.length > 0 &&\\n\\t\\t\\t\\t\\t( matchedCount + setMatchers.length ) > 1 ) {\\n\\n\\t\\t\\t\\t\\tSizzle.uniqueSort( results );\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Override manipulation of globals by nested matchers\\n\\t\\t\\tif ( outermost ) {\\n\\t\\t\\t\\tdirruns = dirrunsUnique;\\n\\t\\t\\t\\toutermostContext = contextBackup;\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn unmatched;\\n\\t\\t};\\n\\n\\treturn bySet ?\\n\\t\\tmarkFunction( superMatcher ) :\\n\\t\\tsuperMatcher;\\n}\\n\\ncompile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {\\n\\tvar i,\\n\\t\\tsetMatchers = [],\\n\\t\\telementMatchers = [],\\n\\t\\tcached = compilerCache[ selector + \\\" \\\" ];\\n\\n\\tif ( !cached ) {\\n\\t\\t// Generate a function of recursive functions that can be used to check each element\\n\\t\\tif ( !match ) {\\n\\t\\t\\tmatch = tokenize( selector );\\n\\t\\t}\\n\\t\\ti = match.length;\\n\\t\\twhile ( i-- ) {\\n\\t\\t\\tcached = matcherFromTokens( match[i] );\\n\\t\\t\\tif ( cached[ expando ] ) {\\n\\t\\t\\t\\tsetMatchers.push( cached );\\n\\t\\t\\t} else {\\n\\t\\t\\t\\telementMatchers.push( cached );\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// Cache the compiled function\\n\\t\\tcached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );\\n\\n\\t\\t// Save selector and tokenization\\n\\t\\tcached.selector = selector;\\n\\t}\\n\\treturn cached;\\n};\\n\\n/**\\n * A low-level selection function that works with Sizzle's compiled\\n *  selector functions\\n * @param {String|Function} selector A selector or a pre-compiled\\n *  selector function built with Sizzle.compile\\n * @param {Element} context\\n * @param {Array} [results]\\n * @param {Array} [seed] A set of elements to match against\\n */\\nselect = Sizzle.select = function( selector, context, results, seed ) {\\n\\tvar i, tokens, token, type, find,\\n\\t\\tcompiled = typeof selector === \\\"function\\\" && selector,\\n\\t\\tmatch = !seed && tokenize( (selector = compiled.selector || selector) );\\n\\n\\tresults = results || [];\\n\\n\\t// Try to minimize operations if there is only one selector in the list and no seed\\n\\t// (the latter of which guarantees us context)\\n\\tif ( match.length === 1 ) {\\n\\n\\t\\t// Reduce context if the leading compound selector is an ID\\n\\t\\ttokens = match[0] = match[0].slice( 0 );\\n\\t\\tif ( tokens.length > 2 && (token = tokens[0]).type === \\\"ID\\\" &&\\n\\t\\t\\t\\tcontext.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[1].type ] ) {\\n\\n\\t\\t\\tcontext = ( Expr.find[\\\"ID\\\"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];\\n\\t\\t\\tif ( !context ) {\\n\\t\\t\\t\\treturn results;\\n\\n\\t\\t\\t// Precompiled matchers will still verify ancestry, so step up a level\\n\\t\\t\\t} else if ( compiled ) {\\n\\t\\t\\t\\tcontext = context.parentNode;\\n\\t\\t\\t}\\n\\n\\t\\t\\tselector = selector.slice( tokens.shift().value.length );\\n\\t\\t}\\n\\n\\t\\t// Fetch a seed set for right-to-left matching\\n\\t\\ti = matchExpr[\\\"needsContext\\\"].test( selector ) ? 0 : tokens.length;\\n\\t\\twhile ( i-- ) {\\n\\t\\t\\ttoken = tokens[i];\\n\\n\\t\\t\\t// Abort if we hit a combinator\\n\\t\\t\\tif ( Expr.relative[ (type = token.type) ] ) {\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\t\\t\\tif ( (find = Expr.find[ type ]) ) {\\n\\t\\t\\t\\t// Search, expanding context for leading sibling combinators\\n\\t\\t\\t\\tif ( (seed = find(\\n\\t\\t\\t\\t\\ttoken.matches[0].replace( runescape, funescape ),\\n\\t\\t\\t\\t\\trsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context\\n\\t\\t\\t\\t)) ) {\\n\\n\\t\\t\\t\\t\\t// If seed is empty or no tokens remain, we can return early\\n\\t\\t\\t\\t\\ttokens.splice( i, 1 );\\n\\t\\t\\t\\t\\tselector = seed.length && toSelector( tokens );\\n\\t\\t\\t\\t\\tif ( !selector ) {\\n\\t\\t\\t\\t\\t\\tpush.apply( results, seed );\\n\\t\\t\\t\\t\\t\\treturn results;\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t// Compile and execute a filtering function if one is not provided\\n\\t// Provide `match` to avoid retokenization if we modified the selector above\\n\\t( compiled || compile( selector, match ) )(\\n\\t\\tseed,\\n\\t\\tcontext,\\n\\t\\t!documentIsHTML,\\n\\t\\tresults,\\n\\t\\t!context || rsibling.test( selector ) && testContext( context.parentNode ) || context\\n\\t);\\n\\treturn results;\\n};\\n\\n// One-time assignments\\n\\n// Sort stability\\nsupport.sortStable = expando.split(\\\"\\\").sort( sortOrder ).join(\\\"\\\") === expando;\\n\\n// Support: Chrome 14-35+\\n// Always assume duplicates if they aren't passed to the comparison function\\nsupport.detectDuplicates = !!hasDuplicate;\\n\\n// Initialize against the default document\\nsetDocument();\\n\\n// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\\n// Detached nodes confoundingly follow *each other*\\nsupport.sortDetached = assert(function( el ) {\\n\\t// Should return 1, but returns 4 (following)\\n\\treturn el.compareDocumentPosition( document.createElement(\\\"fieldset\\\") ) & 1;\\n});\\n\\n// Support: IE<8\\n// Prevent attribute/property \\\"interpolation\\\"\\n// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\\nif ( !assert(function( el ) {\\n\\tel.innerHTML = \\\"<a href='#'></a>\\\";\\n\\treturn el.firstChild.getAttribute(\\\"href\\\") === \\\"#\\\" ;\\n}) ) {\\n\\taddHandle( \\\"type|href|height|width\\\", function( elem, name, isXML ) {\\n\\t\\tif ( !isXML ) {\\n\\t\\t\\treturn elem.getAttribute( name, name.toLowerCase() === \\\"type\\\" ? 1 : 2 );\\n\\t\\t}\\n\\t});\\n}\\n\\n// Support: IE<9\\n// Use defaultValue in place of getAttribute(\\\"value\\\")\\nif ( !support.attributes || !assert(function( el ) {\\n\\tel.innerHTML = \\\"<input/>\\\";\\n\\tel.firstChild.setAttribute( \\\"value\\\", \\\"\\\" );\\n\\treturn el.firstChild.getAttribute( \\\"value\\\" ) === \\\"\\\";\\n}) ) {\\n\\taddHandle( \\\"value\\\", function( elem, name, isXML ) {\\n\\t\\tif ( !isXML && elem.nodeName.toLowerCase() === \\\"input\\\" ) {\\n\\t\\t\\treturn elem.defaultValue;\\n\\t\\t}\\n\\t});\\n}\\n\\n// Support: IE<9\\n// Use getAttributeNode to fetch booleans when getAttribute lies\\nif ( !assert(function( el ) {\\n\\treturn el.getAttribute(\\\"disabled\\\") == null;\\n}) ) {\\n\\taddHandle( booleans, function( elem, name, isXML ) {\\n\\t\\tvar val;\\n\\t\\tif ( !isXML ) {\\n\\t\\t\\treturn elem[ name ] === true ? name.toLowerCase() :\\n\\t\\t\\t\\t\\t(val = elem.getAttributeNode( name )) && val.specified ?\\n\\t\\t\\t\\t\\tval.value :\\n\\t\\t\\t\\tnull;\\n\\t\\t}\\n\\t});\\n}\\n\\nreturn Sizzle;\\n\\n})( window );\\n\\n\\n\\njQuery.find = Sizzle;\\njQuery.expr = Sizzle.selectors;\\n\\n// Deprecated\\njQuery.expr[ \\\":\\\" ] = jQuery.expr.pseudos;\\njQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;\\njQuery.text = Sizzle.getText;\\njQuery.isXMLDoc = Sizzle.isXML;\\njQuery.contains = Sizzle.contains;\\njQuery.escapeSelector = Sizzle.escape;\\n\\n\\n\\n\\nvar dir = function( elem, dir, until ) {\\n\\tvar matched = [],\\n\\t\\ttruncate = until !== undefined;\\n\\n\\twhile ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {\\n\\t\\tif ( elem.nodeType === 1 ) {\\n\\t\\t\\tif ( truncate && jQuery( elem ).is( until ) ) {\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\t\\t\\tmatched.push( elem );\\n\\t\\t}\\n\\t}\\n\\treturn matched;\\n};\\n\\n\\nvar siblings = function( n, elem ) {\\n\\tvar matched = [];\\n\\n\\tfor ( ; n; n = n.nextSibling ) {\\n\\t\\tif ( n.nodeType === 1 && n !== elem ) {\\n\\t\\t\\tmatched.push( n );\\n\\t\\t}\\n\\t}\\n\\n\\treturn matched;\\n};\\n\\n\\nvar rneedsContext = jQuery.expr.match.needsContext;\\n\\n\\n\\nfunction nodeName( elem, name ) {\\n\\n  return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\\n\\n};\\nvar rsingleTag = ( /^<([a-z][^\\\\/\\\\0>:\\\\x20\\\\t\\\\r\\\\n\\\\f]*)[\\\\x20\\\\t\\\\r\\\\n\\\\f]*\\\\/?>(?:<\\\\/\\\\1>|)$/i );\\n\\n\\n\\nvar risSimple = /^.[^:#\\\\[\\\\.,]*$/;\\n\\n// Implement the identical functionality for filter and not\\nfunction winnow( elements, qualifier, not ) {\\n\\tif ( jQuery.isFunction( qualifier ) ) {\\n\\t\\treturn jQuery.grep( elements, function( elem, i ) {\\n\\t\\t\\treturn !!qualifier.call( elem, i, elem ) !== not;\\n\\t\\t} );\\n\\t}\\n\\n\\t// Single element\\n\\tif ( qualifier.nodeType ) {\\n\\t\\treturn jQuery.grep( elements, function( elem ) {\\n\\t\\t\\treturn ( elem === qualifier ) !== not;\\n\\t\\t} );\\n\\t}\\n\\n\\t// Arraylike of elements (jQuery, arguments, Array)\\n\\tif ( typeof qualifier !== \\\"string\\\" ) {\\n\\t\\treturn jQuery.grep( elements, function( elem ) {\\n\\t\\t\\treturn ( indexOf.call( qualifier, elem ) > -1 ) !== not;\\n\\t\\t} );\\n\\t}\\n\\n\\t// Simple selector that can be filtered directly, removing non-Elements\\n\\tif ( risSimple.test( qualifier ) ) {\\n\\t\\treturn jQuery.filter( qualifier, elements, not );\\n\\t}\\n\\n\\t// Complex selector, compare the two sets, removing non-Elements\\n\\tqualifier = jQuery.filter( qualifier, elements );\\n\\treturn jQuery.grep( elements, function( elem ) {\\n\\t\\treturn ( indexOf.call( qualifier, elem ) > -1 ) !== not && elem.nodeType === 1;\\n\\t} );\\n}\\n\\njQuery.filter = function( expr, elems, not ) {\\n\\tvar elem = elems[ 0 ];\\n\\n\\tif ( not ) {\\n\\t\\texpr = \\\":not(\\\" + expr + \\\")\\\";\\n\\t}\\n\\n\\tif ( elems.length === 1 && elem.nodeType === 1 ) {\\n\\t\\treturn jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];\\n\\t}\\n\\n\\treturn jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {\\n\\t\\treturn elem.nodeType === 1;\\n\\t} ) );\\n};\\n\\njQuery.fn.extend( {\\n\\tfind: function( selector ) {\\n\\t\\tvar i, ret,\\n\\t\\t\\tlen = this.length,\\n\\t\\t\\tself = this;\\n\\n\\t\\tif ( typeof selector !== \\\"string\\\" ) {\\n\\t\\t\\treturn this.pushStack( jQuery( selector ).filter( function() {\\n\\t\\t\\t\\tfor ( i = 0; i < len; i++ ) {\\n\\t\\t\\t\\t\\tif ( jQuery.contains( self[ i ], this ) ) {\\n\\t\\t\\t\\t\\t\\treturn true;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t} ) );\\n\\t\\t}\\n\\n\\t\\tret = this.pushStack( [] );\\n\\n\\t\\tfor ( i = 0; i < len; i++ ) {\\n\\t\\t\\tjQuery.find( selector, self[ i ], ret );\\n\\t\\t}\\n\\n\\t\\treturn len > 1 ? jQuery.uniqueSort( ret ) : ret;\\n\\t},\\n\\tfilter: function( selector ) {\\n\\t\\treturn this.pushStack( winnow( this, selector || [], false ) );\\n\\t},\\n\\tnot: function( selector ) {\\n\\t\\treturn this.pushStack( winnow( this, selector || [], true ) );\\n\\t},\\n\\tis: function( selector ) {\\n\\t\\treturn !!winnow(\\n\\t\\t\\tthis,\\n\\n\\t\\t\\t// If this is a positional/relative selector, check membership in the returned set\\n\\t\\t\\t// so $(\\\"p:first\\\").is(\\\"p:last\\\") won't return true for a doc with two \\\"p\\\".\\n\\t\\t\\ttypeof selector === \\\"string\\\" && rneedsContext.test( selector ) ?\\n\\t\\t\\t\\tjQuery( selector ) :\\n\\t\\t\\t\\tselector || [],\\n\\t\\t\\tfalse\\n\\t\\t).length;\\n\\t}\\n} );\\n\\n\\n// Initialize a jQuery object\\n\\n\\n// A central reference to the root jQuery(document)\\nvar rootjQuery,\\n\\n\\t// A simple way to check for HTML strings\\n\\t// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\\n\\t// Strict HTML recognition (#11290: must start with <)\\n\\t// Shortcut simple #id case for speed\\n\\trquickExpr = /^(?:\\\\s*(<[\\\\w\\\\W]+>)[^>]*|#([\\\\w-]+))$/,\\n\\n\\tinit = jQuery.fn.init = function( selector, context, root ) {\\n\\t\\tvar match, elem;\\n\\n\\t\\t// HANDLE: $(\\\"\\\"), $(null), $(undefined), $(false)\\n\\t\\tif ( !selector ) {\\n\\t\\t\\treturn this;\\n\\t\\t}\\n\\n\\t\\t// Method init() accepts an alternate rootjQuery\\n\\t\\t// so migrate can support jQuery.sub (gh-2101)\\n\\t\\troot = root || rootjQuery;\\n\\n\\t\\t// Handle HTML strings\\n\\t\\tif ( typeof selector === \\\"string\\\" ) {\\n\\t\\t\\tif ( selector[ 0 ] === \\\"<\\\" &&\\n\\t\\t\\t\\tselector[ selector.length - 1 ] === \\\">\\\" &&\\n\\t\\t\\t\\tselector.length >= 3 ) {\\n\\n\\t\\t\\t\\t// Assume that strings that start and end with <> are HTML and skip the regex check\\n\\t\\t\\t\\tmatch = [ null, selector, null ];\\n\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tmatch = rquickExpr.exec( selector );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Match html or make sure no context is specified for #id\\n\\t\\t\\tif ( match && ( match[ 1 ] || !context ) ) {\\n\\n\\t\\t\\t\\t// HANDLE: $(html) -> $(array)\\n\\t\\t\\t\\tif ( match[ 1 ] ) {\\n\\t\\t\\t\\t\\tcontext = context instanceof jQuery ? context[ 0 ] : context;\\n\\n\\t\\t\\t\\t\\t// Option to run scripts is true for back-compat\\n\\t\\t\\t\\t\\t// Intentionally let the error be thrown if parseHTML is not present\\n\\t\\t\\t\\t\\tjQuery.merge( this, jQuery.parseHTML(\\n\\t\\t\\t\\t\\t\\tmatch[ 1 ],\\n\\t\\t\\t\\t\\t\\tcontext && context.nodeType ? context.ownerDocument || context : document,\\n\\t\\t\\t\\t\\t\\ttrue\\n\\t\\t\\t\\t\\t) );\\n\\n\\t\\t\\t\\t\\t// HANDLE: $(html, props)\\n\\t\\t\\t\\t\\tif ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {\\n\\t\\t\\t\\t\\t\\tfor ( match in context ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t// Properties of context are called as methods if possible\\n\\t\\t\\t\\t\\t\\t\\tif ( jQuery.isFunction( this[ match ] ) ) {\\n\\t\\t\\t\\t\\t\\t\\t\\tthis[ match ]( context[ match ] );\\n\\n\\t\\t\\t\\t\\t\\t\\t// ...and otherwise set as attributes\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tthis.attr( match, context[ match ] );\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\treturn this;\\n\\n\\t\\t\\t\\t// HANDLE: $(#id)\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\telem = document.getElementById( match[ 2 ] );\\n\\n\\t\\t\\t\\t\\tif ( elem ) {\\n\\n\\t\\t\\t\\t\\t\\t// Inject the element directly into the jQuery object\\n\\t\\t\\t\\t\\t\\tthis[ 0 ] = elem;\\n\\t\\t\\t\\t\\t\\tthis.length = 1;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\treturn this;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t// HANDLE: $(expr, $(...))\\n\\t\\t\\t} else if ( !context || context.jquery ) {\\n\\t\\t\\t\\treturn ( context || root ).find( selector );\\n\\n\\t\\t\\t// HANDLE: $(expr, context)\\n\\t\\t\\t// (which is just equivalent to: $(context).find(expr)\\n\\t\\t\\t} else {\\n\\t\\t\\t\\treturn this.constructor( context ).find( selector );\\n\\t\\t\\t}\\n\\n\\t\\t// HANDLE: $(DOMElement)\\n\\t\\t} else if ( selector.nodeType ) {\\n\\t\\t\\tthis[ 0 ] = selector;\\n\\t\\t\\tthis.length = 1;\\n\\t\\t\\treturn this;\\n\\n\\t\\t// HANDLE: $(function)\\n\\t\\t// Shortcut for document ready\\n\\t\\t} else if ( jQuery.isFunction( selector ) ) {\\n\\t\\t\\treturn root.ready !== undefined ?\\n\\t\\t\\t\\troot.ready( selector ) :\\n\\n\\t\\t\\t\\t// Execute immediately if ready is not present\\n\\t\\t\\t\\tselector( jQuery );\\n\\t\\t}\\n\\n\\t\\treturn jQuery.makeArray( selector, this );\\n\\t};\\n\\n// Give the init function the jQuery prototype for later instantiation\\ninit.prototype = jQuery.fn;\\n\\n// Initialize central reference\\nrootjQuery = jQuery( document );\\n\\n\\nvar rparentsprev = /^(?:parents|prev(?:Until|All))/,\\n\\n\\t// Methods guaranteed to produce a unique set when starting from a unique set\\n\\tguaranteedUnique = {\\n\\t\\tchildren: true,\\n\\t\\tcontents: true,\\n\\t\\tnext: true,\\n\\t\\tprev: true\\n\\t};\\n\\njQuery.fn.extend( {\\n\\thas: function( target ) {\\n\\t\\tvar targets = jQuery( target, this ),\\n\\t\\t\\tl = targets.length;\\n\\n\\t\\treturn this.filter( function() {\\n\\t\\t\\tvar i = 0;\\n\\t\\t\\tfor ( ; i < l; i++ ) {\\n\\t\\t\\t\\tif ( jQuery.contains( this, targets[ i ] ) ) {\\n\\t\\t\\t\\t\\treturn true;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t} );\\n\\t},\\n\\n\\tclosest: function( selectors, context ) {\\n\\t\\tvar cur,\\n\\t\\t\\ti = 0,\\n\\t\\t\\tl = this.length,\\n\\t\\t\\tmatched = [],\\n\\t\\t\\ttargets = typeof selectors !== \\\"string\\\" && jQuery( selectors );\\n\\n\\t\\t// Positional selectors never match, since there's no _selection_ context\\n\\t\\tif ( !rneedsContext.test( selectors ) ) {\\n\\t\\t\\tfor ( ; i < l; i++ ) {\\n\\t\\t\\t\\tfor ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {\\n\\n\\t\\t\\t\\t\\t// Always skip document fragments\\n\\t\\t\\t\\t\\tif ( cur.nodeType < 11 && ( targets ?\\n\\t\\t\\t\\t\\t\\ttargets.index( cur ) > -1 :\\n\\n\\t\\t\\t\\t\\t\\t// Don't pass non-elements to Sizzle\\n\\t\\t\\t\\t\\t\\tcur.nodeType === 1 &&\\n\\t\\t\\t\\t\\t\\t\\tjQuery.find.matchesSelector( cur, selectors ) ) ) {\\n\\n\\t\\t\\t\\t\\t\\tmatched.push( cur );\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );\\n\\t},\\n\\n\\t// Determine the position of an element within the set\\n\\tindex: function( elem ) {\\n\\n\\t\\t// No argument, return index in parent\\n\\t\\tif ( !elem ) {\\n\\t\\t\\treturn ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;\\n\\t\\t}\\n\\n\\t\\t// Index in selector\\n\\t\\tif ( typeof elem === \\\"string\\\" ) {\\n\\t\\t\\treturn indexOf.call( jQuery( elem ), this[ 0 ] );\\n\\t\\t}\\n\\n\\t\\t// Locate the position of the desired element\\n\\t\\treturn indexOf.call( this,\\n\\n\\t\\t\\t// If it receives a jQuery object, the first element is used\\n\\t\\t\\telem.jquery ? elem[ 0 ] : elem\\n\\t\\t);\\n\\t},\\n\\n\\tadd: function( selector, context ) {\\n\\t\\treturn this.pushStack(\\n\\t\\t\\tjQuery.uniqueSort(\\n\\t\\t\\t\\tjQuery.merge( this.get(), jQuery( selector, context ) )\\n\\t\\t\\t)\\n\\t\\t);\\n\\t},\\n\\n\\taddBack: function( selector ) {\\n\\t\\treturn this.add( selector == null ?\\n\\t\\t\\tthis.prevObject : this.prevObject.filter( selector )\\n\\t\\t);\\n\\t}\\n} );\\n\\nfunction sibling( cur, dir ) {\\n\\twhile ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}\\n\\treturn cur;\\n}\\n\\njQuery.each( {\\n\\tparent: function( elem ) {\\n\\t\\tvar parent = elem.parentNode;\\n\\t\\treturn parent && parent.nodeType !== 11 ? parent : null;\\n\\t},\\n\\tparents: function( elem ) {\\n\\t\\treturn dir( elem, \\\"parentNode\\\" );\\n\\t},\\n\\tparentsUntil: function( elem, i, until ) {\\n\\t\\treturn dir( elem, \\\"parentNode\\\", until );\\n\\t},\\n\\tnext: function( elem ) {\\n\\t\\treturn sibling( elem, \\\"nextSibling\\\" );\\n\\t},\\n\\tprev: function( elem ) {\\n\\t\\treturn sibling( elem, \\\"previousSibling\\\" );\\n\\t},\\n\\tnextAll: function( elem ) {\\n\\t\\treturn dir( elem, \\\"nextSibling\\\" );\\n\\t},\\n\\tprevAll: function( elem ) {\\n\\t\\treturn dir( elem, \\\"previousSibling\\\" );\\n\\t},\\n\\tnextUntil: function( elem, i, until ) {\\n\\t\\treturn dir( elem, \\\"nextSibling\\\", until );\\n\\t},\\n\\tprevUntil: function( elem, i, until ) {\\n\\t\\treturn dir( elem, \\\"previousSibling\\\", until );\\n\\t},\\n\\tsiblings: function( elem ) {\\n\\t\\treturn siblings( ( elem.parentNode || {} ).firstChild, elem );\\n\\t},\\n\\tchildren: function( elem ) {\\n\\t\\treturn siblings( elem.firstChild );\\n\\t},\\n\\tcontents: function( elem ) {\\n        if ( nodeName( elem, \\\"iframe\\\" ) ) {\\n            return elem.contentDocument;\\n        }\\n\\n        // Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only\\n        // Treat the template element as a regular one in browsers that\\n        // don't support it.\\n        if ( nodeName( elem, \\\"template\\\" ) ) {\\n            elem = elem.content || elem;\\n        }\\n\\n        return jQuery.merge( [], elem.childNodes );\\n\\t}\\n}, function( name, fn ) {\\n\\tjQuery.fn[ name ] = function( until, selector ) {\\n\\t\\tvar matched = jQuery.map( this, fn, until );\\n\\n\\t\\tif ( name.slice( -5 ) !== \\\"Until\\\" ) {\\n\\t\\t\\tselector = until;\\n\\t\\t}\\n\\n\\t\\tif ( selector && typeof selector === \\\"string\\\" ) {\\n\\t\\t\\tmatched = jQuery.filter( selector, matched );\\n\\t\\t}\\n\\n\\t\\tif ( this.length > 1 ) {\\n\\n\\t\\t\\t// Remove duplicates\\n\\t\\t\\tif ( !guaranteedUnique[ name ] ) {\\n\\t\\t\\t\\tjQuery.uniqueSort( matched );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Reverse order for parents* and prev-derivatives\\n\\t\\t\\tif ( rparentsprev.test( name ) ) {\\n\\t\\t\\t\\tmatched.reverse();\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn this.pushStack( matched );\\n\\t};\\n} );\\nvar rnothtmlwhite = ( /[^\\\\x20\\\\t\\\\r\\\\n\\\\f]+/g );\\n\\n\\n\\n// Convert String-formatted options into Object-formatted ones\\nfunction createOptions( options ) {\\n\\tvar object = {};\\n\\tjQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {\\n\\t\\tobject[ flag ] = true;\\n\\t} );\\n\\treturn object;\\n}\\n\\n/*\\n * Create a callback list using the following parameters:\\n *\\n *\\toptions: an optional list of space-separated options that will change how\\n *\\t\\t\\tthe callback list behaves or a more traditional option object\\n *\\n * By default a callback list will act like an event callback list and can be\\n * \\\"fired\\\" multiple times.\\n *\\n * Possible options:\\n *\\n *\\tonce:\\t\\t\\twill ensure the callback list can only be fired once (like a Deferred)\\n *\\n *\\tmemory:\\t\\t\\twill keep track of previous values and will call any callback added\\n *\\t\\t\\t\\t\\tafter the list has been fired right away with the latest \\\"memorized\\\"\\n *\\t\\t\\t\\t\\tvalues (like a Deferred)\\n *\\n *\\tunique:\\t\\t\\twill ensure a callback can only be added once (no duplicate in the list)\\n *\\n *\\tstopOnFalse:\\tinterrupt callings when a callback returns false\\n *\\n */\\njQuery.Callbacks = function( options ) {\\n\\n\\t// Convert options from String-formatted to Object-formatted if needed\\n\\t// (we check in cache first)\\n\\toptions = typeof options === \\\"string\\\" ?\\n\\t\\tcreateOptions( options ) :\\n\\t\\tjQuery.extend( {}, options );\\n\\n\\tvar // Flag to know if list is currently firing\\n\\t\\tfiring,\\n\\n\\t\\t// Last fire value for non-forgettable lists\\n\\t\\tmemory,\\n\\n\\t\\t// Flag to know if list was already fired\\n\\t\\tfired,\\n\\n\\t\\t// Flag to prevent firing\\n\\t\\tlocked,\\n\\n\\t\\t// Actual callback list\\n\\t\\tlist = [],\\n\\n\\t\\t// Queue of execution data for repeatable lists\\n\\t\\tqueue = [],\\n\\n\\t\\t// Index of currently firing callback (modified by add/remove as needed)\\n\\t\\tfiringIndex = -1,\\n\\n\\t\\t// Fire callbacks\\n\\t\\tfire = function() {\\n\\n\\t\\t\\t// Enforce single-firing\\n\\t\\t\\tlocked = locked || options.once;\\n\\n\\t\\t\\t// Execute callbacks for all pending executions,\\n\\t\\t\\t// respecting firingIndex overrides and runtime changes\\n\\t\\t\\tfired = firing = true;\\n\\t\\t\\tfor ( ; queue.length; firingIndex = -1 ) {\\n\\t\\t\\t\\tmemory = queue.shift();\\n\\t\\t\\t\\twhile ( ++firingIndex < list.length ) {\\n\\n\\t\\t\\t\\t\\t// Run callback and check for early termination\\n\\t\\t\\t\\t\\tif ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&\\n\\t\\t\\t\\t\\t\\toptions.stopOnFalse ) {\\n\\n\\t\\t\\t\\t\\t\\t// Jump to end and forget the data so .add doesn't re-fire\\n\\t\\t\\t\\t\\t\\tfiringIndex = list.length;\\n\\t\\t\\t\\t\\t\\tmemory = false;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Forget the data if we're done with it\\n\\t\\t\\tif ( !options.memory ) {\\n\\t\\t\\t\\tmemory = false;\\n\\t\\t\\t}\\n\\n\\t\\t\\tfiring = false;\\n\\n\\t\\t\\t// Clean up if we're done firing for good\\n\\t\\t\\tif ( locked ) {\\n\\n\\t\\t\\t\\t// Keep an empty list if we have data for future add calls\\n\\t\\t\\t\\tif ( memory ) {\\n\\t\\t\\t\\t\\tlist = [];\\n\\n\\t\\t\\t\\t// Otherwise, this object is spent\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tlist = \\\"\\\";\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t},\\n\\n\\t\\t// Actual Callbacks object\\n\\t\\tself = {\\n\\n\\t\\t\\t// Add a callback or a collection of callbacks to the list\\n\\t\\t\\tadd: function() {\\n\\t\\t\\t\\tif ( list ) {\\n\\n\\t\\t\\t\\t\\t// If we have memory from a past run, we should fire after adding\\n\\t\\t\\t\\t\\tif ( memory && !firing ) {\\n\\t\\t\\t\\t\\t\\tfiringIndex = list.length - 1;\\n\\t\\t\\t\\t\\t\\tqueue.push( memory );\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t( function add( args ) {\\n\\t\\t\\t\\t\\t\\tjQuery.each( args, function( _, arg ) {\\n\\t\\t\\t\\t\\t\\t\\tif ( jQuery.isFunction( arg ) ) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( !options.unique || !self.has( arg ) ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tlist.push( arg );\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else if ( arg && arg.length && jQuery.type( arg ) !== \\\"string\\\" ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t// Inspect recursively\\n\\t\\t\\t\\t\\t\\t\\t\\tadd( arg );\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t} );\\n\\t\\t\\t\\t\\t} )( arguments );\\n\\n\\t\\t\\t\\t\\tif ( memory && !firing ) {\\n\\t\\t\\t\\t\\t\\tfire();\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\treturn this;\\n\\t\\t\\t},\\n\\n\\t\\t\\t// Remove a callback from the list\\n\\t\\t\\tremove: function() {\\n\\t\\t\\t\\tjQuery.each( arguments, function( _, arg ) {\\n\\t\\t\\t\\t\\tvar index;\\n\\t\\t\\t\\t\\twhile ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {\\n\\t\\t\\t\\t\\t\\tlist.splice( index, 1 );\\n\\n\\t\\t\\t\\t\\t\\t// Handle firing indexes\\n\\t\\t\\t\\t\\t\\tif ( index <= firingIndex ) {\\n\\t\\t\\t\\t\\t\\t\\tfiringIndex--;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t} );\\n\\t\\t\\t\\treturn this;\\n\\t\\t\\t},\\n\\n\\t\\t\\t// Check if a given callback is in the list.\\n\\t\\t\\t// If no argument is given, return whether or not list has callbacks attached.\\n\\t\\t\\thas: function( fn ) {\\n\\t\\t\\t\\treturn fn ?\\n\\t\\t\\t\\t\\tjQuery.inArray( fn, list ) > -1 :\\n\\t\\t\\t\\t\\tlist.length > 0;\\n\\t\\t\\t},\\n\\n\\t\\t\\t// Remove all callbacks from the list\\n\\t\\t\\tempty: function() {\\n\\t\\t\\t\\tif ( list ) {\\n\\t\\t\\t\\t\\tlist = [];\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\treturn this;\\n\\t\\t\\t},\\n\\n\\t\\t\\t// Disable .fire and .add\\n\\t\\t\\t// Abort any current/pending executions\\n\\t\\t\\t// Clear all callbacks and values\\n\\t\\t\\tdisable: function() {\\n\\t\\t\\t\\tlocked = queue = [];\\n\\t\\t\\t\\tlist = memory = \\\"\\\";\\n\\t\\t\\t\\treturn this;\\n\\t\\t\\t},\\n\\t\\t\\tdisabled: function() {\\n\\t\\t\\t\\treturn !list;\\n\\t\\t\\t},\\n\\n\\t\\t\\t// Disable .fire\\n\\t\\t\\t// Also disable .add unless we have memory (since it would have no effect)\\n\\t\\t\\t// Abort any pending executions\\n\\t\\t\\tlock: function() {\\n\\t\\t\\t\\tlocked = queue = [];\\n\\t\\t\\t\\tif ( !memory && !firing ) {\\n\\t\\t\\t\\t\\tlist = memory = \\\"\\\";\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\treturn this;\\n\\t\\t\\t},\\n\\t\\t\\tlocked: function() {\\n\\t\\t\\t\\treturn !!locked;\\n\\t\\t\\t},\\n\\n\\t\\t\\t// Call all callbacks with the given context and arguments\\n\\t\\t\\tfireWith: function( context, args ) {\\n\\t\\t\\t\\tif ( !locked ) {\\n\\t\\t\\t\\t\\targs = args || [];\\n\\t\\t\\t\\t\\targs = [ context, args.slice ? args.slice() : args ];\\n\\t\\t\\t\\t\\tqueue.push( args );\\n\\t\\t\\t\\t\\tif ( !firing ) {\\n\\t\\t\\t\\t\\t\\tfire();\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\treturn this;\\n\\t\\t\\t},\\n\\n\\t\\t\\t// Call all the callbacks with the given arguments\\n\\t\\t\\tfire: function() {\\n\\t\\t\\t\\tself.fireWith( this, arguments );\\n\\t\\t\\t\\treturn this;\\n\\t\\t\\t},\\n\\n\\t\\t\\t// To know if the callbacks have already been called at least once\\n\\t\\t\\tfired: function() {\\n\\t\\t\\t\\treturn !!fired;\\n\\t\\t\\t}\\n\\t\\t};\\n\\n\\treturn self;\\n};\\n\\n\\nfunction Identity( v ) {\\n\\treturn v;\\n}\\nfunction Thrower( ex ) {\\n\\tthrow ex;\\n}\\n\\nfunction adoptValue( value, resolve, reject, noValue ) {\\n\\tvar method;\\n\\n\\ttry {\\n\\n\\t\\t// Check for promise aspect first to privilege synchronous behavior\\n\\t\\tif ( value && jQuery.isFunction( ( method = value.promise ) ) ) {\\n\\t\\t\\tmethod.call( value ).done( resolve ).fail( reject );\\n\\n\\t\\t// Other thenables\\n\\t\\t} else if ( value && jQuery.isFunction( ( method = value.then ) ) ) {\\n\\t\\t\\tmethod.call( value, resolve, reject );\\n\\n\\t\\t// Other non-thenables\\n\\t\\t} else {\\n\\n\\t\\t\\t// Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:\\n\\t\\t\\t// * false: [ value ].slice( 0 ) => resolve( value )\\n\\t\\t\\t// * true: [ value ].slice( 1 ) => resolve()\\n\\t\\t\\tresolve.apply( undefined, [ value ].slice( noValue ) );\\n\\t\\t}\\n\\n\\t// For Promises/A+, convert exceptions into rejections\\n\\t// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in\\n\\t// Deferred#then to conditionally suppress rejection.\\n\\t} catch ( value ) {\\n\\n\\t\\t// Support: Android 4.0 only\\n\\t\\t// Strict mode functions invoked without .call/.apply get global-object context\\n\\t\\treject.apply( undefined, [ value ] );\\n\\t}\\n}\\n\\njQuery.extend( {\\n\\n\\tDeferred: function( func ) {\\n\\t\\tvar tuples = [\\n\\n\\t\\t\\t\\t// action, add listener, callbacks,\\n\\t\\t\\t\\t// ... .then handlers, argument index, [final state]\\n\\t\\t\\t\\t[ \\\"notify\\\", \\\"progress\\\", jQuery.Callbacks( \\\"memory\\\" ),\\n\\t\\t\\t\\t\\tjQuery.Callbacks( \\\"memory\\\" ), 2 ],\\n\\t\\t\\t\\t[ \\\"resolve\\\", \\\"done\\\", jQuery.Callbacks( \\\"once memory\\\" ),\\n\\t\\t\\t\\t\\tjQuery.Callbacks( \\\"once memory\\\" ), 0, \\\"resolved\\\" ],\\n\\t\\t\\t\\t[ \\\"reject\\\", \\\"fail\\\", jQuery.Callbacks( \\\"once memory\\\" ),\\n\\t\\t\\t\\t\\tjQuery.Callbacks( \\\"once memory\\\" ), 1, \\\"rejected\\\" ]\\n\\t\\t\\t],\\n\\t\\t\\tstate = \\\"pending\\\",\\n\\t\\t\\tpromise = {\\n\\t\\t\\t\\tstate: function() {\\n\\t\\t\\t\\t\\treturn state;\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\talways: function() {\\n\\t\\t\\t\\t\\tdeferred.done( arguments ).fail( arguments );\\n\\t\\t\\t\\t\\treturn this;\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\\"catch\\\": function( fn ) {\\n\\t\\t\\t\\t\\treturn promise.then( null, fn );\\n\\t\\t\\t\\t},\\n\\n\\t\\t\\t\\t// Keep pipe for back-compat\\n\\t\\t\\t\\tpipe: function( /* fnDone, fnFail, fnProgress */ ) {\\n\\t\\t\\t\\t\\tvar fns = arguments;\\n\\n\\t\\t\\t\\t\\treturn jQuery.Deferred( function( newDefer ) {\\n\\t\\t\\t\\t\\t\\tjQuery.each( tuples, function( i, tuple ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t// Map tuples (progress, done, fail) to arguments (done, fail, progress)\\n\\t\\t\\t\\t\\t\\t\\tvar fn = jQuery.isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];\\n\\n\\t\\t\\t\\t\\t\\t\\t// deferred.progress(function() { bind to newDefer or newDefer.notify })\\n\\t\\t\\t\\t\\t\\t\\t// deferred.done(function() { bind to newDefer or newDefer.resolve })\\n\\t\\t\\t\\t\\t\\t\\t// deferred.fail(function() { bind to newDefer or newDefer.reject })\\n\\t\\t\\t\\t\\t\\t\\tdeferred[ tuple[ 1 ] ]( function() {\\n\\t\\t\\t\\t\\t\\t\\t\\tvar returned = fn && fn.apply( this, arguments );\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( returned && jQuery.isFunction( returned.promise ) ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\treturned.promise()\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t.progress( newDefer.notify )\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t.done( newDefer.resolve )\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t.fail( newDefer.reject );\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tnewDefer[ tuple[ 0 ] + \\\"With\\\" ](\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tthis,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tfn ? [ returned ] : arguments\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} );\\n\\t\\t\\t\\t\\t\\t} );\\n\\t\\t\\t\\t\\t\\tfns = null;\\n\\t\\t\\t\\t\\t} ).promise();\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\tthen: function( onFulfilled, onRejected, onProgress ) {\\n\\t\\t\\t\\t\\tvar maxDepth = 0;\\n\\t\\t\\t\\t\\tfunction resolve( depth, deferred, handler, special ) {\\n\\t\\t\\t\\t\\t\\treturn function() {\\n\\t\\t\\t\\t\\t\\t\\tvar that = this,\\n\\t\\t\\t\\t\\t\\t\\t\\targs = arguments,\\n\\t\\t\\t\\t\\t\\t\\t\\tmightThrow = function() {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tvar returned, then;\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// Support: Promises/A+ section 2.3.3.3.3\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// https://promisesaplus.com/#point-59\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// Ignore double-resolution attempts\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( depth < maxDepth ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\treturned = handler.apply( that, args );\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// Support: Promises/A+ section 2.3.1\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// https://promisesaplus.com/#point-48\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( returned === deferred.promise() ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tthrow new TypeError( \\\"Thenable self-resolution\\\" );\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// Support: Promises/A+ sections 2.3.3.1, 3.5\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// https://promisesaplus.com/#point-54\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// https://promisesaplus.com/#point-75\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// Retrieve `then` only once\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tthen = returned &&\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Support: Promises/A+ section 2.3.4\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// https://promisesaplus.com/#point-64\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Only check objects and functions for thenability\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t( typeof returned === \\\"object\\\" ||\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttypeof returned === \\\"function\\\" ) &&\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\treturned.then;\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// Handle a returned thenable\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( jQuery.isFunction( then ) ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Special processors (notify) just wait for resolution\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( special ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tthen.call(\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\treturned,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tresolve( maxDepth, deferred, Identity, special ),\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tresolve( maxDepth, deferred, Thrower, special )\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Normal processors (resolve) also hook into progress\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// ...and disregard older resolution values\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tmaxDepth++;\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tthen.call(\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\treturned,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tresolve( maxDepth, deferred, Identity, special ),\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tresolve( maxDepth, deferred, Thrower, special ),\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tresolve( maxDepth, deferred, Identity,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tdeferred.notifyWith )\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// Handle all other returned values\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Only substitute handlers pass on context\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// and multiple values (non-spec behavior)\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( handler !== Identity ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tthat = undefined;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\targs = [ returned ];\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Process the value(s)\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Default process is resolve\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t( special || deferred.resolveWith )( that, args );\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t// Only normal processors (resolve) catch and reject exceptions\\n\\t\\t\\t\\t\\t\\t\\t\\tprocess = special ?\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tmightThrow :\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tfunction() {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttry {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tmightThrow();\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t} catch ( e ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( jQuery.Deferred.exceptionHook ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tjQuery.Deferred.exceptionHook( e,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tprocess.stackTrace );\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Support: Promises/A+ section 2.3.3.3.4.1\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// https://promisesaplus.com/#point-61\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Ignore post-resolution exceptions\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( depth + 1 >= maxDepth ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Only substitute handlers pass on context\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// and multiple values (non-spec behavior)\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( handler !== Thrower ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tthat = undefined;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\targs = [ e ];\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tdeferred.rejectWith( that, args );\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\t\\t\\t\\t// Support: Promises/A+ section 2.3.3.3.1\\n\\t\\t\\t\\t\\t\\t\\t// https://promisesaplus.com/#point-57\\n\\t\\t\\t\\t\\t\\t\\t// Re-resolve promises immediately to dodge false rejection from\\n\\t\\t\\t\\t\\t\\t\\t// subsequent errors\\n\\t\\t\\t\\t\\t\\t\\tif ( depth ) {\\n\\t\\t\\t\\t\\t\\t\\t\\tprocess();\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t// Call an optional hook to record the stack, in case of exception\\n\\t\\t\\t\\t\\t\\t\\t\\t// since it's otherwise lost when execution goes async\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( jQuery.Deferred.getStackHook ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tprocess.stackTrace = jQuery.Deferred.getStackHook();\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\twindow.setTimeout( process );\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\treturn jQuery.Deferred( function( newDefer ) {\\n\\n\\t\\t\\t\\t\\t\\t// progress_handlers.add( ... )\\n\\t\\t\\t\\t\\t\\ttuples[ 0 ][ 3 ].add(\\n\\t\\t\\t\\t\\t\\t\\tresolve(\\n\\t\\t\\t\\t\\t\\t\\t\\t0,\\n\\t\\t\\t\\t\\t\\t\\t\\tnewDefer,\\n\\t\\t\\t\\t\\t\\t\\t\\tjQuery.isFunction( onProgress ) ?\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tonProgress :\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tIdentity,\\n\\t\\t\\t\\t\\t\\t\\t\\tnewDefer.notifyWith\\n\\t\\t\\t\\t\\t\\t\\t)\\n\\t\\t\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\t\\t\\t// fulfilled_handlers.add( ... )\\n\\t\\t\\t\\t\\t\\ttuples[ 1 ][ 3 ].add(\\n\\t\\t\\t\\t\\t\\t\\tresolve(\\n\\t\\t\\t\\t\\t\\t\\t\\t0,\\n\\t\\t\\t\\t\\t\\t\\t\\tnewDefer,\\n\\t\\t\\t\\t\\t\\t\\t\\tjQuery.isFunction( onFulfilled ) ?\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tonFulfilled :\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tIdentity\\n\\t\\t\\t\\t\\t\\t\\t)\\n\\t\\t\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\t\\t\\t// rejected_handlers.add( ... )\\n\\t\\t\\t\\t\\t\\ttuples[ 2 ][ 3 ].add(\\n\\t\\t\\t\\t\\t\\t\\tresolve(\\n\\t\\t\\t\\t\\t\\t\\t\\t0,\\n\\t\\t\\t\\t\\t\\t\\t\\tnewDefer,\\n\\t\\t\\t\\t\\t\\t\\t\\tjQuery.isFunction( onRejected ) ?\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tonRejected :\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tThrower\\n\\t\\t\\t\\t\\t\\t\\t)\\n\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t} ).promise();\\n\\t\\t\\t\\t},\\n\\n\\t\\t\\t\\t// Get a promise for this deferred\\n\\t\\t\\t\\t// If obj is provided, the promise aspect is added to the object\\n\\t\\t\\t\\tpromise: function( obj ) {\\n\\t\\t\\t\\t\\treturn obj != null ? jQuery.extend( obj, promise ) : promise;\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\tdeferred = {};\\n\\n\\t\\t// Add list-specific methods\\n\\t\\tjQuery.each( tuples, function( i, tuple ) {\\n\\t\\t\\tvar list = tuple[ 2 ],\\n\\t\\t\\t\\tstateString = tuple[ 5 ];\\n\\n\\t\\t\\t// promise.progress = list.add\\n\\t\\t\\t// promise.done = list.add\\n\\t\\t\\t// promise.fail = list.add\\n\\t\\t\\tpromise[ tuple[ 1 ] ] = list.add;\\n\\n\\t\\t\\t// Handle state\\n\\t\\t\\tif ( stateString ) {\\n\\t\\t\\t\\tlist.add(\\n\\t\\t\\t\\t\\tfunction() {\\n\\n\\t\\t\\t\\t\\t\\t// state = \\\"resolved\\\" (i.e., fulfilled)\\n\\t\\t\\t\\t\\t\\t// state = \\\"rejected\\\"\\n\\t\\t\\t\\t\\t\\tstate = stateString;\\n\\t\\t\\t\\t\\t},\\n\\n\\t\\t\\t\\t\\t// rejected_callbacks.disable\\n\\t\\t\\t\\t\\t// fulfilled_callbacks.disable\\n\\t\\t\\t\\t\\ttuples[ 3 - i ][ 2 ].disable,\\n\\n\\t\\t\\t\\t\\t// progress_callbacks.lock\\n\\t\\t\\t\\t\\ttuples[ 0 ][ 2 ].lock\\n\\t\\t\\t\\t);\\n\\t\\t\\t}\\n\\n\\t\\t\\t// progress_handlers.fire\\n\\t\\t\\t// fulfilled_handlers.fire\\n\\t\\t\\t// rejected_handlers.fire\\n\\t\\t\\tlist.add( tuple[ 3 ].fire );\\n\\n\\t\\t\\t// deferred.notify = function() { deferred.notifyWith(...) }\\n\\t\\t\\t// deferred.resolve = function() { deferred.resolveWith(...) }\\n\\t\\t\\t// deferred.reject = function() { deferred.rejectWith(...) }\\n\\t\\t\\tdeferred[ tuple[ 0 ] ] = function() {\\n\\t\\t\\t\\tdeferred[ tuple[ 0 ] + \\\"With\\\" ]( this === deferred ? undefined : this, arguments );\\n\\t\\t\\t\\treturn this;\\n\\t\\t\\t};\\n\\n\\t\\t\\t// deferred.notifyWith = list.fireWith\\n\\t\\t\\t// deferred.resolveWith = list.fireWith\\n\\t\\t\\t// deferred.rejectWith = list.fireWith\\n\\t\\t\\tdeferred[ tuple[ 0 ] + \\\"With\\\" ] = list.fireWith;\\n\\t\\t} );\\n\\n\\t\\t// Make the deferred a promise\\n\\t\\tpromise.promise( deferred );\\n\\n\\t\\t// Call given func if any\\n\\t\\tif ( func ) {\\n\\t\\t\\tfunc.call( deferred, deferred );\\n\\t\\t}\\n\\n\\t\\t// All done!\\n\\t\\treturn deferred;\\n\\t},\\n\\n\\t// Deferred helper\\n\\twhen: function( singleValue ) {\\n\\t\\tvar\\n\\n\\t\\t\\t// count of uncompleted subordinates\\n\\t\\t\\tremaining = arguments.length,\\n\\n\\t\\t\\t// count of unprocessed arguments\\n\\t\\t\\ti = remaining,\\n\\n\\t\\t\\t// subordinate fulfillment data\\n\\t\\t\\tresolveContexts = Array( i ),\\n\\t\\t\\tresolveValues = slice.call( arguments ),\\n\\n\\t\\t\\t// the master Deferred\\n\\t\\t\\tmaster = jQuery.Deferred(),\\n\\n\\t\\t\\t// subordinate callback factory\\n\\t\\t\\tupdateFunc = function( i ) {\\n\\t\\t\\t\\treturn function( value ) {\\n\\t\\t\\t\\t\\tresolveContexts[ i ] = this;\\n\\t\\t\\t\\t\\tresolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;\\n\\t\\t\\t\\t\\tif ( !( --remaining ) ) {\\n\\t\\t\\t\\t\\t\\tmaster.resolveWith( resolveContexts, resolveValues );\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t};\\n\\t\\t\\t};\\n\\n\\t\\t// Single- and empty arguments are adopted like Promise.resolve\\n\\t\\tif ( remaining <= 1 ) {\\n\\t\\t\\tadoptValue( singleValue, master.done( updateFunc( i ) ).resolve, master.reject,\\n\\t\\t\\t\\t!remaining );\\n\\n\\t\\t\\t// Use .then() to unwrap secondary thenables (cf. gh-3000)\\n\\t\\t\\tif ( master.state() === \\\"pending\\\" ||\\n\\t\\t\\t\\tjQuery.isFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {\\n\\n\\t\\t\\t\\treturn master.then();\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// Multiple arguments are aggregated like Promise.all array elements\\n\\t\\twhile ( i-- ) {\\n\\t\\t\\tadoptValue( resolveValues[ i ], updateFunc( i ), master.reject );\\n\\t\\t}\\n\\n\\t\\treturn master.promise();\\n\\t}\\n} );\\n\\n\\n// These usually indicate a programmer mistake during development,\\n// warn about them ASAP rather than swallowing them by default.\\nvar rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;\\n\\njQuery.Deferred.exceptionHook = function( error, stack ) {\\n\\n\\t// Support: IE 8 - 9 only\\n\\t// Console exists when dev tools are open, which can happen at any time\\n\\tif ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {\\n\\t\\twindow.console.warn( \\\"jQuery.Deferred exception: \\\" + error.message, error.stack, stack );\\n\\t}\\n};\\n\\n\\n\\n\\njQuery.readyException = function( error ) {\\n\\twindow.setTimeout( function() {\\n\\t\\tthrow error;\\n\\t} );\\n};\\n\\n\\n\\n\\n// The deferred used on DOM ready\\nvar readyList = jQuery.Deferred();\\n\\njQuery.fn.ready = function( fn ) {\\n\\n\\treadyList\\n\\t\\t.then( fn )\\n\\n\\t\\t// Wrap jQuery.readyException in a function so that the lookup\\n\\t\\t// happens at the time of error handling instead of callback\\n\\t\\t// registration.\\n\\t\\t.catch( function( error ) {\\n\\t\\t\\tjQuery.readyException( error );\\n\\t\\t} );\\n\\n\\treturn this;\\n};\\n\\njQuery.extend( {\\n\\n\\t// Is the DOM ready to be used? Set to true once it occurs.\\n\\tisReady: false,\\n\\n\\t// A counter to track how many items to wait for before\\n\\t// the ready event fires. See #6781\\n\\treadyWait: 1,\\n\\n\\t// Handle when the DOM is ready\\n\\tready: function( wait ) {\\n\\n\\t\\t// Abort if there are pending holds or we're already ready\\n\\t\\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\t// Remember that the DOM is ready\\n\\t\\tjQuery.isReady = true;\\n\\n\\t\\t// If a normal DOM Ready event fired, decrement, and wait if need be\\n\\t\\tif ( wait !== true && --jQuery.readyWait > 0 ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\t// If there are functions bound, to execute\\n\\t\\treadyList.resolveWith( document, [ jQuery ] );\\n\\t}\\n} );\\n\\njQuery.ready.then = readyList.then;\\n\\n// The ready event handler and self cleanup method\\nfunction completed() {\\n\\tdocument.removeEventListener( \\\"DOMContentLoaded\\\", completed );\\n\\twindow.removeEventListener( \\\"load\\\", completed );\\n\\tjQuery.ready();\\n}\\n\\n// Catch cases where $(document).ready() is called\\n// after the browser event has already occurred.\\n// Support: IE <=9 - 10 only\\n// Older IE sometimes signals \\\"interactive\\\" too soon\\nif ( document.readyState === \\\"complete\\\" ||\\n\\t( document.readyState !== \\\"loading\\\" && !document.documentElement.doScroll ) ) {\\n\\n\\t// Handle it asynchronously to allow scripts the opportunity to delay ready\\n\\twindow.setTimeout( jQuery.ready );\\n\\n} else {\\n\\n\\t// Use the handy event callback\\n\\tdocument.addEventListener( \\\"DOMContentLoaded\\\", completed );\\n\\n\\t// A fallback to window.onload, that will always work\\n\\twindow.addEventListener( \\\"load\\\", completed );\\n}\\n\\n\\n\\n\\n// Multifunctional method to get and set values of a collection\\n// The value/s can optionally be executed if it's a function\\nvar access = function( elems, fn, key, value, chainable, emptyGet, raw ) {\\n\\tvar i = 0,\\n\\t\\tlen = elems.length,\\n\\t\\tbulk = key == null;\\n\\n\\t// Sets many values\\n\\tif ( jQuery.type( key ) === \\\"object\\\" ) {\\n\\t\\tchainable = true;\\n\\t\\tfor ( i in key ) {\\n\\t\\t\\taccess( elems, fn, i, key[ i ], true, emptyGet, raw );\\n\\t\\t}\\n\\n\\t// Sets one value\\n\\t} else if ( value !== undefined ) {\\n\\t\\tchainable = true;\\n\\n\\t\\tif ( !jQuery.isFunction( value ) ) {\\n\\t\\t\\traw = true;\\n\\t\\t}\\n\\n\\t\\tif ( bulk ) {\\n\\n\\t\\t\\t// Bulk operations run against the entire set\\n\\t\\t\\tif ( raw ) {\\n\\t\\t\\t\\tfn.call( elems, value );\\n\\t\\t\\t\\tfn = null;\\n\\n\\t\\t\\t// ...except when executing function values\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tbulk = fn;\\n\\t\\t\\t\\tfn = function( elem, key, value ) {\\n\\t\\t\\t\\t\\treturn bulk.call( jQuery( elem ), value );\\n\\t\\t\\t\\t};\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tif ( fn ) {\\n\\t\\t\\tfor ( ; i < len; i++ ) {\\n\\t\\t\\t\\tfn(\\n\\t\\t\\t\\t\\telems[ i ], key, raw ?\\n\\t\\t\\t\\t\\tvalue :\\n\\t\\t\\t\\t\\tvalue.call( elems[ i ], i, fn( elems[ i ], key ) )\\n\\t\\t\\t\\t);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\tif ( chainable ) {\\n\\t\\treturn elems;\\n\\t}\\n\\n\\t// Gets\\n\\tif ( bulk ) {\\n\\t\\treturn fn.call( elems );\\n\\t}\\n\\n\\treturn len ? fn( elems[ 0 ], key ) : emptyGet;\\n};\\nvar acceptData = function( owner ) {\\n\\n\\t// Accepts only:\\n\\t//  - Node\\n\\t//    - Node.ELEMENT_NODE\\n\\t//    - Node.DOCUMENT_NODE\\n\\t//  - Object\\n\\t//    - Any\\n\\treturn owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );\\n};\\n\\n\\n\\n\\nfunction Data() {\\n\\tthis.expando = jQuery.expando + Data.uid++;\\n}\\n\\nData.uid = 1;\\n\\nData.prototype = {\\n\\n\\tcache: function( owner ) {\\n\\n\\t\\t// Check if the owner object already has a cache\\n\\t\\tvar value = owner[ this.expando ];\\n\\n\\t\\t// If not, create one\\n\\t\\tif ( !value ) {\\n\\t\\t\\tvalue = {};\\n\\n\\t\\t\\t// We can accept data for non-element nodes in modern browsers,\\n\\t\\t\\t// but we should not, see #8335.\\n\\t\\t\\t// Always return an empty object.\\n\\t\\t\\tif ( acceptData( owner ) ) {\\n\\n\\t\\t\\t\\t// If it is a node unlikely to be stringify-ed or looped over\\n\\t\\t\\t\\t// use plain assignment\\n\\t\\t\\t\\tif ( owner.nodeType ) {\\n\\t\\t\\t\\t\\towner[ this.expando ] = value;\\n\\n\\t\\t\\t\\t// Otherwise secure it in a non-enumerable property\\n\\t\\t\\t\\t// configurable must be true to allow the property to be\\n\\t\\t\\t\\t// deleted when data is removed\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tObject.defineProperty( owner, this.expando, {\\n\\t\\t\\t\\t\\t\\tvalue: value,\\n\\t\\t\\t\\t\\t\\tconfigurable: true\\n\\t\\t\\t\\t\\t} );\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn value;\\n\\t},\\n\\tset: function( owner, data, value ) {\\n\\t\\tvar prop,\\n\\t\\t\\tcache = this.cache( owner );\\n\\n\\t\\t// Handle: [ owner, key, value ] args\\n\\t\\t// Always use camelCase key (gh-2257)\\n\\t\\tif ( typeof data === \\\"string\\\" ) {\\n\\t\\t\\tcache[ jQuery.camelCase( data ) ] = value;\\n\\n\\t\\t// Handle: [ owner, { properties } ] args\\n\\t\\t} else {\\n\\n\\t\\t\\t// Copy the properties one-by-one to the cache object\\n\\t\\t\\tfor ( prop in data ) {\\n\\t\\t\\t\\tcache[ jQuery.camelCase( prop ) ] = data[ prop ];\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\treturn cache;\\n\\t},\\n\\tget: function( owner, key ) {\\n\\t\\treturn key === undefined ?\\n\\t\\t\\tthis.cache( owner ) :\\n\\n\\t\\t\\t// Always use camelCase key (gh-2257)\\n\\t\\t\\towner[ this.expando ] && owner[ this.expando ][ jQuery.camelCase( key ) ];\\n\\t},\\n\\taccess: function( owner, key, value ) {\\n\\n\\t\\t// In cases where either:\\n\\t\\t//\\n\\t\\t//   1. No key was specified\\n\\t\\t//   2. A string key was specified, but no value provided\\n\\t\\t//\\n\\t\\t// Take the \\\"read\\\" path and allow the get method to determine\\n\\t\\t// which value to return, respectively either:\\n\\t\\t//\\n\\t\\t//   1. The entire cache object\\n\\t\\t//   2. The data stored at the key\\n\\t\\t//\\n\\t\\tif ( key === undefined ||\\n\\t\\t\\t\\t( ( key && typeof key === \\\"string\\\" ) && value === undefined ) ) {\\n\\n\\t\\t\\treturn this.get( owner, key );\\n\\t\\t}\\n\\n\\t\\t// When the key is not a string, or both a key and value\\n\\t\\t// are specified, set or extend (existing objects) with either:\\n\\t\\t//\\n\\t\\t//   1. An object of properties\\n\\t\\t//   2. A key and value\\n\\t\\t//\\n\\t\\tthis.set( owner, key, value );\\n\\n\\t\\t// Since the \\\"set\\\" path can have two possible entry points\\n\\t\\t// return the expected data based on which path was taken[*]\\n\\t\\treturn value !== undefined ? value : key;\\n\\t},\\n\\tremove: function( owner, key ) {\\n\\t\\tvar i,\\n\\t\\t\\tcache = owner[ this.expando ];\\n\\n\\t\\tif ( cache === undefined ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tif ( key !== undefined ) {\\n\\n\\t\\t\\t// Support array or space separated string of keys\\n\\t\\t\\tif ( Array.isArray( key ) ) {\\n\\n\\t\\t\\t\\t// If key is an array of keys...\\n\\t\\t\\t\\t// We always set camelCase keys, so remove that.\\n\\t\\t\\t\\tkey = key.map( jQuery.camelCase );\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tkey = jQuery.camelCase( key );\\n\\n\\t\\t\\t\\t// If a key with the spaces exists, use it.\\n\\t\\t\\t\\t// Otherwise, create an array by matching non-whitespace\\n\\t\\t\\t\\tkey = key in cache ?\\n\\t\\t\\t\\t\\t[ key ] :\\n\\t\\t\\t\\t\\t( key.match( rnothtmlwhite ) || [] );\\n\\t\\t\\t}\\n\\n\\t\\t\\ti = key.length;\\n\\n\\t\\t\\twhile ( i-- ) {\\n\\t\\t\\t\\tdelete cache[ key[ i ] ];\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// Remove the expando if there's no more data\\n\\t\\tif ( key === undefined || jQuery.isEmptyObject( cache ) ) {\\n\\n\\t\\t\\t// Support: Chrome <=35 - 45\\n\\t\\t\\t// Webkit & Blink performance suffers when deleting properties\\n\\t\\t\\t// from DOM nodes, so set to undefined instead\\n\\t\\t\\t// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)\\n\\t\\t\\tif ( owner.nodeType ) {\\n\\t\\t\\t\\towner[ this.expando ] = undefined;\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tdelete owner[ this.expando ];\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\thasData: function( owner ) {\\n\\t\\tvar cache = owner[ this.expando ];\\n\\t\\treturn cache !== undefined && !jQuery.isEmptyObject( cache );\\n\\t}\\n};\\nvar dataPriv = new Data();\\n\\nvar dataUser = new Data();\\n\\n\\n\\n//\\tImplementation Summary\\n//\\n//\\t1. Enforce API surface and semantic compatibility with 1.9.x branch\\n//\\t2. Improve the module's maintainability by reducing the storage\\n//\\t\\tpaths to a single mechanism.\\n//\\t3. Use the same single mechanism to support \\\"private\\\" and \\\"user\\\" data.\\n//\\t4. _Never_ expose \\\"private\\\" data to user code (TODO: Drop _data, _removeData)\\n//\\t5. Avoid exposing implementation details on user objects (eg. expando properties)\\n//\\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\\n\\nvar rbrace = /^(?:\\\\{[\\\\w\\\\W]*\\\\}|\\\\[[\\\\w\\\\W]*\\\\])$/,\\n\\trmultiDash = /[A-Z]/g;\\n\\nfunction getData( data ) {\\n\\tif ( data === \\\"true\\\" ) {\\n\\t\\treturn true;\\n\\t}\\n\\n\\tif ( data === \\\"false\\\" ) {\\n\\t\\treturn false;\\n\\t}\\n\\n\\tif ( data === \\\"null\\\" ) {\\n\\t\\treturn null;\\n\\t}\\n\\n\\t// Only convert to a number if it doesn't change the string\\n\\tif ( data === +data + \\\"\\\" ) {\\n\\t\\treturn +data;\\n\\t}\\n\\n\\tif ( rbrace.test( data ) ) {\\n\\t\\treturn JSON.parse( data );\\n\\t}\\n\\n\\treturn data;\\n}\\n\\nfunction dataAttr( elem, key, data ) {\\n\\tvar name;\\n\\n\\t// If nothing was found internally, try to fetch any\\n\\t// data from the HTML5 data-* attribute\\n\\tif ( data === undefined && elem.nodeType === 1 ) {\\n\\t\\tname = \\\"data-\\\" + key.replace( rmultiDash, \\\"-$&\\\" ).toLowerCase();\\n\\t\\tdata = elem.getAttribute( name );\\n\\n\\t\\tif ( typeof data === \\\"string\\\" ) {\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tdata = getData( data );\\n\\t\\t\\t} catch ( e ) {}\\n\\n\\t\\t\\t// Make sure we set the data so it isn't changed later\\n\\t\\t\\tdataUser.set( elem, key, data );\\n\\t\\t} else {\\n\\t\\t\\tdata = undefined;\\n\\t\\t}\\n\\t}\\n\\treturn data;\\n}\\n\\njQuery.extend( {\\n\\thasData: function( elem ) {\\n\\t\\treturn dataUser.hasData( elem ) || dataPriv.hasData( elem );\\n\\t},\\n\\n\\tdata: function( elem, name, data ) {\\n\\t\\treturn dataUser.access( elem, name, data );\\n\\t},\\n\\n\\tremoveData: function( elem, name ) {\\n\\t\\tdataUser.remove( elem, name );\\n\\t},\\n\\n\\t// TODO: Now that all calls to _data and _removeData have been replaced\\n\\t// with direct calls to dataPriv methods, these can be deprecated.\\n\\t_data: function( elem, name, data ) {\\n\\t\\treturn dataPriv.access( elem, name, data );\\n\\t},\\n\\n\\t_removeData: function( elem, name ) {\\n\\t\\tdataPriv.remove( elem, name );\\n\\t}\\n} );\\n\\njQuery.fn.extend( {\\n\\tdata: function( key, value ) {\\n\\t\\tvar i, name, data,\\n\\t\\t\\telem = this[ 0 ],\\n\\t\\t\\tattrs = elem && elem.attributes;\\n\\n\\t\\t// Gets all values\\n\\t\\tif ( key === undefined ) {\\n\\t\\t\\tif ( this.length ) {\\n\\t\\t\\t\\tdata = dataUser.get( elem );\\n\\n\\t\\t\\t\\tif ( elem.nodeType === 1 && !dataPriv.get( elem, \\\"hasDataAttrs\\\" ) ) {\\n\\t\\t\\t\\t\\ti = attrs.length;\\n\\t\\t\\t\\t\\twhile ( i-- ) {\\n\\n\\t\\t\\t\\t\\t\\t// Support: IE 11 only\\n\\t\\t\\t\\t\\t\\t// The attrs elements can be null (#14894)\\n\\t\\t\\t\\t\\t\\tif ( attrs[ i ] ) {\\n\\t\\t\\t\\t\\t\\t\\tname = attrs[ i ].name;\\n\\t\\t\\t\\t\\t\\t\\tif ( name.indexOf( \\\"data-\\\" ) === 0 ) {\\n\\t\\t\\t\\t\\t\\t\\t\\tname = jQuery.camelCase( name.slice( 5 ) );\\n\\t\\t\\t\\t\\t\\t\\t\\tdataAttr( elem, name, data[ name ] );\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tdataPriv.set( elem, \\\"hasDataAttrs\\\", true );\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn data;\\n\\t\\t}\\n\\n\\t\\t// Sets multiple values\\n\\t\\tif ( typeof key === \\\"object\\\" ) {\\n\\t\\t\\treturn this.each( function() {\\n\\t\\t\\t\\tdataUser.set( this, key );\\n\\t\\t\\t} );\\n\\t\\t}\\n\\n\\t\\treturn access( this, function( value ) {\\n\\t\\t\\tvar data;\\n\\n\\t\\t\\t// The calling jQuery object (element matches) is not empty\\n\\t\\t\\t// (and therefore has an element appears at this[ 0 ]) and the\\n\\t\\t\\t// `value` parameter was not undefined. An empty jQuery object\\n\\t\\t\\t// will result in `undefined` for elem = this[ 0 ] which will\\n\\t\\t\\t// throw an exception if an attempt to read a data cache is made.\\n\\t\\t\\tif ( elem && value === undefined ) {\\n\\n\\t\\t\\t\\t// Attempt to get data from the cache\\n\\t\\t\\t\\t// The key will always be camelCased in Data\\n\\t\\t\\t\\tdata = dataUser.get( elem, key );\\n\\t\\t\\t\\tif ( data !== undefined ) {\\n\\t\\t\\t\\t\\treturn data;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Attempt to \\\"discover\\\" the data in\\n\\t\\t\\t\\t// HTML5 custom data-* attrs\\n\\t\\t\\t\\tdata = dataAttr( elem, key );\\n\\t\\t\\t\\tif ( data !== undefined ) {\\n\\t\\t\\t\\t\\treturn data;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// We tried really hard, but the data doesn't exist.\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Set the data...\\n\\t\\t\\tthis.each( function() {\\n\\n\\t\\t\\t\\t// We always store the camelCased key\\n\\t\\t\\t\\tdataUser.set( this, key, value );\\n\\t\\t\\t} );\\n\\t\\t}, null, value, arguments.length > 1, null, true );\\n\\t},\\n\\n\\tremoveData: function( key ) {\\n\\t\\treturn this.each( function() {\\n\\t\\t\\tdataUser.remove( this, key );\\n\\t\\t} );\\n\\t}\\n} );\\n\\n\\njQuery.extend( {\\n\\tqueue: function( elem, type, data ) {\\n\\t\\tvar queue;\\n\\n\\t\\tif ( elem ) {\\n\\t\\t\\ttype = ( type || \\\"fx\\\" ) + \\\"queue\\\";\\n\\t\\t\\tqueue = dataPriv.get( elem, type );\\n\\n\\t\\t\\t// Speed up dequeue by getting out quickly if this is just a lookup\\n\\t\\t\\tif ( data ) {\\n\\t\\t\\t\\tif ( !queue || Array.isArray( data ) ) {\\n\\t\\t\\t\\t\\tqueue = dataPriv.access( elem, type, jQuery.makeArray( data ) );\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tqueue.push( data );\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\treturn queue || [];\\n\\t\\t}\\n\\t},\\n\\n\\tdequeue: function( elem, type ) {\\n\\t\\ttype = type || \\\"fx\\\";\\n\\n\\t\\tvar queue = jQuery.queue( elem, type ),\\n\\t\\t\\tstartLength = queue.length,\\n\\t\\t\\tfn = queue.shift(),\\n\\t\\t\\thooks = jQuery._queueHooks( elem, type ),\\n\\t\\t\\tnext = function() {\\n\\t\\t\\t\\tjQuery.dequeue( elem, type );\\n\\t\\t\\t};\\n\\n\\t\\t// If the fx queue is dequeued, always remove the progress sentinel\\n\\t\\tif ( fn === \\\"inprogress\\\" ) {\\n\\t\\t\\tfn = queue.shift();\\n\\t\\t\\tstartLength--;\\n\\t\\t}\\n\\n\\t\\tif ( fn ) {\\n\\n\\t\\t\\t// Add a progress sentinel to prevent the fx queue from being\\n\\t\\t\\t// automatically dequeued\\n\\t\\t\\tif ( type === \\\"fx\\\" ) {\\n\\t\\t\\t\\tqueue.unshift( \\\"inprogress\\\" );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Clear up the last queue stop function\\n\\t\\t\\tdelete hooks.stop;\\n\\t\\t\\tfn.call( elem, next, hooks );\\n\\t\\t}\\n\\n\\t\\tif ( !startLength && hooks ) {\\n\\t\\t\\thooks.empty.fire();\\n\\t\\t}\\n\\t},\\n\\n\\t// Not public - generate a queueHooks object, or return the current one\\n\\t_queueHooks: function( elem, type ) {\\n\\t\\tvar key = type + \\\"queueHooks\\\";\\n\\t\\treturn dataPriv.get( elem, key ) || dataPriv.access( elem, key, {\\n\\t\\t\\tempty: jQuery.Callbacks( \\\"once memory\\\" ).add( function() {\\n\\t\\t\\t\\tdataPriv.remove( elem, [ type + \\\"queue\\\", key ] );\\n\\t\\t\\t} )\\n\\t\\t} );\\n\\t}\\n} );\\n\\njQuery.fn.extend( {\\n\\tqueue: function( type, data ) {\\n\\t\\tvar setter = 2;\\n\\n\\t\\tif ( typeof type !== \\\"string\\\" ) {\\n\\t\\t\\tdata = type;\\n\\t\\t\\ttype = \\\"fx\\\";\\n\\t\\t\\tsetter--;\\n\\t\\t}\\n\\n\\t\\tif ( arguments.length < setter ) {\\n\\t\\t\\treturn jQuery.queue( this[ 0 ], type );\\n\\t\\t}\\n\\n\\t\\treturn data === undefined ?\\n\\t\\t\\tthis :\\n\\t\\t\\tthis.each( function() {\\n\\t\\t\\t\\tvar queue = jQuery.queue( this, type, data );\\n\\n\\t\\t\\t\\t// Ensure a hooks for this queue\\n\\t\\t\\t\\tjQuery._queueHooks( this, type );\\n\\n\\t\\t\\t\\tif ( type === \\\"fx\\\" && queue[ 0 ] !== \\\"inprogress\\\" ) {\\n\\t\\t\\t\\t\\tjQuery.dequeue( this, type );\\n\\t\\t\\t\\t}\\n\\t\\t\\t} );\\n\\t},\\n\\tdequeue: function( type ) {\\n\\t\\treturn this.each( function() {\\n\\t\\t\\tjQuery.dequeue( this, type );\\n\\t\\t} );\\n\\t},\\n\\tclearQueue: function( type ) {\\n\\t\\treturn this.queue( type || \\\"fx\\\", [] );\\n\\t},\\n\\n\\t// Get a promise resolved when queues of a certain type\\n\\t// are emptied (fx is the type by default)\\n\\tpromise: function( type, obj ) {\\n\\t\\tvar tmp,\\n\\t\\t\\tcount = 1,\\n\\t\\t\\tdefer = jQuery.Deferred(),\\n\\t\\t\\telements = this,\\n\\t\\t\\ti = this.length,\\n\\t\\t\\tresolve = function() {\\n\\t\\t\\t\\tif ( !( --count ) ) {\\n\\t\\t\\t\\t\\tdefer.resolveWith( elements, [ elements ] );\\n\\t\\t\\t\\t}\\n\\t\\t\\t};\\n\\n\\t\\tif ( typeof type !== \\\"string\\\" ) {\\n\\t\\t\\tobj = type;\\n\\t\\t\\ttype = undefined;\\n\\t\\t}\\n\\t\\ttype = type || \\\"fx\\\";\\n\\n\\t\\twhile ( i-- ) {\\n\\t\\t\\ttmp = dataPriv.get( elements[ i ], type + \\\"queueHooks\\\" );\\n\\t\\t\\tif ( tmp && tmp.empty ) {\\n\\t\\t\\t\\tcount++;\\n\\t\\t\\t\\ttmp.empty.add( resolve );\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\tresolve();\\n\\t\\treturn defer.promise( obj );\\n\\t}\\n} );\\nvar pnum = ( /[+-]?(?:\\\\d*\\\\.|)\\\\d+(?:[eE][+-]?\\\\d+|)/ ).source;\\n\\nvar rcssNum = new RegExp( \\\"^(?:([+-])=|)(\\\" + pnum + \\\")([a-z%]*)$\\\", \\\"i\\\" );\\n\\n\\nvar cssExpand = [ \\\"Top\\\", \\\"Right\\\", \\\"Bottom\\\", \\\"Left\\\" ];\\n\\nvar isHiddenWithinTree = function( elem, el ) {\\n\\n\\t\\t// isHiddenWithinTree might be called from jQuery#filter function;\\n\\t\\t// in that case, element will be second argument\\n\\t\\telem = el || elem;\\n\\n\\t\\t// Inline style trumps all\\n\\t\\treturn elem.style.display === \\\"none\\\" ||\\n\\t\\t\\telem.style.display === \\\"\\\" &&\\n\\n\\t\\t\\t// Otherwise, check computed style\\n\\t\\t\\t// Support: Firefox <=43 - 45\\n\\t\\t\\t// Disconnected elements can have computed display: none, so first confirm that elem is\\n\\t\\t\\t// in the document.\\n\\t\\t\\tjQuery.contains( elem.ownerDocument, elem ) &&\\n\\n\\t\\t\\tjQuery.css( elem, \\\"display\\\" ) === \\\"none\\\";\\n\\t};\\n\\nvar swap = function( elem, options, callback, args ) {\\n\\tvar ret, name,\\n\\t\\told = {};\\n\\n\\t// Remember the old values, and insert the new ones\\n\\tfor ( name in options ) {\\n\\t\\told[ name ] = elem.style[ name ];\\n\\t\\telem.style[ name ] = options[ name ];\\n\\t}\\n\\n\\tret = callback.apply( elem, args || [] );\\n\\n\\t// Revert the old values\\n\\tfor ( name in options ) {\\n\\t\\telem.style[ name ] = old[ name ];\\n\\t}\\n\\n\\treturn ret;\\n};\\n\\n\\n\\n\\nfunction adjustCSS( elem, prop, valueParts, tween ) {\\n\\tvar adjusted,\\n\\t\\tscale = 1,\\n\\t\\tmaxIterations = 20,\\n\\t\\tcurrentValue = tween ?\\n\\t\\t\\tfunction() {\\n\\t\\t\\t\\treturn tween.cur();\\n\\t\\t\\t} :\\n\\t\\t\\tfunction() {\\n\\t\\t\\t\\treturn jQuery.css( elem, prop, \\\"\\\" );\\n\\t\\t\\t},\\n\\t\\tinitial = currentValue(),\\n\\t\\tunit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? \\\"\\\" : \\\"px\\\" ),\\n\\n\\t\\t// Starting value computation is required for potential unit mismatches\\n\\t\\tinitialInUnit = ( jQuery.cssNumber[ prop ] || unit !== \\\"px\\\" && +initial ) &&\\n\\t\\t\\trcssNum.exec( jQuery.css( elem, prop ) );\\n\\n\\tif ( initialInUnit && initialInUnit[ 3 ] !== unit ) {\\n\\n\\t\\t// Trust units reported by jQuery.css\\n\\t\\tunit = unit || initialInUnit[ 3 ];\\n\\n\\t\\t// Make sure we update the tween properties later on\\n\\t\\tvalueParts = valueParts || [];\\n\\n\\t\\t// Iteratively approximate from a nonzero starting point\\n\\t\\tinitialInUnit = +initial || 1;\\n\\n\\t\\tdo {\\n\\n\\t\\t\\t// If previous iteration zeroed out, double until we get *something*.\\n\\t\\t\\t// Use string for doubling so we don't accidentally see scale as unchanged below\\n\\t\\t\\tscale = scale || \\\".5\\\";\\n\\n\\t\\t\\t// Adjust and apply\\n\\t\\t\\tinitialInUnit = initialInUnit / scale;\\n\\t\\t\\tjQuery.style( elem, prop, initialInUnit + unit );\\n\\n\\t\\t// Update scale, tolerating zero or NaN from tween.cur()\\n\\t\\t// Break the loop if scale is unchanged or perfect, or if we've just had enough.\\n\\t\\t} while (\\n\\t\\t\\tscale !== ( scale = currentValue() / initial ) && scale !== 1 && --maxIterations\\n\\t\\t);\\n\\t}\\n\\n\\tif ( valueParts ) {\\n\\t\\tinitialInUnit = +initialInUnit || +initial || 0;\\n\\n\\t\\t// Apply relative offset (+=/-=) if specified\\n\\t\\tadjusted = valueParts[ 1 ] ?\\n\\t\\t\\tinitialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :\\n\\t\\t\\t+valueParts[ 2 ];\\n\\t\\tif ( tween ) {\\n\\t\\t\\ttween.unit = unit;\\n\\t\\t\\ttween.start = initialInUnit;\\n\\t\\t\\ttween.end = adjusted;\\n\\t\\t}\\n\\t}\\n\\treturn adjusted;\\n}\\n\\n\\nvar defaultDisplayMap = {};\\n\\nfunction getDefaultDisplay( elem ) {\\n\\tvar temp,\\n\\t\\tdoc = elem.ownerDocument,\\n\\t\\tnodeName = elem.nodeName,\\n\\t\\tdisplay = defaultDisplayMap[ nodeName ];\\n\\n\\tif ( display ) {\\n\\t\\treturn display;\\n\\t}\\n\\n\\ttemp = doc.body.appendChild( doc.createElement( nodeName ) );\\n\\tdisplay = jQuery.css( temp, \\\"display\\\" );\\n\\n\\ttemp.parentNode.removeChild( temp );\\n\\n\\tif ( display === \\\"none\\\" ) {\\n\\t\\tdisplay = \\\"block\\\";\\n\\t}\\n\\tdefaultDisplayMap[ nodeName ] = display;\\n\\n\\treturn display;\\n}\\n\\nfunction showHide( elements, show ) {\\n\\tvar display, elem,\\n\\t\\tvalues = [],\\n\\t\\tindex = 0,\\n\\t\\tlength = elements.length;\\n\\n\\t// Determine new display value for elements that need to change\\n\\tfor ( ; index < length; index++ ) {\\n\\t\\telem = elements[ index ];\\n\\t\\tif ( !elem.style ) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tdisplay = elem.style.display;\\n\\t\\tif ( show ) {\\n\\n\\t\\t\\t// Since we force visibility upon cascade-hidden elements, an immediate (and slow)\\n\\t\\t\\t// check is required in this first loop unless we have a nonempty display value (either\\n\\t\\t\\t// inline or about-to-be-restored)\\n\\t\\t\\tif ( display === \\\"none\\\" ) {\\n\\t\\t\\t\\tvalues[ index ] = dataPriv.get( elem, \\\"display\\\" ) || null;\\n\\t\\t\\t\\tif ( !values[ index ] ) {\\n\\t\\t\\t\\t\\telem.style.display = \\\"\\\";\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\tif ( elem.style.display === \\\"\\\" && isHiddenWithinTree( elem ) ) {\\n\\t\\t\\t\\tvalues[ index ] = getDefaultDisplay( elem );\\n\\t\\t\\t}\\n\\t\\t} else {\\n\\t\\t\\tif ( display !== \\\"none\\\" ) {\\n\\t\\t\\t\\tvalues[ index ] = \\\"none\\\";\\n\\n\\t\\t\\t\\t// Remember what we're overwriting\\n\\t\\t\\t\\tdataPriv.set( elem, \\\"display\\\", display );\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t// Set the display of the elements in a second loop to avoid constant reflow\\n\\tfor ( index = 0; index < length; index++ ) {\\n\\t\\tif ( values[ index ] != null ) {\\n\\t\\t\\telements[ index ].style.display = values[ index ];\\n\\t\\t}\\n\\t}\\n\\n\\treturn elements;\\n}\\n\\njQuery.fn.extend( {\\n\\tshow: function() {\\n\\t\\treturn showHide( this, true );\\n\\t},\\n\\thide: function() {\\n\\t\\treturn showHide( this );\\n\\t},\\n\\ttoggle: function( state ) {\\n\\t\\tif ( typeof state === \\\"boolean\\\" ) {\\n\\t\\t\\treturn state ? this.show() : this.hide();\\n\\t\\t}\\n\\n\\t\\treturn this.each( function() {\\n\\t\\t\\tif ( isHiddenWithinTree( this ) ) {\\n\\t\\t\\t\\tjQuery( this ).show();\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tjQuery( this ).hide();\\n\\t\\t\\t}\\n\\t\\t} );\\n\\t}\\n} );\\nvar rcheckableType = ( /^(?:checkbox|radio)$/i );\\n\\nvar rtagName = ( /<([a-z][^\\\\/\\\\0>\\\\x20\\\\t\\\\r\\\\n\\\\f]+)/i );\\n\\nvar rscriptType = ( /^$|\\\\/(?:java|ecma)script/i );\\n\\n\\n\\n// We have to close these tags to support XHTML (#13200)\\nvar wrapMap = {\\n\\n\\t// Support: IE <=9 only\\n\\toption: [ 1, \\\"<select multiple='multiple'>\\\", \\\"</select>\\\" ],\\n\\n\\t// XHTML parsers do not magically insert elements in the\\n\\t// same way that tag soup parsers do. So we cannot shorten\\n\\t// this by omitting <tbody> or other required elements.\\n\\tthead: [ 1, \\\"<table>\\\", \\\"</table>\\\" ],\\n\\tcol: [ 2, \\\"<table><colgroup>\\\", \\\"</colgroup></table>\\\" ],\\n\\ttr: [ 2, \\\"<table><tbody>\\\", \\\"</tbody></table>\\\" ],\\n\\ttd: [ 3, \\\"<table><tbody><tr>\\\", \\\"</tr></tbody></table>\\\" ],\\n\\n\\t_default: [ 0, \\\"\\\", \\\"\\\" ]\\n};\\n\\n// Support: IE <=9 only\\nwrapMap.optgroup = wrapMap.option;\\n\\nwrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\\nwrapMap.th = wrapMap.td;\\n\\n\\nfunction getAll( context, tag ) {\\n\\n\\t// Support: IE <=9 - 11 only\\n\\t// Use typeof to avoid zero-argument method invocation on host objects (#15151)\\n\\tvar ret;\\n\\n\\tif ( typeof context.getElementsByTagName !== \\\"undefined\\\" ) {\\n\\t\\tret = context.getElementsByTagName( tag || \\\"*\\\" );\\n\\n\\t} else if ( typeof context.querySelectorAll !== \\\"undefined\\\" ) {\\n\\t\\tret = context.querySelectorAll( tag || \\\"*\\\" );\\n\\n\\t} else {\\n\\t\\tret = [];\\n\\t}\\n\\n\\tif ( tag === undefined || tag && nodeName( context, tag ) ) {\\n\\t\\treturn jQuery.merge( [ context ], ret );\\n\\t}\\n\\n\\treturn ret;\\n}\\n\\n\\n// Mark scripts as having already been evaluated\\nfunction setGlobalEval( elems, refElements ) {\\n\\tvar i = 0,\\n\\t\\tl = elems.length;\\n\\n\\tfor ( ; i < l; i++ ) {\\n\\t\\tdataPriv.set(\\n\\t\\t\\telems[ i ],\\n\\t\\t\\t\\\"globalEval\\\",\\n\\t\\t\\t!refElements || dataPriv.get( refElements[ i ], \\\"globalEval\\\" )\\n\\t\\t);\\n\\t}\\n}\\n\\n\\nvar rhtml = /<|&#?\\\\w+;/;\\n\\nfunction buildFragment( elems, context, scripts, selection, ignored ) {\\n\\tvar elem, tmp, tag, wrap, contains, j,\\n\\t\\tfragment = context.createDocumentFragment(),\\n\\t\\tnodes = [],\\n\\t\\ti = 0,\\n\\t\\tl = elems.length;\\n\\n\\tfor ( ; i < l; i++ ) {\\n\\t\\telem = elems[ i ];\\n\\n\\t\\tif ( elem || elem === 0 ) {\\n\\n\\t\\t\\t// Add nodes directly\\n\\t\\t\\tif ( jQuery.type( elem ) === \\\"object\\\" ) {\\n\\n\\t\\t\\t\\t// Support: Android <=4.0 only, PhantomJS 1 only\\n\\t\\t\\t\\t// push.apply(_, arraylike) throws on ancient WebKit\\n\\t\\t\\t\\tjQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );\\n\\n\\t\\t\\t// Convert non-html into a text node\\n\\t\\t\\t} else if ( !rhtml.test( elem ) ) {\\n\\t\\t\\t\\tnodes.push( context.createTextNode( elem ) );\\n\\n\\t\\t\\t// Convert html into DOM nodes\\n\\t\\t\\t} else {\\n\\t\\t\\t\\ttmp = tmp || fragment.appendChild( context.createElement( \\\"div\\\" ) );\\n\\n\\t\\t\\t\\t// Deserialize a standard representation\\n\\t\\t\\t\\ttag = ( rtagName.exec( elem ) || [ \\\"\\\", \\\"\\\" ] )[ 1 ].toLowerCase();\\n\\t\\t\\t\\twrap = wrapMap[ tag ] || wrapMap._default;\\n\\t\\t\\t\\ttmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];\\n\\n\\t\\t\\t\\t// Descend through wrappers to the right content\\n\\t\\t\\t\\tj = wrap[ 0 ];\\n\\t\\t\\t\\twhile ( j-- ) {\\n\\t\\t\\t\\t\\ttmp = tmp.lastChild;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Support: Android <=4.0 only, PhantomJS 1 only\\n\\t\\t\\t\\t// push.apply(_, arraylike) throws on ancient WebKit\\n\\t\\t\\t\\tjQuery.merge( nodes, tmp.childNodes );\\n\\n\\t\\t\\t\\t// Remember the top-level container\\n\\t\\t\\t\\ttmp = fragment.firstChild;\\n\\n\\t\\t\\t\\t// Ensure the created nodes are orphaned (#12392)\\n\\t\\t\\t\\ttmp.textContent = \\\"\\\";\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t// Remove wrapper from fragment\\n\\tfragment.textContent = \\\"\\\";\\n\\n\\ti = 0;\\n\\twhile ( ( elem = nodes[ i++ ] ) ) {\\n\\n\\t\\t// Skip elements already in the context collection (trac-4087)\\n\\t\\tif ( selection && jQuery.inArray( elem, selection ) > -1 ) {\\n\\t\\t\\tif ( ignored ) {\\n\\t\\t\\t\\tignored.push( elem );\\n\\t\\t\\t}\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tcontains = jQuery.contains( elem.ownerDocument, elem );\\n\\n\\t\\t// Append to fragment\\n\\t\\ttmp = getAll( fragment.appendChild( elem ), \\\"script\\\" );\\n\\n\\t\\t// Preserve script evaluation history\\n\\t\\tif ( contains ) {\\n\\t\\t\\tsetGlobalEval( tmp );\\n\\t\\t}\\n\\n\\t\\t// Capture executables\\n\\t\\tif ( scripts ) {\\n\\t\\t\\tj = 0;\\n\\t\\t\\twhile ( ( elem = tmp[ j++ ] ) ) {\\n\\t\\t\\t\\tif ( rscriptType.test( elem.type || \\\"\\\" ) ) {\\n\\t\\t\\t\\t\\tscripts.push( elem );\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\treturn fragment;\\n}\\n\\n\\n( function() {\\n\\tvar fragment = document.createDocumentFragment(),\\n\\t\\tdiv = fragment.appendChild( document.createElement( \\\"div\\\" ) ),\\n\\t\\tinput = document.createElement( \\\"input\\\" );\\n\\n\\t// Support: Android 4.0 - 4.3 only\\n\\t// Check state lost if the name is set (#11217)\\n\\t// Support: Windows Web Apps (WWA)\\n\\t// `name` and `type` must use .setAttribute for WWA (#14901)\\n\\tinput.setAttribute( \\\"type\\\", \\\"radio\\\" );\\n\\tinput.setAttribute( \\\"checked\\\", \\\"checked\\\" );\\n\\tinput.setAttribute( \\\"name\\\", \\\"t\\\" );\\n\\n\\tdiv.appendChild( input );\\n\\n\\t// Support: Android <=4.1 only\\n\\t// Older WebKit doesn't clone checked state correctly in fragments\\n\\tsupport.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;\\n\\n\\t// Support: IE <=11 only\\n\\t// Make sure textarea (and checkbox) defaultValue is properly cloned\\n\\tdiv.innerHTML = \\\"<textarea>x</textarea>\\\";\\n\\tsupport.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;\\n} )();\\nvar documentElement = document.documentElement;\\n\\n\\n\\nvar\\n\\trkeyEvent = /^key/,\\n\\trmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,\\n\\trtypenamespace = /^([^.]*)(?:\\\\.(.+)|)/;\\n\\nfunction returnTrue() {\\n\\treturn true;\\n}\\n\\nfunction returnFalse() {\\n\\treturn false;\\n}\\n\\n// Support: IE <=9 only\\n// See #13393 for more info\\nfunction safeActiveElement() {\\n\\ttry {\\n\\t\\treturn document.activeElement;\\n\\t} catch ( err ) { }\\n}\\n\\nfunction on( elem, types, selector, data, fn, one ) {\\n\\tvar origFn, type;\\n\\n\\t// Types can be a map of types/handlers\\n\\tif ( typeof types === \\\"object\\\" ) {\\n\\n\\t\\t// ( types-Object, selector, data )\\n\\t\\tif ( typeof selector !== \\\"string\\\" ) {\\n\\n\\t\\t\\t// ( types-Object, data )\\n\\t\\t\\tdata = data || selector;\\n\\t\\t\\tselector = undefined;\\n\\t\\t}\\n\\t\\tfor ( type in types ) {\\n\\t\\t\\ton( elem, type, selector, data, types[ type ], one );\\n\\t\\t}\\n\\t\\treturn elem;\\n\\t}\\n\\n\\tif ( data == null && fn == null ) {\\n\\n\\t\\t// ( types, fn )\\n\\t\\tfn = selector;\\n\\t\\tdata = selector = undefined;\\n\\t} else if ( fn == null ) {\\n\\t\\tif ( typeof selector === \\\"string\\\" ) {\\n\\n\\t\\t\\t// ( types, selector, fn )\\n\\t\\t\\tfn = data;\\n\\t\\t\\tdata = undefined;\\n\\t\\t} else {\\n\\n\\t\\t\\t// ( types, data, fn )\\n\\t\\t\\tfn = data;\\n\\t\\t\\tdata = selector;\\n\\t\\t\\tselector = undefined;\\n\\t\\t}\\n\\t}\\n\\tif ( fn === false ) {\\n\\t\\tfn = returnFalse;\\n\\t} else if ( !fn ) {\\n\\t\\treturn elem;\\n\\t}\\n\\n\\tif ( one === 1 ) {\\n\\t\\torigFn = fn;\\n\\t\\tfn = function( event ) {\\n\\n\\t\\t\\t// Can use an empty set, since event contains the info\\n\\t\\t\\tjQuery().off( event );\\n\\t\\t\\treturn origFn.apply( this, arguments );\\n\\t\\t};\\n\\n\\t\\t// Use same guid so caller can remove using origFn\\n\\t\\tfn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );\\n\\t}\\n\\treturn elem.each( function() {\\n\\t\\tjQuery.event.add( this, types, fn, data, selector );\\n\\t} );\\n}\\n\\n/*\\n * Helper functions for managing events -- not part of the public interface.\\n * Props to Dean Edwards' addEvent library for many of the ideas.\\n */\\njQuery.event = {\\n\\n\\tglobal: {},\\n\\n\\tadd: function( elem, types, handler, data, selector ) {\\n\\n\\t\\tvar handleObjIn, eventHandle, tmp,\\n\\t\\t\\tevents, t, handleObj,\\n\\t\\t\\tspecial, handlers, type, namespaces, origType,\\n\\t\\t\\telemData = dataPriv.get( elem );\\n\\n\\t\\t// Don't attach events to noData or text/comment nodes (but allow plain objects)\\n\\t\\tif ( !elemData ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\t// Caller can pass in an object of custom data in lieu of the handler\\n\\t\\tif ( handler.handler ) {\\n\\t\\t\\thandleObjIn = handler;\\n\\t\\t\\thandler = handleObjIn.handler;\\n\\t\\t\\tselector = handleObjIn.selector;\\n\\t\\t}\\n\\n\\t\\t// Ensure that invalid selectors throw exceptions at attach time\\n\\t\\t// Evaluate against documentElement in case elem is a non-element node (e.g., document)\\n\\t\\tif ( selector ) {\\n\\t\\t\\tjQuery.find.matchesSelector( documentElement, selector );\\n\\t\\t}\\n\\n\\t\\t// Make sure that the handler has a unique ID, used to find/remove it later\\n\\t\\tif ( !handler.guid ) {\\n\\t\\t\\thandler.guid = jQuery.guid++;\\n\\t\\t}\\n\\n\\t\\t// Init the element's event structure and main handler, if this is the first\\n\\t\\tif ( !( events = elemData.events ) ) {\\n\\t\\t\\tevents = elemData.events = {};\\n\\t\\t}\\n\\t\\tif ( !( eventHandle = elemData.handle ) ) {\\n\\t\\t\\teventHandle = elemData.handle = function( e ) {\\n\\n\\t\\t\\t\\t// Discard the second event of a jQuery.event.trigger() and\\n\\t\\t\\t\\t// when an event is called after a page has unloaded\\n\\t\\t\\t\\treturn typeof jQuery !== \\\"undefined\\\" && jQuery.event.triggered !== e.type ?\\n\\t\\t\\t\\t\\tjQuery.event.dispatch.apply( elem, arguments ) : undefined;\\n\\t\\t\\t};\\n\\t\\t}\\n\\n\\t\\t// Handle multiple events separated by a space\\n\\t\\ttypes = ( types || \\\"\\\" ).match( rnothtmlwhite ) || [ \\\"\\\" ];\\n\\t\\tt = types.length;\\n\\t\\twhile ( t-- ) {\\n\\t\\t\\ttmp = rtypenamespace.exec( types[ t ] ) || [];\\n\\t\\t\\ttype = origType = tmp[ 1 ];\\n\\t\\t\\tnamespaces = ( tmp[ 2 ] || \\\"\\\" ).split( \\\".\\\" ).sort();\\n\\n\\t\\t\\t// There *must* be a type, no attaching namespace-only handlers\\n\\t\\t\\tif ( !type ) {\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// If event changes its type, use the special event handlers for the changed type\\n\\t\\t\\tspecial = jQuery.event.special[ type ] || {};\\n\\n\\t\\t\\t// If selector defined, determine special event api type, otherwise given type\\n\\t\\t\\ttype = ( selector ? special.delegateType : special.bindType ) || type;\\n\\n\\t\\t\\t// Update special based on newly reset type\\n\\t\\t\\tspecial = jQuery.event.special[ type ] || {};\\n\\n\\t\\t\\t// handleObj is passed to all event handlers\\n\\t\\t\\thandleObj = jQuery.extend( {\\n\\t\\t\\t\\ttype: type,\\n\\t\\t\\t\\torigType: origType,\\n\\t\\t\\t\\tdata: data,\\n\\t\\t\\t\\thandler: handler,\\n\\t\\t\\t\\tguid: handler.guid,\\n\\t\\t\\t\\tselector: selector,\\n\\t\\t\\t\\tneedsContext: selector && jQuery.expr.match.needsContext.test( selector ),\\n\\t\\t\\t\\tnamespace: namespaces.join( \\\".\\\" )\\n\\t\\t\\t}, handleObjIn );\\n\\n\\t\\t\\t// Init the event handler queue if we're the first\\n\\t\\t\\tif ( !( handlers = events[ type ] ) ) {\\n\\t\\t\\t\\thandlers = events[ type ] = [];\\n\\t\\t\\t\\thandlers.delegateCount = 0;\\n\\n\\t\\t\\t\\t// Only use addEventListener if the special events handler returns false\\n\\t\\t\\t\\tif ( !special.setup ||\\n\\t\\t\\t\\t\\tspecial.setup.call( elem, data, namespaces, eventHandle ) === false ) {\\n\\n\\t\\t\\t\\t\\tif ( elem.addEventListener ) {\\n\\t\\t\\t\\t\\t\\telem.addEventListener( type, eventHandle );\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( special.add ) {\\n\\t\\t\\t\\tspecial.add.call( elem, handleObj );\\n\\n\\t\\t\\t\\tif ( !handleObj.handler.guid ) {\\n\\t\\t\\t\\t\\thandleObj.handler.guid = handler.guid;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Add to the element's handler list, delegates in front\\n\\t\\t\\tif ( selector ) {\\n\\t\\t\\t\\thandlers.splice( handlers.delegateCount++, 0, handleObj );\\n\\t\\t\\t} else {\\n\\t\\t\\t\\thandlers.push( handleObj );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Keep track of which events have ever been used, for event optimization\\n\\t\\t\\tjQuery.event.global[ type ] = true;\\n\\t\\t}\\n\\n\\t},\\n\\n\\t// Detach an event or set of events from an element\\n\\tremove: function( elem, types, handler, selector, mappedTypes ) {\\n\\n\\t\\tvar j, origCount, tmp,\\n\\t\\t\\tevents, t, handleObj,\\n\\t\\t\\tspecial, handlers, type, namespaces, origType,\\n\\t\\t\\telemData = dataPriv.hasData( elem ) && dataPriv.get( elem );\\n\\n\\t\\tif ( !elemData || !( events = elemData.events ) ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\t// Once for each type.namespace in types; type may be omitted\\n\\t\\ttypes = ( types || \\\"\\\" ).match( rnothtmlwhite ) || [ \\\"\\\" ];\\n\\t\\tt = types.length;\\n\\t\\twhile ( t-- ) {\\n\\t\\t\\ttmp = rtypenamespace.exec( types[ t ] ) || [];\\n\\t\\t\\ttype = origType = tmp[ 1 ];\\n\\t\\t\\tnamespaces = ( tmp[ 2 ] || \\\"\\\" ).split( \\\".\\\" ).sort();\\n\\n\\t\\t\\t// Unbind all events (on this namespace, if provided) for the element\\n\\t\\t\\tif ( !type ) {\\n\\t\\t\\t\\tfor ( type in events ) {\\n\\t\\t\\t\\t\\tjQuery.event.remove( elem, type + types[ t ], handler, selector, true );\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tspecial = jQuery.event.special[ type ] || {};\\n\\t\\t\\ttype = ( selector ? special.delegateType : special.bindType ) || type;\\n\\t\\t\\thandlers = events[ type ] || [];\\n\\t\\t\\ttmp = tmp[ 2 ] &&\\n\\t\\t\\t\\tnew RegExp( \\\"(^|\\\\\\\\.)\\\" + namespaces.join( \\\"\\\\\\\\.(?:.*\\\\\\\\.|)\\\" ) + \\\"(\\\\\\\\.|$)\\\" );\\n\\n\\t\\t\\t// Remove matching events\\n\\t\\t\\torigCount = j = handlers.length;\\n\\t\\t\\twhile ( j-- ) {\\n\\t\\t\\t\\thandleObj = handlers[ j ];\\n\\n\\t\\t\\t\\tif ( ( mappedTypes || origType === handleObj.origType ) &&\\n\\t\\t\\t\\t\\t( !handler || handler.guid === handleObj.guid ) &&\\n\\t\\t\\t\\t\\t( !tmp || tmp.test( handleObj.namespace ) ) &&\\n\\t\\t\\t\\t\\t( !selector || selector === handleObj.selector ||\\n\\t\\t\\t\\t\\t\\tselector === \\\"**\\\" && handleObj.selector ) ) {\\n\\t\\t\\t\\t\\thandlers.splice( j, 1 );\\n\\n\\t\\t\\t\\t\\tif ( handleObj.selector ) {\\n\\t\\t\\t\\t\\t\\thandlers.delegateCount--;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tif ( special.remove ) {\\n\\t\\t\\t\\t\\t\\tspecial.remove.call( elem, handleObj );\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Remove generic event handler if we removed something and no more handlers exist\\n\\t\\t\\t// (avoids potential for endless recursion during removal of special event handlers)\\n\\t\\t\\tif ( origCount && !handlers.length ) {\\n\\t\\t\\t\\tif ( !special.teardown ||\\n\\t\\t\\t\\t\\tspecial.teardown.call( elem, namespaces, elemData.handle ) === false ) {\\n\\n\\t\\t\\t\\t\\tjQuery.removeEvent( elem, type, elemData.handle );\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tdelete events[ type ];\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// Remove data and the expando if it's no longer used\\n\\t\\tif ( jQuery.isEmptyObject( events ) ) {\\n\\t\\t\\tdataPriv.remove( elem, \\\"handle events\\\" );\\n\\t\\t}\\n\\t},\\n\\n\\tdispatch: function( nativeEvent ) {\\n\\n\\t\\t// Make a writable jQuery.Event from the native event object\\n\\t\\tvar event = jQuery.event.fix( nativeEvent );\\n\\n\\t\\tvar i, j, ret, matched, handleObj, handlerQueue,\\n\\t\\t\\targs = new Array( arguments.length ),\\n\\t\\t\\thandlers = ( dataPriv.get( this, \\\"events\\\" ) || {} )[ event.type ] || [],\\n\\t\\t\\tspecial = jQuery.event.special[ event.type ] || {};\\n\\n\\t\\t// Use the fix-ed jQuery.Event rather than the (read-only) native event\\n\\t\\targs[ 0 ] = event;\\n\\n\\t\\tfor ( i = 1; i < arguments.length; i++ ) {\\n\\t\\t\\targs[ i ] = arguments[ i ];\\n\\t\\t}\\n\\n\\t\\tevent.delegateTarget = this;\\n\\n\\t\\t// Call the preDispatch hook for the mapped type, and let it bail if desired\\n\\t\\tif ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\t// Determine handlers\\n\\t\\thandlerQueue = jQuery.event.handlers.call( this, event, handlers );\\n\\n\\t\\t// Run delegates first; they may want to stop propagation beneath us\\n\\t\\ti = 0;\\n\\t\\twhile ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {\\n\\t\\t\\tevent.currentTarget = matched.elem;\\n\\n\\t\\t\\tj = 0;\\n\\t\\t\\twhile ( ( handleObj = matched.handlers[ j++ ] ) &&\\n\\t\\t\\t\\t!event.isImmediatePropagationStopped() ) {\\n\\n\\t\\t\\t\\t// Triggered event must either 1) have no namespace, or 2) have namespace(s)\\n\\t\\t\\t\\t// a subset or equal to those in the bound event (both can have no namespace).\\n\\t\\t\\t\\tif ( !event.rnamespace || event.rnamespace.test( handleObj.namespace ) ) {\\n\\n\\t\\t\\t\\t\\tevent.handleObj = handleObj;\\n\\t\\t\\t\\t\\tevent.data = handleObj.data;\\n\\n\\t\\t\\t\\t\\tret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||\\n\\t\\t\\t\\t\\t\\thandleObj.handler ).apply( matched.elem, args );\\n\\n\\t\\t\\t\\t\\tif ( ret !== undefined ) {\\n\\t\\t\\t\\t\\t\\tif ( ( event.result = ret ) === false ) {\\n\\t\\t\\t\\t\\t\\t\\tevent.preventDefault();\\n\\t\\t\\t\\t\\t\\t\\tevent.stopPropagation();\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// Call the postDispatch hook for the mapped type\\n\\t\\tif ( special.postDispatch ) {\\n\\t\\t\\tspecial.postDispatch.call( this, event );\\n\\t\\t}\\n\\n\\t\\treturn event.result;\\n\\t},\\n\\n\\thandlers: function( event, handlers ) {\\n\\t\\tvar i, handleObj, sel, matchedHandlers, matchedSelectors,\\n\\t\\t\\thandlerQueue = [],\\n\\t\\t\\tdelegateCount = handlers.delegateCount,\\n\\t\\t\\tcur = event.target;\\n\\n\\t\\t// Find delegate handlers\\n\\t\\tif ( delegateCount &&\\n\\n\\t\\t\\t// Support: IE <=9\\n\\t\\t\\t// Black-hole SVG <use> instance trees (trac-13180)\\n\\t\\t\\tcur.nodeType &&\\n\\n\\t\\t\\t// Support: Firefox <=42\\n\\t\\t\\t// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)\\n\\t\\t\\t// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click\\n\\t\\t\\t// Support: IE 11 only\\n\\t\\t\\t// ...but not arrow key \\\"clicks\\\" of radio inputs, which can have `button` -1 (gh-2343)\\n\\t\\t\\t!( event.type === \\\"click\\\" && event.button >= 1 ) ) {\\n\\n\\t\\t\\tfor ( ; cur !== this; cur = cur.parentNode || this ) {\\n\\n\\t\\t\\t\\t// Don't check non-elements (#13208)\\n\\t\\t\\t\\t// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\\n\\t\\t\\t\\tif ( cur.nodeType === 1 && !( event.type === \\\"click\\\" && cur.disabled === true ) ) {\\n\\t\\t\\t\\t\\tmatchedHandlers = [];\\n\\t\\t\\t\\t\\tmatchedSelectors = {};\\n\\t\\t\\t\\t\\tfor ( i = 0; i < delegateCount; i++ ) {\\n\\t\\t\\t\\t\\t\\thandleObj = handlers[ i ];\\n\\n\\t\\t\\t\\t\\t\\t// Don't conflict with Object.prototype properties (#13203)\\n\\t\\t\\t\\t\\t\\tsel = handleObj.selector + \\\" \\\";\\n\\n\\t\\t\\t\\t\\t\\tif ( matchedSelectors[ sel ] === undefined ) {\\n\\t\\t\\t\\t\\t\\t\\tmatchedSelectors[ sel ] = handleObj.needsContext ?\\n\\t\\t\\t\\t\\t\\t\\t\\tjQuery( sel, this ).index( cur ) > -1 :\\n\\t\\t\\t\\t\\t\\t\\t\\tjQuery.find( sel, this, null, [ cur ] ).length;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tif ( matchedSelectors[ sel ] ) {\\n\\t\\t\\t\\t\\t\\t\\tmatchedHandlers.push( handleObj );\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tif ( matchedHandlers.length ) {\\n\\t\\t\\t\\t\\t\\thandlerQueue.push( { elem: cur, handlers: matchedHandlers } );\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// Add the remaining (directly-bound) handlers\\n\\t\\tcur = this;\\n\\t\\tif ( delegateCount < handlers.length ) {\\n\\t\\t\\thandlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );\\n\\t\\t}\\n\\n\\t\\treturn handlerQueue;\\n\\t},\\n\\n\\taddProp: function( name, hook ) {\\n\\t\\tObject.defineProperty( jQuery.Event.prototype, name, {\\n\\t\\t\\tenumerable: true,\\n\\t\\t\\tconfigurable: true,\\n\\n\\t\\t\\tget: jQuery.isFunction( hook ) ?\\n\\t\\t\\t\\tfunction() {\\n\\t\\t\\t\\t\\tif ( this.originalEvent ) {\\n\\t\\t\\t\\t\\t\\t\\treturn hook( this.originalEvent );\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t} :\\n\\t\\t\\t\\tfunction() {\\n\\t\\t\\t\\t\\tif ( this.originalEvent ) {\\n\\t\\t\\t\\t\\t\\t\\treturn this.originalEvent[ name ];\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t},\\n\\n\\t\\t\\tset: function( value ) {\\n\\t\\t\\t\\tObject.defineProperty( this, name, {\\n\\t\\t\\t\\t\\tenumerable: true,\\n\\t\\t\\t\\t\\tconfigurable: true,\\n\\t\\t\\t\\t\\twritable: true,\\n\\t\\t\\t\\t\\tvalue: value\\n\\t\\t\\t\\t} );\\n\\t\\t\\t}\\n\\t\\t} );\\n\\t},\\n\\n\\tfix: function( originalEvent ) {\\n\\t\\treturn originalEvent[ jQuery.expando ] ?\\n\\t\\t\\toriginalEvent :\\n\\t\\t\\tnew jQuery.Event( originalEvent );\\n\\t},\\n\\n\\tspecial: {\\n\\t\\tload: {\\n\\n\\t\\t\\t// Prevent triggered image.load events from bubbling to window.load\\n\\t\\t\\tnoBubble: true\\n\\t\\t},\\n\\t\\tfocus: {\\n\\n\\t\\t\\t// Fire native event if possible so blur/focus sequence is correct\\n\\t\\t\\ttrigger: function() {\\n\\t\\t\\t\\tif ( this !== safeActiveElement() && this.focus ) {\\n\\t\\t\\t\\t\\tthis.focus();\\n\\t\\t\\t\\t\\treturn false;\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\tdelegateType: \\\"focusin\\\"\\n\\t\\t},\\n\\t\\tblur: {\\n\\t\\t\\ttrigger: function() {\\n\\t\\t\\t\\tif ( this === safeActiveElement() && this.blur ) {\\n\\t\\t\\t\\t\\tthis.blur();\\n\\t\\t\\t\\t\\treturn false;\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\tdelegateType: \\\"focusout\\\"\\n\\t\\t},\\n\\t\\tclick: {\\n\\n\\t\\t\\t// For checkbox, fire native event so checked state will be right\\n\\t\\t\\ttrigger: function() {\\n\\t\\t\\t\\tif ( this.type === \\\"checkbox\\\" && this.click && nodeName( this, \\\"input\\\" ) ) {\\n\\t\\t\\t\\t\\tthis.click();\\n\\t\\t\\t\\t\\treturn false;\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\n\\t\\t\\t// For cross-browser consistency, don't fire native .click() on links\\n\\t\\t\\t_default: function( event ) {\\n\\t\\t\\t\\treturn nodeName( event.target, \\\"a\\\" );\\n\\t\\t\\t}\\n\\t\\t},\\n\\n\\t\\tbeforeunload: {\\n\\t\\t\\tpostDispatch: function( event ) {\\n\\n\\t\\t\\t\\t// Support: Firefox 20+\\n\\t\\t\\t\\t// Firefox doesn't alert if the returnValue field is not set.\\n\\t\\t\\t\\tif ( event.result !== undefined && event.originalEvent ) {\\n\\t\\t\\t\\t\\tevent.originalEvent.returnValue = event.result;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n};\\n\\njQuery.removeEvent = function( elem, type, handle ) {\\n\\n\\t// This \\\"if\\\" is needed for plain objects\\n\\tif ( elem.removeEventListener ) {\\n\\t\\telem.removeEventListener( type, handle );\\n\\t}\\n};\\n\\njQuery.Event = function( src, props ) {\\n\\n\\t// Allow instantiation without the 'new' keyword\\n\\tif ( !( this instanceof jQuery.Event ) ) {\\n\\t\\treturn new jQuery.Event( src, props );\\n\\t}\\n\\n\\t// Event object\\n\\tif ( src && src.type ) {\\n\\t\\tthis.originalEvent = src;\\n\\t\\tthis.type = src.type;\\n\\n\\t\\t// Events bubbling up the document may have been marked as prevented\\n\\t\\t// by a handler lower down the tree; reflect the correct value.\\n\\t\\tthis.isDefaultPrevented = src.defaultPrevented ||\\n\\t\\t\\t\\tsrc.defaultPrevented === undefined &&\\n\\n\\t\\t\\t\\t// Support: Android <=2.3 only\\n\\t\\t\\t\\tsrc.returnValue === false ?\\n\\t\\t\\treturnTrue :\\n\\t\\t\\treturnFalse;\\n\\n\\t\\t// Create target properties\\n\\t\\t// Support: Safari <=6 - 7 only\\n\\t\\t// Target should not be a text node (#504, #13143)\\n\\t\\tthis.target = ( src.target && src.target.nodeType === 3 ) ?\\n\\t\\t\\tsrc.target.parentNode :\\n\\t\\t\\tsrc.target;\\n\\n\\t\\tthis.currentTarget = src.currentTarget;\\n\\t\\tthis.relatedTarget = src.relatedTarget;\\n\\n\\t// Event type\\n\\t} else {\\n\\t\\tthis.type = src;\\n\\t}\\n\\n\\t// Put explicitly provided properties onto the event object\\n\\tif ( props ) {\\n\\t\\tjQuery.extend( this, props );\\n\\t}\\n\\n\\t// Create a timestamp if incoming event doesn't have one\\n\\tthis.timeStamp = src && src.timeStamp || jQuery.now();\\n\\n\\t// Mark it as fixed\\n\\tthis[ jQuery.expando ] = true;\\n};\\n\\n// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\\n// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\\njQuery.Event.prototype = {\\n\\tconstructor: jQuery.Event,\\n\\tisDefaultPrevented: returnFalse,\\n\\tisPropagationStopped: returnFalse,\\n\\tisImmediatePropagationStopped: returnFalse,\\n\\tisSimulated: false,\\n\\n\\tpreventDefault: function() {\\n\\t\\tvar e = this.originalEvent;\\n\\n\\t\\tthis.isDefaultPrevented = returnTrue;\\n\\n\\t\\tif ( e && !this.isSimulated ) {\\n\\t\\t\\te.preventDefault();\\n\\t\\t}\\n\\t},\\n\\tstopPropagation: function() {\\n\\t\\tvar e = this.originalEvent;\\n\\n\\t\\tthis.isPropagationStopped = returnTrue;\\n\\n\\t\\tif ( e && !this.isSimulated ) {\\n\\t\\t\\te.stopPropagation();\\n\\t\\t}\\n\\t},\\n\\tstopImmediatePropagation: function() {\\n\\t\\tvar e = this.originalEvent;\\n\\n\\t\\tthis.isImmediatePropagationStopped = returnTrue;\\n\\n\\t\\tif ( e && !this.isSimulated ) {\\n\\t\\t\\te.stopImmediatePropagation();\\n\\t\\t}\\n\\n\\t\\tthis.stopPropagation();\\n\\t}\\n};\\n\\n// Includes all common event props including KeyEvent and MouseEvent specific props\\njQuery.each( {\\n\\taltKey: true,\\n\\tbubbles: true,\\n\\tcancelable: true,\\n\\tchangedTouches: true,\\n\\tctrlKey: true,\\n\\tdetail: true,\\n\\teventPhase: true,\\n\\tmetaKey: true,\\n\\tpageX: true,\\n\\tpageY: true,\\n\\tshiftKey: true,\\n\\tview: true,\\n\\t\\\"char\\\": true,\\n\\tcharCode: true,\\n\\tkey: true,\\n\\tkeyCode: true,\\n\\tbutton: true,\\n\\tbuttons: true,\\n\\tclientX: true,\\n\\tclientY: true,\\n\\toffsetX: true,\\n\\toffsetY: true,\\n\\tpointerId: true,\\n\\tpointerType: true,\\n\\tscreenX: true,\\n\\tscreenY: true,\\n\\ttargetTouches: true,\\n\\ttoElement: true,\\n\\ttouches: true,\\n\\n\\twhich: function( event ) {\\n\\t\\tvar button = event.button;\\n\\n\\t\\t// Add which for key events\\n\\t\\tif ( event.which == null && rkeyEvent.test( event.type ) ) {\\n\\t\\t\\treturn event.charCode != null ? event.charCode : event.keyCode;\\n\\t\\t}\\n\\n\\t\\t// Add which for click: 1 === left; 2 === middle; 3 === right\\n\\t\\tif ( !event.which && button !== undefined && rmouseEvent.test( event.type ) ) {\\n\\t\\t\\tif ( button & 1 ) {\\n\\t\\t\\t\\treturn 1;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( button & 2 ) {\\n\\t\\t\\t\\treturn 3;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( button & 4 ) {\\n\\t\\t\\t\\treturn 2;\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn 0;\\n\\t\\t}\\n\\n\\t\\treturn event.which;\\n\\t}\\n}, jQuery.event.addProp );\\n\\n// Create mouseenter/leave events using mouseover/out and event-time checks\\n// so that event delegation works in jQuery.\\n// Do the same for pointerenter/pointerleave and pointerover/pointerout\\n//\\n// Support: Safari 7 only\\n// Safari sends mouseenter too often; see:\\n// https://bugs.chromium.org/p/chromium/issues/detail?id=470258\\n// for the description of the bug (it existed in older Chrome versions as well).\\njQuery.each( {\\n\\tmouseenter: \\\"mouseover\\\",\\n\\tmouseleave: \\\"mouseout\\\",\\n\\tpointerenter: \\\"pointerover\\\",\\n\\tpointerleave: \\\"pointerout\\\"\\n}, function( orig, fix ) {\\n\\tjQuery.event.special[ orig ] = {\\n\\t\\tdelegateType: fix,\\n\\t\\tbindType: fix,\\n\\n\\t\\thandle: function( event ) {\\n\\t\\t\\tvar ret,\\n\\t\\t\\t\\ttarget = this,\\n\\t\\t\\t\\trelated = event.relatedTarget,\\n\\t\\t\\t\\thandleObj = event.handleObj;\\n\\n\\t\\t\\t// For mouseenter/leave call the handler if related is outside the target.\\n\\t\\t\\t// NB: No relatedTarget if the mouse left/entered the browser window\\n\\t\\t\\tif ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {\\n\\t\\t\\t\\tevent.type = handleObj.origType;\\n\\t\\t\\t\\tret = handleObj.handler.apply( this, arguments );\\n\\t\\t\\t\\tevent.type = fix;\\n\\t\\t\\t}\\n\\t\\t\\treturn ret;\\n\\t\\t}\\n\\t};\\n} );\\n\\njQuery.fn.extend( {\\n\\n\\ton: function( types, selector, data, fn ) {\\n\\t\\treturn on( this, types, selector, data, fn );\\n\\t},\\n\\tone: function( types, selector, data, fn ) {\\n\\t\\treturn on( this, types, selector, data, fn, 1 );\\n\\t},\\n\\toff: function( types, selector, fn ) {\\n\\t\\tvar handleObj, type;\\n\\t\\tif ( types && types.preventDefault && types.handleObj ) {\\n\\n\\t\\t\\t// ( event )  dispatched jQuery.Event\\n\\t\\t\\thandleObj = types.handleObj;\\n\\t\\t\\tjQuery( types.delegateTarget ).off(\\n\\t\\t\\t\\thandleObj.namespace ?\\n\\t\\t\\t\\t\\thandleObj.origType + \\\".\\\" + handleObj.namespace :\\n\\t\\t\\t\\t\\thandleObj.origType,\\n\\t\\t\\t\\thandleObj.selector,\\n\\t\\t\\t\\thandleObj.handler\\n\\t\\t\\t);\\n\\t\\t\\treturn this;\\n\\t\\t}\\n\\t\\tif ( typeof types === \\\"object\\\" ) {\\n\\n\\t\\t\\t// ( types-object [, selector] )\\n\\t\\t\\tfor ( type in types ) {\\n\\t\\t\\t\\tthis.off( type, selector, types[ type ] );\\n\\t\\t\\t}\\n\\t\\t\\treturn this;\\n\\t\\t}\\n\\t\\tif ( selector === false || typeof selector === \\\"function\\\" ) {\\n\\n\\t\\t\\t// ( types [, fn] )\\n\\t\\t\\tfn = selector;\\n\\t\\t\\tselector = undefined;\\n\\t\\t}\\n\\t\\tif ( fn === false ) {\\n\\t\\t\\tfn = returnFalse;\\n\\t\\t}\\n\\t\\treturn this.each( function() {\\n\\t\\t\\tjQuery.event.remove( this, types, fn, selector );\\n\\t\\t} );\\n\\t}\\n} );\\n\\n\\nvar\\n\\n\\t/* eslint-disable max-len */\\n\\n\\t// See https://github.com/eslint/eslint/issues/3229\\n\\trxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\\\\/\\\\0>\\\\x20\\\\t\\\\r\\\\n\\\\f]*)[^>]*)\\\\/>/gi,\\n\\n\\t/* eslint-enable */\\n\\n\\t// Support: IE <=10 - 11, Edge 12 - 13\\n\\t// In IE/Edge using regex groups here causes severe slowdowns.\\n\\t// See https://connect.microsoft.com/IE/feedback/details/1736512/\\n\\trnoInnerhtml = /<script|<style|<link/i,\\n\\n\\t// checked=\\\"checked\\\" or checked\\n\\trchecked = /checked\\\\s*(?:[^=]|=\\\\s*.checked.)/i,\\n\\trscriptTypeMasked = /^true\\\\/(.*)/,\\n\\trcleanScript = /^\\\\s*<!(?:\\\\[CDATA\\\\[|--)|(?:\\\\]\\\\]|--)>\\\\s*$/g;\\n\\n// Prefer a tbody over its parent table for containing new rows\\nfunction manipulationTarget( elem, content ) {\\n\\tif ( nodeName( elem, \\\"table\\\" ) &&\\n\\t\\tnodeName( content.nodeType !== 11 ? content : content.firstChild, \\\"tr\\\" ) ) {\\n\\n\\t\\treturn jQuery( \\\">tbody\\\", elem )[ 0 ] || elem;\\n\\t}\\n\\n\\treturn elem;\\n}\\n\\n// Replace/restore the type attribute of script elements for safe DOM manipulation\\nfunction disableScript( elem ) {\\n\\telem.type = ( elem.getAttribute( \\\"type\\\" ) !== null ) + \\\"/\\\" + elem.type;\\n\\treturn elem;\\n}\\nfunction restoreScript( elem ) {\\n\\tvar match = rscriptTypeMasked.exec( elem.type );\\n\\n\\tif ( match ) {\\n\\t\\telem.type = match[ 1 ];\\n\\t} else {\\n\\t\\telem.removeAttribute( \\\"type\\\" );\\n\\t}\\n\\n\\treturn elem;\\n}\\n\\nfunction cloneCopyEvent( src, dest ) {\\n\\tvar i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;\\n\\n\\tif ( dest.nodeType !== 1 ) {\\n\\t\\treturn;\\n\\t}\\n\\n\\t// 1. Copy private data: events, handlers, etc.\\n\\tif ( dataPriv.hasData( src ) ) {\\n\\t\\tpdataOld = dataPriv.access( src );\\n\\t\\tpdataCur = dataPriv.set( dest, pdataOld );\\n\\t\\tevents = pdataOld.events;\\n\\n\\t\\tif ( events ) {\\n\\t\\t\\tdelete pdataCur.handle;\\n\\t\\t\\tpdataCur.events = {};\\n\\n\\t\\t\\tfor ( type in events ) {\\n\\t\\t\\t\\tfor ( i = 0, l = events[ type ].length; i < l; i++ ) {\\n\\t\\t\\t\\t\\tjQuery.event.add( dest, type, events[ type ][ i ] );\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t// 2. Copy user data\\n\\tif ( dataUser.hasData( src ) ) {\\n\\t\\tudataOld = dataUser.access( src );\\n\\t\\tudataCur = jQuery.extend( {}, udataOld );\\n\\n\\t\\tdataUser.set( dest, udataCur );\\n\\t}\\n}\\n\\n// Fix IE bugs, see support tests\\nfunction fixInput( src, dest ) {\\n\\tvar nodeName = dest.nodeName.toLowerCase();\\n\\n\\t// Fails to persist the checked state of a cloned checkbox or radio button.\\n\\tif ( nodeName === \\\"input\\\" && rcheckableType.test( src.type ) ) {\\n\\t\\tdest.checked = src.checked;\\n\\n\\t// Fails to return the selected option to the default selected state when cloning options\\n\\t} else if ( nodeName === \\\"input\\\" || nodeName === \\\"textarea\\\" ) {\\n\\t\\tdest.defaultValue = src.defaultValue;\\n\\t}\\n}\\n\\nfunction domManip( collection, args, callback, ignored ) {\\n\\n\\t// Flatten any nested arrays\\n\\targs = concat.apply( [], args );\\n\\n\\tvar fragment, first, scripts, hasScripts, node, doc,\\n\\t\\ti = 0,\\n\\t\\tl = collection.length,\\n\\t\\tiNoClone = l - 1,\\n\\t\\tvalue = args[ 0 ],\\n\\t\\tisFunction = jQuery.isFunction( value );\\n\\n\\t// We can't cloneNode fragments that contain checked, in WebKit\\n\\tif ( isFunction ||\\n\\t\\t\\t( l > 1 && typeof value === \\\"string\\\" &&\\n\\t\\t\\t\\t!support.checkClone && rchecked.test( value ) ) ) {\\n\\t\\treturn collection.each( function( index ) {\\n\\t\\t\\tvar self = collection.eq( index );\\n\\t\\t\\tif ( isFunction ) {\\n\\t\\t\\t\\targs[ 0 ] = value.call( this, index, self.html() );\\n\\t\\t\\t}\\n\\t\\t\\tdomManip( self, args, callback, ignored );\\n\\t\\t} );\\n\\t}\\n\\n\\tif ( l ) {\\n\\t\\tfragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );\\n\\t\\tfirst = fragment.firstChild;\\n\\n\\t\\tif ( fragment.childNodes.length === 1 ) {\\n\\t\\t\\tfragment = first;\\n\\t\\t}\\n\\n\\t\\t// Require either new content or an interest in ignored elements to invoke the callback\\n\\t\\tif ( first || ignored ) {\\n\\t\\t\\tscripts = jQuery.map( getAll( fragment, \\\"script\\\" ), disableScript );\\n\\t\\t\\thasScripts = scripts.length;\\n\\n\\t\\t\\t// Use the original fragment for the last item\\n\\t\\t\\t// instead of the first because it can end up\\n\\t\\t\\t// being emptied incorrectly in certain situations (#8070).\\n\\t\\t\\tfor ( ; i < l; i++ ) {\\n\\t\\t\\t\\tnode = fragment;\\n\\n\\t\\t\\t\\tif ( i !== iNoClone ) {\\n\\t\\t\\t\\t\\tnode = jQuery.clone( node, true, true );\\n\\n\\t\\t\\t\\t\\t// Keep references to cloned scripts for later restoration\\n\\t\\t\\t\\t\\tif ( hasScripts ) {\\n\\n\\t\\t\\t\\t\\t\\t// Support: Android <=4.0 only, PhantomJS 1 only\\n\\t\\t\\t\\t\\t\\t// push.apply(_, arraylike) throws on ancient WebKit\\n\\t\\t\\t\\t\\t\\tjQuery.merge( scripts, getAll( node, \\\"script\\\" ) );\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tcallback.call( collection[ i ], node, i );\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( hasScripts ) {\\n\\t\\t\\t\\tdoc = scripts[ scripts.length - 1 ].ownerDocument;\\n\\n\\t\\t\\t\\t// Reenable scripts\\n\\t\\t\\t\\tjQuery.map( scripts, restoreScript );\\n\\n\\t\\t\\t\\t// Evaluate executable scripts on first document insertion\\n\\t\\t\\t\\tfor ( i = 0; i < hasScripts; i++ ) {\\n\\t\\t\\t\\t\\tnode = scripts[ i ];\\n\\t\\t\\t\\t\\tif ( rscriptType.test( node.type || \\\"\\\" ) &&\\n\\t\\t\\t\\t\\t\\t!dataPriv.access( node, \\\"globalEval\\\" ) &&\\n\\t\\t\\t\\t\\t\\tjQuery.contains( doc, node ) ) {\\n\\n\\t\\t\\t\\t\\t\\tif ( node.src ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t// Optional AJAX dependency, but won't run scripts if not present\\n\\t\\t\\t\\t\\t\\t\\tif ( jQuery._evalUrl ) {\\n\\t\\t\\t\\t\\t\\t\\t\\tjQuery._evalUrl( node.src );\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\tDOMEval( node.textContent.replace( rcleanScript, \\\"\\\" ), doc );\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\treturn collection;\\n}\\n\\nfunction remove( elem, selector, keepData ) {\\n\\tvar node,\\n\\t\\tnodes = selector ? jQuery.filter( selector, elem ) : elem,\\n\\t\\ti = 0;\\n\\n\\tfor ( ; ( node = nodes[ i ] ) != null; i++ ) {\\n\\t\\tif ( !keepData && node.nodeType === 1 ) {\\n\\t\\t\\tjQuery.cleanData( getAll( node ) );\\n\\t\\t}\\n\\n\\t\\tif ( node.parentNode ) {\\n\\t\\t\\tif ( keepData && jQuery.contains( node.ownerDocument, node ) ) {\\n\\t\\t\\t\\tsetGlobalEval( getAll( node, \\\"script\\\" ) );\\n\\t\\t\\t}\\n\\t\\t\\tnode.parentNode.removeChild( node );\\n\\t\\t}\\n\\t}\\n\\n\\treturn elem;\\n}\\n\\njQuery.extend( {\\n\\thtmlPrefilter: function( html ) {\\n\\t\\treturn html.replace( rxhtmlTag, \\\"<$1></$2>\\\" );\\n\\t},\\n\\n\\tclone: function( elem, dataAndEvents, deepDataAndEvents ) {\\n\\t\\tvar i, l, srcElements, destElements,\\n\\t\\t\\tclone = elem.cloneNode( true ),\\n\\t\\t\\tinPage = jQuery.contains( elem.ownerDocument, elem );\\n\\n\\t\\t// Fix IE cloning issues\\n\\t\\tif ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&\\n\\t\\t\\t\\t!jQuery.isXMLDoc( elem ) ) {\\n\\n\\t\\t\\t// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2\\n\\t\\t\\tdestElements = getAll( clone );\\n\\t\\t\\tsrcElements = getAll( elem );\\n\\n\\t\\t\\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\\n\\t\\t\\t\\tfixInput( srcElements[ i ], destElements[ i ] );\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// Copy the events from the original to the clone\\n\\t\\tif ( dataAndEvents ) {\\n\\t\\t\\tif ( deepDataAndEvents ) {\\n\\t\\t\\t\\tsrcElements = srcElements || getAll( elem );\\n\\t\\t\\t\\tdestElements = destElements || getAll( clone );\\n\\n\\t\\t\\t\\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\\n\\t\\t\\t\\t\\tcloneCopyEvent( srcElements[ i ], destElements[ i ] );\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tcloneCopyEvent( elem, clone );\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// Preserve script evaluation history\\n\\t\\tdestElements = getAll( clone, \\\"script\\\" );\\n\\t\\tif ( destElements.length > 0 ) {\\n\\t\\t\\tsetGlobalEval( destElements, !inPage && getAll( elem, \\\"script\\\" ) );\\n\\t\\t}\\n\\n\\t\\t// Return the cloned set\\n\\t\\treturn clone;\\n\\t},\\n\\n\\tcleanData: function( elems ) {\\n\\t\\tvar data, elem, type,\\n\\t\\t\\tspecial = jQuery.event.special,\\n\\t\\t\\ti = 0;\\n\\n\\t\\tfor ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {\\n\\t\\t\\tif ( acceptData( elem ) ) {\\n\\t\\t\\t\\tif ( ( data = elem[ dataPriv.expando ] ) ) {\\n\\t\\t\\t\\t\\tif ( data.events ) {\\n\\t\\t\\t\\t\\t\\tfor ( type in data.events ) {\\n\\t\\t\\t\\t\\t\\t\\tif ( special[ type ] ) {\\n\\t\\t\\t\\t\\t\\t\\t\\tjQuery.event.remove( elem, type );\\n\\n\\t\\t\\t\\t\\t\\t\\t// This is a shortcut to avoid jQuery.event.remove's overhead\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tjQuery.removeEvent( elem, type, data.handle );\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t// Support: Chrome <=35 - 45+\\n\\t\\t\\t\\t\\t// Assign undefined instead of using delete, see Data#remove\\n\\t\\t\\t\\t\\telem[ dataPriv.expando ] = undefined;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tif ( elem[ dataUser.expando ] ) {\\n\\n\\t\\t\\t\\t\\t// Support: Chrome <=35 - 45+\\n\\t\\t\\t\\t\\t// Assign undefined instead of using delete, see Data#remove\\n\\t\\t\\t\\t\\telem[ dataUser.expando ] = undefined;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n} );\\n\\njQuery.fn.extend( {\\n\\tdetach: function( selector ) {\\n\\t\\treturn remove( this, selector, true );\\n\\t},\\n\\n\\tremove: function( selector ) {\\n\\t\\treturn remove( this, selector );\\n\\t},\\n\\n\\ttext: function( value ) {\\n\\t\\treturn access( this, function( value ) {\\n\\t\\t\\treturn value === undefined ?\\n\\t\\t\\t\\tjQuery.text( this ) :\\n\\t\\t\\t\\tthis.empty().each( function() {\\n\\t\\t\\t\\t\\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\\n\\t\\t\\t\\t\\t\\tthis.textContent = value;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t} );\\n\\t\\t}, null, value, arguments.length );\\n\\t},\\n\\n\\tappend: function() {\\n\\t\\treturn domManip( this, arguments, function( elem ) {\\n\\t\\t\\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\\n\\t\\t\\t\\tvar target = manipulationTarget( this, elem );\\n\\t\\t\\t\\ttarget.appendChild( elem );\\n\\t\\t\\t}\\n\\t\\t} );\\n\\t},\\n\\n\\tprepend: function() {\\n\\t\\treturn domManip( this, arguments, function( elem ) {\\n\\t\\t\\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\\n\\t\\t\\t\\tvar target = manipulationTarget( this, elem );\\n\\t\\t\\t\\ttarget.insertBefore( elem, target.firstChild );\\n\\t\\t\\t}\\n\\t\\t} );\\n\\t},\\n\\n\\tbefore: function() {\\n\\t\\treturn domManip( this, arguments, function( elem ) {\\n\\t\\t\\tif ( this.parentNode ) {\\n\\t\\t\\t\\tthis.parentNode.insertBefore( elem, this );\\n\\t\\t\\t}\\n\\t\\t} );\\n\\t},\\n\\n\\tafter: function() {\\n\\t\\treturn domManip( this, arguments, function( elem ) {\\n\\t\\t\\tif ( this.parentNode ) {\\n\\t\\t\\t\\tthis.parentNode.insertBefore( elem, this.nextSibling );\\n\\t\\t\\t}\\n\\t\\t} );\\n\\t},\\n\\n\\tempty: function() {\\n\\t\\tvar elem,\\n\\t\\t\\ti = 0;\\n\\n\\t\\tfor ( ; ( elem = this[ i ] ) != null; i++ ) {\\n\\t\\t\\tif ( elem.nodeType === 1 ) {\\n\\n\\t\\t\\t\\t// Prevent memory leaks\\n\\t\\t\\t\\tjQuery.cleanData( getAll( elem, false ) );\\n\\n\\t\\t\\t\\t// Remove any remaining nodes\\n\\t\\t\\t\\telem.textContent = \\\"\\\";\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn this;\\n\\t},\\n\\n\\tclone: function( dataAndEvents, deepDataAndEvents ) {\\n\\t\\tdataAndEvents = dataAndEvents == null ? false : dataAndEvents;\\n\\t\\tdeepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\\n\\n\\t\\treturn this.map( function() {\\n\\t\\t\\treturn jQuery.clone( this, dataAndEvents, deepDataAndEvents );\\n\\t\\t} );\\n\\t},\\n\\n\\thtml: function( value ) {\\n\\t\\treturn access( this, function( value ) {\\n\\t\\t\\tvar elem = this[ 0 ] || {},\\n\\t\\t\\t\\ti = 0,\\n\\t\\t\\t\\tl = this.length;\\n\\n\\t\\t\\tif ( value === undefined && elem.nodeType === 1 ) {\\n\\t\\t\\t\\treturn elem.innerHTML;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// See if we can take a shortcut and just use innerHTML\\n\\t\\t\\tif ( typeof value === \\\"string\\\" && !rnoInnerhtml.test( value ) &&\\n\\t\\t\\t\\t!wrapMap[ ( rtagName.exec( value ) || [ \\\"\\\", \\\"\\\" ] )[ 1 ].toLowerCase() ] ) {\\n\\n\\t\\t\\t\\tvalue = jQuery.htmlPrefilter( value );\\n\\n\\t\\t\\t\\ttry {\\n\\t\\t\\t\\t\\tfor ( ; i < l; i++ ) {\\n\\t\\t\\t\\t\\t\\telem = this[ i ] || {};\\n\\n\\t\\t\\t\\t\\t\\t// Remove element nodes and prevent memory leaks\\n\\t\\t\\t\\t\\t\\tif ( elem.nodeType === 1 ) {\\n\\t\\t\\t\\t\\t\\t\\tjQuery.cleanData( getAll( elem, false ) );\\n\\t\\t\\t\\t\\t\\t\\telem.innerHTML = value;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\telem = 0;\\n\\n\\t\\t\\t\\t// If using innerHTML throws an exception, use the fallback method\\n\\t\\t\\t\\t} catch ( e ) {}\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( elem ) {\\n\\t\\t\\t\\tthis.empty().append( value );\\n\\t\\t\\t}\\n\\t\\t}, null, value, arguments.length );\\n\\t},\\n\\n\\treplaceWith: function() {\\n\\t\\tvar ignored = [];\\n\\n\\t\\t// Make the changes, replacing each non-ignored context element with the new content\\n\\t\\treturn domManip( this, arguments, function( elem ) {\\n\\t\\t\\tvar parent = this.parentNode;\\n\\n\\t\\t\\tif ( jQuery.inArray( this, ignored ) < 0 ) {\\n\\t\\t\\t\\tjQuery.cleanData( getAll( this ) );\\n\\t\\t\\t\\tif ( parent ) {\\n\\t\\t\\t\\t\\tparent.replaceChild( elem, this );\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t// Force callback invocation\\n\\t\\t}, ignored );\\n\\t}\\n} );\\n\\njQuery.each( {\\n\\tappendTo: \\\"append\\\",\\n\\tprependTo: \\\"prepend\\\",\\n\\tinsertBefore: \\\"before\\\",\\n\\tinsertAfter: \\\"after\\\",\\n\\treplaceAll: \\\"replaceWith\\\"\\n}, function( name, original ) {\\n\\tjQuery.fn[ name ] = function( selector ) {\\n\\t\\tvar elems,\\n\\t\\t\\tret = [],\\n\\t\\t\\tinsert = jQuery( selector ),\\n\\t\\t\\tlast = insert.length - 1,\\n\\t\\t\\ti = 0;\\n\\n\\t\\tfor ( ; i <= last; i++ ) {\\n\\t\\t\\telems = i === last ? this : this.clone( true );\\n\\t\\t\\tjQuery( insert[ i ] )[ original ]( elems );\\n\\n\\t\\t\\t// Support: Android <=4.0 only, PhantomJS 1 only\\n\\t\\t\\t// .get() because push.apply(_, arraylike) throws on ancient WebKit\\n\\t\\t\\tpush.apply( ret, elems.get() );\\n\\t\\t}\\n\\n\\t\\treturn this.pushStack( ret );\\n\\t};\\n} );\\nvar rmargin = ( /^margin/ );\\n\\nvar rnumnonpx = new RegExp( \\\"^(\\\" + pnum + \\\")(?!px)[a-z%]+$\\\", \\\"i\\\" );\\n\\nvar getStyles = function( elem ) {\\n\\n\\t\\t// Support: IE <=11 only, Firefox <=30 (#15098, #14150)\\n\\t\\t// IE throws on elements created in popups\\n\\t\\t// FF meanwhile throws on frame elements through \\\"defaultView.getComputedStyle\\\"\\n\\t\\tvar view = elem.ownerDocument.defaultView;\\n\\n\\t\\tif ( !view || !view.opener ) {\\n\\t\\t\\tview = window;\\n\\t\\t}\\n\\n\\t\\treturn view.getComputedStyle( elem );\\n\\t};\\n\\n\\n\\n( function() {\\n\\n\\t// Executing both pixelPosition & boxSizingReliable tests require only one layout\\n\\t// so they're executed at the same time to save the second computation.\\n\\tfunction computeStyleTests() {\\n\\n\\t\\t// This is a singleton, we need to execute it only once\\n\\t\\tif ( !div ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tdiv.style.cssText =\\n\\t\\t\\t\\\"box-sizing:border-box;\\\" +\\n\\t\\t\\t\\\"position:relative;display:block;\\\" +\\n\\t\\t\\t\\\"margin:auto;border:1px;padding:1px;\\\" +\\n\\t\\t\\t\\\"top:1%;width:50%\\\";\\n\\t\\tdiv.innerHTML = \\\"\\\";\\n\\t\\tdocumentElement.appendChild( container );\\n\\n\\t\\tvar divStyle = window.getComputedStyle( div );\\n\\t\\tpixelPositionVal = divStyle.top !== \\\"1%\\\";\\n\\n\\t\\t// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44\\n\\t\\treliableMarginLeftVal = divStyle.marginLeft === \\\"2px\\\";\\n\\t\\tboxSizingReliableVal = divStyle.width === \\\"4px\\\";\\n\\n\\t\\t// Support: Android 4.0 - 4.3 only\\n\\t\\t// Some styles come back with percentage values, even though they shouldn't\\n\\t\\tdiv.style.marginRight = \\\"50%\\\";\\n\\t\\tpixelMarginRightVal = divStyle.marginRight === \\\"4px\\\";\\n\\n\\t\\tdocumentElement.removeChild( container );\\n\\n\\t\\t// Nullify the div so it wouldn't be stored in the memory and\\n\\t\\t// it will also be a sign that checks already performed\\n\\t\\tdiv = null;\\n\\t}\\n\\n\\tvar pixelPositionVal, boxSizingReliableVal, pixelMarginRightVal, reliableMarginLeftVal,\\n\\t\\tcontainer = document.createElement( \\\"div\\\" ),\\n\\t\\tdiv = document.createElement( \\\"div\\\" );\\n\\n\\t// Finish early in limited (non-browser) environments\\n\\tif ( !div.style ) {\\n\\t\\treturn;\\n\\t}\\n\\n\\t// Support: IE <=9 - 11 only\\n\\t// Style of cloned element affects source element cloned (#8908)\\n\\tdiv.style.backgroundClip = \\\"content-box\\\";\\n\\tdiv.cloneNode( true ).style.backgroundClip = \\\"\\\";\\n\\tsupport.clearCloneStyle = div.style.backgroundClip === \\\"content-box\\\";\\n\\n\\tcontainer.style.cssText = \\\"border:0;width:8px;height:0;top:0;left:-9999px;\\\" +\\n\\t\\t\\\"padding:0;margin-top:1px;position:absolute\\\";\\n\\tcontainer.appendChild( div );\\n\\n\\tjQuery.extend( support, {\\n\\t\\tpixelPosition: function() {\\n\\t\\t\\tcomputeStyleTests();\\n\\t\\t\\treturn pixelPositionVal;\\n\\t\\t},\\n\\t\\tboxSizingReliable: function() {\\n\\t\\t\\tcomputeStyleTests();\\n\\t\\t\\treturn boxSizingReliableVal;\\n\\t\\t},\\n\\t\\tpixelMarginRight: function() {\\n\\t\\t\\tcomputeStyleTests();\\n\\t\\t\\treturn pixelMarginRightVal;\\n\\t\\t},\\n\\t\\treliableMarginLeft: function() {\\n\\t\\t\\tcomputeStyleTests();\\n\\t\\t\\treturn reliableMarginLeftVal;\\n\\t\\t}\\n\\t} );\\n} )();\\n\\n\\nfunction curCSS( elem, name, computed ) {\\n\\tvar width, minWidth, maxWidth, ret,\\n\\n\\t\\t// Support: Firefox 51+\\n\\t\\t// Retrieving style before computed somehow\\n\\t\\t// fixes an issue with getting wrong values\\n\\t\\t// on detached elements\\n\\t\\tstyle = elem.style;\\n\\n\\tcomputed = computed || getStyles( elem );\\n\\n\\t// getPropertyValue is needed for:\\n\\t//   .css('filter') (IE 9 only, #12537)\\n\\t//   .css('--customProperty) (#3144)\\n\\tif ( computed ) {\\n\\t\\tret = computed.getPropertyValue( name ) || computed[ name ];\\n\\n\\t\\tif ( ret === \\\"\\\" && !jQuery.contains( elem.ownerDocument, elem ) ) {\\n\\t\\t\\tret = jQuery.style( elem, name );\\n\\t\\t}\\n\\n\\t\\t// A tribute to the \\\"awesome hack by Dean Edwards\\\"\\n\\t\\t// Android Browser returns percentage for some values,\\n\\t\\t// but width seems to be reliably pixels.\\n\\t\\t// This is against the CSSOM draft spec:\\n\\t\\t// https://drafts.csswg.org/cssom/#resolved-values\\n\\t\\tif ( !support.pixelMarginRight() && rnumnonpx.test( ret ) && rmargin.test( name ) ) {\\n\\n\\t\\t\\t// Remember the original values\\n\\t\\t\\twidth = style.width;\\n\\t\\t\\tminWidth = style.minWidth;\\n\\t\\t\\tmaxWidth = style.maxWidth;\\n\\n\\t\\t\\t// Put in the new values to get a computed value out\\n\\t\\t\\tstyle.minWidth = style.maxWidth = style.width = ret;\\n\\t\\t\\tret = computed.width;\\n\\n\\t\\t\\t// Revert the changed values\\n\\t\\t\\tstyle.width = width;\\n\\t\\t\\tstyle.minWidth = minWidth;\\n\\t\\t\\tstyle.maxWidth = maxWidth;\\n\\t\\t}\\n\\t}\\n\\n\\treturn ret !== undefined ?\\n\\n\\t\\t// Support: IE <=9 - 11 only\\n\\t\\t// IE returns zIndex value as an integer.\\n\\t\\tret + \\\"\\\" :\\n\\t\\tret;\\n}\\n\\n\\nfunction addGetHookIf( conditionFn, hookFn ) {\\n\\n\\t// Define the hook, we'll check on the first run if it's really needed.\\n\\treturn {\\n\\t\\tget: function() {\\n\\t\\t\\tif ( conditionFn() ) {\\n\\n\\t\\t\\t\\t// Hook not needed (or it's not possible to use it due\\n\\t\\t\\t\\t// to missing dependency), remove it.\\n\\t\\t\\t\\tdelete this.get;\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Hook needed; redefine it so that the support test is not executed again.\\n\\t\\t\\treturn ( this.get = hookFn ).apply( this, arguments );\\n\\t\\t}\\n\\t};\\n}\\n\\n\\nvar\\n\\n\\t// Swappable if display is none or starts with table\\n\\t// except \\\"table\\\", \\\"table-cell\\\", or \\\"table-caption\\\"\\n\\t// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\\n\\trdisplayswap = /^(none|table(?!-c[ea]).+)/,\\n\\trcustomProp = /^--/,\\n\\tcssShow = { position: \\\"absolute\\\", visibility: \\\"hidden\\\", display: \\\"block\\\" },\\n\\tcssNormalTransform = {\\n\\t\\tletterSpacing: \\\"0\\\",\\n\\t\\tfontWeight: \\\"400\\\"\\n\\t},\\n\\n\\tcssPrefixes = [ \\\"Webkit\\\", \\\"Moz\\\", \\\"ms\\\" ],\\n\\temptyStyle = document.createElement( \\\"div\\\" ).style;\\n\\n// Return a css property mapped to a potentially vendor prefixed property\\nfunction vendorPropName( name ) {\\n\\n\\t// Shortcut for names that are not vendor prefixed\\n\\tif ( name in emptyStyle ) {\\n\\t\\treturn name;\\n\\t}\\n\\n\\t// Check for vendor prefixed names\\n\\tvar capName = name[ 0 ].toUpperCase() + name.slice( 1 ),\\n\\t\\ti = cssPrefixes.length;\\n\\n\\twhile ( i-- ) {\\n\\t\\tname = cssPrefixes[ i ] + capName;\\n\\t\\tif ( name in emptyStyle ) {\\n\\t\\t\\treturn name;\\n\\t\\t}\\n\\t}\\n}\\n\\n// Return a property mapped along what jQuery.cssProps suggests or to\\n// a vendor prefixed property.\\nfunction finalPropName( name ) {\\n\\tvar ret = jQuery.cssProps[ name ];\\n\\tif ( !ret ) {\\n\\t\\tret = jQuery.cssProps[ name ] = vendorPropName( name ) || name;\\n\\t}\\n\\treturn ret;\\n}\\n\\nfunction setPositiveNumber( elem, value, subtract ) {\\n\\n\\t// Any relative (+/-) values have already been\\n\\t// normalized at this point\\n\\tvar matches = rcssNum.exec( value );\\n\\treturn matches ?\\n\\n\\t\\t// Guard against undefined \\\"subtract\\\", e.g., when used as in cssHooks\\n\\t\\tMath.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || \\\"px\\\" ) :\\n\\t\\tvalue;\\n}\\n\\nfunction augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {\\n\\tvar i,\\n\\t\\tval = 0;\\n\\n\\t// If we already have the right measurement, avoid augmentation\\n\\tif ( extra === ( isBorderBox ? \\\"border\\\" : \\\"content\\\" ) ) {\\n\\t\\ti = 4;\\n\\n\\t// Otherwise initialize for horizontal or vertical properties\\n\\t} else {\\n\\t\\ti = name === \\\"width\\\" ? 1 : 0;\\n\\t}\\n\\n\\tfor ( ; i < 4; i += 2 ) {\\n\\n\\t\\t// Both box models exclude margin, so add it if we want it\\n\\t\\tif ( extra === \\\"margin\\\" ) {\\n\\t\\t\\tval += jQuery.css( elem, extra + cssExpand[ i ], true, styles );\\n\\t\\t}\\n\\n\\t\\tif ( isBorderBox ) {\\n\\n\\t\\t\\t// border-box includes padding, so remove it if we want content\\n\\t\\t\\tif ( extra === \\\"content\\\" ) {\\n\\t\\t\\t\\tval -= jQuery.css( elem, \\\"padding\\\" + cssExpand[ i ], true, styles );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// At this point, extra isn't border nor margin, so remove border\\n\\t\\t\\tif ( extra !== \\\"margin\\\" ) {\\n\\t\\t\\t\\tval -= jQuery.css( elem, \\\"border\\\" + cssExpand[ i ] + \\\"Width\\\", true, styles );\\n\\t\\t\\t}\\n\\t\\t} else {\\n\\n\\t\\t\\t// At this point, extra isn't content, so add padding\\n\\t\\t\\tval += jQuery.css( elem, \\\"padding\\\" + cssExpand[ i ], true, styles );\\n\\n\\t\\t\\t// At this point, extra isn't content nor padding, so add border\\n\\t\\t\\tif ( extra !== \\\"padding\\\" ) {\\n\\t\\t\\t\\tval += jQuery.css( elem, \\\"border\\\" + cssExpand[ i ] + \\\"Width\\\", true, styles );\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\treturn val;\\n}\\n\\nfunction getWidthOrHeight( elem, name, extra ) {\\n\\n\\t// Start with computed style\\n\\tvar valueIsBorderBox,\\n\\t\\tstyles = getStyles( elem ),\\n\\t\\tval = curCSS( elem, name, styles ),\\n\\t\\tisBorderBox = jQuery.css( elem, \\\"boxSizing\\\", false, styles ) === \\\"border-box\\\";\\n\\n\\t// Computed unit is not pixels. Stop here and return.\\n\\tif ( rnumnonpx.test( val ) ) {\\n\\t\\treturn val;\\n\\t}\\n\\n\\t// Check for style in case a browser which returns unreliable values\\n\\t// for getComputedStyle silently falls back to the reliable elem.style\\n\\tvalueIsBorderBox = isBorderBox &&\\n\\t\\t( support.boxSizingReliable() || val === elem.style[ name ] );\\n\\n\\t// Fall back to offsetWidth/Height when value is \\\"auto\\\"\\n\\t// This happens for inline elements with no explicit setting (gh-3571)\\n\\tif ( val === \\\"auto\\\" ) {\\n\\t\\tval = elem[ \\\"offset\\\" + name[ 0 ].toUpperCase() + name.slice( 1 ) ];\\n\\t}\\n\\n\\t// Normalize \\\"\\\", auto, and prepare for extra\\n\\tval = parseFloat( val ) || 0;\\n\\n\\t// Use the active box-sizing model to add/subtract irrelevant styles\\n\\treturn ( val +\\n\\t\\taugmentWidthOrHeight(\\n\\t\\t\\telem,\\n\\t\\t\\tname,\\n\\t\\t\\textra || ( isBorderBox ? \\\"border\\\" : \\\"content\\\" ),\\n\\t\\t\\tvalueIsBorderBox,\\n\\t\\t\\tstyles\\n\\t\\t)\\n\\t) + \\\"px\\\";\\n}\\n\\njQuery.extend( {\\n\\n\\t// Add in style property hooks for overriding the default\\n\\t// behavior of getting and setting a style property\\n\\tcssHooks: {\\n\\t\\topacity: {\\n\\t\\t\\tget: function( elem, computed ) {\\n\\t\\t\\t\\tif ( computed ) {\\n\\n\\t\\t\\t\\t\\t// We should always get a number back from opacity\\n\\t\\t\\t\\t\\tvar ret = curCSS( elem, \\\"opacity\\\" );\\n\\t\\t\\t\\t\\treturn ret === \\\"\\\" ? \\\"1\\\" : ret;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\t// Don't automatically add \\\"px\\\" to these possibly-unitless properties\\n\\tcssNumber: {\\n\\t\\t\\\"animationIterationCount\\\": true,\\n\\t\\t\\\"columnCount\\\": true,\\n\\t\\t\\\"fillOpacity\\\": true,\\n\\t\\t\\\"flexGrow\\\": true,\\n\\t\\t\\\"flexShrink\\\": true,\\n\\t\\t\\\"fontWeight\\\": true,\\n\\t\\t\\\"lineHeight\\\": true,\\n\\t\\t\\\"opacity\\\": true,\\n\\t\\t\\\"order\\\": true,\\n\\t\\t\\\"orphans\\\": true,\\n\\t\\t\\\"widows\\\": true,\\n\\t\\t\\\"zIndex\\\": true,\\n\\t\\t\\\"zoom\\\": true\\n\\t},\\n\\n\\t// Add in properties whose names you wish to fix before\\n\\t// setting or getting the value\\n\\tcssProps: {\\n\\t\\t\\\"float\\\": \\\"cssFloat\\\"\\n\\t},\\n\\n\\t// Get and set the style property on a DOM Node\\n\\tstyle: function( elem, name, value, extra ) {\\n\\n\\t\\t// Don't set styles on text and comment nodes\\n\\t\\tif ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\t// Make sure that we're working with the right name\\n\\t\\tvar ret, type, hooks,\\n\\t\\t\\torigName = jQuery.camelCase( name ),\\n\\t\\t\\tisCustomProp = rcustomProp.test( name ),\\n\\t\\t\\tstyle = elem.style;\\n\\n\\t\\t// Make sure that we're working with the right name. We don't\\n\\t\\t// want to query the value if it is a CSS custom property\\n\\t\\t// since they are user-defined.\\n\\t\\tif ( !isCustomProp ) {\\n\\t\\t\\tname = finalPropName( origName );\\n\\t\\t}\\n\\n\\t\\t// Gets hook for the prefixed version, then unprefixed version\\n\\t\\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\\n\\n\\t\\t// Check if we're setting a value\\n\\t\\tif ( value !== undefined ) {\\n\\t\\t\\ttype = typeof value;\\n\\n\\t\\t\\t// Convert \\\"+=\\\" or \\\"-=\\\" to relative numbers (#7345)\\n\\t\\t\\tif ( type === \\\"string\\\" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {\\n\\t\\t\\t\\tvalue = adjustCSS( elem, name, ret );\\n\\n\\t\\t\\t\\t// Fixes bug #9237\\n\\t\\t\\t\\ttype = \\\"number\\\";\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Make sure that null and NaN values aren't set (#7116)\\n\\t\\t\\tif ( value == null || value !== value ) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// If a number was passed in, add the unit (except for certain CSS properties)\\n\\t\\t\\tif ( type === \\\"number\\\" ) {\\n\\t\\t\\t\\tvalue += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? \\\"\\\" : \\\"px\\\" );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// background-* props affect original clone's values\\n\\t\\t\\tif ( !support.clearCloneStyle && value === \\\"\\\" && name.indexOf( \\\"background\\\" ) === 0 ) {\\n\\t\\t\\t\\tstyle[ name ] = \\\"inherit\\\";\\n\\t\\t\\t}\\n\\n\\t\\t\\t// If a hook was provided, use that value, otherwise just set the specified value\\n\\t\\t\\tif ( !hooks || !( \\\"set\\\" in hooks ) ||\\n\\t\\t\\t\\t( value = hooks.set( elem, value, extra ) ) !== undefined ) {\\n\\n\\t\\t\\t\\tif ( isCustomProp ) {\\n\\t\\t\\t\\t\\tstyle.setProperty( name, value );\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tstyle[ name ] = value;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t} else {\\n\\n\\t\\t\\t// If a hook was provided get the non-computed value from there\\n\\t\\t\\tif ( hooks && \\\"get\\\" in hooks &&\\n\\t\\t\\t\\t( ret = hooks.get( elem, false, extra ) ) !== undefined ) {\\n\\n\\t\\t\\t\\treturn ret;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Otherwise just get the value from the style object\\n\\t\\t\\treturn style[ name ];\\n\\t\\t}\\n\\t},\\n\\n\\tcss: function( elem, name, extra, styles ) {\\n\\t\\tvar val, num, hooks,\\n\\t\\t\\torigName = jQuery.camelCase( name ),\\n\\t\\t\\tisCustomProp = rcustomProp.test( name );\\n\\n\\t\\t// Make sure that we're working with the right name. We don't\\n\\t\\t// want to modify the value if it is a CSS custom property\\n\\t\\t// since they are user-defined.\\n\\t\\tif ( !isCustomProp ) {\\n\\t\\t\\tname = finalPropName( origName );\\n\\t\\t}\\n\\n\\t\\t// Try prefixed name followed by the unprefixed name\\n\\t\\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\\n\\n\\t\\t// If a hook was provided get the computed value from there\\n\\t\\tif ( hooks && \\\"get\\\" in hooks ) {\\n\\t\\t\\tval = hooks.get( elem, true, extra );\\n\\t\\t}\\n\\n\\t\\t// Otherwise, if a way to get the computed value exists, use that\\n\\t\\tif ( val === undefined ) {\\n\\t\\t\\tval = curCSS( elem, name, styles );\\n\\t\\t}\\n\\n\\t\\t// Convert \\\"normal\\\" to computed value\\n\\t\\tif ( val === \\\"normal\\\" && name in cssNormalTransform ) {\\n\\t\\t\\tval = cssNormalTransform[ name ];\\n\\t\\t}\\n\\n\\t\\t// Make numeric if forced or a qualifier was provided and val looks numeric\\n\\t\\tif ( extra === \\\"\\\" || extra ) {\\n\\t\\t\\tnum = parseFloat( val );\\n\\t\\t\\treturn extra === true || isFinite( num ) ? num || 0 : val;\\n\\t\\t}\\n\\n\\t\\treturn val;\\n\\t}\\n} );\\n\\njQuery.each( [ \\\"height\\\", \\\"width\\\" ], function( i, name ) {\\n\\tjQuery.cssHooks[ name ] = {\\n\\t\\tget: function( elem, computed, extra ) {\\n\\t\\t\\tif ( computed ) {\\n\\n\\t\\t\\t\\t// Certain elements can have dimension info if we invisibly show them\\n\\t\\t\\t\\t// but it must have a current display style that would benefit\\n\\t\\t\\t\\treturn rdisplayswap.test( jQuery.css( elem, \\\"display\\\" ) ) &&\\n\\n\\t\\t\\t\\t\\t// Support: Safari 8+\\n\\t\\t\\t\\t\\t// Table columns in Safari have non-zero offsetWidth & zero\\n\\t\\t\\t\\t\\t// getBoundingClientRect().width unless display is changed.\\n\\t\\t\\t\\t\\t// Support: IE <=11 only\\n\\t\\t\\t\\t\\t// Running getBoundingClientRect on a disconnected node\\n\\t\\t\\t\\t\\t// in IE throws an error.\\n\\t\\t\\t\\t\\t( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?\\n\\t\\t\\t\\t\\t\\tswap( elem, cssShow, function() {\\n\\t\\t\\t\\t\\t\\t\\treturn getWidthOrHeight( elem, name, extra );\\n\\t\\t\\t\\t\\t\\t} ) :\\n\\t\\t\\t\\t\\t\\tgetWidthOrHeight( elem, name, extra );\\n\\t\\t\\t}\\n\\t\\t},\\n\\n\\t\\tset: function( elem, value, extra ) {\\n\\t\\t\\tvar matches,\\n\\t\\t\\t\\tstyles = extra && getStyles( elem ),\\n\\t\\t\\t\\tsubtract = extra && augmentWidthOrHeight(\\n\\t\\t\\t\\t\\telem,\\n\\t\\t\\t\\t\\tname,\\n\\t\\t\\t\\t\\textra,\\n\\t\\t\\t\\t\\tjQuery.css( elem, \\\"boxSizing\\\", false, styles ) === \\\"border-box\\\",\\n\\t\\t\\t\\t\\tstyles\\n\\t\\t\\t\\t);\\n\\n\\t\\t\\t// Convert to pixels if value adjustment is needed\\n\\t\\t\\tif ( subtract && ( matches = rcssNum.exec( value ) ) &&\\n\\t\\t\\t\\t( matches[ 3 ] || \\\"px\\\" ) !== \\\"px\\\" ) {\\n\\n\\t\\t\\t\\telem.style[ name ] = value;\\n\\t\\t\\t\\tvalue = jQuery.css( elem, name );\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn setPositiveNumber( elem, value, subtract );\\n\\t\\t}\\n\\t};\\n} );\\n\\njQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,\\n\\tfunction( elem, computed ) {\\n\\t\\tif ( computed ) {\\n\\t\\t\\treturn ( parseFloat( curCSS( elem, \\\"marginLeft\\\" ) ) ||\\n\\t\\t\\t\\telem.getBoundingClientRect().left -\\n\\t\\t\\t\\t\\tswap( elem, { marginLeft: 0 }, function() {\\n\\t\\t\\t\\t\\t\\treturn elem.getBoundingClientRect().left;\\n\\t\\t\\t\\t\\t} )\\n\\t\\t\\t\\t) + \\\"px\\\";\\n\\t\\t}\\n\\t}\\n);\\n\\n// These hooks are used by animate to expand properties\\njQuery.each( {\\n\\tmargin: \\\"\\\",\\n\\tpadding: \\\"\\\",\\n\\tborder: \\\"Width\\\"\\n}, function( prefix, suffix ) {\\n\\tjQuery.cssHooks[ prefix + suffix ] = {\\n\\t\\texpand: function( value ) {\\n\\t\\t\\tvar i = 0,\\n\\t\\t\\t\\texpanded = {},\\n\\n\\t\\t\\t\\t// Assumes a single number if not a string\\n\\t\\t\\t\\tparts = typeof value === \\\"string\\\" ? value.split( \\\" \\\" ) : [ value ];\\n\\n\\t\\t\\tfor ( ; i < 4; i++ ) {\\n\\t\\t\\t\\texpanded[ prefix + cssExpand[ i ] + suffix ] =\\n\\t\\t\\t\\t\\tparts[ i ] || parts[ i - 2 ] || parts[ 0 ];\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn expanded;\\n\\t\\t}\\n\\t};\\n\\n\\tif ( !rmargin.test( prefix ) ) {\\n\\t\\tjQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;\\n\\t}\\n} );\\n\\njQuery.fn.extend( {\\n\\tcss: function( name, value ) {\\n\\t\\treturn access( this, function( elem, name, value ) {\\n\\t\\t\\tvar styles, len,\\n\\t\\t\\t\\tmap = {},\\n\\t\\t\\t\\ti = 0;\\n\\n\\t\\t\\tif ( Array.isArray( name ) ) {\\n\\t\\t\\t\\tstyles = getStyles( elem );\\n\\t\\t\\t\\tlen = name.length;\\n\\n\\t\\t\\t\\tfor ( ; i < len; i++ ) {\\n\\t\\t\\t\\t\\tmap[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn map;\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn value !== undefined ?\\n\\t\\t\\t\\tjQuery.style( elem, name, value ) :\\n\\t\\t\\t\\tjQuery.css( elem, name );\\n\\t\\t}, name, value, arguments.length > 1 );\\n\\t}\\n} );\\n\\n\\nfunction Tween( elem, options, prop, end, easing ) {\\n\\treturn new Tween.prototype.init( elem, options, prop, end, easing );\\n}\\njQuery.Tween = Tween;\\n\\nTween.prototype = {\\n\\tconstructor: Tween,\\n\\tinit: function( elem, options, prop, end, easing, unit ) {\\n\\t\\tthis.elem = elem;\\n\\t\\tthis.prop = prop;\\n\\t\\tthis.easing = easing || jQuery.easing._default;\\n\\t\\tthis.options = options;\\n\\t\\tthis.start = this.now = this.cur();\\n\\t\\tthis.end = end;\\n\\t\\tthis.unit = unit || ( jQuery.cssNumber[ prop ] ? \\\"\\\" : \\\"px\\\" );\\n\\t},\\n\\tcur: function() {\\n\\t\\tvar hooks = Tween.propHooks[ this.prop ];\\n\\n\\t\\treturn hooks && hooks.get ?\\n\\t\\t\\thooks.get( this ) :\\n\\t\\t\\tTween.propHooks._default.get( this );\\n\\t},\\n\\trun: function( percent ) {\\n\\t\\tvar eased,\\n\\t\\t\\thooks = Tween.propHooks[ this.prop ];\\n\\n\\t\\tif ( this.options.duration ) {\\n\\t\\t\\tthis.pos = eased = jQuery.easing[ this.easing ](\\n\\t\\t\\t\\tpercent, this.options.duration * percent, 0, 1, this.options.duration\\n\\t\\t\\t);\\n\\t\\t} else {\\n\\t\\t\\tthis.pos = eased = percent;\\n\\t\\t}\\n\\t\\tthis.now = ( this.end - this.start ) * eased + this.start;\\n\\n\\t\\tif ( this.options.step ) {\\n\\t\\t\\tthis.options.step.call( this.elem, this.now, this );\\n\\t\\t}\\n\\n\\t\\tif ( hooks && hooks.set ) {\\n\\t\\t\\thooks.set( this );\\n\\t\\t} else {\\n\\t\\t\\tTween.propHooks._default.set( this );\\n\\t\\t}\\n\\t\\treturn this;\\n\\t}\\n};\\n\\nTween.prototype.init.prototype = Tween.prototype;\\n\\nTween.propHooks = {\\n\\t_default: {\\n\\t\\tget: function( tween ) {\\n\\t\\t\\tvar result;\\n\\n\\t\\t\\t// Use a property on the element directly when it is not a DOM element,\\n\\t\\t\\t// or when there is no matching style property that exists.\\n\\t\\t\\tif ( tween.elem.nodeType !== 1 ||\\n\\t\\t\\t\\ttween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {\\n\\t\\t\\t\\treturn tween.elem[ tween.prop ];\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Passing an empty string as a 3rd parameter to .css will automatically\\n\\t\\t\\t// attempt a parseFloat and fallback to a string if the parse fails.\\n\\t\\t\\t// Simple values such as \\\"10px\\\" are parsed to Float;\\n\\t\\t\\t// complex values such as \\\"rotate(1rad)\\\" are returned as-is.\\n\\t\\t\\tresult = jQuery.css( tween.elem, tween.prop, \\\"\\\" );\\n\\n\\t\\t\\t// Empty strings, null, undefined and \\\"auto\\\" are converted to 0.\\n\\t\\t\\treturn !result || result === \\\"auto\\\" ? 0 : result;\\n\\t\\t},\\n\\t\\tset: function( tween ) {\\n\\n\\t\\t\\t// Use step hook for back compat.\\n\\t\\t\\t// Use cssHook if its there.\\n\\t\\t\\t// Use .style if available and use plain properties where available.\\n\\t\\t\\tif ( jQuery.fx.step[ tween.prop ] ) {\\n\\t\\t\\t\\tjQuery.fx.step[ tween.prop ]( tween );\\n\\t\\t\\t} else if ( tween.elem.nodeType === 1 &&\\n\\t\\t\\t\\t( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null ||\\n\\t\\t\\t\\t\\tjQuery.cssHooks[ tween.prop ] ) ) {\\n\\t\\t\\t\\tjQuery.style( tween.elem, tween.prop, tween.now + tween.unit );\\n\\t\\t\\t} else {\\n\\t\\t\\t\\ttween.elem[ tween.prop ] = tween.now;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n};\\n\\n// Support: IE <=9 only\\n// Panic based approach to setting things on disconnected nodes\\nTween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\\n\\tset: function( tween ) {\\n\\t\\tif ( tween.elem.nodeType && tween.elem.parentNode ) {\\n\\t\\t\\ttween.elem[ tween.prop ] = tween.now;\\n\\t\\t}\\n\\t}\\n};\\n\\njQuery.easing = {\\n\\tlinear: function( p ) {\\n\\t\\treturn p;\\n\\t},\\n\\tswing: function( p ) {\\n\\t\\treturn 0.5 - Math.cos( p * Math.PI ) / 2;\\n\\t},\\n\\t_default: \\\"swing\\\"\\n};\\n\\njQuery.fx = Tween.prototype.init;\\n\\n// Back compat <1.8 extension point\\njQuery.fx.step = {};\\n\\n\\n\\n\\nvar\\n\\tfxNow, inProgress,\\n\\trfxtypes = /^(?:toggle|show|hide)$/,\\n\\trrun = /queueHooks$/;\\n\\nfunction schedule() {\\n\\tif ( inProgress ) {\\n\\t\\tif ( document.hidden === false && window.requestAnimationFrame ) {\\n\\t\\t\\twindow.requestAnimationFrame( schedule );\\n\\t\\t} else {\\n\\t\\t\\twindow.setTimeout( schedule, jQuery.fx.interval );\\n\\t\\t}\\n\\n\\t\\tjQuery.fx.tick();\\n\\t}\\n}\\n\\n// Animations created synchronously will run synchronously\\nfunction createFxNow() {\\n\\twindow.setTimeout( function() {\\n\\t\\tfxNow = undefined;\\n\\t} );\\n\\treturn ( fxNow = jQuery.now() );\\n}\\n\\n// Generate parameters to create a standard animation\\nfunction genFx( type, includeWidth ) {\\n\\tvar which,\\n\\t\\ti = 0,\\n\\t\\tattrs = { height: type };\\n\\n\\t// If we include width, step value is 1 to do all cssExpand values,\\n\\t// otherwise step value is 2 to skip over Left and Right\\n\\tincludeWidth = includeWidth ? 1 : 0;\\n\\tfor ( ; i < 4; i += 2 - includeWidth ) {\\n\\t\\twhich = cssExpand[ i ];\\n\\t\\tattrs[ \\\"margin\\\" + which ] = attrs[ \\\"padding\\\" + which ] = type;\\n\\t}\\n\\n\\tif ( includeWidth ) {\\n\\t\\tattrs.opacity = attrs.width = type;\\n\\t}\\n\\n\\treturn attrs;\\n}\\n\\nfunction createTween( value, prop, animation ) {\\n\\tvar tween,\\n\\t\\tcollection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ \\\"*\\\" ] ),\\n\\t\\tindex = 0,\\n\\t\\tlength = collection.length;\\n\\tfor ( ; index < length; index++ ) {\\n\\t\\tif ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {\\n\\n\\t\\t\\t// We're done with this property\\n\\t\\t\\treturn tween;\\n\\t\\t}\\n\\t}\\n}\\n\\nfunction defaultPrefilter( elem, props, opts ) {\\n\\tvar prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,\\n\\t\\tisBox = \\\"width\\\" in props || \\\"height\\\" in props,\\n\\t\\tanim = this,\\n\\t\\torig = {},\\n\\t\\tstyle = elem.style,\\n\\t\\thidden = elem.nodeType && isHiddenWithinTree( elem ),\\n\\t\\tdataShow = dataPriv.get( elem, \\\"fxshow\\\" );\\n\\n\\t// Queue-skipping animations hijack the fx hooks\\n\\tif ( !opts.queue ) {\\n\\t\\thooks = jQuery._queueHooks( elem, \\\"fx\\\" );\\n\\t\\tif ( hooks.unqueued == null ) {\\n\\t\\t\\thooks.unqueued = 0;\\n\\t\\t\\toldfire = hooks.empty.fire;\\n\\t\\t\\thooks.empty.fire = function() {\\n\\t\\t\\t\\tif ( !hooks.unqueued ) {\\n\\t\\t\\t\\t\\toldfire();\\n\\t\\t\\t\\t}\\n\\t\\t\\t};\\n\\t\\t}\\n\\t\\thooks.unqueued++;\\n\\n\\t\\tanim.always( function() {\\n\\n\\t\\t\\t// Ensure the complete handler is called before this completes\\n\\t\\t\\tanim.always( function() {\\n\\t\\t\\t\\thooks.unqueued--;\\n\\t\\t\\t\\tif ( !jQuery.queue( elem, \\\"fx\\\" ).length ) {\\n\\t\\t\\t\\t\\thooks.empty.fire();\\n\\t\\t\\t\\t}\\n\\t\\t\\t} );\\n\\t\\t} );\\n\\t}\\n\\n\\t// Detect show/hide animations\\n\\tfor ( prop in props ) {\\n\\t\\tvalue = props[ prop ];\\n\\t\\tif ( rfxtypes.test( value ) ) {\\n\\t\\t\\tdelete props[ prop ];\\n\\t\\t\\ttoggle = toggle || value === \\\"toggle\\\";\\n\\t\\t\\tif ( value === ( hidden ? \\\"hide\\\" : \\\"show\\\" ) ) {\\n\\n\\t\\t\\t\\t// Pretend to be hidden if this is a \\\"show\\\" and\\n\\t\\t\\t\\t// there is still data from a stopped show/hide\\n\\t\\t\\t\\tif ( value === \\\"show\\\" && dataShow && dataShow[ prop ] !== undefined ) {\\n\\t\\t\\t\\t\\thidden = true;\\n\\n\\t\\t\\t\\t// Ignore all other no-op show/hide data\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\torig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );\\n\\t\\t}\\n\\t}\\n\\n\\t// Bail out if this is a no-op like .hide().hide()\\n\\tpropTween = !jQuery.isEmptyObject( props );\\n\\tif ( !propTween && jQuery.isEmptyObject( orig ) ) {\\n\\t\\treturn;\\n\\t}\\n\\n\\t// Restrict \\\"overflow\\\" and \\\"display\\\" styles during box animations\\n\\tif ( isBox && elem.nodeType === 1 ) {\\n\\n\\t\\t// Support: IE <=9 - 11, Edge 12 - 13\\n\\t\\t// Record all 3 overflow attributes because IE does not infer the shorthand\\n\\t\\t// from identically-valued overflowX and overflowY\\n\\t\\topts.overflow = [ style.overflow, style.overflowX, style.overflowY ];\\n\\n\\t\\t// Identify a display type, preferring old show/hide data over the CSS cascade\\n\\t\\trestoreDisplay = dataShow && dataShow.display;\\n\\t\\tif ( restoreDisplay == null ) {\\n\\t\\t\\trestoreDisplay = dataPriv.get( elem, \\\"display\\\" );\\n\\t\\t}\\n\\t\\tdisplay = jQuery.css( elem, \\\"display\\\" );\\n\\t\\tif ( display === \\\"none\\\" ) {\\n\\t\\t\\tif ( restoreDisplay ) {\\n\\t\\t\\t\\tdisplay = restoreDisplay;\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t// Get nonempty value(s) by temporarily forcing visibility\\n\\t\\t\\t\\tshowHide( [ elem ], true );\\n\\t\\t\\t\\trestoreDisplay = elem.style.display || restoreDisplay;\\n\\t\\t\\t\\tdisplay = jQuery.css( elem, \\\"display\\\" );\\n\\t\\t\\t\\tshowHide( [ elem ] );\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// Animate inline elements as inline-block\\n\\t\\tif ( display === \\\"inline\\\" || display === \\\"inline-block\\\" && restoreDisplay != null ) {\\n\\t\\t\\tif ( jQuery.css( elem, \\\"float\\\" ) === \\\"none\\\" ) {\\n\\n\\t\\t\\t\\t// Restore the original display value at the end of pure show/hide animations\\n\\t\\t\\t\\tif ( !propTween ) {\\n\\t\\t\\t\\t\\tanim.done( function() {\\n\\t\\t\\t\\t\\t\\tstyle.display = restoreDisplay;\\n\\t\\t\\t\\t\\t} );\\n\\t\\t\\t\\t\\tif ( restoreDisplay == null ) {\\n\\t\\t\\t\\t\\t\\tdisplay = style.display;\\n\\t\\t\\t\\t\\t\\trestoreDisplay = display === \\\"none\\\" ? \\\"\\\" : display;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tstyle.display = \\\"inline-block\\\";\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\tif ( opts.overflow ) {\\n\\t\\tstyle.overflow = \\\"hidden\\\";\\n\\t\\tanim.always( function() {\\n\\t\\t\\tstyle.overflow = opts.overflow[ 0 ];\\n\\t\\t\\tstyle.overflowX = opts.overflow[ 1 ];\\n\\t\\t\\tstyle.overflowY = opts.overflow[ 2 ];\\n\\t\\t} );\\n\\t}\\n\\n\\t// Implement show/hide animations\\n\\tpropTween = false;\\n\\tfor ( prop in orig ) {\\n\\n\\t\\t// General show/hide setup for this element animation\\n\\t\\tif ( !propTween ) {\\n\\t\\t\\tif ( dataShow ) {\\n\\t\\t\\t\\tif ( \\\"hidden\\\" in dataShow ) {\\n\\t\\t\\t\\t\\thidden = dataShow.hidden;\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tdataShow = dataPriv.access( elem, \\\"fxshow\\\", { display: restoreDisplay } );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Store hidden/visible for toggle so `.stop().toggle()` \\\"reverses\\\"\\n\\t\\t\\tif ( toggle ) {\\n\\t\\t\\t\\tdataShow.hidden = !hidden;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Show elements before animating them\\n\\t\\t\\tif ( hidden ) {\\n\\t\\t\\t\\tshowHide( [ elem ], true );\\n\\t\\t\\t}\\n\\n\\t\\t\\t/* eslint-disable no-loop-func */\\n\\n\\t\\t\\tanim.done( function() {\\n\\n\\t\\t\\t/* eslint-enable no-loop-func */\\n\\n\\t\\t\\t\\t// The final step of a \\\"hide\\\" animation is actually hiding the element\\n\\t\\t\\t\\tif ( !hidden ) {\\n\\t\\t\\t\\t\\tshowHide( [ elem ] );\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tdataPriv.remove( elem, \\\"fxshow\\\" );\\n\\t\\t\\t\\tfor ( prop in orig ) {\\n\\t\\t\\t\\t\\tjQuery.style( elem, prop, orig[ prop ] );\\n\\t\\t\\t\\t}\\n\\t\\t\\t} );\\n\\t\\t}\\n\\n\\t\\t// Per-property setup\\n\\t\\tpropTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );\\n\\t\\tif ( !( prop in dataShow ) ) {\\n\\t\\t\\tdataShow[ prop ] = propTween.start;\\n\\t\\t\\tif ( hidden ) {\\n\\t\\t\\t\\tpropTween.end = propTween.start;\\n\\t\\t\\t\\tpropTween.start = 0;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\\n\\nfunction propFilter( props, specialEasing ) {\\n\\tvar index, name, easing, value, hooks;\\n\\n\\t// camelCase, specialEasing and expand cssHook pass\\n\\tfor ( index in props ) {\\n\\t\\tname = jQuery.camelCase( index );\\n\\t\\teasing = specialEasing[ name ];\\n\\t\\tvalue = props[ index ];\\n\\t\\tif ( Array.isArray( value ) ) {\\n\\t\\t\\teasing = value[ 1 ];\\n\\t\\t\\tvalue = props[ index ] = value[ 0 ];\\n\\t\\t}\\n\\n\\t\\tif ( index !== name ) {\\n\\t\\t\\tprops[ name ] = value;\\n\\t\\t\\tdelete props[ index ];\\n\\t\\t}\\n\\n\\t\\thooks = jQuery.cssHooks[ name ];\\n\\t\\tif ( hooks && \\\"expand\\\" in hooks ) {\\n\\t\\t\\tvalue = hooks.expand( value );\\n\\t\\t\\tdelete props[ name ];\\n\\n\\t\\t\\t// Not quite $.extend, this won't overwrite existing keys.\\n\\t\\t\\t// Reusing 'index' because we have the correct \\\"name\\\"\\n\\t\\t\\tfor ( index in value ) {\\n\\t\\t\\t\\tif ( !( index in props ) ) {\\n\\t\\t\\t\\t\\tprops[ index ] = value[ index ];\\n\\t\\t\\t\\t\\tspecialEasing[ index ] = easing;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t} else {\\n\\t\\t\\tspecialEasing[ name ] = easing;\\n\\t\\t}\\n\\t}\\n}\\n\\nfunction Animation( elem, properties, options ) {\\n\\tvar result,\\n\\t\\tstopped,\\n\\t\\tindex = 0,\\n\\t\\tlength = Animation.prefilters.length,\\n\\t\\tdeferred = jQuery.Deferred().always( function() {\\n\\n\\t\\t\\t// Don't match elem in the :animated selector\\n\\t\\t\\tdelete tick.elem;\\n\\t\\t} ),\\n\\t\\ttick = function() {\\n\\t\\t\\tif ( stopped ) {\\n\\t\\t\\t\\treturn false;\\n\\t\\t\\t}\\n\\t\\t\\tvar currentTime = fxNow || createFxNow(),\\n\\t\\t\\t\\tremaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),\\n\\n\\t\\t\\t\\t// Support: Android 2.3 only\\n\\t\\t\\t\\t// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)\\n\\t\\t\\t\\ttemp = remaining / animation.duration || 0,\\n\\t\\t\\t\\tpercent = 1 - temp,\\n\\t\\t\\t\\tindex = 0,\\n\\t\\t\\t\\tlength = animation.tweens.length;\\n\\n\\t\\t\\tfor ( ; index < length; index++ ) {\\n\\t\\t\\t\\tanimation.tweens[ index ].run( percent );\\n\\t\\t\\t}\\n\\n\\t\\t\\tdeferred.notifyWith( elem, [ animation, percent, remaining ] );\\n\\n\\t\\t\\t// If there's more to do, yield\\n\\t\\t\\tif ( percent < 1 && length ) {\\n\\t\\t\\t\\treturn remaining;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// If this was an empty animation, synthesize a final progress notification\\n\\t\\t\\tif ( !length ) {\\n\\t\\t\\t\\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Resolve the animation and report its conclusion\\n\\t\\t\\tdeferred.resolveWith( elem, [ animation ] );\\n\\t\\t\\treturn false;\\n\\t\\t},\\n\\t\\tanimation = deferred.promise( {\\n\\t\\t\\telem: elem,\\n\\t\\t\\tprops: jQuery.extend( {}, properties ),\\n\\t\\t\\topts: jQuery.extend( true, {\\n\\t\\t\\t\\tspecialEasing: {},\\n\\t\\t\\t\\teasing: jQuery.easing._default\\n\\t\\t\\t}, options ),\\n\\t\\t\\toriginalProperties: properties,\\n\\t\\t\\toriginalOptions: options,\\n\\t\\t\\tstartTime: fxNow || createFxNow(),\\n\\t\\t\\tduration: options.duration,\\n\\t\\t\\ttweens: [],\\n\\t\\t\\tcreateTween: function( prop, end ) {\\n\\t\\t\\t\\tvar tween = jQuery.Tween( elem, animation.opts, prop, end,\\n\\t\\t\\t\\t\\t\\tanimation.opts.specialEasing[ prop ] || animation.opts.easing );\\n\\t\\t\\t\\tanimation.tweens.push( tween );\\n\\t\\t\\t\\treturn tween;\\n\\t\\t\\t},\\n\\t\\t\\tstop: function( gotoEnd ) {\\n\\t\\t\\t\\tvar index = 0,\\n\\n\\t\\t\\t\\t\\t// If we are going to the end, we want to run all the tweens\\n\\t\\t\\t\\t\\t// otherwise we skip this part\\n\\t\\t\\t\\t\\tlength = gotoEnd ? animation.tweens.length : 0;\\n\\t\\t\\t\\tif ( stopped ) {\\n\\t\\t\\t\\t\\treturn this;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tstopped = true;\\n\\t\\t\\t\\tfor ( ; index < length; index++ ) {\\n\\t\\t\\t\\t\\tanimation.tweens[ index ].run( 1 );\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Resolve when we played the last frame; otherwise, reject\\n\\t\\t\\t\\tif ( gotoEnd ) {\\n\\t\\t\\t\\t\\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\\n\\t\\t\\t\\t\\tdeferred.resolveWith( elem, [ animation, gotoEnd ] );\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tdeferred.rejectWith( elem, [ animation, gotoEnd ] );\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\treturn this;\\n\\t\\t\\t}\\n\\t\\t} ),\\n\\t\\tprops = animation.props;\\n\\n\\tpropFilter( props, animation.opts.specialEasing );\\n\\n\\tfor ( ; index < length; index++ ) {\\n\\t\\tresult = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );\\n\\t\\tif ( result ) {\\n\\t\\t\\tif ( jQuery.isFunction( result.stop ) ) {\\n\\t\\t\\t\\tjQuery._queueHooks( animation.elem, animation.opts.queue ).stop =\\n\\t\\t\\t\\t\\tjQuery.proxy( result.stop, result );\\n\\t\\t\\t}\\n\\t\\t\\treturn result;\\n\\t\\t}\\n\\t}\\n\\n\\tjQuery.map( props, createTween, animation );\\n\\n\\tif ( jQuery.isFunction( animation.opts.start ) ) {\\n\\t\\tanimation.opts.start.call( elem, animation );\\n\\t}\\n\\n\\t// Attach callbacks from options\\n\\tanimation\\n\\t\\t.progress( animation.opts.progress )\\n\\t\\t.done( animation.opts.done, animation.opts.complete )\\n\\t\\t.fail( animation.opts.fail )\\n\\t\\t.always( animation.opts.always );\\n\\n\\tjQuery.fx.timer(\\n\\t\\tjQuery.extend( tick, {\\n\\t\\t\\telem: elem,\\n\\t\\t\\tanim: animation,\\n\\t\\t\\tqueue: animation.opts.queue\\n\\t\\t} )\\n\\t);\\n\\n\\treturn animation;\\n}\\n\\njQuery.Animation = jQuery.extend( Animation, {\\n\\n\\ttweeners: {\\n\\t\\t\\\"*\\\": [ function( prop, value ) {\\n\\t\\t\\tvar tween = this.createTween( prop, value );\\n\\t\\t\\tadjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );\\n\\t\\t\\treturn tween;\\n\\t\\t} ]\\n\\t},\\n\\n\\ttweener: function( props, callback ) {\\n\\t\\tif ( jQuery.isFunction( props ) ) {\\n\\t\\t\\tcallback = props;\\n\\t\\t\\tprops = [ \\\"*\\\" ];\\n\\t\\t} else {\\n\\t\\t\\tprops = props.match( rnothtmlwhite );\\n\\t\\t}\\n\\n\\t\\tvar prop,\\n\\t\\t\\tindex = 0,\\n\\t\\t\\tlength = props.length;\\n\\n\\t\\tfor ( ; index < length; index++ ) {\\n\\t\\t\\tprop = props[ index ];\\n\\t\\t\\tAnimation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];\\n\\t\\t\\tAnimation.tweeners[ prop ].unshift( callback );\\n\\t\\t}\\n\\t},\\n\\n\\tprefilters: [ defaultPrefilter ],\\n\\n\\tprefilter: function( callback, prepend ) {\\n\\t\\tif ( prepend ) {\\n\\t\\t\\tAnimation.prefilters.unshift( callback );\\n\\t\\t} else {\\n\\t\\t\\tAnimation.prefilters.push( callback );\\n\\t\\t}\\n\\t}\\n} );\\n\\njQuery.speed = function( speed, easing, fn ) {\\n\\tvar opt = speed && typeof speed === \\\"object\\\" ? jQuery.extend( {}, speed ) : {\\n\\t\\tcomplete: fn || !fn && easing ||\\n\\t\\t\\tjQuery.isFunction( speed ) && speed,\\n\\t\\tduration: speed,\\n\\t\\teasing: fn && easing || easing && !jQuery.isFunction( easing ) && easing\\n\\t};\\n\\n\\t// Go to the end state if fx are off\\n\\tif ( jQuery.fx.off ) {\\n\\t\\topt.duration = 0;\\n\\n\\t} else {\\n\\t\\tif ( typeof opt.duration !== \\\"number\\\" ) {\\n\\t\\t\\tif ( opt.duration in jQuery.fx.speeds ) {\\n\\t\\t\\t\\topt.duration = jQuery.fx.speeds[ opt.duration ];\\n\\n\\t\\t\\t} else {\\n\\t\\t\\t\\topt.duration = jQuery.fx.speeds._default;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t// Normalize opt.queue - true/undefined/null -> \\\"fx\\\"\\n\\tif ( opt.queue == null || opt.queue === true ) {\\n\\t\\topt.queue = \\\"fx\\\";\\n\\t}\\n\\n\\t// Queueing\\n\\topt.old = opt.complete;\\n\\n\\topt.complete = function() {\\n\\t\\tif ( jQuery.isFunction( opt.old ) ) {\\n\\t\\t\\topt.old.call( this );\\n\\t\\t}\\n\\n\\t\\tif ( opt.queue ) {\\n\\t\\t\\tjQuery.dequeue( this, opt.queue );\\n\\t\\t}\\n\\t};\\n\\n\\treturn opt;\\n};\\n\\njQuery.fn.extend( {\\n\\tfadeTo: function( speed, to, easing, callback ) {\\n\\n\\t\\t// Show any hidden elements after setting opacity to 0\\n\\t\\treturn this.filter( isHiddenWithinTree ).css( \\\"opacity\\\", 0 ).show()\\n\\n\\t\\t\\t// Animate to the value specified\\n\\t\\t\\t.end().animate( { opacity: to }, speed, easing, callback );\\n\\t},\\n\\tanimate: function( prop, speed, easing, callback ) {\\n\\t\\tvar empty = jQuery.isEmptyObject( prop ),\\n\\t\\t\\toptall = jQuery.speed( speed, easing, callback ),\\n\\t\\t\\tdoAnimation = function() {\\n\\n\\t\\t\\t\\t// Operate on a copy of prop so per-property easing won't be lost\\n\\t\\t\\t\\tvar anim = Animation( this, jQuery.extend( {}, prop ), optall );\\n\\n\\t\\t\\t\\t// Empty animations, or finishing resolves immediately\\n\\t\\t\\t\\tif ( empty || dataPriv.get( this, \\\"finish\\\" ) ) {\\n\\t\\t\\t\\t\\tanim.stop( true );\\n\\t\\t\\t\\t}\\n\\t\\t\\t};\\n\\t\\t\\tdoAnimation.finish = doAnimation;\\n\\n\\t\\treturn empty || optall.queue === false ?\\n\\t\\t\\tthis.each( doAnimation ) :\\n\\t\\t\\tthis.queue( optall.queue, doAnimation );\\n\\t},\\n\\tstop: function( type, clearQueue, gotoEnd ) {\\n\\t\\tvar stopQueue = function( hooks ) {\\n\\t\\t\\tvar stop = hooks.stop;\\n\\t\\t\\tdelete hooks.stop;\\n\\t\\t\\tstop( gotoEnd );\\n\\t\\t};\\n\\n\\t\\tif ( typeof type !== \\\"string\\\" ) {\\n\\t\\t\\tgotoEnd = clearQueue;\\n\\t\\t\\tclearQueue = type;\\n\\t\\t\\ttype = undefined;\\n\\t\\t}\\n\\t\\tif ( clearQueue && type !== false ) {\\n\\t\\t\\tthis.queue( type || \\\"fx\\\", [] );\\n\\t\\t}\\n\\n\\t\\treturn this.each( function() {\\n\\t\\t\\tvar dequeue = true,\\n\\t\\t\\t\\tindex = type != null && type + \\\"queueHooks\\\",\\n\\t\\t\\t\\ttimers = jQuery.timers,\\n\\t\\t\\t\\tdata = dataPriv.get( this );\\n\\n\\t\\t\\tif ( index ) {\\n\\t\\t\\t\\tif ( data[ index ] && data[ index ].stop ) {\\n\\t\\t\\t\\t\\tstopQueue( data[ index ] );\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tfor ( index in data ) {\\n\\t\\t\\t\\t\\tif ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {\\n\\t\\t\\t\\t\\t\\tstopQueue( data[ index ] );\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\tfor ( index = timers.length; index--; ) {\\n\\t\\t\\t\\tif ( timers[ index ].elem === this &&\\n\\t\\t\\t\\t\\t( type == null || timers[ index ].queue === type ) ) {\\n\\n\\t\\t\\t\\t\\ttimers[ index ].anim.stop( gotoEnd );\\n\\t\\t\\t\\t\\tdequeue = false;\\n\\t\\t\\t\\t\\ttimers.splice( index, 1 );\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Start the next in the queue if the last step wasn't forced.\\n\\t\\t\\t// Timers currently will call their complete callbacks, which\\n\\t\\t\\t// will dequeue but only if they were gotoEnd.\\n\\t\\t\\tif ( dequeue || !gotoEnd ) {\\n\\t\\t\\t\\tjQuery.dequeue( this, type );\\n\\t\\t\\t}\\n\\t\\t} );\\n\\t},\\n\\tfinish: function( type ) {\\n\\t\\tif ( type !== false ) {\\n\\t\\t\\ttype = type || \\\"fx\\\";\\n\\t\\t}\\n\\t\\treturn this.each( function() {\\n\\t\\t\\tvar index,\\n\\t\\t\\t\\tdata = dataPriv.get( this ),\\n\\t\\t\\t\\tqueue = data[ type + \\\"queue\\\" ],\\n\\t\\t\\t\\thooks = data[ type + \\\"queueHooks\\\" ],\\n\\t\\t\\t\\ttimers = jQuery.timers,\\n\\t\\t\\t\\tlength = queue ? queue.length : 0;\\n\\n\\t\\t\\t// Enable finishing flag on private data\\n\\t\\t\\tdata.finish = true;\\n\\n\\t\\t\\t// Empty the queue first\\n\\t\\t\\tjQuery.queue( this, type, [] );\\n\\n\\t\\t\\tif ( hooks && hooks.stop ) {\\n\\t\\t\\t\\thooks.stop.call( this, true );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Look for any active animations, and finish them\\n\\t\\t\\tfor ( index = timers.length; index--; ) {\\n\\t\\t\\t\\tif ( timers[ index ].elem === this && timers[ index ].queue === type ) {\\n\\t\\t\\t\\t\\ttimers[ index ].anim.stop( true );\\n\\t\\t\\t\\t\\ttimers.splice( index, 1 );\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Look for any animations in the old queue and finish them\\n\\t\\t\\tfor ( index = 0; index < length; index++ ) {\\n\\t\\t\\t\\tif ( queue[ index ] && queue[ index ].finish ) {\\n\\t\\t\\t\\t\\tqueue[ index ].finish.call( this );\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Turn off finishing flag\\n\\t\\t\\tdelete data.finish;\\n\\t\\t} );\\n\\t}\\n} );\\n\\njQuery.each( [ \\\"toggle\\\", \\\"show\\\", \\\"hide\\\" ], function( i, name ) {\\n\\tvar cssFn = jQuery.fn[ name ];\\n\\tjQuery.fn[ name ] = function( speed, easing, callback ) {\\n\\t\\treturn speed == null || typeof speed === \\\"boolean\\\" ?\\n\\t\\t\\tcssFn.apply( this, arguments ) :\\n\\t\\t\\tthis.animate( genFx( name, true ), speed, easing, callback );\\n\\t};\\n} );\\n\\n// Generate shortcuts for custom animations\\njQuery.each( {\\n\\tslideDown: genFx( \\\"show\\\" ),\\n\\tslideUp: genFx( \\\"hide\\\" ),\\n\\tslideToggle: genFx( \\\"toggle\\\" ),\\n\\tfadeIn: { opacity: \\\"show\\\" },\\n\\tfadeOut: { opacity: \\\"hide\\\" },\\n\\tfadeToggle: { opacity: \\\"toggle\\\" }\\n}, function( name, props ) {\\n\\tjQuery.fn[ name ] = function( speed, easing, callback ) {\\n\\t\\treturn this.animate( props, speed, easing, callback );\\n\\t};\\n} );\\n\\njQuery.timers = [];\\njQuery.fx.tick = function() {\\n\\tvar timer,\\n\\t\\ti = 0,\\n\\t\\ttimers = jQuery.timers;\\n\\n\\tfxNow = jQuery.now();\\n\\n\\tfor ( ; i < timers.length; i++ ) {\\n\\t\\ttimer = timers[ i ];\\n\\n\\t\\t// Run the timer and safely remove it when done (allowing for external removal)\\n\\t\\tif ( !timer() && timers[ i ] === timer ) {\\n\\t\\t\\ttimers.splice( i--, 1 );\\n\\t\\t}\\n\\t}\\n\\n\\tif ( !timers.length ) {\\n\\t\\tjQuery.fx.stop();\\n\\t}\\n\\tfxNow = undefined;\\n};\\n\\njQuery.fx.timer = function( timer ) {\\n\\tjQuery.timers.push( timer );\\n\\tjQuery.fx.start();\\n};\\n\\njQuery.fx.interval = 13;\\njQuery.fx.start = function() {\\n\\tif ( inProgress ) {\\n\\t\\treturn;\\n\\t}\\n\\n\\tinProgress = true;\\n\\tschedule();\\n};\\n\\njQuery.fx.stop = function() {\\n\\tinProgress = null;\\n};\\n\\njQuery.fx.speeds = {\\n\\tslow: 600,\\n\\tfast: 200,\\n\\n\\t// Default speed\\n\\t_default: 400\\n};\\n\\n\\n// Based off of the plugin by Clint Helfers, with permission.\\n// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/\\njQuery.fn.delay = function( time, type ) {\\n\\ttime = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;\\n\\ttype = type || \\\"fx\\\";\\n\\n\\treturn this.queue( type, function( next, hooks ) {\\n\\t\\tvar timeout = window.setTimeout( next, time );\\n\\t\\thooks.stop = function() {\\n\\t\\t\\twindow.clearTimeout( timeout );\\n\\t\\t};\\n\\t} );\\n};\\n\\n\\n( function() {\\n\\tvar input = document.createElement( \\\"input\\\" ),\\n\\t\\tselect = document.createElement( \\\"select\\\" ),\\n\\t\\topt = select.appendChild( document.createElement( \\\"option\\\" ) );\\n\\n\\tinput.type = \\\"checkbox\\\";\\n\\n\\t// Support: Android <=4.3 only\\n\\t// Default value for a checkbox should be \\\"on\\\"\\n\\tsupport.checkOn = input.value !== \\\"\\\";\\n\\n\\t// Support: IE <=11 only\\n\\t// Must access selectedIndex to make default options select\\n\\tsupport.optSelected = opt.selected;\\n\\n\\t// Support: IE <=11 only\\n\\t// An input loses its value after becoming a radio\\n\\tinput = document.createElement( \\\"input\\\" );\\n\\tinput.value = \\\"t\\\";\\n\\tinput.type = \\\"radio\\\";\\n\\tsupport.radioValue = input.value === \\\"t\\\";\\n} )();\\n\\n\\nvar boolHook,\\n\\tattrHandle = jQuery.expr.attrHandle;\\n\\njQuery.fn.extend( {\\n\\tattr: function( name, value ) {\\n\\t\\treturn access( this, jQuery.attr, name, value, arguments.length > 1 );\\n\\t},\\n\\n\\tremoveAttr: function( name ) {\\n\\t\\treturn this.each( function() {\\n\\t\\t\\tjQuery.removeAttr( this, name );\\n\\t\\t} );\\n\\t}\\n} );\\n\\njQuery.extend( {\\n\\tattr: function( elem, name, value ) {\\n\\t\\tvar ret, hooks,\\n\\t\\t\\tnType = elem.nodeType;\\n\\n\\t\\t// Don't get/set attributes on text, comment and attribute nodes\\n\\t\\tif ( nType === 3 || nType === 8 || nType === 2 ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\t// Fallback to prop when attributes are not supported\\n\\t\\tif ( typeof elem.getAttribute === \\\"undefined\\\" ) {\\n\\t\\t\\treturn jQuery.prop( elem, name, value );\\n\\t\\t}\\n\\n\\t\\t// Attribute hooks are determined by the lowercase version\\n\\t\\t// Grab necessary hook if one is defined\\n\\t\\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\\n\\t\\t\\thooks = jQuery.attrHooks[ name.toLowerCase() ] ||\\n\\t\\t\\t\\t( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );\\n\\t\\t}\\n\\n\\t\\tif ( value !== undefined ) {\\n\\t\\t\\tif ( value === null ) {\\n\\t\\t\\t\\tjQuery.removeAttr( elem, name );\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( hooks && \\\"set\\\" in hooks &&\\n\\t\\t\\t\\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\\n\\t\\t\\t\\treturn ret;\\n\\t\\t\\t}\\n\\n\\t\\t\\telem.setAttribute( name, value + \\\"\\\" );\\n\\t\\t\\treturn value;\\n\\t\\t}\\n\\n\\t\\tif ( hooks && \\\"get\\\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\\n\\t\\t\\treturn ret;\\n\\t\\t}\\n\\n\\t\\tret = jQuery.find.attr( elem, name );\\n\\n\\t\\t// Non-existent attributes return null, we normalize to undefined\\n\\t\\treturn ret == null ? undefined : ret;\\n\\t},\\n\\n\\tattrHooks: {\\n\\t\\ttype: {\\n\\t\\t\\tset: function( elem, value ) {\\n\\t\\t\\t\\tif ( !support.radioValue && value === \\\"radio\\\" &&\\n\\t\\t\\t\\t\\tnodeName( elem, \\\"input\\\" ) ) {\\n\\t\\t\\t\\t\\tvar val = elem.value;\\n\\t\\t\\t\\t\\telem.setAttribute( \\\"type\\\", value );\\n\\t\\t\\t\\t\\tif ( val ) {\\n\\t\\t\\t\\t\\t\\telem.value = val;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\treturn value;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\tremoveAttr: function( elem, value ) {\\n\\t\\tvar name,\\n\\t\\t\\ti = 0,\\n\\n\\t\\t\\t// Attribute names can contain non-HTML whitespace characters\\n\\t\\t\\t// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\\n\\t\\t\\tattrNames = value && value.match( rnothtmlwhite );\\n\\n\\t\\tif ( attrNames && elem.nodeType === 1 ) {\\n\\t\\t\\twhile ( ( name = attrNames[ i++ ] ) ) {\\n\\t\\t\\t\\telem.removeAttribute( name );\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n} );\\n\\n// Hooks for boolean attributes\\nboolHook = {\\n\\tset: function( elem, value, name ) {\\n\\t\\tif ( value === false ) {\\n\\n\\t\\t\\t// Remove boolean attributes when set to false\\n\\t\\t\\tjQuery.removeAttr( elem, name );\\n\\t\\t} else {\\n\\t\\t\\telem.setAttribute( name, name );\\n\\t\\t}\\n\\t\\treturn name;\\n\\t}\\n};\\n\\njQuery.each( jQuery.expr.match.bool.source.match( /\\\\w+/g ), function( i, name ) {\\n\\tvar getter = attrHandle[ name ] || jQuery.find.attr;\\n\\n\\tattrHandle[ name ] = function( elem, name, isXML ) {\\n\\t\\tvar ret, handle,\\n\\t\\t\\tlowercaseName = name.toLowerCase();\\n\\n\\t\\tif ( !isXML ) {\\n\\n\\t\\t\\t// Avoid an infinite loop by temporarily removing this function from the getter\\n\\t\\t\\thandle = attrHandle[ lowercaseName ];\\n\\t\\t\\tattrHandle[ lowercaseName ] = ret;\\n\\t\\t\\tret = getter( elem, name, isXML ) != null ?\\n\\t\\t\\t\\tlowercaseName :\\n\\t\\t\\t\\tnull;\\n\\t\\t\\tattrHandle[ lowercaseName ] = handle;\\n\\t\\t}\\n\\t\\treturn ret;\\n\\t};\\n} );\\n\\n\\n\\n\\nvar rfocusable = /^(?:input|select|textarea|button)$/i,\\n\\trclickable = /^(?:a|area)$/i;\\n\\njQuery.fn.extend( {\\n\\tprop: function( name, value ) {\\n\\t\\treturn access( this, jQuery.prop, name, value, arguments.length > 1 );\\n\\t},\\n\\n\\tremoveProp: function( name ) {\\n\\t\\treturn this.each( function() {\\n\\t\\t\\tdelete this[ jQuery.propFix[ name ] || name ];\\n\\t\\t} );\\n\\t}\\n} );\\n\\njQuery.extend( {\\n\\tprop: function( elem, name, value ) {\\n\\t\\tvar ret, hooks,\\n\\t\\t\\tnType = elem.nodeType;\\n\\n\\t\\t// Don't get/set properties on text, comment and attribute nodes\\n\\t\\tif ( nType === 3 || nType === 8 || nType === 2 ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\\n\\n\\t\\t\\t// Fix name and attach hooks\\n\\t\\t\\tname = jQuery.propFix[ name ] || name;\\n\\t\\t\\thooks = jQuery.propHooks[ name ];\\n\\t\\t}\\n\\n\\t\\tif ( value !== undefined ) {\\n\\t\\t\\tif ( hooks && \\\"set\\\" in hooks &&\\n\\t\\t\\t\\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\\n\\t\\t\\t\\treturn ret;\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn ( elem[ name ] = value );\\n\\t\\t}\\n\\n\\t\\tif ( hooks && \\\"get\\\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\\n\\t\\t\\treturn ret;\\n\\t\\t}\\n\\n\\t\\treturn elem[ name ];\\n\\t},\\n\\n\\tpropHooks: {\\n\\t\\ttabIndex: {\\n\\t\\t\\tget: function( elem ) {\\n\\n\\t\\t\\t\\t// Support: IE <=9 - 11 only\\n\\t\\t\\t\\t// elem.tabIndex doesn't always return the\\n\\t\\t\\t\\t// correct value when it hasn't been explicitly set\\n\\t\\t\\t\\t// https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\\n\\t\\t\\t\\t// Use proper attribute retrieval(#12072)\\n\\t\\t\\t\\tvar tabindex = jQuery.find.attr( elem, \\\"tabindex\\\" );\\n\\n\\t\\t\\t\\tif ( tabindex ) {\\n\\t\\t\\t\\t\\treturn parseInt( tabindex, 10 );\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (\\n\\t\\t\\t\\t\\trfocusable.test( elem.nodeName ) ||\\n\\t\\t\\t\\t\\trclickable.test( elem.nodeName ) &&\\n\\t\\t\\t\\t\\telem.href\\n\\t\\t\\t\\t) {\\n\\t\\t\\t\\t\\treturn 0;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn -1;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\tpropFix: {\\n\\t\\t\\\"for\\\": \\\"htmlFor\\\",\\n\\t\\t\\\"class\\\": \\\"className\\\"\\n\\t}\\n} );\\n\\n// Support: IE <=11 only\\n// Accessing the selectedIndex property\\n// forces the browser to respect setting selected\\n// on the option\\n// The getter ensures a default option is selected\\n// when in an optgroup\\n// eslint rule \\\"no-unused-expressions\\\" is disabled for this code\\n// since it considers such accessions noop\\nif ( !support.optSelected ) {\\n\\tjQuery.propHooks.selected = {\\n\\t\\tget: function( elem ) {\\n\\n\\t\\t\\t/* eslint no-unused-expressions: \\\"off\\\" */\\n\\n\\t\\t\\tvar parent = elem.parentNode;\\n\\t\\t\\tif ( parent && parent.parentNode ) {\\n\\t\\t\\t\\tparent.parentNode.selectedIndex;\\n\\t\\t\\t}\\n\\t\\t\\treturn null;\\n\\t\\t},\\n\\t\\tset: function( elem ) {\\n\\n\\t\\t\\t/* eslint no-unused-expressions: \\\"off\\\" */\\n\\n\\t\\t\\tvar parent = elem.parentNode;\\n\\t\\t\\tif ( parent ) {\\n\\t\\t\\t\\tparent.selectedIndex;\\n\\n\\t\\t\\t\\tif ( parent.parentNode ) {\\n\\t\\t\\t\\t\\tparent.parentNode.selectedIndex;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t};\\n}\\n\\njQuery.each( [\\n\\t\\\"tabIndex\\\",\\n\\t\\\"readOnly\\\",\\n\\t\\\"maxLength\\\",\\n\\t\\\"cellSpacing\\\",\\n\\t\\\"cellPadding\\\",\\n\\t\\\"rowSpan\\\",\\n\\t\\\"colSpan\\\",\\n\\t\\\"useMap\\\",\\n\\t\\\"frameBorder\\\",\\n\\t\\\"contentEditable\\\"\\n], function() {\\n\\tjQuery.propFix[ this.toLowerCase() ] = this;\\n} );\\n\\n\\n\\n\\n\\t// Strip and collapse whitespace according to HTML spec\\n\\t// https://html.spec.whatwg.org/multipage/infrastructure.html#strip-and-collapse-whitespace\\n\\tfunction stripAndCollapse( value ) {\\n\\t\\tvar tokens = value.match( rnothtmlwhite ) || [];\\n\\t\\treturn tokens.join( \\\" \\\" );\\n\\t}\\n\\n\\nfunction getClass( elem ) {\\n\\treturn elem.getAttribute && elem.getAttribute( \\\"class\\\" ) || \\\"\\\";\\n}\\n\\njQuery.fn.extend( {\\n\\taddClass: function( value ) {\\n\\t\\tvar classes, elem, cur, curValue, clazz, j, finalValue,\\n\\t\\t\\ti = 0;\\n\\n\\t\\tif ( jQuery.isFunction( value ) ) {\\n\\t\\t\\treturn this.each( function( j ) {\\n\\t\\t\\t\\tjQuery( this ).addClass( value.call( this, j, getClass( this ) ) );\\n\\t\\t\\t} );\\n\\t\\t}\\n\\n\\t\\tif ( typeof value === \\\"string\\\" && value ) {\\n\\t\\t\\tclasses = value.match( rnothtmlwhite ) || [];\\n\\n\\t\\t\\twhile ( ( elem = this[ i++ ] ) ) {\\n\\t\\t\\t\\tcurValue = getClass( elem );\\n\\t\\t\\t\\tcur = elem.nodeType === 1 && ( \\\" \\\" + stripAndCollapse( curValue ) + \\\" \\\" );\\n\\n\\t\\t\\t\\tif ( cur ) {\\n\\t\\t\\t\\t\\tj = 0;\\n\\t\\t\\t\\t\\twhile ( ( clazz = classes[ j++ ] ) ) {\\n\\t\\t\\t\\t\\t\\tif ( cur.indexOf( \\\" \\\" + clazz + \\\" \\\" ) < 0 ) {\\n\\t\\t\\t\\t\\t\\t\\tcur += clazz + \\\" \\\";\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t// Only assign if different to avoid unneeded rendering.\\n\\t\\t\\t\\t\\tfinalValue = stripAndCollapse( cur );\\n\\t\\t\\t\\t\\tif ( curValue !== finalValue ) {\\n\\t\\t\\t\\t\\t\\telem.setAttribute( \\\"class\\\", finalValue );\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn this;\\n\\t},\\n\\n\\tremoveClass: function( value ) {\\n\\t\\tvar classes, elem, cur, curValue, clazz, j, finalValue,\\n\\t\\t\\ti = 0;\\n\\n\\t\\tif ( jQuery.isFunction( value ) ) {\\n\\t\\t\\treturn this.each( function( j ) {\\n\\t\\t\\t\\tjQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );\\n\\t\\t\\t} );\\n\\t\\t}\\n\\n\\t\\tif ( !arguments.length ) {\\n\\t\\t\\treturn this.attr( \\\"class\\\", \\\"\\\" );\\n\\t\\t}\\n\\n\\t\\tif ( typeof value === \\\"string\\\" && value ) {\\n\\t\\t\\tclasses = value.match( rnothtmlwhite ) || [];\\n\\n\\t\\t\\twhile ( ( elem = this[ i++ ] ) ) {\\n\\t\\t\\t\\tcurValue = getClass( elem );\\n\\n\\t\\t\\t\\t// This expression is here for better compressibility (see addClass)\\n\\t\\t\\t\\tcur = elem.nodeType === 1 && ( \\\" \\\" + stripAndCollapse( curValue ) + \\\" \\\" );\\n\\n\\t\\t\\t\\tif ( cur ) {\\n\\t\\t\\t\\t\\tj = 0;\\n\\t\\t\\t\\t\\twhile ( ( clazz = classes[ j++ ] ) ) {\\n\\n\\t\\t\\t\\t\\t\\t// Remove *all* instances\\n\\t\\t\\t\\t\\t\\twhile ( cur.indexOf( \\\" \\\" + clazz + \\\" \\\" ) > -1 ) {\\n\\t\\t\\t\\t\\t\\t\\tcur = cur.replace( \\\" \\\" + clazz + \\\" \\\", \\\" \\\" );\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t// Only assign if different to avoid unneeded rendering.\\n\\t\\t\\t\\t\\tfinalValue = stripAndCollapse( cur );\\n\\t\\t\\t\\t\\tif ( curValue !== finalValue ) {\\n\\t\\t\\t\\t\\t\\telem.setAttribute( \\\"class\\\", finalValue );\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn this;\\n\\t},\\n\\n\\ttoggleClass: function( value, stateVal ) {\\n\\t\\tvar type = typeof value;\\n\\n\\t\\tif ( typeof stateVal === \\\"boolean\\\" && type === \\\"string\\\" ) {\\n\\t\\t\\treturn stateVal ? this.addClass( value ) : this.removeClass( value );\\n\\t\\t}\\n\\n\\t\\tif ( jQuery.isFunction( value ) ) {\\n\\t\\t\\treturn this.each( function( i ) {\\n\\t\\t\\t\\tjQuery( this ).toggleClass(\\n\\t\\t\\t\\t\\tvalue.call( this, i, getClass( this ), stateVal ),\\n\\t\\t\\t\\t\\tstateVal\\n\\t\\t\\t\\t);\\n\\t\\t\\t} );\\n\\t\\t}\\n\\n\\t\\treturn this.each( function() {\\n\\t\\t\\tvar className, i, self, classNames;\\n\\n\\t\\t\\tif ( type === \\\"string\\\" ) {\\n\\n\\t\\t\\t\\t// Toggle individual class names\\n\\t\\t\\t\\ti = 0;\\n\\t\\t\\t\\tself = jQuery( this );\\n\\t\\t\\t\\tclassNames = value.match( rnothtmlwhite ) || [];\\n\\n\\t\\t\\t\\twhile ( ( className = classNames[ i++ ] ) ) {\\n\\n\\t\\t\\t\\t\\t// Check each className given, space separated list\\n\\t\\t\\t\\t\\tif ( self.hasClass( className ) ) {\\n\\t\\t\\t\\t\\t\\tself.removeClass( className );\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\tself.addClass( className );\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t// Toggle whole class name\\n\\t\\t\\t} else if ( value === undefined || type === \\\"boolean\\\" ) {\\n\\t\\t\\t\\tclassName = getClass( this );\\n\\t\\t\\t\\tif ( className ) {\\n\\n\\t\\t\\t\\t\\t// Store className if set\\n\\t\\t\\t\\t\\tdataPriv.set( this, \\\"__className__\\\", className );\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// If the element has a class name or if we're passed `false`,\\n\\t\\t\\t\\t// then remove the whole classname (if there was one, the above saved it).\\n\\t\\t\\t\\t// Otherwise bring back whatever was previously saved (if anything),\\n\\t\\t\\t\\t// falling back to the empty string if nothing was stored.\\n\\t\\t\\t\\tif ( this.setAttribute ) {\\n\\t\\t\\t\\t\\tthis.setAttribute( \\\"class\\\",\\n\\t\\t\\t\\t\\t\\tclassName || value === false ?\\n\\t\\t\\t\\t\\t\\t\\\"\\\" :\\n\\t\\t\\t\\t\\t\\tdataPriv.get( this, \\\"__className__\\\" ) || \\\"\\\"\\n\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t} );\\n\\t},\\n\\n\\thasClass: function( selector ) {\\n\\t\\tvar className, elem,\\n\\t\\t\\ti = 0;\\n\\n\\t\\tclassName = \\\" \\\" + selector + \\\" \\\";\\n\\t\\twhile ( ( elem = this[ i++ ] ) ) {\\n\\t\\t\\tif ( elem.nodeType === 1 &&\\n\\t\\t\\t\\t( \\\" \\\" + stripAndCollapse( getClass( elem ) ) + \\\" \\\" ).indexOf( className ) > -1 ) {\\n\\t\\t\\t\\t\\treturn true;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn false;\\n\\t}\\n} );\\n\\n\\n\\n\\nvar rreturn = /\\\\r/g;\\n\\njQuery.fn.extend( {\\n\\tval: function( value ) {\\n\\t\\tvar hooks, ret, isFunction,\\n\\t\\t\\telem = this[ 0 ];\\n\\n\\t\\tif ( !arguments.length ) {\\n\\t\\t\\tif ( elem ) {\\n\\t\\t\\t\\thooks = jQuery.valHooks[ elem.type ] ||\\n\\t\\t\\t\\t\\tjQuery.valHooks[ elem.nodeName.toLowerCase() ];\\n\\n\\t\\t\\t\\tif ( hooks &&\\n\\t\\t\\t\\t\\t\\\"get\\\" in hooks &&\\n\\t\\t\\t\\t\\t( ret = hooks.get( elem, \\\"value\\\" ) ) !== undefined\\n\\t\\t\\t\\t) {\\n\\t\\t\\t\\t\\treturn ret;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tret = elem.value;\\n\\n\\t\\t\\t\\t// Handle most common string cases\\n\\t\\t\\t\\tif ( typeof ret === \\\"string\\\" ) {\\n\\t\\t\\t\\t\\treturn ret.replace( rreturn, \\\"\\\" );\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Handle cases where value is null/undef or number\\n\\t\\t\\t\\treturn ret == null ? \\\"\\\" : ret;\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tisFunction = jQuery.isFunction( value );\\n\\n\\t\\treturn this.each( function( i ) {\\n\\t\\t\\tvar val;\\n\\n\\t\\t\\tif ( this.nodeType !== 1 ) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( isFunction ) {\\n\\t\\t\\t\\tval = value.call( this, i, jQuery( this ).val() );\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tval = value;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Treat null/undefined as \\\"\\\"; convert numbers to string\\n\\t\\t\\tif ( val == null ) {\\n\\t\\t\\t\\tval = \\\"\\\";\\n\\n\\t\\t\\t} else if ( typeof val === \\\"number\\\" ) {\\n\\t\\t\\t\\tval += \\\"\\\";\\n\\n\\t\\t\\t} else if ( Array.isArray( val ) ) {\\n\\t\\t\\t\\tval = jQuery.map( val, function( value ) {\\n\\t\\t\\t\\t\\treturn value == null ? \\\"\\\" : value + \\\"\\\";\\n\\t\\t\\t\\t} );\\n\\t\\t\\t}\\n\\n\\t\\t\\thooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];\\n\\n\\t\\t\\t// If set returns undefined, fall back to normal setting\\n\\t\\t\\tif ( !hooks || !( \\\"set\\\" in hooks ) || hooks.set( this, val, \\\"value\\\" ) === undefined ) {\\n\\t\\t\\t\\tthis.value = val;\\n\\t\\t\\t}\\n\\t\\t} );\\n\\t}\\n} );\\n\\njQuery.extend( {\\n\\tvalHooks: {\\n\\t\\toption: {\\n\\t\\t\\tget: function( elem ) {\\n\\n\\t\\t\\t\\tvar val = jQuery.find.attr( elem, \\\"value\\\" );\\n\\t\\t\\t\\treturn val != null ?\\n\\t\\t\\t\\t\\tval :\\n\\n\\t\\t\\t\\t\\t// Support: IE <=10 - 11 only\\n\\t\\t\\t\\t\\t// option.text throws exceptions (#14686, #14858)\\n\\t\\t\\t\\t\\t// Strip and collapse whitespace\\n\\t\\t\\t\\t\\t// https://html.spec.whatwg.org/#strip-and-collapse-whitespace\\n\\t\\t\\t\\t\\tstripAndCollapse( jQuery.text( elem ) );\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\tselect: {\\n\\t\\t\\tget: function( elem ) {\\n\\t\\t\\t\\tvar value, option, i,\\n\\t\\t\\t\\t\\toptions = elem.options,\\n\\t\\t\\t\\t\\tindex = elem.selectedIndex,\\n\\t\\t\\t\\t\\tone = elem.type === \\\"select-one\\\",\\n\\t\\t\\t\\t\\tvalues = one ? null : [],\\n\\t\\t\\t\\t\\tmax = one ? index + 1 : options.length;\\n\\n\\t\\t\\t\\tif ( index < 0 ) {\\n\\t\\t\\t\\t\\ti = max;\\n\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\ti = one ? index : 0;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Loop through all the selected options\\n\\t\\t\\t\\tfor ( ; i < max; i++ ) {\\n\\t\\t\\t\\t\\toption = options[ i ];\\n\\n\\t\\t\\t\\t\\t// Support: IE <=9 only\\n\\t\\t\\t\\t\\t// IE8-9 doesn't update selected after form reset (#2551)\\n\\t\\t\\t\\t\\tif ( ( option.selected || i === index ) &&\\n\\n\\t\\t\\t\\t\\t\\t\\t// Don't return options that are disabled or in a disabled optgroup\\n\\t\\t\\t\\t\\t\\t\\t!option.disabled &&\\n\\t\\t\\t\\t\\t\\t\\t( !option.parentNode.disabled ||\\n\\t\\t\\t\\t\\t\\t\\t\\t!nodeName( option.parentNode, \\\"optgroup\\\" ) ) ) {\\n\\n\\t\\t\\t\\t\\t\\t// Get the specific value for the option\\n\\t\\t\\t\\t\\t\\tvalue = jQuery( option ).val();\\n\\n\\t\\t\\t\\t\\t\\t// We don't need an array for one selects\\n\\t\\t\\t\\t\\t\\tif ( one ) {\\n\\t\\t\\t\\t\\t\\t\\treturn value;\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t// Multi-Selects return an array\\n\\t\\t\\t\\t\\t\\tvalues.push( value );\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn values;\\n\\t\\t\\t},\\n\\n\\t\\t\\tset: function( elem, value ) {\\n\\t\\t\\t\\tvar optionSet, option,\\n\\t\\t\\t\\t\\toptions = elem.options,\\n\\t\\t\\t\\t\\tvalues = jQuery.makeArray( value ),\\n\\t\\t\\t\\t\\ti = options.length;\\n\\n\\t\\t\\t\\twhile ( i-- ) {\\n\\t\\t\\t\\t\\toption = options[ i ];\\n\\n\\t\\t\\t\\t\\t/* eslint-disable no-cond-assign */\\n\\n\\t\\t\\t\\t\\tif ( option.selected =\\n\\t\\t\\t\\t\\t\\tjQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1\\n\\t\\t\\t\\t\\t) {\\n\\t\\t\\t\\t\\t\\toptionSet = true;\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t/* eslint-enable no-cond-assign */\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Force browsers to behave consistently when non-matching value is set\\n\\t\\t\\t\\tif ( !optionSet ) {\\n\\t\\t\\t\\t\\telem.selectedIndex = -1;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\treturn values;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n} );\\n\\n// Radios and checkboxes getter/setter\\njQuery.each( [ \\\"radio\\\", \\\"checkbox\\\" ], function() {\\n\\tjQuery.valHooks[ this ] = {\\n\\t\\tset: function( elem, value ) {\\n\\t\\t\\tif ( Array.isArray( value ) ) {\\n\\t\\t\\t\\treturn ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );\\n\\t\\t\\t}\\n\\t\\t}\\n\\t};\\n\\tif ( !support.checkOn ) {\\n\\t\\tjQuery.valHooks[ this ].get = function( elem ) {\\n\\t\\t\\treturn elem.getAttribute( \\\"value\\\" ) === null ? \\\"on\\\" : elem.value;\\n\\t\\t};\\n\\t}\\n} );\\n\\n\\n\\n\\n// Return jQuery for attributes-only inclusion\\n\\n\\nvar rfocusMorph = /^(?:focusinfocus|focusoutblur)$/;\\n\\njQuery.extend( jQuery.event, {\\n\\n\\ttrigger: function( event, data, elem, onlyHandlers ) {\\n\\n\\t\\tvar i, cur, tmp, bubbleType, ontype, handle, special,\\n\\t\\t\\teventPath = [ elem || document ],\\n\\t\\t\\ttype = hasOwn.call( event, \\\"type\\\" ) ? event.type : event,\\n\\t\\t\\tnamespaces = hasOwn.call( event, \\\"namespace\\\" ) ? event.namespace.split( \\\".\\\" ) : [];\\n\\n\\t\\tcur = tmp = elem = elem || document;\\n\\n\\t\\t// Don't do events on text and comment nodes\\n\\t\\tif ( elem.nodeType === 3 || elem.nodeType === 8 ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\t// focus/blur morphs to focusin/out; ensure we're not firing them right now\\n\\t\\tif ( rfocusMorph.test( type + jQuery.event.triggered ) ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tif ( type.indexOf( \\\".\\\" ) > -1 ) {\\n\\n\\t\\t\\t// Namespaced trigger; create a regexp to match event type in handle()\\n\\t\\t\\tnamespaces = type.split( \\\".\\\" );\\n\\t\\t\\ttype = namespaces.shift();\\n\\t\\t\\tnamespaces.sort();\\n\\t\\t}\\n\\t\\tontype = type.indexOf( \\\":\\\" ) < 0 && \\\"on\\\" + type;\\n\\n\\t\\t// Caller can pass in a jQuery.Event object, Object, or just an event type string\\n\\t\\tevent = event[ jQuery.expando ] ?\\n\\t\\t\\tevent :\\n\\t\\t\\tnew jQuery.Event( type, typeof event === \\\"object\\\" && event );\\n\\n\\t\\t// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\\n\\t\\tevent.isTrigger = onlyHandlers ? 2 : 3;\\n\\t\\tevent.namespace = namespaces.join( \\\".\\\" );\\n\\t\\tevent.rnamespace = event.namespace ?\\n\\t\\t\\tnew RegExp( \\\"(^|\\\\\\\\.)\\\" + namespaces.join( \\\"\\\\\\\\.(?:.*\\\\\\\\.|)\\\" ) + \\\"(\\\\\\\\.|$)\\\" ) :\\n\\t\\t\\tnull;\\n\\n\\t\\t// Clean up the event in case it is being reused\\n\\t\\tevent.result = undefined;\\n\\t\\tif ( !event.target ) {\\n\\t\\t\\tevent.target = elem;\\n\\t\\t}\\n\\n\\t\\t// Clone any incoming data and prepend the event, creating the handler arg list\\n\\t\\tdata = data == null ?\\n\\t\\t\\t[ event ] :\\n\\t\\t\\tjQuery.makeArray( data, [ event ] );\\n\\n\\t\\t// Allow special events to draw outside the lines\\n\\t\\tspecial = jQuery.event.special[ type ] || {};\\n\\t\\tif ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\t// Determine event propagation path in advance, per W3C events spec (#9951)\\n\\t\\t// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\\n\\t\\tif ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {\\n\\n\\t\\t\\tbubbleType = special.delegateType || type;\\n\\t\\t\\tif ( !rfocusMorph.test( bubbleType + type ) ) {\\n\\t\\t\\t\\tcur = cur.parentNode;\\n\\t\\t\\t}\\n\\t\\t\\tfor ( ; cur; cur = cur.parentNode ) {\\n\\t\\t\\t\\teventPath.push( cur );\\n\\t\\t\\t\\ttmp = cur;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Only add window if we got to document (e.g., not plain obj or detached DOM)\\n\\t\\t\\tif ( tmp === ( elem.ownerDocument || document ) ) {\\n\\t\\t\\t\\teventPath.push( tmp.defaultView || tmp.parentWindow || window );\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// Fire handlers on the event path\\n\\t\\ti = 0;\\n\\t\\twhile ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {\\n\\n\\t\\t\\tevent.type = i > 1 ?\\n\\t\\t\\t\\tbubbleType :\\n\\t\\t\\t\\tspecial.bindType || type;\\n\\n\\t\\t\\t// jQuery handler\\n\\t\\t\\thandle = ( dataPriv.get( cur, \\\"events\\\" ) || {} )[ event.type ] &&\\n\\t\\t\\t\\tdataPriv.get( cur, \\\"handle\\\" );\\n\\t\\t\\tif ( handle ) {\\n\\t\\t\\t\\thandle.apply( cur, data );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Native handler\\n\\t\\t\\thandle = ontype && cur[ ontype ];\\n\\t\\t\\tif ( handle && handle.apply && acceptData( cur ) ) {\\n\\t\\t\\t\\tevent.result = handle.apply( cur, data );\\n\\t\\t\\t\\tif ( event.result === false ) {\\n\\t\\t\\t\\t\\tevent.preventDefault();\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\tevent.type = type;\\n\\n\\t\\t// If nobody prevented the default action, do it now\\n\\t\\tif ( !onlyHandlers && !event.isDefaultPrevented() ) {\\n\\n\\t\\t\\tif ( ( !special._default ||\\n\\t\\t\\t\\tspecial._default.apply( eventPath.pop(), data ) === false ) &&\\n\\t\\t\\t\\tacceptData( elem ) ) {\\n\\n\\t\\t\\t\\t// Call a native DOM method on the target with the same name as the event.\\n\\t\\t\\t\\t// Don't do default actions on window, that's where global variables be (#6170)\\n\\t\\t\\t\\tif ( ontype && jQuery.isFunction( elem[ type ] ) && !jQuery.isWindow( elem ) ) {\\n\\n\\t\\t\\t\\t\\t// Don't re-trigger an onFOO event when we call its FOO() method\\n\\t\\t\\t\\t\\ttmp = elem[ ontype ];\\n\\n\\t\\t\\t\\t\\tif ( tmp ) {\\n\\t\\t\\t\\t\\t\\telem[ ontype ] = null;\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t// Prevent re-triggering of the same event, since we already bubbled it above\\n\\t\\t\\t\\t\\tjQuery.event.triggered = type;\\n\\t\\t\\t\\t\\telem[ type ]();\\n\\t\\t\\t\\t\\tjQuery.event.triggered = undefined;\\n\\n\\t\\t\\t\\t\\tif ( tmp ) {\\n\\t\\t\\t\\t\\t\\telem[ ontype ] = tmp;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn event.result;\\n\\t},\\n\\n\\t// Piggyback on a donor event to simulate a different one\\n\\t// Used only for `focus(in | out)` events\\n\\tsimulate: function( type, elem, event ) {\\n\\t\\tvar e = jQuery.extend(\\n\\t\\t\\tnew jQuery.Event(),\\n\\t\\t\\tevent,\\n\\t\\t\\t{\\n\\t\\t\\t\\ttype: type,\\n\\t\\t\\t\\tisSimulated: true\\n\\t\\t\\t}\\n\\t\\t);\\n\\n\\t\\tjQuery.event.trigger( e, null, elem );\\n\\t}\\n\\n} );\\n\\njQuery.fn.extend( {\\n\\n\\ttrigger: function( type, data ) {\\n\\t\\treturn this.each( function() {\\n\\t\\t\\tjQuery.event.trigger( type, data, this );\\n\\t\\t} );\\n\\t},\\n\\ttriggerHandler: function( type, data ) {\\n\\t\\tvar elem = this[ 0 ];\\n\\t\\tif ( elem ) {\\n\\t\\t\\treturn jQuery.event.trigger( type, data, elem, true );\\n\\t\\t}\\n\\t}\\n} );\\n\\n\\njQuery.each( ( \\\"blur focus focusin focusout resize scroll click dblclick \\\" +\\n\\t\\\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \\\" +\\n\\t\\\"change select submit keydown keypress keyup contextmenu\\\" ).split( \\\" \\\" ),\\n\\tfunction( i, name ) {\\n\\n\\t// Handle event binding\\n\\tjQuery.fn[ name ] = function( data, fn ) {\\n\\t\\treturn arguments.length > 0 ?\\n\\t\\t\\tthis.on( name, null, data, fn ) :\\n\\t\\t\\tthis.trigger( name );\\n\\t};\\n} );\\n\\njQuery.fn.extend( {\\n\\thover: function( fnOver, fnOut ) {\\n\\t\\treturn this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );\\n\\t}\\n} );\\n\\n\\n\\n\\nsupport.focusin = \\\"onfocusin\\\" in window;\\n\\n\\n// Support: Firefox <=44\\n// Firefox doesn't have focus(in | out) events\\n// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\\n//\\n// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1\\n// focus(in | out) events fire after focus & blur events,\\n// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\\n// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857\\nif ( !support.focusin ) {\\n\\tjQuery.each( { focus: \\\"focusin\\\", blur: \\\"focusout\\\" }, function( orig, fix ) {\\n\\n\\t\\t// Attach a single capturing handler on the document while someone wants focusin/focusout\\n\\t\\tvar handler = function( event ) {\\n\\t\\t\\tjQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );\\n\\t\\t};\\n\\n\\t\\tjQuery.event.special[ fix ] = {\\n\\t\\t\\tsetup: function() {\\n\\t\\t\\t\\tvar doc = this.ownerDocument || this,\\n\\t\\t\\t\\t\\tattaches = dataPriv.access( doc, fix );\\n\\n\\t\\t\\t\\tif ( !attaches ) {\\n\\t\\t\\t\\t\\tdoc.addEventListener( orig, handler, true );\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tdataPriv.access( doc, fix, ( attaches || 0 ) + 1 );\\n\\t\\t\\t},\\n\\t\\t\\tteardown: function() {\\n\\t\\t\\t\\tvar doc = this.ownerDocument || this,\\n\\t\\t\\t\\t\\tattaches = dataPriv.access( doc, fix ) - 1;\\n\\n\\t\\t\\t\\tif ( !attaches ) {\\n\\t\\t\\t\\t\\tdoc.removeEventListener( orig, handler, true );\\n\\t\\t\\t\\t\\tdataPriv.remove( doc, fix );\\n\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tdataPriv.access( doc, fix, attaches );\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t};\\n\\t} );\\n}\\nvar location = window.location;\\n\\nvar nonce = jQuery.now();\\n\\nvar rquery = ( /\\\\?/ );\\n\\n\\n\\n// Cross-browser xml parsing\\njQuery.parseXML = function( data ) {\\n\\tvar xml;\\n\\tif ( !data || typeof data !== \\\"string\\\" ) {\\n\\t\\treturn null;\\n\\t}\\n\\n\\t// Support: IE 9 - 11 only\\n\\t// IE throws on parseFromString with invalid input.\\n\\ttry {\\n\\t\\txml = ( new window.DOMParser() ).parseFromString( data, \\\"text/xml\\\" );\\n\\t} catch ( e ) {\\n\\t\\txml = undefined;\\n\\t}\\n\\n\\tif ( !xml || xml.getElementsByTagName( \\\"parsererror\\\" ).length ) {\\n\\t\\tjQuery.error( \\\"Invalid XML: \\\" + data );\\n\\t}\\n\\treturn xml;\\n};\\n\\n\\nvar\\n\\trbracket = /\\\\[\\\\]$/,\\n\\trCRLF = /\\\\r?\\\\n/g,\\n\\trsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\\n\\trsubmittable = /^(?:input|select|textarea|keygen)/i;\\n\\nfunction buildParams( prefix, obj, traditional, add ) {\\n\\tvar name;\\n\\n\\tif ( Array.isArray( obj ) ) {\\n\\n\\t\\t// Serialize array item.\\n\\t\\tjQuery.each( obj, function( i, v ) {\\n\\t\\t\\tif ( traditional || rbracket.test( prefix ) ) {\\n\\n\\t\\t\\t\\t// Treat each array item as a scalar.\\n\\t\\t\\t\\tadd( prefix, v );\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t// Item is non-scalar (array or object), encode its numeric index.\\n\\t\\t\\t\\tbuildParams(\\n\\t\\t\\t\\t\\tprefix + \\\"[\\\" + ( typeof v === \\\"object\\\" && v != null ? i : \\\"\\\" ) + \\\"]\\\",\\n\\t\\t\\t\\t\\tv,\\n\\t\\t\\t\\t\\ttraditional,\\n\\t\\t\\t\\t\\tadd\\n\\t\\t\\t\\t);\\n\\t\\t\\t}\\n\\t\\t} );\\n\\n\\t} else if ( !traditional && jQuery.type( obj ) === \\\"object\\\" ) {\\n\\n\\t\\t// Serialize object item.\\n\\t\\tfor ( name in obj ) {\\n\\t\\t\\tbuildParams( prefix + \\\"[\\\" + name + \\\"]\\\", obj[ name ], traditional, add );\\n\\t\\t}\\n\\n\\t} else {\\n\\n\\t\\t// Serialize scalar item.\\n\\t\\tadd( prefix, obj );\\n\\t}\\n}\\n\\n// Serialize an array of form elements or a set of\\n// key/values into a query string\\njQuery.param = function( a, traditional ) {\\n\\tvar prefix,\\n\\t\\ts = [],\\n\\t\\tadd = function( key, valueOrFunction ) {\\n\\n\\t\\t\\t// If value is a function, invoke it and use its return value\\n\\t\\t\\tvar value = jQuery.isFunction( valueOrFunction ) ?\\n\\t\\t\\t\\tvalueOrFunction() :\\n\\t\\t\\t\\tvalueOrFunction;\\n\\n\\t\\t\\ts[ s.length ] = encodeURIComponent( key ) + \\\"=\\\" +\\n\\t\\t\\t\\tencodeURIComponent( value == null ? \\\"\\\" : value );\\n\\t\\t};\\n\\n\\t// If an array was passed in, assume that it is an array of form elements.\\n\\tif ( Array.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\\n\\n\\t\\t// Serialize the form elements\\n\\t\\tjQuery.each( a, function() {\\n\\t\\t\\tadd( this.name, this.value );\\n\\t\\t} );\\n\\n\\t} else {\\n\\n\\t\\t// If traditional, encode the \\\"old\\\" way (the way 1.3.2 or older\\n\\t\\t// did it), otherwise encode params recursively.\\n\\t\\tfor ( prefix in a ) {\\n\\t\\t\\tbuildParams( prefix, a[ prefix ], traditional, add );\\n\\t\\t}\\n\\t}\\n\\n\\t// Return the resulting serialization\\n\\treturn s.join( \\\"&\\\" );\\n};\\n\\njQuery.fn.extend( {\\n\\tserialize: function() {\\n\\t\\treturn jQuery.param( this.serializeArray() );\\n\\t},\\n\\tserializeArray: function() {\\n\\t\\treturn this.map( function() {\\n\\n\\t\\t\\t// Can add propHook for \\\"elements\\\" to filter or add form elements\\n\\t\\t\\tvar elements = jQuery.prop( this, \\\"elements\\\" );\\n\\t\\t\\treturn elements ? jQuery.makeArray( elements ) : this;\\n\\t\\t} )\\n\\t\\t.filter( function() {\\n\\t\\t\\tvar type = this.type;\\n\\n\\t\\t\\t// Use .is( \\\":disabled\\\" ) so that fieldset[disabled] works\\n\\t\\t\\treturn this.name && !jQuery( this ).is( \\\":disabled\\\" ) &&\\n\\t\\t\\t\\trsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\\n\\t\\t\\t\\t( this.checked || !rcheckableType.test( type ) );\\n\\t\\t} )\\n\\t\\t.map( function( i, elem ) {\\n\\t\\t\\tvar val = jQuery( this ).val();\\n\\n\\t\\t\\tif ( val == null ) {\\n\\t\\t\\t\\treturn null;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( Array.isArray( val ) ) {\\n\\t\\t\\t\\treturn jQuery.map( val, function( val ) {\\n\\t\\t\\t\\t\\treturn { name: elem.name, value: val.replace( rCRLF, \\\"\\\\r\\\\n\\\" ) };\\n\\t\\t\\t\\t} );\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn { name: elem.name, value: val.replace( rCRLF, \\\"\\\\r\\\\n\\\" ) };\\n\\t\\t} ).get();\\n\\t}\\n} );\\n\\n\\nvar\\n\\tr20 = /%20/g,\\n\\trhash = /#.*$/,\\n\\trantiCache = /([?&])_=[^&]*/,\\n\\trheaders = /^(.*?):[ \\\\t]*([^\\\\r\\\\n]*)$/mg,\\n\\n\\t// #7653, #8125, #8152: local protocol detection\\n\\trlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\\n\\trnoContent = /^(?:GET|HEAD)$/,\\n\\trprotocol = /^\\\\/\\\\//,\\n\\n\\t/* Prefilters\\n\\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\\n\\t * 2) These are called:\\n\\t *    - BEFORE asking for a transport\\n\\t *    - AFTER param serialization (s.data is a string if s.processData is true)\\n\\t * 3) key is the dataType\\n\\t * 4) the catchall symbol \\\"*\\\" can be used\\n\\t * 5) execution will start with transport dataType and THEN continue down to \\\"*\\\" if needed\\n\\t */\\n\\tprefilters = {},\\n\\n\\t/* Transports bindings\\n\\t * 1) key is the dataType\\n\\t * 2) the catchall symbol \\\"*\\\" can be used\\n\\t * 3) selection will start with transport dataType and THEN go to \\\"*\\\" if needed\\n\\t */\\n\\ttransports = {},\\n\\n\\t// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\\n\\tallTypes = \\\"*/\\\".concat( \\\"*\\\" ),\\n\\n\\t// Anchor tag for parsing the document origin\\n\\toriginAnchor = document.createElement( \\\"a\\\" );\\n\\toriginAnchor.href = location.href;\\n\\n// Base \\\"constructor\\\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\\nfunction addToPrefiltersOrTransports( structure ) {\\n\\n\\t// dataTypeExpression is optional and defaults to \\\"*\\\"\\n\\treturn function( dataTypeExpression, func ) {\\n\\n\\t\\tif ( typeof dataTypeExpression !== \\\"string\\\" ) {\\n\\t\\t\\tfunc = dataTypeExpression;\\n\\t\\t\\tdataTypeExpression = \\\"*\\\";\\n\\t\\t}\\n\\n\\t\\tvar dataType,\\n\\t\\t\\ti = 0,\\n\\t\\t\\tdataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];\\n\\n\\t\\tif ( jQuery.isFunction( func ) ) {\\n\\n\\t\\t\\t// For each dataType in the dataTypeExpression\\n\\t\\t\\twhile ( ( dataType = dataTypes[ i++ ] ) ) {\\n\\n\\t\\t\\t\\t// Prepend if requested\\n\\t\\t\\t\\tif ( dataType[ 0 ] === \\\"+\\\" ) {\\n\\t\\t\\t\\t\\tdataType = dataType.slice( 1 ) || \\\"*\\\";\\n\\t\\t\\t\\t\\t( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );\\n\\n\\t\\t\\t\\t// Otherwise append\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t( structure[ dataType ] = structure[ dataType ] || [] ).push( func );\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t};\\n}\\n\\n// Base inspection function for prefilters and transports\\nfunction inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {\\n\\n\\tvar inspected = {},\\n\\t\\tseekingTransport = ( structure === transports );\\n\\n\\tfunction inspect( dataType ) {\\n\\t\\tvar selected;\\n\\t\\tinspected[ dataType ] = true;\\n\\t\\tjQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {\\n\\t\\t\\tvar dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );\\n\\t\\t\\tif ( typeof dataTypeOrTransport === \\\"string\\\" &&\\n\\t\\t\\t\\t!seekingTransport && !inspected[ dataTypeOrTransport ] ) {\\n\\n\\t\\t\\t\\toptions.dataTypes.unshift( dataTypeOrTransport );\\n\\t\\t\\t\\tinspect( dataTypeOrTransport );\\n\\t\\t\\t\\treturn false;\\n\\t\\t\\t} else if ( seekingTransport ) {\\n\\t\\t\\t\\treturn !( selected = dataTypeOrTransport );\\n\\t\\t\\t}\\n\\t\\t} );\\n\\t\\treturn selected;\\n\\t}\\n\\n\\treturn inspect( options.dataTypes[ 0 ] ) || !inspected[ \\\"*\\\" ] && inspect( \\\"*\\\" );\\n}\\n\\n// A special extend for ajax options\\n// that takes \\\"flat\\\" options (not to be deep extended)\\n// Fixes #9887\\nfunction ajaxExtend( target, src ) {\\n\\tvar key, deep,\\n\\t\\tflatOptions = jQuery.ajaxSettings.flatOptions || {};\\n\\n\\tfor ( key in src ) {\\n\\t\\tif ( src[ key ] !== undefined ) {\\n\\t\\t\\t( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];\\n\\t\\t}\\n\\t}\\n\\tif ( deep ) {\\n\\t\\tjQuery.extend( true, target, deep );\\n\\t}\\n\\n\\treturn target;\\n}\\n\\n/* Handles responses to an ajax request:\\n * - finds the right dataType (mediates between content-type and expected dataType)\\n * - returns the corresponding response\\n */\\nfunction ajaxHandleResponses( s, jqXHR, responses ) {\\n\\n\\tvar ct, type, finalDataType, firstDataType,\\n\\t\\tcontents = s.contents,\\n\\t\\tdataTypes = s.dataTypes;\\n\\n\\t// Remove auto dataType and get content-type in the process\\n\\twhile ( dataTypes[ 0 ] === \\\"*\\\" ) {\\n\\t\\tdataTypes.shift();\\n\\t\\tif ( ct === undefined ) {\\n\\t\\t\\tct = s.mimeType || jqXHR.getResponseHeader( \\\"Content-Type\\\" );\\n\\t\\t}\\n\\t}\\n\\n\\t// Check if we're dealing with a known content-type\\n\\tif ( ct ) {\\n\\t\\tfor ( type in contents ) {\\n\\t\\t\\tif ( contents[ type ] && contents[ type ].test( ct ) ) {\\n\\t\\t\\t\\tdataTypes.unshift( type );\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t// Check to see if we have a response for the expected dataType\\n\\tif ( dataTypes[ 0 ] in responses ) {\\n\\t\\tfinalDataType = dataTypes[ 0 ];\\n\\t} else {\\n\\n\\t\\t// Try convertible dataTypes\\n\\t\\tfor ( type in responses ) {\\n\\t\\t\\tif ( !dataTypes[ 0 ] || s.converters[ type + \\\" \\\" + dataTypes[ 0 ] ] ) {\\n\\t\\t\\t\\tfinalDataType = type;\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\t\\t\\tif ( !firstDataType ) {\\n\\t\\t\\t\\tfirstDataType = type;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// Or just use first one\\n\\t\\tfinalDataType = finalDataType || firstDataType;\\n\\t}\\n\\n\\t// If we found a dataType\\n\\t// We add the dataType to the list if needed\\n\\t// and return the corresponding response\\n\\tif ( finalDataType ) {\\n\\t\\tif ( finalDataType !== dataTypes[ 0 ] ) {\\n\\t\\t\\tdataTypes.unshift( finalDataType );\\n\\t\\t}\\n\\t\\treturn responses[ finalDataType ];\\n\\t}\\n}\\n\\n/* Chain conversions given the request and the original response\\n * Also sets the responseXXX fields on the jqXHR instance\\n */\\nfunction ajaxConvert( s, response, jqXHR, isSuccess ) {\\n\\tvar conv2, current, conv, tmp, prev,\\n\\t\\tconverters = {},\\n\\n\\t\\t// Work with a copy of dataTypes in case we need to modify it for conversion\\n\\t\\tdataTypes = s.dataTypes.slice();\\n\\n\\t// Create converters map with lowercased keys\\n\\tif ( dataTypes[ 1 ] ) {\\n\\t\\tfor ( conv in s.converters ) {\\n\\t\\t\\tconverters[ conv.toLowerCase() ] = s.converters[ conv ];\\n\\t\\t}\\n\\t}\\n\\n\\tcurrent = dataTypes.shift();\\n\\n\\t// Convert to each sequential dataType\\n\\twhile ( current ) {\\n\\n\\t\\tif ( s.responseFields[ current ] ) {\\n\\t\\t\\tjqXHR[ s.responseFields[ current ] ] = response;\\n\\t\\t}\\n\\n\\t\\t// Apply the dataFilter if provided\\n\\t\\tif ( !prev && isSuccess && s.dataFilter ) {\\n\\t\\t\\tresponse = s.dataFilter( response, s.dataType );\\n\\t\\t}\\n\\n\\t\\tprev = current;\\n\\t\\tcurrent = dataTypes.shift();\\n\\n\\t\\tif ( current ) {\\n\\n\\t\\t\\t// There's only work to do if current dataType is non-auto\\n\\t\\t\\tif ( current === \\\"*\\\" ) {\\n\\n\\t\\t\\t\\tcurrent = prev;\\n\\n\\t\\t\\t// Convert response if prev dataType is non-auto and differs from current\\n\\t\\t\\t} else if ( prev !== \\\"*\\\" && prev !== current ) {\\n\\n\\t\\t\\t\\t// Seek a direct converter\\n\\t\\t\\t\\tconv = converters[ prev + \\\" \\\" + current ] || converters[ \\\"* \\\" + current ];\\n\\n\\t\\t\\t\\t// If none found, seek a pair\\n\\t\\t\\t\\tif ( !conv ) {\\n\\t\\t\\t\\t\\tfor ( conv2 in converters ) {\\n\\n\\t\\t\\t\\t\\t\\t// If conv2 outputs current\\n\\t\\t\\t\\t\\t\\ttmp = conv2.split( \\\" \\\" );\\n\\t\\t\\t\\t\\t\\tif ( tmp[ 1 ] === current ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t// If prev can be converted to accepted input\\n\\t\\t\\t\\t\\t\\t\\tconv = converters[ prev + \\\" \\\" + tmp[ 0 ] ] ||\\n\\t\\t\\t\\t\\t\\t\\t\\tconverters[ \\\"* \\\" + tmp[ 0 ] ];\\n\\t\\t\\t\\t\\t\\t\\tif ( conv ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t// Condense equivalence converters\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( conv === true ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tconv = converters[ conv2 ];\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t// Otherwise, insert the intermediate dataType\\n\\t\\t\\t\\t\\t\\t\\t\\t} else if ( converters[ conv2 ] !== true ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tcurrent = tmp[ 0 ];\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tdataTypes.unshift( tmp[ 1 ] );\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Apply converter (if not an equivalence)\\n\\t\\t\\t\\tif ( conv !== true ) {\\n\\n\\t\\t\\t\\t\\t// Unless errors are allowed to bubble, catch and return them\\n\\t\\t\\t\\t\\tif ( conv && s.throws ) {\\n\\t\\t\\t\\t\\t\\tresponse = conv( response );\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\ttry {\\n\\t\\t\\t\\t\\t\\t\\tresponse = conv( response );\\n\\t\\t\\t\\t\\t\\t} catch ( e ) {\\n\\t\\t\\t\\t\\t\\t\\treturn {\\n\\t\\t\\t\\t\\t\\t\\t\\tstate: \\\"parsererror\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\terror: conv ? e : \\\"No conversion from \\\" + prev + \\\" to \\\" + current\\n\\t\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\treturn { state: \\\"success\\\", data: response };\\n}\\n\\njQuery.extend( {\\n\\n\\t// Counter for holding the number of active queries\\n\\tactive: 0,\\n\\n\\t// Last-Modified header cache for next request\\n\\tlastModified: {},\\n\\tetag: {},\\n\\n\\tajaxSettings: {\\n\\t\\turl: location.href,\\n\\t\\ttype: \\\"GET\\\",\\n\\t\\tisLocal: rlocalProtocol.test( location.protocol ),\\n\\t\\tglobal: true,\\n\\t\\tprocessData: true,\\n\\t\\tasync: true,\\n\\t\\tcontentType: \\\"application/x-www-form-urlencoded; charset=UTF-8\\\",\\n\\n\\t\\t/*\\n\\t\\ttimeout: 0,\\n\\t\\tdata: null,\\n\\t\\tdataType: null,\\n\\t\\tusername: null,\\n\\t\\tpassword: null,\\n\\t\\tcache: null,\\n\\t\\tthrows: false,\\n\\t\\ttraditional: false,\\n\\t\\theaders: {},\\n\\t\\t*/\\n\\n\\t\\taccepts: {\\n\\t\\t\\t\\\"*\\\": allTypes,\\n\\t\\t\\ttext: \\\"text/plain\\\",\\n\\t\\t\\thtml: \\\"text/html\\\",\\n\\t\\t\\txml: \\\"application/xml, text/xml\\\",\\n\\t\\t\\tjson: \\\"application/json, text/javascript\\\"\\n\\t\\t},\\n\\n\\t\\tcontents: {\\n\\t\\t\\txml: /\\\\bxml\\\\b/,\\n\\t\\t\\thtml: /\\\\bhtml/,\\n\\t\\t\\tjson: /\\\\bjson\\\\b/\\n\\t\\t},\\n\\n\\t\\tresponseFields: {\\n\\t\\t\\txml: \\\"responseXML\\\",\\n\\t\\t\\ttext: \\\"responseText\\\",\\n\\t\\t\\tjson: \\\"responseJSON\\\"\\n\\t\\t},\\n\\n\\t\\t// Data converters\\n\\t\\t// Keys separate source (or catchall \\\"*\\\") and destination types with a single space\\n\\t\\tconverters: {\\n\\n\\t\\t\\t// Convert anything to text\\n\\t\\t\\t\\\"* text\\\": String,\\n\\n\\t\\t\\t// Text to html (true = no transformation)\\n\\t\\t\\t\\\"text html\\\": true,\\n\\n\\t\\t\\t// Evaluate text as a json expression\\n\\t\\t\\t\\\"text json\\\": JSON.parse,\\n\\n\\t\\t\\t// Parse text as xml\\n\\t\\t\\t\\\"text xml\\\": jQuery.parseXML\\n\\t\\t},\\n\\n\\t\\t// For options that shouldn't be deep extended:\\n\\t\\t// you can add your own custom options here if\\n\\t\\t// and when you create one that shouldn't be\\n\\t\\t// deep extended (see ajaxExtend)\\n\\t\\tflatOptions: {\\n\\t\\t\\turl: true,\\n\\t\\t\\tcontext: true\\n\\t\\t}\\n\\t},\\n\\n\\t// Creates a full fledged settings object into target\\n\\t// with both ajaxSettings and settings fields.\\n\\t// If target is omitted, writes into ajaxSettings.\\n\\tajaxSetup: function( target, settings ) {\\n\\t\\treturn settings ?\\n\\n\\t\\t\\t// Building a settings object\\n\\t\\t\\tajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :\\n\\n\\t\\t\\t// Extending ajaxSettings\\n\\t\\t\\tajaxExtend( jQuery.ajaxSettings, target );\\n\\t},\\n\\n\\tajaxPrefilter: addToPrefiltersOrTransports( prefilters ),\\n\\tajaxTransport: addToPrefiltersOrTransports( transports ),\\n\\n\\t// Main method\\n\\tajax: function( url, options ) {\\n\\n\\t\\t// If url is an object, simulate pre-1.5 signature\\n\\t\\tif ( typeof url === \\\"object\\\" ) {\\n\\t\\t\\toptions = url;\\n\\t\\t\\turl = undefined;\\n\\t\\t}\\n\\n\\t\\t// Force options to be an object\\n\\t\\toptions = options || {};\\n\\n\\t\\tvar transport,\\n\\n\\t\\t\\t// URL without anti-cache param\\n\\t\\t\\tcacheURL,\\n\\n\\t\\t\\t// Response headers\\n\\t\\t\\tresponseHeadersString,\\n\\t\\t\\tresponseHeaders,\\n\\n\\t\\t\\t// timeout handle\\n\\t\\t\\ttimeoutTimer,\\n\\n\\t\\t\\t// Url cleanup var\\n\\t\\t\\turlAnchor,\\n\\n\\t\\t\\t// Request state (becomes false upon send and true upon completion)\\n\\t\\t\\tcompleted,\\n\\n\\t\\t\\t// To know if global events are to be dispatched\\n\\t\\t\\tfireGlobals,\\n\\n\\t\\t\\t// Loop variable\\n\\t\\t\\ti,\\n\\n\\t\\t\\t// uncached part of the url\\n\\t\\t\\tuncached,\\n\\n\\t\\t\\t// Create the final options object\\n\\t\\t\\ts = jQuery.ajaxSetup( {}, options ),\\n\\n\\t\\t\\t// Callbacks context\\n\\t\\t\\tcallbackContext = s.context || s,\\n\\n\\t\\t\\t// Context for global events is callbackContext if it is a DOM node or jQuery collection\\n\\t\\t\\tglobalEventContext = s.context &&\\n\\t\\t\\t\\t( callbackContext.nodeType || callbackContext.jquery ) ?\\n\\t\\t\\t\\t\\tjQuery( callbackContext ) :\\n\\t\\t\\t\\t\\tjQuery.event,\\n\\n\\t\\t\\t// Deferreds\\n\\t\\t\\tdeferred = jQuery.Deferred(),\\n\\t\\t\\tcompleteDeferred = jQuery.Callbacks( \\\"once memory\\\" ),\\n\\n\\t\\t\\t// Status-dependent callbacks\\n\\t\\t\\tstatusCode = s.statusCode || {},\\n\\n\\t\\t\\t// Headers (they are sent all at once)\\n\\t\\t\\trequestHeaders = {},\\n\\t\\t\\trequestHeadersNames = {},\\n\\n\\t\\t\\t// Default abort message\\n\\t\\t\\tstrAbort = \\\"canceled\\\",\\n\\n\\t\\t\\t// Fake xhr\\n\\t\\t\\tjqXHR = {\\n\\t\\t\\t\\treadyState: 0,\\n\\n\\t\\t\\t\\t// Builds headers hashtable if needed\\n\\t\\t\\t\\tgetResponseHeader: function( key ) {\\n\\t\\t\\t\\t\\tvar match;\\n\\t\\t\\t\\t\\tif ( completed ) {\\n\\t\\t\\t\\t\\t\\tif ( !responseHeaders ) {\\n\\t\\t\\t\\t\\t\\t\\tresponseHeaders = {};\\n\\t\\t\\t\\t\\t\\t\\twhile ( ( match = rheaders.exec( responseHeadersString ) ) ) {\\n\\t\\t\\t\\t\\t\\t\\t\\tresponseHeaders[ match[ 1 ].toLowerCase() ] = match[ 2 ];\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tmatch = responseHeaders[ key.toLowerCase() ];\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\treturn match == null ? null : match;\\n\\t\\t\\t\\t},\\n\\n\\t\\t\\t\\t// Raw string\\n\\t\\t\\t\\tgetAllResponseHeaders: function() {\\n\\t\\t\\t\\t\\treturn completed ? responseHeadersString : null;\\n\\t\\t\\t\\t},\\n\\n\\t\\t\\t\\t// Caches the header\\n\\t\\t\\t\\tsetRequestHeader: function( name, value ) {\\n\\t\\t\\t\\t\\tif ( completed == null ) {\\n\\t\\t\\t\\t\\t\\tname = requestHeadersNames[ name.toLowerCase() ] =\\n\\t\\t\\t\\t\\t\\t\\trequestHeadersNames[ name.toLowerCase() ] || name;\\n\\t\\t\\t\\t\\t\\trequestHeaders[ name ] = value;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\treturn this;\\n\\t\\t\\t\\t},\\n\\n\\t\\t\\t\\t// Overrides response content-type header\\n\\t\\t\\t\\toverrideMimeType: function( type ) {\\n\\t\\t\\t\\t\\tif ( completed == null ) {\\n\\t\\t\\t\\t\\t\\ts.mimeType = type;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\treturn this;\\n\\t\\t\\t\\t},\\n\\n\\t\\t\\t\\t// Status-dependent callbacks\\n\\t\\t\\t\\tstatusCode: function( map ) {\\n\\t\\t\\t\\t\\tvar code;\\n\\t\\t\\t\\t\\tif ( map ) {\\n\\t\\t\\t\\t\\t\\tif ( completed ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t// Execute the appropriate callbacks\\n\\t\\t\\t\\t\\t\\t\\tjqXHR.always( map[ jqXHR.status ] );\\n\\t\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\t\\t// Lazy-add the new callbacks in a way that preserves old ones\\n\\t\\t\\t\\t\\t\\t\\tfor ( code in map ) {\\n\\t\\t\\t\\t\\t\\t\\t\\tstatusCode[ code ] = [ statusCode[ code ], map[ code ] ];\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\treturn this;\\n\\t\\t\\t\\t},\\n\\n\\t\\t\\t\\t// Cancel the request\\n\\t\\t\\t\\tabort: function( statusText ) {\\n\\t\\t\\t\\t\\tvar finalText = statusText || strAbort;\\n\\t\\t\\t\\t\\tif ( transport ) {\\n\\t\\t\\t\\t\\t\\ttransport.abort( finalText );\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tdone( 0, finalText );\\n\\t\\t\\t\\t\\treturn this;\\n\\t\\t\\t\\t}\\n\\t\\t\\t};\\n\\n\\t\\t// Attach deferreds\\n\\t\\tdeferred.promise( jqXHR );\\n\\n\\t\\t// Add protocol if not provided (prefilters might expect it)\\n\\t\\t// Handle falsy url in the settings object (#10093: consistency with old signature)\\n\\t\\t// We also use the url parameter if available\\n\\t\\ts.url = ( ( url || s.url || location.href ) + \\\"\\\" )\\n\\t\\t\\t.replace( rprotocol, location.protocol + \\\"//\\\" );\\n\\n\\t\\t// Alias method option to type as per ticket #12004\\n\\t\\ts.type = options.method || options.type || s.method || s.type;\\n\\n\\t\\t// Extract dataTypes list\\n\\t\\ts.dataTypes = ( s.dataType || \\\"*\\\" ).toLowerCase().match( rnothtmlwhite ) || [ \\\"\\\" ];\\n\\n\\t\\t// A cross-domain request is in order when the origin doesn't match the current origin.\\n\\t\\tif ( s.crossDomain == null ) {\\n\\t\\t\\turlAnchor = document.createElement( \\\"a\\\" );\\n\\n\\t\\t\\t// Support: IE <=8 - 11, Edge 12 - 13\\n\\t\\t\\t// IE throws exception on accessing the href property if url is malformed,\\n\\t\\t\\t// e.g. http://example.com:80x/\\n\\t\\t\\ttry {\\n\\t\\t\\t\\turlAnchor.href = s.url;\\n\\n\\t\\t\\t\\t// Support: IE <=8 - 11 only\\n\\t\\t\\t\\t// Anchor's host property isn't correctly set when s.url is relative\\n\\t\\t\\t\\turlAnchor.href = urlAnchor.href;\\n\\t\\t\\t\\ts.crossDomain = originAnchor.protocol + \\\"//\\\" + originAnchor.host !==\\n\\t\\t\\t\\t\\turlAnchor.protocol + \\\"//\\\" + urlAnchor.host;\\n\\t\\t\\t} catch ( e ) {\\n\\n\\t\\t\\t\\t// If there is an error parsing the URL, assume it is crossDomain,\\n\\t\\t\\t\\t// it can be rejected by the transport if it is invalid\\n\\t\\t\\t\\ts.crossDomain = true;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// Convert data if not already a string\\n\\t\\tif ( s.data && s.processData && typeof s.data !== \\\"string\\\" ) {\\n\\t\\t\\ts.data = jQuery.param( s.data, s.traditional );\\n\\t\\t}\\n\\n\\t\\t// Apply prefilters\\n\\t\\tinspectPrefiltersOrTransports( prefilters, s, options, jqXHR );\\n\\n\\t\\t// If request was aborted inside a prefilter, stop there\\n\\t\\tif ( completed ) {\\n\\t\\t\\treturn jqXHR;\\n\\t\\t}\\n\\n\\t\\t// We can fire global events as of now if asked to\\n\\t\\t// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)\\n\\t\\tfireGlobals = jQuery.event && s.global;\\n\\n\\t\\t// Watch for a new set of requests\\n\\t\\tif ( fireGlobals && jQuery.active++ === 0 ) {\\n\\t\\t\\tjQuery.event.trigger( \\\"ajaxStart\\\" );\\n\\t\\t}\\n\\n\\t\\t// Uppercase the type\\n\\t\\ts.type = s.type.toUpperCase();\\n\\n\\t\\t// Determine if request has content\\n\\t\\ts.hasContent = !rnoContent.test( s.type );\\n\\n\\t\\t// Save the URL in case we're toying with the If-Modified-Since\\n\\t\\t// and/or If-None-Match header later on\\n\\t\\t// Remove hash to simplify url manipulation\\n\\t\\tcacheURL = s.url.replace( rhash, \\\"\\\" );\\n\\n\\t\\t// More options handling for requests with no content\\n\\t\\tif ( !s.hasContent ) {\\n\\n\\t\\t\\t// Remember the hash so we can put it back\\n\\t\\t\\tuncached = s.url.slice( cacheURL.length );\\n\\n\\t\\t\\t// If data is available, append data to url\\n\\t\\t\\tif ( s.data ) {\\n\\t\\t\\t\\tcacheURL += ( rquery.test( cacheURL ) ? \\\"&\\\" : \\\"?\\\" ) + s.data;\\n\\n\\t\\t\\t\\t// #9682: remove data so that it's not used in an eventual retry\\n\\t\\t\\t\\tdelete s.data;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Add or update anti-cache param if needed\\n\\t\\t\\tif ( s.cache === false ) {\\n\\t\\t\\t\\tcacheURL = cacheURL.replace( rantiCache, \\\"$1\\\" );\\n\\t\\t\\t\\tuncached = ( rquery.test( cacheURL ) ? \\\"&\\\" : \\\"?\\\" ) + \\\"_=\\\" + ( nonce++ ) + uncached;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Put hash and anti-cache on the URL that will be requested (gh-1732)\\n\\t\\t\\ts.url = cacheURL + uncached;\\n\\n\\t\\t// Change '%20' to '+' if this is encoded form body content (gh-2658)\\n\\t\\t} else if ( s.data && s.processData &&\\n\\t\\t\\t( s.contentType || \\\"\\\" ).indexOf( \\\"application/x-www-form-urlencoded\\\" ) === 0 ) {\\n\\t\\t\\ts.data = s.data.replace( r20, \\\"+\\\" );\\n\\t\\t}\\n\\n\\t\\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\\n\\t\\tif ( s.ifModified ) {\\n\\t\\t\\tif ( jQuery.lastModified[ cacheURL ] ) {\\n\\t\\t\\t\\tjqXHR.setRequestHeader( \\\"If-Modified-Since\\\", jQuery.lastModified[ cacheURL ] );\\n\\t\\t\\t}\\n\\t\\t\\tif ( jQuery.etag[ cacheURL ] ) {\\n\\t\\t\\t\\tjqXHR.setRequestHeader( \\\"If-None-Match\\\", jQuery.etag[ cacheURL ] );\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// Set the correct header, if data is being sent\\n\\t\\tif ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {\\n\\t\\t\\tjqXHR.setRequestHeader( \\\"Content-Type\\\", s.contentType );\\n\\t\\t}\\n\\n\\t\\t// Set the Accepts header for the server, depending on the dataType\\n\\t\\tjqXHR.setRequestHeader(\\n\\t\\t\\t\\\"Accept\\\",\\n\\t\\t\\ts.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?\\n\\t\\t\\t\\ts.accepts[ s.dataTypes[ 0 ] ] +\\n\\t\\t\\t\\t\\t( s.dataTypes[ 0 ] !== \\\"*\\\" ? \\\", \\\" + allTypes + \\\"; q=0.01\\\" : \\\"\\\" ) :\\n\\t\\t\\t\\ts.accepts[ \\\"*\\\" ]\\n\\t\\t);\\n\\n\\t\\t// Check for headers option\\n\\t\\tfor ( i in s.headers ) {\\n\\t\\t\\tjqXHR.setRequestHeader( i, s.headers[ i ] );\\n\\t\\t}\\n\\n\\t\\t// Allow custom headers/mimetypes and early abort\\n\\t\\tif ( s.beforeSend &&\\n\\t\\t\\t( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {\\n\\n\\t\\t\\t// Abort if not done already and return\\n\\t\\t\\treturn jqXHR.abort();\\n\\t\\t}\\n\\n\\t\\t// Aborting is no longer a cancellation\\n\\t\\tstrAbort = \\\"abort\\\";\\n\\n\\t\\t// Install callbacks on deferreds\\n\\t\\tcompleteDeferred.add( s.complete );\\n\\t\\tjqXHR.done( s.success );\\n\\t\\tjqXHR.fail( s.error );\\n\\n\\t\\t// Get transport\\n\\t\\ttransport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );\\n\\n\\t\\t// If no transport, we auto-abort\\n\\t\\tif ( !transport ) {\\n\\t\\t\\tdone( -1, \\\"No Transport\\\" );\\n\\t\\t} else {\\n\\t\\t\\tjqXHR.readyState = 1;\\n\\n\\t\\t\\t// Send global event\\n\\t\\t\\tif ( fireGlobals ) {\\n\\t\\t\\t\\tglobalEventContext.trigger( \\\"ajaxSend\\\", [ jqXHR, s ] );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// If request was aborted inside ajaxSend, stop there\\n\\t\\t\\tif ( completed ) {\\n\\t\\t\\t\\treturn jqXHR;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Timeout\\n\\t\\t\\tif ( s.async && s.timeout > 0 ) {\\n\\t\\t\\t\\ttimeoutTimer = window.setTimeout( function() {\\n\\t\\t\\t\\t\\tjqXHR.abort( \\\"timeout\\\" );\\n\\t\\t\\t\\t}, s.timeout );\\n\\t\\t\\t}\\n\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tcompleted = false;\\n\\t\\t\\t\\ttransport.send( requestHeaders, done );\\n\\t\\t\\t} catch ( e ) {\\n\\n\\t\\t\\t\\t// Rethrow post-completion exceptions\\n\\t\\t\\t\\tif ( completed ) {\\n\\t\\t\\t\\t\\tthrow e;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Propagate others as results\\n\\t\\t\\t\\tdone( -1, e );\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// Callback for when everything is done\\n\\t\\tfunction done( status, nativeStatusText, responses, headers ) {\\n\\t\\t\\tvar isSuccess, success, error, response, modified,\\n\\t\\t\\t\\tstatusText = nativeStatusText;\\n\\n\\t\\t\\t// Ignore repeat invocations\\n\\t\\t\\tif ( completed ) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tcompleted = true;\\n\\n\\t\\t\\t// Clear timeout if it exists\\n\\t\\t\\tif ( timeoutTimer ) {\\n\\t\\t\\t\\twindow.clearTimeout( timeoutTimer );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Dereference transport for early garbage collection\\n\\t\\t\\t// (no matter how long the jqXHR object will be used)\\n\\t\\t\\ttransport = undefined;\\n\\n\\t\\t\\t// Cache response headers\\n\\t\\t\\tresponseHeadersString = headers || \\\"\\\";\\n\\n\\t\\t\\t// Set readyState\\n\\t\\t\\tjqXHR.readyState = status > 0 ? 4 : 0;\\n\\n\\t\\t\\t// Determine if successful\\n\\t\\t\\tisSuccess = status >= 200 && status < 300 || status === 304;\\n\\n\\t\\t\\t// Get response data\\n\\t\\t\\tif ( responses ) {\\n\\t\\t\\t\\tresponse = ajaxHandleResponses( s, jqXHR, responses );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Convert no matter what (that way responseXXX fields are always set)\\n\\t\\t\\tresponse = ajaxConvert( s, response, jqXHR, isSuccess );\\n\\n\\t\\t\\t// If successful, handle type chaining\\n\\t\\t\\tif ( isSuccess ) {\\n\\n\\t\\t\\t\\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\\n\\t\\t\\t\\tif ( s.ifModified ) {\\n\\t\\t\\t\\t\\tmodified = jqXHR.getResponseHeader( \\\"Last-Modified\\\" );\\n\\t\\t\\t\\t\\tif ( modified ) {\\n\\t\\t\\t\\t\\t\\tjQuery.lastModified[ cacheURL ] = modified;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tmodified = jqXHR.getResponseHeader( \\\"etag\\\" );\\n\\t\\t\\t\\t\\tif ( modified ) {\\n\\t\\t\\t\\t\\t\\tjQuery.etag[ cacheURL ] = modified;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// if no content\\n\\t\\t\\t\\tif ( status === 204 || s.type === \\\"HEAD\\\" ) {\\n\\t\\t\\t\\t\\tstatusText = \\\"nocontent\\\";\\n\\n\\t\\t\\t\\t// if not modified\\n\\t\\t\\t\\t} else if ( status === 304 ) {\\n\\t\\t\\t\\t\\tstatusText = \\\"notmodified\\\";\\n\\n\\t\\t\\t\\t// If we have data, let's convert it\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tstatusText = response.state;\\n\\t\\t\\t\\t\\tsuccess = response.data;\\n\\t\\t\\t\\t\\terror = response.error;\\n\\t\\t\\t\\t\\tisSuccess = !error;\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t// Extract error from statusText and normalize for non-aborts\\n\\t\\t\\t\\terror = statusText;\\n\\t\\t\\t\\tif ( status || !statusText ) {\\n\\t\\t\\t\\t\\tstatusText = \\\"error\\\";\\n\\t\\t\\t\\t\\tif ( status < 0 ) {\\n\\t\\t\\t\\t\\t\\tstatus = 0;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Set data for the fake xhr object\\n\\t\\t\\tjqXHR.status = status;\\n\\t\\t\\tjqXHR.statusText = ( nativeStatusText || statusText ) + \\\"\\\";\\n\\n\\t\\t\\t// Success/Error\\n\\t\\t\\tif ( isSuccess ) {\\n\\t\\t\\t\\tdeferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tdeferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Status-dependent callbacks\\n\\t\\t\\tjqXHR.statusCode( statusCode );\\n\\t\\t\\tstatusCode = undefined;\\n\\n\\t\\t\\tif ( fireGlobals ) {\\n\\t\\t\\t\\tglobalEventContext.trigger( isSuccess ? \\\"ajaxSuccess\\\" : \\\"ajaxError\\\",\\n\\t\\t\\t\\t\\t[ jqXHR, s, isSuccess ? success : error ] );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Complete\\n\\t\\t\\tcompleteDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );\\n\\n\\t\\t\\tif ( fireGlobals ) {\\n\\t\\t\\t\\tglobalEventContext.trigger( \\\"ajaxComplete\\\", [ jqXHR, s ] );\\n\\n\\t\\t\\t\\t// Handle the global AJAX counter\\n\\t\\t\\t\\tif ( !( --jQuery.active ) ) {\\n\\t\\t\\t\\t\\tjQuery.event.trigger( \\\"ajaxStop\\\" );\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn jqXHR;\\n\\t},\\n\\n\\tgetJSON: function( url, data, callback ) {\\n\\t\\treturn jQuery.get( url, data, callback, \\\"json\\\" );\\n\\t},\\n\\n\\tgetScript: function( url, callback ) {\\n\\t\\treturn jQuery.get( url, undefined, callback, \\\"script\\\" );\\n\\t}\\n} );\\n\\njQuery.each( [ \\\"get\\\", \\\"post\\\" ], function( i, method ) {\\n\\tjQuery[ method ] = function( url, data, callback, type ) {\\n\\n\\t\\t// Shift arguments if data argument was omitted\\n\\t\\tif ( jQuery.isFunction( data ) ) {\\n\\t\\t\\ttype = type || callback;\\n\\t\\t\\tcallback = data;\\n\\t\\t\\tdata = undefined;\\n\\t\\t}\\n\\n\\t\\t// The url can be an options object (which then must have .url)\\n\\t\\treturn jQuery.ajax( jQuery.extend( {\\n\\t\\t\\turl: url,\\n\\t\\t\\ttype: method,\\n\\t\\t\\tdataType: type,\\n\\t\\t\\tdata: data,\\n\\t\\t\\tsuccess: callback\\n\\t\\t}, jQuery.isPlainObject( url ) && url ) );\\n\\t};\\n} );\\n\\n\\njQuery._evalUrl = function( url ) {\\n\\treturn jQuery.ajax( {\\n\\t\\turl: url,\\n\\n\\t\\t// Make this explicit, since user can override this through ajaxSetup (#11264)\\n\\t\\ttype: \\\"GET\\\",\\n\\t\\tdataType: \\\"script\\\",\\n\\t\\tcache: true,\\n\\t\\tasync: false,\\n\\t\\tglobal: false,\\n\\t\\t\\\"throws\\\": true\\n\\t} );\\n};\\n\\n\\njQuery.fn.extend( {\\n\\twrapAll: function( html ) {\\n\\t\\tvar wrap;\\n\\n\\t\\tif ( this[ 0 ] ) {\\n\\t\\t\\tif ( jQuery.isFunction( html ) ) {\\n\\t\\t\\t\\thtml = html.call( this[ 0 ] );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// The elements to wrap the target around\\n\\t\\t\\twrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\\n\\n\\t\\t\\tif ( this[ 0 ].parentNode ) {\\n\\t\\t\\t\\twrap.insertBefore( this[ 0 ] );\\n\\t\\t\\t}\\n\\n\\t\\t\\twrap.map( function() {\\n\\t\\t\\t\\tvar elem = this;\\n\\n\\t\\t\\t\\twhile ( elem.firstElementChild ) {\\n\\t\\t\\t\\t\\telem = elem.firstElementChild;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn elem;\\n\\t\\t\\t} ).append( this );\\n\\t\\t}\\n\\n\\t\\treturn this;\\n\\t},\\n\\n\\twrapInner: function( html ) {\\n\\t\\tif ( jQuery.isFunction( html ) ) {\\n\\t\\t\\treturn this.each( function( i ) {\\n\\t\\t\\t\\tjQuery( this ).wrapInner( html.call( this, i ) );\\n\\t\\t\\t} );\\n\\t\\t}\\n\\n\\t\\treturn this.each( function() {\\n\\t\\t\\tvar self = jQuery( this ),\\n\\t\\t\\t\\tcontents = self.contents();\\n\\n\\t\\t\\tif ( contents.length ) {\\n\\t\\t\\t\\tcontents.wrapAll( html );\\n\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tself.append( html );\\n\\t\\t\\t}\\n\\t\\t} );\\n\\t},\\n\\n\\twrap: function( html ) {\\n\\t\\tvar isFunction = jQuery.isFunction( html );\\n\\n\\t\\treturn this.each( function( i ) {\\n\\t\\t\\tjQuery( this ).wrapAll( isFunction ? html.call( this, i ) : html );\\n\\t\\t} );\\n\\t},\\n\\n\\tunwrap: function( selector ) {\\n\\t\\tthis.parent( selector ).not( \\\"body\\\" ).each( function() {\\n\\t\\t\\tjQuery( this ).replaceWith( this.childNodes );\\n\\t\\t} );\\n\\t\\treturn this;\\n\\t}\\n} );\\n\\n\\njQuery.expr.pseudos.hidden = function( elem ) {\\n\\treturn !jQuery.expr.pseudos.visible( elem );\\n};\\njQuery.expr.pseudos.visible = function( elem ) {\\n\\treturn !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );\\n};\\n\\n\\n\\n\\njQuery.ajaxSettings.xhr = function() {\\n\\ttry {\\n\\t\\treturn new window.XMLHttpRequest();\\n\\t} catch ( e ) {}\\n};\\n\\nvar xhrSuccessStatus = {\\n\\n\\t\\t// File protocol always yields status code 0, assume 200\\n\\t\\t0: 200,\\n\\n\\t\\t// Support: IE <=9 only\\n\\t\\t// #1450: sometimes IE returns 1223 when it should be 204\\n\\t\\t1223: 204\\n\\t},\\n\\txhrSupported = jQuery.ajaxSettings.xhr();\\n\\nsupport.cors = !!xhrSupported && ( \\\"withCredentials\\\" in xhrSupported );\\nsupport.ajax = xhrSupported = !!xhrSupported;\\n\\njQuery.ajaxTransport( function( options ) {\\n\\tvar callback, errorCallback;\\n\\n\\t// Cross domain only allowed if supported through XMLHttpRequest\\n\\tif ( support.cors || xhrSupported && !options.crossDomain ) {\\n\\t\\treturn {\\n\\t\\t\\tsend: function( headers, complete ) {\\n\\t\\t\\t\\tvar i,\\n\\t\\t\\t\\t\\txhr = options.xhr();\\n\\n\\t\\t\\t\\txhr.open(\\n\\t\\t\\t\\t\\toptions.type,\\n\\t\\t\\t\\t\\toptions.url,\\n\\t\\t\\t\\t\\toptions.async,\\n\\t\\t\\t\\t\\toptions.username,\\n\\t\\t\\t\\t\\toptions.password\\n\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\t// Apply custom fields if provided\\n\\t\\t\\t\\tif ( options.xhrFields ) {\\n\\t\\t\\t\\t\\tfor ( i in options.xhrFields ) {\\n\\t\\t\\t\\t\\t\\txhr[ i ] = options.xhrFields[ i ];\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Override mime type if needed\\n\\t\\t\\t\\tif ( options.mimeType && xhr.overrideMimeType ) {\\n\\t\\t\\t\\t\\txhr.overrideMimeType( options.mimeType );\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// X-Requested-With header\\n\\t\\t\\t\\t// For cross-domain requests, seeing as conditions for a preflight are\\n\\t\\t\\t\\t// akin to a jigsaw puzzle, we simply never set it to be sure.\\n\\t\\t\\t\\t// (it can always be set on a per-request basis or even using ajaxSetup)\\n\\t\\t\\t\\t// For same-domain requests, won't change header if already provided.\\n\\t\\t\\t\\tif ( !options.crossDomain && !headers[ \\\"X-Requested-With\\\" ] ) {\\n\\t\\t\\t\\t\\theaders[ \\\"X-Requested-With\\\" ] = \\\"XMLHttpRequest\\\";\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Set headers\\n\\t\\t\\t\\tfor ( i in headers ) {\\n\\t\\t\\t\\t\\txhr.setRequestHeader( i, headers[ i ] );\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Callback\\n\\t\\t\\t\\tcallback = function( type ) {\\n\\t\\t\\t\\t\\treturn function() {\\n\\t\\t\\t\\t\\t\\tif ( callback ) {\\n\\t\\t\\t\\t\\t\\t\\tcallback = errorCallback = xhr.onload =\\n\\t\\t\\t\\t\\t\\t\\t\\txhr.onerror = xhr.onabort = xhr.onreadystatechange = null;\\n\\n\\t\\t\\t\\t\\t\\t\\tif ( type === \\\"abort\\\" ) {\\n\\t\\t\\t\\t\\t\\t\\t\\txhr.abort();\\n\\t\\t\\t\\t\\t\\t\\t} else if ( type === \\\"error\\\" ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t// Support: IE <=9 only\\n\\t\\t\\t\\t\\t\\t\\t\\t// On a manual native abort, IE9 throws\\n\\t\\t\\t\\t\\t\\t\\t\\t// errors on any property access that is not readyState\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( typeof xhr.status !== \\\"number\\\" ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tcomplete( 0, \\\"error\\\" );\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tcomplete(\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// File: protocol always yields status 0; see #8605, #14207\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\txhr.status,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\txhr.statusText\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tcomplete(\\n\\t\\t\\t\\t\\t\\t\\t\\t\\txhrSuccessStatus[ xhr.status ] || xhr.status,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\txhr.statusText,\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// Support: IE <=9 only\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// IE9 has no XHR2 but throws on binary (trac-11426)\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// For XHR2 non-text, let the caller handle it (gh-2498)\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t( xhr.responseType || \\\"text\\\" ) !== \\\"text\\\"  ||\\n\\t\\t\\t\\t\\t\\t\\t\\t\\ttypeof xhr.responseText !== \\\"string\\\" ?\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ binary: xhr.response } :\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ text: xhr.responseText },\\n\\t\\t\\t\\t\\t\\t\\t\\t\\txhr.getAllResponseHeaders()\\n\\t\\t\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\t// Listen to events\\n\\t\\t\\t\\txhr.onload = callback();\\n\\t\\t\\t\\terrorCallback = xhr.onerror = callback( \\\"error\\\" );\\n\\n\\t\\t\\t\\t// Support: IE 9 only\\n\\t\\t\\t\\t// Use onreadystatechange to replace onabort\\n\\t\\t\\t\\t// to handle uncaught aborts\\n\\t\\t\\t\\tif ( xhr.onabort !== undefined ) {\\n\\t\\t\\t\\t\\txhr.onabort = errorCallback;\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\txhr.onreadystatechange = function() {\\n\\n\\t\\t\\t\\t\\t\\t// Check readyState before timeout as it changes\\n\\t\\t\\t\\t\\t\\tif ( xhr.readyState === 4 ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t// Allow onerror to be called first,\\n\\t\\t\\t\\t\\t\\t\\t// but that will not handle a native abort\\n\\t\\t\\t\\t\\t\\t\\t// Also, save errorCallback to a variable\\n\\t\\t\\t\\t\\t\\t\\t// as xhr.onerror cannot be accessed\\n\\t\\t\\t\\t\\t\\t\\twindow.setTimeout( function() {\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( callback ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\terrorCallback();\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} );\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Create the abort callback\\n\\t\\t\\t\\tcallback = callback( \\\"abort\\\" );\\n\\n\\t\\t\\t\\ttry {\\n\\n\\t\\t\\t\\t\\t// Do send the request (this may raise an exception)\\n\\t\\t\\t\\t\\txhr.send( options.hasContent && options.data || null );\\n\\t\\t\\t\\t} catch ( e ) {\\n\\n\\t\\t\\t\\t\\t// #14683: Only rethrow if this hasn't been notified as an error yet\\n\\t\\t\\t\\t\\tif ( callback ) {\\n\\t\\t\\t\\t\\t\\tthrow e;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\n\\t\\t\\tabort: function() {\\n\\t\\t\\t\\tif ( callback ) {\\n\\t\\t\\t\\t\\tcallback();\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t};\\n\\t}\\n} );\\n\\n\\n\\n\\n// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)\\njQuery.ajaxPrefilter( function( s ) {\\n\\tif ( s.crossDomain ) {\\n\\t\\ts.contents.script = false;\\n\\t}\\n} );\\n\\n// Install script dataType\\njQuery.ajaxSetup( {\\n\\taccepts: {\\n\\t\\tscript: \\\"text/javascript, application/javascript, \\\" +\\n\\t\\t\\t\\\"application/ecmascript, application/x-ecmascript\\\"\\n\\t},\\n\\tcontents: {\\n\\t\\tscript: /\\\\b(?:java|ecma)script\\\\b/\\n\\t},\\n\\tconverters: {\\n\\t\\t\\\"text script\\\": function( text ) {\\n\\t\\t\\tjQuery.globalEval( text );\\n\\t\\t\\treturn text;\\n\\t\\t}\\n\\t}\\n} );\\n\\n// Handle cache's special case and crossDomain\\njQuery.ajaxPrefilter( \\\"script\\\", function( s ) {\\n\\tif ( s.cache === undefined ) {\\n\\t\\ts.cache = false;\\n\\t}\\n\\tif ( s.crossDomain ) {\\n\\t\\ts.type = \\\"GET\\\";\\n\\t}\\n} );\\n\\n// Bind script tag hack transport\\njQuery.ajaxTransport( \\\"script\\\", function( s ) {\\n\\n\\t// This transport only deals with cross domain requests\\n\\tif ( s.crossDomain ) {\\n\\t\\tvar script, callback;\\n\\t\\treturn {\\n\\t\\t\\tsend: function( _, complete ) {\\n\\t\\t\\t\\tscript = jQuery( \\\"<script>\\\" ).prop( {\\n\\t\\t\\t\\t\\tcharset: s.scriptCharset,\\n\\t\\t\\t\\t\\tsrc: s.url\\n\\t\\t\\t\\t} ).on(\\n\\t\\t\\t\\t\\t\\\"load error\\\",\\n\\t\\t\\t\\t\\tcallback = function( evt ) {\\n\\t\\t\\t\\t\\t\\tscript.remove();\\n\\t\\t\\t\\t\\t\\tcallback = null;\\n\\t\\t\\t\\t\\t\\tif ( evt ) {\\n\\t\\t\\t\\t\\t\\t\\tcomplete( evt.type === \\\"error\\\" ? 404 : 200, evt.type );\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\t// Use native DOM manipulation to avoid our domManip AJAX trickery\\n\\t\\t\\t\\tdocument.head.appendChild( script[ 0 ] );\\n\\t\\t\\t},\\n\\t\\t\\tabort: function() {\\n\\t\\t\\t\\tif ( callback ) {\\n\\t\\t\\t\\t\\tcallback();\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t};\\n\\t}\\n} );\\n\\n\\n\\n\\nvar oldCallbacks = [],\\n\\trjsonp = /(=)\\\\?(?=&|$)|\\\\?\\\\?/;\\n\\n// Default jsonp settings\\njQuery.ajaxSetup( {\\n\\tjsonp: \\\"callback\\\",\\n\\tjsonpCallback: function() {\\n\\t\\tvar callback = oldCallbacks.pop() || ( jQuery.expando + \\\"_\\\" + ( nonce++ ) );\\n\\t\\tthis[ callback ] = true;\\n\\t\\treturn callback;\\n\\t}\\n} );\\n\\n// Detect, normalize options and install callbacks for jsonp requests\\njQuery.ajaxPrefilter( \\\"json jsonp\\\", function( s, originalSettings, jqXHR ) {\\n\\n\\tvar callbackName, overwritten, responseContainer,\\n\\t\\tjsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?\\n\\t\\t\\t\\\"url\\\" :\\n\\t\\t\\ttypeof s.data === \\\"string\\\" &&\\n\\t\\t\\t\\t( s.contentType || \\\"\\\" )\\n\\t\\t\\t\\t\\t.indexOf( \\\"application/x-www-form-urlencoded\\\" ) === 0 &&\\n\\t\\t\\t\\trjsonp.test( s.data ) && \\\"data\\\"\\n\\t\\t);\\n\\n\\t// Handle iff the expected data type is \\\"jsonp\\\" or we have a parameter to set\\n\\tif ( jsonProp || s.dataTypes[ 0 ] === \\\"jsonp\\\" ) {\\n\\n\\t\\t// Get callback name, remembering preexisting value associated with it\\n\\t\\tcallbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?\\n\\t\\t\\ts.jsonpCallback() :\\n\\t\\t\\ts.jsonpCallback;\\n\\n\\t\\t// Insert callback into url or form data\\n\\t\\tif ( jsonProp ) {\\n\\t\\t\\ts[ jsonProp ] = s[ jsonProp ].replace( rjsonp, \\\"$1\\\" + callbackName );\\n\\t\\t} else if ( s.jsonp !== false ) {\\n\\t\\t\\ts.url += ( rquery.test( s.url ) ? \\\"&\\\" : \\\"?\\\" ) + s.jsonp + \\\"=\\\" + callbackName;\\n\\t\\t}\\n\\n\\t\\t// Use data converter to retrieve json after script execution\\n\\t\\ts.converters[ \\\"script json\\\" ] = function() {\\n\\t\\t\\tif ( !responseContainer ) {\\n\\t\\t\\t\\tjQuery.error( callbackName + \\\" was not called\\\" );\\n\\t\\t\\t}\\n\\t\\t\\treturn responseContainer[ 0 ];\\n\\t\\t};\\n\\n\\t\\t// Force json dataType\\n\\t\\ts.dataTypes[ 0 ] = \\\"json\\\";\\n\\n\\t\\t// Install callback\\n\\t\\toverwritten = window[ callbackName ];\\n\\t\\twindow[ callbackName ] = function() {\\n\\t\\t\\tresponseContainer = arguments;\\n\\t\\t};\\n\\n\\t\\t// Clean-up function (fires after converters)\\n\\t\\tjqXHR.always( function() {\\n\\n\\t\\t\\t// If previous value didn't exist - remove it\\n\\t\\t\\tif ( overwritten === undefined ) {\\n\\t\\t\\t\\tjQuery( window ).removeProp( callbackName );\\n\\n\\t\\t\\t// Otherwise restore preexisting value\\n\\t\\t\\t} else {\\n\\t\\t\\t\\twindow[ callbackName ] = overwritten;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Save back as free\\n\\t\\t\\tif ( s[ callbackName ] ) {\\n\\n\\t\\t\\t\\t// Make sure that re-using the options doesn't screw things around\\n\\t\\t\\t\\ts.jsonpCallback = originalSettings.jsonpCallback;\\n\\n\\t\\t\\t\\t// Save the callback name for future use\\n\\t\\t\\t\\toldCallbacks.push( callbackName );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Call if it was a function and we have a response\\n\\t\\t\\tif ( responseContainer && jQuery.isFunction( overwritten ) ) {\\n\\t\\t\\t\\toverwritten( responseContainer[ 0 ] );\\n\\t\\t\\t}\\n\\n\\t\\t\\tresponseContainer = overwritten = undefined;\\n\\t\\t} );\\n\\n\\t\\t// Delegate to script\\n\\t\\treturn \\\"script\\\";\\n\\t}\\n} );\\n\\n\\n\\n\\n// Support: Safari 8 only\\n// In Safari 8 documents created via document.implementation.createHTMLDocument\\n// collapse sibling forms: the second one becomes a child of the first one.\\n// Because of that, this security measure has to be disabled in Safari 8.\\n// https://bugs.webkit.org/show_bug.cgi?id=137337\\nsupport.createHTMLDocument = ( function() {\\n\\tvar body = document.implementation.createHTMLDocument( \\\"\\\" ).body;\\n\\tbody.innerHTML = \\\"<form></form><form></form>\\\";\\n\\treturn body.childNodes.length === 2;\\n} )();\\n\\n\\n// Argument \\\"data\\\" should be string of html\\n// context (optional): If specified, the fragment will be created in this context,\\n// defaults to document\\n// keepScripts (optional): If true, will include scripts passed in the html string\\njQuery.parseHTML = function( data, context, keepScripts ) {\\n\\tif ( typeof data !== \\\"string\\\" ) {\\n\\t\\treturn [];\\n\\t}\\n\\tif ( typeof context === \\\"boolean\\\" ) {\\n\\t\\tkeepScripts = context;\\n\\t\\tcontext = false;\\n\\t}\\n\\n\\tvar base, parsed, scripts;\\n\\n\\tif ( !context ) {\\n\\n\\t\\t// Stop scripts or inline event handlers from being executed immediately\\n\\t\\t// by using document.implementation\\n\\t\\tif ( support.createHTMLDocument ) {\\n\\t\\t\\tcontext = document.implementation.createHTMLDocument( \\\"\\\" );\\n\\n\\t\\t\\t// Set the base href for the created document\\n\\t\\t\\t// so any parsed elements with URLs\\n\\t\\t\\t// are based on the document's URL (gh-2965)\\n\\t\\t\\tbase = context.createElement( \\\"base\\\" );\\n\\t\\t\\tbase.href = document.location.href;\\n\\t\\t\\tcontext.head.appendChild( base );\\n\\t\\t} else {\\n\\t\\t\\tcontext = document;\\n\\t\\t}\\n\\t}\\n\\n\\tparsed = rsingleTag.exec( data );\\n\\tscripts = !keepScripts && [];\\n\\n\\t// Single tag\\n\\tif ( parsed ) {\\n\\t\\treturn [ context.createElement( parsed[ 1 ] ) ];\\n\\t}\\n\\n\\tparsed = buildFragment( [ data ], context, scripts );\\n\\n\\tif ( scripts && scripts.length ) {\\n\\t\\tjQuery( scripts ).remove();\\n\\t}\\n\\n\\treturn jQuery.merge( [], parsed.childNodes );\\n};\\n\\n\\n/**\\n * Load a url into a page\\n */\\njQuery.fn.load = function( url, params, callback ) {\\n\\tvar selector, type, response,\\n\\t\\tself = this,\\n\\t\\toff = url.indexOf( \\\" \\\" );\\n\\n\\tif ( off > -1 ) {\\n\\t\\tselector = stripAndCollapse( url.slice( off ) );\\n\\t\\turl = url.slice( 0, off );\\n\\t}\\n\\n\\t// If it's a function\\n\\tif ( jQuery.isFunction( params ) ) {\\n\\n\\t\\t// We assume that it's the callback\\n\\t\\tcallback = params;\\n\\t\\tparams = undefined;\\n\\n\\t// Otherwise, build a param string\\n\\t} else if ( params && typeof params === \\\"object\\\" ) {\\n\\t\\ttype = \\\"POST\\\";\\n\\t}\\n\\n\\t// If we have elements to modify, make the request\\n\\tif ( self.length > 0 ) {\\n\\t\\tjQuery.ajax( {\\n\\t\\t\\turl: url,\\n\\n\\t\\t\\t// If \\\"type\\\" variable is undefined, then \\\"GET\\\" method will be used.\\n\\t\\t\\t// Make value of this field explicit since\\n\\t\\t\\t// user can override it through ajaxSetup method\\n\\t\\t\\ttype: type || \\\"GET\\\",\\n\\t\\t\\tdataType: \\\"html\\\",\\n\\t\\t\\tdata: params\\n\\t\\t} ).done( function( responseText ) {\\n\\n\\t\\t\\t// Save response for use in complete callback\\n\\t\\t\\tresponse = arguments;\\n\\n\\t\\t\\tself.html( selector ?\\n\\n\\t\\t\\t\\t// If a selector was specified, locate the right elements in a dummy div\\n\\t\\t\\t\\t// Exclude scripts to avoid IE 'Permission Denied' errors\\n\\t\\t\\t\\tjQuery( \\\"<div>\\\" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :\\n\\n\\t\\t\\t\\t// Otherwise use the full result\\n\\t\\t\\t\\tresponseText );\\n\\n\\t\\t// If the request succeeds, this function gets \\\"data\\\", \\\"status\\\", \\\"jqXHR\\\"\\n\\t\\t// but they are ignored because response was set above.\\n\\t\\t// If it fails, this function gets \\\"jqXHR\\\", \\\"status\\\", \\\"error\\\"\\n\\t\\t} ).always( callback && function( jqXHR, status ) {\\n\\t\\t\\tself.each( function() {\\n\\t\\t\\t\\tcallback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );\\n\\t\\t\\t} );\\n\\t\\t} );\\n\\t}\\n\\n\\treturn this;\\n};\\n\\n\\n\\n\\n// Attach a bunch of functions for handling common AJAX events\\njQuery.each( [\\n\\t\\\"ajaxStart\\\",\\n\\t\\\"ajaxStop\\\",\\n\\t\\\"ajaxComplete\\\",\\n\\t\\\"ajaxError\\\",\\n\\t\\\"ajaxSuccess\\\",\\n\\t\\\"ajaxSend\\\"\\n], function( i, type ) {\\n\\tjQuery.fn[ type ] = function( fn ) {\\n\\t\\treturn this.on( type, fn );\\n\\t};\\n} );\\n\\n\\n\\n\\njQuery.expr.pseudos.animated = function( elem ) {\\n\\treturn jQuery.grep( jQuery.timers, function( fn ) {\\n\\t\\treturn elem === fn.elem;\\n\\t} ).length;\\n};\\n\\n\\n\\n\\njQuery.offset = {\\n\\tsetOffset: function( elem, options, i ) {\\n\\t\\tvar curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,\\n\\t\\t\\tposition = jQuery.css( elem, \\\"position\\\" ),\\n\\t\\t\\tcurElem = jQuery( elem ),\\n\\t\\t\\tprops = {};\\n\\n\\t\\t// Set position first, in-case top/left are set even on static elem\\n\\t\\tif ( position === \\\"static\\\" ) {\\n\\t\\t\\telem.style.position = \\\"relative\\\";\\n\\t\\t}\\n\\n\\t\\tcurOffset = curElem.offset();\\n\\t\\tcurCSSTop = jQuery.css( elem, \\\"top\\\" );\\n\\t\\tcurCSSLeft = jQuery.css( elem, \\\"left\\\" );\\n\\t\\tcalculatePosition = ( position === \\\"absolute\\\" || position === \\\"fixed\\\" ) &&\\n\\t\\t\\t( curCSSTop + curCSSLeft ).indexOf( \\\"auto\\\" ) > -1;\\n\\n\\t\\t// Need to be able to calculate position if either\\n\\t\\t// top or left is auto and position is either absolute or fixed\\n\\t\\tif ( calculatePosition ) {\\n\\t\\t\\tcurPosition = curElem.position();\\n\\t\\t\\tcurTop = curPosition.top;\\n\\t\\t\\tcurLeft = curPosition.left;\\n\\n\\t\\t} else {\\n\\t\\t\\tcurTop = parseFloat( curCSSTop ) || 0;\\n\\t\\t\\tcurLeft = parseFloat( curCSSLeft ) || 0;\\n\\t\\t}\\n\\n\\t\\tif ( jQuery.isFunction( options ) ) {\\n\\n\\t\\t\\t// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\\n\\t\\t\\toptions = options.call( elem, i, jQuery.extend( {}, curOffset ) );\\n\\t\\t}\\n\\n\\t\\tif ( options.top != null ) {\\n\\t\\t\\tprops.top = ( options.top - curOffset.top ) + curTop;\\n\\t\\t}\\n\\t\\tif ( options.left != null ) {\\n\\t\\t\\tprops.left = ( options.left - curOffset.left ) + curLeft;\\n\\t\\t}\\n\\n\\t\\tif ( \\\"using\\\" in options ) {\\n\\t\\t\\toptions.using.call( elem, props );\\n\\n\\t\\t} else {\\n\\t\\t\\tcurElem.css( props );\\n\\t\\t}\\n\\t}\\n};\\n\\njQuery.fn.extend( {\\n\\toffset: function( options ) {\\n\\n\\t\\t// Preserve chaining for setter\\n\\t\\tif ( arguments.length ) {\\n\\t\\t\\treturn options === undefined ?\\n\\t\\t\\t\\tthis :\\n\\t\\t\\t\\tthis.each( function( i ) {\\n\\t\\t\\t\\t\\tjQuery.offset.setOffset( this, options, i );\\n\\t\\t\\t\\t} );\\n\\t\\t}\\n\\n\\t\\tvar doc, docElem, rect, win,\\n\\t\\t\\telem = this[ 0 ];\\n\\n\\t\\tif ( !elem ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\t// Return zeros for disconnected and hidden (display: none) elements (gh-2310)\\n\\t\\t// Support: IE <=11 only\\n\\t\\t// Running getBoundingClientRect on a\\n\\t\\t// disconnected node in IE throws an error\\n\\t\\tif ( !elem.getClientRects().length ) {\\n\\t\\t\\treturn { top: 0, left: 0 };\\n\\t\\t}\\n\\n\\t\\trect = elem.getBoundingClientRect();\\n\\n\\t\\tdoc = elem.ownerDocument;\\n\\t\\tdocElem = doc.documentElement;\\n\\t\\twin = doc.defaultView;\\n\\n\\t\\treturn {\\n\\t\\t\\ttop: rect.top + win.pageYOffset - docElem.clientTop,\\n\\t\\t\\tleft: rect.left + win.pageXOffset - docElem.clientLeft\\n\\t\\t};\\n\\t},\\n\\n\\tposition: function() {\\n\\t\\tif ( !this[ 0 ] ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tvar offsetParent, offset,\\n\\t\\t\\telem = this[ 0 ],\\n\\t\\t\\tparentOffset = { top: 0, left: 0 };\\n\\n\\t\\t// Fixed elements are offset from window (parentOffset = {top:0, left: 0},\\n\\t\\t// because it is its only offset parent\\n\\t\\tif ( jQuery.css( elem, \\\"position\\\" ) === \\\"fixed\\\" ) {\\n\\n\\t\\t\\t// Assume getBoundingClientRect is there when computed position is fixed\\n\\t\\t\\toffset = elem.getBoundingClientRect();\\n\\n\\t\\t} else {\\n\\n\\t\\t\\t// Get *real* offsetParent\\n\\t\\t\\toffsetParent = this.offsetParent();\\n\\n\\t\\t\\t// Get correct offsets\\n\\t\\t\\toffset = this.offset();\\n\\t\\t\\tif ( !nodeName( offsetParent[ 0 ], \\\"html\\\" ) ) {\\n\\t\\t\\t\\tparentOffset = offsetParent.offset();\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Add offsetParent borders\\n\\t\\t\\tparentOffset = {\\n\\t\\t\\t\\ttop: parentOffset.top + jQuery.css( offsetParent[ 0 ], \\\"borderTopWidth\\\", true ),\\n\\t\\t\\t\\tleft: parentOffset.left + jQuery.css( offsetParent[ 0 ], \\\"borderLeftWidth\\\", true )\\n\\t\\t\\t};\\n\\t\\t}\\n\\n\\t\\t// Subtract parent offsets and element margins\\n\\t\\treturn {\\n\\t\\t\\ttop: offset.top - parentOffset.top - jQuery.css( elem, \\\"marginTop\\\", true ),\\n\\t\\t\\tleft: offset.left - parentOffset.left - jQuery.css( elem, \\\"marginLeft\\\", true )\\n\\t\\t};\\n\\t},\\n\\n\\t// This method will return documentElement in the following cases:\\n\\t// 1) For the element inside the iframe without offsetParent, this method will return\\n\\t//    documentElement of the parent window\\n\\t// 2) For the hidden or detached element\\n\\t// 3) For body or html element, i.e. in case of the html node - it will return itself\\n\\t//\\n\\t// but those exceptions were never presented as a real life use-cases\\n\\t// and might be considered as more preferable results.\\n\\t//\\n\\t// This logic, however, is not guaranteed and can change at any point in the future\\n\\toffsetParent: function() {\\n\\t\\treturn this.map( function() {\\n\\t\\t\\tvar offsetParent = this.offsetParent;\\n\\n\\t\\t\\twhile ( offsetParent && jQuery.css( offsetParent, \\\"position\\\" ) === \\\"static\\\" ) {\\n\\t\\t\\t\\toffsetParent = offsetParent.offsetParent;\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn offsetParent || documentElement;\\n\\t\\t} );\\n\\t}\\n} );\\n\\n// Create scrollLeft and scrollTop methods\\njQuery.each( { scrollLeft: \\\"pageXOffset\\\", scrollTop: \\\"pageYOffset\\\" }, function( method, prop ) {\\n\\tvar top = \\\"pageYOffset\\\" === prop;\\n\\n\\tjQuery.fn[ method ] = function( val ) {\\n\\t\\treturn access( this, function( elem, method, val ) {\\n\\n\\t\\t\\t// Coalesce documents and windows\\n\\t\\t\\tvar win;\\n\\t\\t\\tif ( jQuery.isWindow( elem ) ) {\\n\\t\\t\\t\\twin = elem;\\n\\t\\t\\t} else if ( elem.nodeType === 9 ) {\\n\\t\\t\\t\\twin = elem.defaultView;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( val === undefined ) {\\n\\t\\t\\t\\treturn win ? win[ prop ] : elem[ method ];\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( win ) {\\n\\t\\t\\t\\twin.scrollTo(\\n\\t\\t\\t\\t\\t!top ? val : win.pageXOffset,\\n\\t\\t\\t\\t\\ttop ? val : win.pageYOffset\\n\\t\\t\\t\\t);\\n\\n\\t\\t\\t} else {\\n\\t\\t\\t\\telem[ method ] = val;\\n\\t\\t\\t}\\n\\t\\t}, method, val, arguments.length );\\n\\t};\\n} );\\n\\n// Support: Safari <=7 - 9.1, Chrome <=37 - 49\\n// Add the top/left cssHooks using jQuery.fn.position\\n// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\\n// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347\\n// getComputedStyle returns percent when specified for top/left/bottom/right;\\n// rather than make the css module depend on the offset module, just check for it here\\njQuery.each( [ \\\"top\\\", \\\"left\\\" ], function( i, prop ) {\\n\\tjQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,\\n\\t\\tfunction( elem, computed ) {\\n\\t\\t\\tif ( computed ) {\\n\\t\\t\\t\\tcomputed = curCSS( elem, prop );\\n\\n\\t\\t\\t\\t// If curCSS returns percentage, fallback to offset\\n\\t\\t\\t\\treturn rnumnonpx.test( computed ) ?\\n\\t\\t\\t\\t\\tjQuery( elem ).position()[ prop ] + \\\"px\\\" :\\n\\t\\t\\t\\t\\tcomputed;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t);\\n} );\\n\\n\\n// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\\njQuery.each( { Height: \\\"height\\\", Width: \\\"width\\\" }, function( name, type ) {\\n\\tjQuery.each( { padding: \\\"inner\\\" + name, content: type, \\\"\\\": \\\"outer\\\" + name },\\n\\t\\tfunction( defaultExtra, funcName ) {\\n\\n\\t\\t// Margin is only for outerHeight, outerWidth\\n\\t\\tjQuery.fn[ funcName ] = function( margin, value ) {\\n\\t\\t\\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== \\\"boolean\\\" ),\\n\\t\\t\\t\\textra = defaultExtra || ( margin === true || value === true ? \\\"margin\\\" : \\\"border\\\" );\\n\\n\\t\\t\\treturn access( this, function( elem, type, value ) {\\n\\t\\t\\t\\tvar doc;\\n\\n\\t\\t\\t\\tif ( jQuery.isWindow( elem ) ) {\\n\\n\\t\\t\\t\\t\\t// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)\\n\\t\\t\\t\\t\\treturn funcName.indexOf( \\\"outer\\\" ) === 0 ?\\n\\t\\t\\t\\t\\t\\telem[ \\\"inner\\\" + name ] :\\n\\t\\t\\t\\t\\t\\telem.document.documentElement[ \\\"client\\\" + name ];\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Get document width or height\\n\\t\\t\\t\\tif ( elem.nodeType === 9 ) {\\n\\t\\t\\t\\t\\tdoc = elem.documentElement;\\n\\n\\t\\t\\t\\t\\t// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\\n\\t\\t\\t\\t\\t// whichever is greatest\\n\\t\\t\\t\\t\\treturn Math.max(\\n\\t\\t\\t\\t\\t\\telem.body[ \\\"scroll\\\" + name ], doc[ \\\"scroll\\\" + name ],\\n\\t\\t\\t\\t\\t\\telem.body[ \\\"offset\\\" + name ], doc[ \\\"offset\\\" + name ],\\n\\t\\t\\t\\t\\t\\tdoc[ \\\"client\\\" + name ]\\n\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn value === undefined ?\\n\\n\\t\\t\\t\\t\\t// Get width or height on the element, requesting but not forcing parseFloat\\n\\t\\t\\t\\t\\tjQuery.css( elem, type, extra ) :\\n\\n\\t\\t\\t\\t\\t// Set width or height on the element\\n\\t\\t\\t\\t\\tjQuery.style( elem, type, value, extra );\\n\\t\\t\\t}, type, chainable ? margin : undefined, chainable );\\n\\t\\t};\\n\\t} );\\n} );\\n\\n\\njQuery.fn.extend( {\\n\\n\\tbind: function( types, data, fn ) {\\n\\t\\treturn this.on( types, null, data, fn );\\n\\t},\\n\\tunbind: function( types, fn ) {\\n\\t\\treturn this.off( types, null, fn );\\n\\t},\\n\\n\\tdelegate: function( selector, types, data, fn ) {\\n\\t\\treturn this.on( types, selector, data, fn );\\n\\t},\\n\\tundelegate: function( selector, types, fn ) {\\n\\n\\t\\t// ( namespace ) or ( selector, types [, fn] )\\n\\t\\treturn arguments.length === 1 ?\\n\\t\\t\\tthis.off( selector, \\\"**\\\" ) :\\n\\t\\t\\tthis.off( types, selector || \\\"**\\\", fn );\\n\\t}\\n} );\\n\\njQuery.holdReady = function( hold ) {\\n\\tif ( hold ) {\\n\\t\\tjQuery.readyWait++;\\n\\t} else {\\n\\t\\tjQuery.ready( true );\\n\\t}\\n};\\njQuery.isArray = Array.isArray;\\njQuery.parseJSON = JSON.parse;\\njQuery.nodeName = nodeName;\\n\\n\\n\\n\\n// Register as a named AMD module, since jQuery can be concatenated with other\\n// files that may use define, but not via a proper concatenation script that\\n// understands anonymous AMD modules. A named AMD is safest and most robust\\n// way to register. Lowercase jquery is used because AMD module names are\\n// derived from file names, and jQuery is normally delivered in a lowercase\\n// file name. Do this after creating the global so that if an AMD module wants\\n// to call noConflict to hide this version of jQuery, it will work.\\n\\n// Note that for maximum portability, libraries that are not jQuery should\\n// declare themselves as anonymous modules, and avoid setting a global if an\\n// AMD loader is present. jQuery is a special case. For more information, see\\n// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\\n\\nif ( typeof define === \\\"function\\\" && define.amd ) {\\n\\tdefine( \\\"jquery\\\", [], function() {\\n\\t\\treturn jQuery;\\n\\t} );\\n}\\n\\n\\n\\n\\nvar\\n\\n\\t// Map over jQuery in case of overwrite\\n\\t_jQuery = window.jQuery,\\n\\n\\t// Map over the $ in case of overwrite\\n\\t_$ = window.$;\\n\\njQuery.noConflict = function( deep ) {\\n\\tif ( window.$ === jQuery ) {\\n\\t\\twindow.$ = _$;\\n\\t}\\n\\n\\tif ( deep && window.jQuery === jQuery ) {\\n\\t\\twindow.jQuery = _jQuery;\\n\\t}\\n\\n\\treturn jQuery;\\n};\\n\\n// Expose jQuery and $ identifiers, even in AMD\\n// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\\n// and CommonJS for browser emulators (#13566)\\nif ( !noGlobal ) {\\n\\twindow.jQuery = window.$ = jQuery;\\n}\\n\\n\\n\\n\\nreturn jQuery;\\n} );\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./~/jquery/dist/jquery.js\n// module id = 420\n// module chunks = 2","module.exports = \"/*! tether 1.4.0 */\\n\\n(function(root, factory) {\\n  if (typeof define === 'function' && define.amd) {\\n    define(factory);\\n  } else if (typeof exports === 'object') {\\n    module.exports = factory(require, exports, module);\\n  } else {\\n    root.Tether = factory();\\n  }\\n}(this, function(require, exports, module) {\\n\\n'use strict';\\n\\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\\n\\nvar TetherBase = undefined;\\nif (typeof TetherBase === 'undefined') {\\n  TetherBase = { modules: [] };\\n}\\n\\nvar zeroElement = null;\\n\\n// Same as native getBoundingClientRect, except it takes into account parent <frame> offsets\\n// if the element lies within a nested document (<frame> or <iframe>-like).\\nfunction getActualBoundingClientRect(node) {\\n  var boundingRect = node.getBoundingClientRect();\\n\\n  // The original object returned by getBoundingClientRect is immutable, so we clone it\\n  // We can't use extend because the properties are not considered part of the object by hasOwnProperty in IE9\\n  var rect = {};\\n  for (var k in boundingRect) {\\n    rect[k] = boundingRect[k];\\n  }\\n\\n  if (node.ownerDocument !== document) {\\n    var _frameElement = node.ownerDocument.defaultView.frameElement;\\n    if (_frameElement) {\\n      var frameRect = getActualBoundingClientRect(_frameElement);\\n      rect.top += frameRect.top;\\n      rect.bottom += frameRect.top;\\n      rect.left += frameRect.left;\\n      rect.right += frameRect.left;\\n    }\\n  }\\n\\n  return rect;\\n}\\n\\nfunction getScrollParents(el) {\\n  // In firefox if the el is inside an iframe with display: none; window.getComputedStyle() will return null;\\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=548397\\n  var computedStyle = getComputedStyle(el) || {};\\n  var position = computedStyle.position;\\n  var parents = [];\\n\\n  if (position === 'fixed') {\\n    return [el];\\n  }\\n\\n  var parent = el;\\n  while ((parent = parent.parentNode) && parent && parent.nodeType === 1) {\\n    var style = undefined;\\n    try {\\n      style = getComputedStyle(parent);\\n    } catch (err) {}\\n\\n    if (typeof style === 'undefined' || style === null) {\\n      parents.push(parent);\\n      return parents;\\n    }\\n\\n    var _style = style;\\n    var overflow = _style.overflow;\\n    var overflowX = _style.overflowX;\\n    var overflowY = _style.overflowY;\\n\\n    if (/(auto|scroll)/.test(overflow + overflowY + overflowX)) {\\n      if (position !== 'absolute' || ['relative', 'absolute', 'fixed'].indexOf(style.position) >= 0) {\\n        parents.push(parent);\\n      }\\n    }\\n  }\\n\\n  parents.push(el.ownerDocument.body);\\n\\n  // If the node is within a frame, account for the parent window scroll\\n  if (el.ownerDocument !== document) {\\n    parents.push(el.ownerDocument.defaultView);\\n  }\\n\\n  return parents;\\n}\\n\\nvar uniqueId = (function () {\\n  var id = 0;\\n  return function () {\\n    return ++id;\\n  };\\n})();\\n\\nvar zeroPosCache = {};\\nvar getOrigin = function getOrigin() {\\n  // getBoundingClientRect is unfortunately too accurate.  It introduces a pixel or two of\\n  // jitter as the user scrolls that messes with our ability to detect if two positions\\n  // are equivilant or not.  We place an element at the top left of the page that will\\n  // get the same jitter, so we can cancel the two out.\\n  var node = zeroElement;\\n  if (!node || !document.body.contains(node)) {\\n    node = document.createElement('div');\\n    node.setAttribute('data-tether-id', uniqueId());\\n    extend(node.style, {\\n      top: 0,\\n      left: 0,\\n      position: 'absolute'\\n    });\\n\\n    document.body.appendChild(node);\\n\\n    zeroElement = node;\\n  }\\n\\n  var id = node.getAttribute('data-tether-id');\\n  if (typeof zeroPosCache[id] === 'undefined') {\\n    zeroPosCache[id] = getActualBoundingClientRect(node);\\n\\n    // Clear the cache when this position call is done\\n    defer(function () {\\n      delete zeroPosCache[id];\\n    });\\n  }\\n\\n  return zeroPosCache[id];\\n};\\n\\nfunction removeUtilElements() {\\n  if (zeroElement) {\\n    document.body.removeChild(zeroElement);\\n  }\\n  zeroElement = null;\\n};\\n\\nfunction getBounds(el) {\\n  var doc = undefined;\\n  if (el === document) {\\n    doc = document;\\n    el = document.documentElement;\\n  } else {\\n    doc = el.ownerDocument;\\n  }\\n\\n  var docEl = doc.documentElement;\\n\\n  var box = getActualBoundingClientRect(el);\\n\\n  var origin = getOrigin();\\n\\n  box.top -= origin.top;\\n  box.left -= origin.left;\\n\\n  if (typeof box.width === 'undefined') {\\n    box.width = document.body.scrollWidth - box.left - box.right;\\n  }\\n  if (typeof box.height === 'undefined') {\\n    box.height = document.body.scrollHeight - box.top - box.bottom;\\n  }\\n\\n  box.top = box.top - docEl.clientTop;\\n  box.left = box.left - docEl.clientLeft;\\n  box.right = doc.body.clientWidth - box.width - box.left;\\n  box.bottom = doc.body.clientHeight - box.height - box.top;\\n\\n  return box;\\n}\\n\\nfunction getOffsetParent(el) {\\n  return el.offsetParent || document.documentElement;\\n}\\n\\nvar _scrollBarSize = null;\\nfunction getScrollBarSize() {\\n  if (_scrollBarSize) {\\n    return _scrollBarSize;\\n  }\\n  var inner = document.createElement('div');\\n  inner.style.width = '100%';\\n  inner.style.height = '200px';\\n\\n  var outer = document.createElement('div');\\n  extend(outer.style, {\\n    position: 'absolute',\\n    top: 0,\\n    left: 0,\\n    pointerEvents: 'none',\\n    visibility: 'hidden',\\n    width: '200px',\\n    height: '150px',\\n    overflow: 'hidden'\\n  });\\n\\n  outer.appendChild(inner);\\n\\n  document.body.appendChild(outer);\\n\\n  var widthContained = inner.offsetWidth;\\n  outer.style.overflow = 'scroll';\\n  var widthScroll = inner.offsetWidth;\\n\\n  if (widthContained === widthScroll) {\\n    widthScroll = outer.clientWidth;\\n  }\\n\\n  document.body.removeChild(outer);\\n\\n  var width = widthContained - widthScroll;\\n\\n  _scrollBarSize = { width: width, height: width };\\n  return _scrollBarSize;\\n}\\n\\nfunction extend() {\\n  var out = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\\n\\n  var args = [];\\n\\n  Array.prototype.push.apply(args, arguments);\\n\\n  args.slice(1).forEach(function (obj) {\\n    if (obj) {\\n      for (var key in obj) {\\n        if (({}).hasOwnProperty.call(obj, key)) {\\n          out[key] = obj[key];\\n        }\\n      }\\n    }\\n  });\\n\\n  return out;\\n}\\n\\nfunction removeClass(el, name) {\\n  if (typeof el.classList !== 'undefined') {\\n    name.split(' ').forEach(function (cls) {\\n      if (cls.trim()) {\\n        el.classList.remove(cls);\\n      }\\n    });\\n  } else {\\n    var regex = new RegExp('(^| )' + name.split(' ').join('|') + '( |$)', 'gi');\\n    var className = getClassName(el).replace(regex, ' ');\\n    setClassName(el, className);\\n  }\\n}\\n\\nfunction addClass(el, name) {\\n  if (typeof el.classList !== 'undefined') {\\n    name.split(' ').forEach(function (cls) {\\n      if (cls.trim()) {\\n        el.classList.add(cls);\\n      }\\n    });\\n  } else {\\n    removeClass(el, name);\\n    var cls = getClassName(el) + (' ' + name);\\n    setClassName(el, cls);\\n  }\\n}\\n\\nfunction hasClass(el, name) {\\n  if (typeof el.classList !== 'undefined') {\\n    return el.classList.contains(name);\\n  }\\n  var className = getClassName(el);\\n  return new RegExp('(^| )' + name + '( |$)', 'gi').test(className);\\n}\\n\\nfunction getClassName(el) {\\n  // Can't use just SVGAnimatedString here since nodes within a Frame in IE have\\n  // completely separately SVGAnimatedString base classes\\n  if (el.className instanceof el.ownerDocument.defaultView.SVGAnimatedString) {\\n    return el.className.baseVal;\\n  }\\n  return el.className;\\n}\\n\\nfunction setClassName(el, className) {\\n  el.setAttribute('class', className);\\n}\\n\\nfunction updateClasses(el, add, all) {\\n  // Of the set of 'all' classes, we need the 'add' classes, and only the\\n  // 'add' classes to be set.\\n  all.forEach(function (cls) {\\n    if (add.indexOf(cls) === -1 && hasClass(el, cls)) {\\n      removeClass(el, cls);\\n    }\\n  });\\n\\n  add.forEach(function (cls) {\\n    if (!hasClass(el, cls)) {\\n      addClass(el, cls);\\n    }\\n  });\\n}\\n\\nvar deferred = [];\\n\\nvar defer = function defer(fn) {\\n  deferred.push(fn);\\n};\\n\\nvar flush = function flush() {\\n  var fn = undefined;\\n  while (fn = deferred.pop()) {\\n    fn();\\n  }\\n};\\n\\nvar Evented = (function () {\\n  function Evented() {\\n    _classCallCheck(this, Evented);\\n  }\\n\\n  _createClass(Evented, [{\\n    key: 'on',\\n    value: function on(event, handler, ctx) {\\n      var once = arguments.length <= 3 || arguments[3] === undefined ? false : arguments[3];\\n\\n      if (typeof this.bindings === 'undefined') {\\n        this.bindings = {};\\n      }\\n      if (typeof this.bindings[event] === 'undefined') {\\n        this.bindings[event] = [];\\n      }\\n      this.bindings[event].push({ handler: handler, ctx: ctx, once: once });\\n    }\\n  }, {\\n    key: 'once',\\n    value: function once(event, handler, ctx) {\\n      this.on(event, handler, ctx, true);\\n    }\\n  }, {\\n    key: 'off',\\n    value: function off(event, handler) {\\n      if (typeof this.bindings === 'undefined' || typeof this.bindings[event] === 'undefined') {\\n        return;\\n      }\\n\\n      if (typeof handler === 'undefined') {\\n        delete this.bindings[event];\\n      } else {\\n        var i = 0;\\n        while (i < this.bindings[event].length) {\\n          if (this.bindings[event][i].handler === handler) {\\n            this.bindings[event].splice(i, 1);\\n          } else {\\n            ++i;\\n          }\\n        }\\n      }\\n    }\\n  }, {\\n    key: 'trigger',\\n    value: function trigger(event) {\\n      if (typeof this.bindings !== 'undefined' && this.bindings[event]) {\\n        var i = 0;\\n\\n        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\\n          args[_key - 1] = arguments[_key];\\n        }\\n\\n        while (i < this.bindings[event].length) {\\n          var _bindings$event$i = this.bindings[event][i];\\n          var handler = _bindings$event$i.handler;\\n          var ctx = _bindings$event$i.ctx;\\n          var once = _bindings$event$i.once;\\n\\n          var context = ctx;\\n          if (typeof context === 'undefined') {\\n            context = this;\\n          }\\n\\n          handler.apply(context, args);\\n\\n          if (once) {\\n            this.bindings[event].splice(i, 1);\\n          } else {\\n            ++i;\\n          }\\n        }\\n      }\\n    }\\n  }]);\\n\\n  return Evented;\\n})();\\n\\nTetherBase.Utils = {\\n  getActualBoundingClientRect: getActualBoundingClientRect,\\n  getScrollParents: getScrollParents,\\n  getBounds: getBounds,\\n  getOffsetParent: getOffsetParent,\\n  extend: extend,\\n  addClass: addClass,\\n  removeClass: removeClass,\\n  hasClass: hasClass,\\n  updateClasses: updateClasses,\\n  defer: defer,\\n  flush: flush,\\n  uniqueId: uniqueId,\\n  Evented: Evented,\\n  getScrollBarSize: getScrollBarSize,\\n  removeUtilElements: removeUtilElements\\n};\\n/* globals TetherBase, performance */\\n\\n'use strict';\\n\\nvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();\\n\\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\\n\\nvar _get = function get(_x6, _x7, _x8) { var _again = true; _function: while (_again) { var object = _x6, property = _x7, receiver = _x8; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x6 = parent; _x7 = property; _x8 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\\n\\nif (typeof TetherBase === 'undefined') {\\n  throw new Error('You must include the utils.js file before tether.js');\\n}\\n\\nvar _TetherBase$Utils = TetherBase.Utils;\\nvar getScrollParents = _TetherBase$Utils.getScrollParents;\\nvar getBounds = _TetherBase$Utils.getBounds;\\nvar getOffsetParent = _TetherBase$Utils.getOffsetParent;\\nvar extend = _TetherBase$Utils.extend;\\nvar addClass = _TetherBase$Utils.addClass;\\nvar removeClass = _TetherBase$Utils.removeClass;\\nvar updateClasses = _TetherBase$Utils.updateClasses;\\nvar defer = _TetherBase$Utils.defer;\\nvar flush = _TetherBase$Utils.flush;\\nvar getScrollBarSize = _TetherBase$Utils.getScrollBarSize;\\nvar removeUtilElements = _TetherBase$Utils.removeUtilElements;\\n\\nfunction within(a, b) {\\n  var diff = arguments.length <= 2 || arguments[2] === undefined ? 1 : arguments[2];\\n\\n  return a + diff >= b && b >= a - diff;\\n}\\n\\nvar transformKey = (function () {\\n  if (typeof document === 'undefined') {\\n    return '';\\n  }\\n  var el = document.createElement('div');\\n\\n  var transforms = ['transform', 'WebkitTransform', 'OTransform', 'MozTransform', 'msTransform'];\\n  for (var i = 0; i < transforms.length; ++i) {\\n    var key = transforms[i];\\n    if (el.style[key] !== undefined) {\\n      return key;\\n    }\\n  }\\n})();\\n\\nvar tethers = [];\\n\\nvar position = function position() {\\n  tethers.forEach(function (tether) {\\n    tether.position(false);\\n  });\\n  flush();\\n};\\n\\nfunction now() {\\n  if (typeof performance !== 'undefined' && typeof performance.now !== 'undefined') {\\n    return performance.now();\\n  }\\n  return +new Date();\\n}\\n\\n(function () {\\n  var lastCall = null;\\n  var lastDuration = null;\\n  var pendingTimeout = null;\\n\\n  var tick = function tick() {\\n    if (typeof lastDuration !== 'undefined' && lastDuration > 16) {\\n      // We voluntarily throttle ourselves if we can't manage 60fps\\n      lastDuration = Math.min(lastDuration - 16, 250);\\n\\n      // Just in case this is the last event, remember to position just once more\\n      pendingTimeout = setTimeout(tick, 250);\\n      return;\\n    }\\n\\n    if (typeof lastCall !== 'undefined' && now() - lastCall < 10) {\\n      // Some browsers call events a little too frequently, refuse to run more than is reasonable\\n      return;\\n    }\\n\\n    if (pendingTimeout != null) {\\n      clearTimeout(pendingTimeout);\\n      pendingTimeout = null;\\n    }\\n\\n    lastCall = now();\\n    position();\\n    lastDuration = now() - lastCall;\\n  };\\n\\n  if (typeof window !== 'undefined' && typeof window.addEventListener !== 'undefined') {\\n    ['resize', 'scroll', 'touchmove'].forEach(function (event) {\\n      window.addEventListener(event, tick);\\n    });\\n  }\\n})();\\n\\nvar MIRROR_LR = {\\n  center: 'center',\\n  left: 'right',\\n  right: 'left'\\n};\\n\\nvar MIRROR_TB = {\\n  middle: 'middle',\\n  top: 'bottom',\\n  bottom: 'top'\\n};\\n\\nvar OFFSET_MAP = {\\n  top: 0,\\n  left: 0,\\n  middle: '50%',\\n  center: '50%',\\n  bottom: '100%',\\n  right: '100%'\\n};\\n\\nvar autoToFixedAttachment = function autoToFixedAttachment(attachment, relativeToAttachment) {\\n  var left = attachment.left;\\n  var top = attachment.top;\\n\\n  if (left === 'auto') {\\n    left = MIRROR_LR[relativeToAttachment.left];\\n  }\\n\\n  if (top === 'auto') {\\n    top = MIRROR_TB[relativeToAttachment.top];\\n  }\\n\\n  return { left: left, top: top };\\n};\\n\\nvar attachmentToOffset = function attachmentToOffset(attachment) {\\n  var left = attachment.left;\\n  var top = attachment.top;\\n\\n  if (typeof OFFSET_MAP[attachment.left] !== 'undefined') {\\n    left = OFFSET_MAP[attachment.left];\\n  }\\n\\n  if (typeof OFFSET_MAP[attachment.top] !== 'undefined') {\\n    top = OFFSET_MAP[attachment.top];\\n  }\\n\\n  return { left: left, top: top };\\n};\\n\\nfunction addOffset() {\\n  var out = { top: 0, left: 0 };\\n\\n  for (var _len = arguments.length, offsets = Array(_len), _key = 0; _key < _len; _key++) {\\n    offsets[_key] = arguments[_key];\\n  }\\n\\n  offsets.forEach(function (_ref) {\\n    var top = _ref.top;\\n    var left = _ref.left;\\n\\n    if (typeof top === 'string') {\\n      top = parseFloat(top, 10);\\n    }\\n    if (typeof left === 'string') {\\n      left = parseFloat(left, 10);\\n    }\\n\\n    out.top += top;\\n    out.left += left;\\n  });\\n\\n  return out;\\n}\\n\\nfunction offsetToPx(offset, size) {\\n  if (typeof offset.left === 'string' && offset.left.indexOf('%') !== -1) {\\n    offset.left = parseFloat(offset.left, 10) / 100 * size.width;\\n  }\\n  if (typeof offset.top === 'string' && offset.top.indexOf('%') !== -1) {\\n    offset.top = parseFloat(offset.top, 10) / 100 * size.height;\\n  }\\n\\n  return offset;\\n}\\n\\nvar parseOffset = function parseOffset(value) {\\n  var _value$split = value.split(' ');\\n\\n  var _value$split2 = _slicedToArray(_value$split, 2);\\n\\n  var top = _value$split2[0];\\n  var left = _value$split2[1];\\n\\n  return { top: top, left: left };\\n};\\nvar parseAttachment = parseOffset;\\n\\nvar TetherClass = (function (_Evented) {\\n  _inherits(TetherClass, _Evented);\\n\\n  function TetherClass(options) {\\n    var _this = this;\\n\\n    _classCallCheck(this, TetherClass);\\n\\n    _get(Object.getPrototypeOf(TetherClass.prototype), 'constructor', this).call(this);\\n    this.position = this.position.bind(this);\\n\\n    tethers.push(this);\\n\\n    this.history = [];\\n\\n    this.setOptions(options, false);\\n\\n    TetherBase.modules.forEach(function (module) {\\n      if (typeof module.initialize !== 'undefined') {\\n        module.initialize.call(_this);\\n      }\\n    });\\n\\n    this.position();\\n  }\\n\\n  _createClass(TetherClass, [{\\n    key: 'getClass',\\n    value: function getClass() {\\n      var key = arguments.length <= 0 || arguments[0] === undefined ? '' : arguments[0];\\n      var classes = this.options.classes;\\n\\n      if (typeof classes !== 'undefined' && classes[key]) {\\n        return this.options.classes[key];\\n      } else if (this.options.classPrefix) {\\n        return this.options.classPrefix + '-' + key;\\n      } else {\\n        return key;\\n      }\\n    }\\n  }, {\\n    key: 'setOptions',\\n    value: function setOptions(options) {\\n      var _this2 = this;\\n\\n      var pos = arguments.length <= 1 || arguments[1] === undefined ? true : arguments[1];\\n\\n      var defaults = {\\n        offset: '0 0',\\n        targetOffset: '0 0',\\n        targetAttachment: 'auto auto',\\n        classPrefix: 'tether'\\n      };\\n\\n      this.options = extend(defaults, options);\\n\\n      var _options = this.options;\\n      var element = _options.element;\\n      var target = _options.target;\\n      var targetModifier = _options.targetModifier;\\n\\n      this.element = element;\\n      this.target = target;\\n      this.targetModifier = targetModifier;\\n\\n      if (this.target === 'viewport') {\\n        this.target = document.body;\\n        this.targetModifier = 'visible';\\n      } else if (this.target === 'scroll-handle') {\\n        this.target = document.body;\\n        this.targetModifier = 'scroll-handle';\\n      }\\n\\n      ['element', 'target'].forEach(function (key) {\\n        if (typeof _this2[key] === 'undefined') {\\n          throw new Error('Tether Error: Both element and target must be defined');\\n        }\\n\\n        if (typeof _this2[key].jquery !== 'undefined') {\\n          _this2[key] = _this2[key][0];\\n        } else if (typeof _this2[key] === 'string') {\\n          _this2[key] = document.querySelector(_this2[key]);\\n        }\\n      });\\n\\n      addClass(this.element, this.getClass('element'));\\n      if (!(this.options.addTargetClasses === false)) {\\n        addClass(this.target, this.getClass('target'));\\n      }\\n\\n      if (!this.options.attachment) {\\n        throw new Error('Tether Error: You must provide an attachment');\\n      }\\n\\n      this.targetAttachment = parseAttachment(this.options.targetAttachment);\\n      this.attachment = parseAttachment(this.options.attachment);\\n      this.offset = parseOffset(this.options.offset);\\n      this.targetOffset = parseOffset(this.options.targetOffset);\\n\\n      if (typeof this.scrollParents !== 'undefined') {\\n        this.disable();\\n      }\\n\\n      if (this.targetModifier === 'scroll-handle') {\\n        this.scrollParents = [this.target];\\n      } else {\\n        this.scrollParents = getScrollParents(this.target);\\n      }\\n\\n      if (!(this.options.enabled === false)) {\\n        this.enable(pos);\\n      }\\n    }\\n  }, {\\n    key: 'getTargetBounds',\\n    value: function getTargetBounds() {\\n      if (typeof this.targetModifier !== 'undefined') {\\n        if (this.targetModifier === 'visible') {\\n          if (this.target === document.body) {\\n            return { top: pageYOffset, left: pageXOffset, height: innerHeight, width: innerWidth };\\n          } else {\\n            var bounds = getBounds(this.target);\\n\\n            var out = {\\n              height: bounds.height,\\n              width: bounds.width,\\n              top: bounds.top,\\n              left: bounds.left\\n            };\\n\\n            out.height = Math.min(out.height, bounds.height - (pageYOffset - bounds.top));\\n            out.height = Math.min(out.height, bounds.height - (bounds.top + bounds.height - (pageYOffset + innerHeight)));\\n            out.height = Math.min(innerHeight, out.height);\\n            out.height -= 2;\\n\\n            out.width = Math.min(out.width, bounds.width - (pageXOffset - bounds.left));\\n            out.width = Math.min(out.width, bounds.width - (bounds.left + bounds.width - (pageXOffset + innerWidth)));\\n            out.width = Math.min(innerWidth, out.width);\\n            out.width -= 2;\\n\\n            if (out.top < pageYOffset) {\\n              out.top = pageYOffset;\\n            }\\n            if (out.left < pageXOffset) {\\n              out.left = pageXOffset;\\n            }\\n\\n            return out;\\n          }\\n        } else if (this.targetModifier === 'scroll-handle') {\\n          var bounds = undefined;\\n          var target = this.target;\\n          if (target === document.body) {\\n            target = document.documentElement;\\n\\n            bounds = {\\n              left: pageXOffset,\\n              top: pageYOffset,\\n              height: innerHeight,\\n              width: innerWidth\\n            };\\n          } else {\\n            bounds = getBounds(target);\\n          }\\n\\n          var style = getComputedStyle(target);\\n\\n          var hasBottomScroll = target.scrollWidth > target.clientWidth || [style.overflow, style.overflowX].indexOf('scroll') >= 0 || this.target !== document.body;\\n\\n          var scrollBottom = 0;\\n          if (hasBottomScroll) {\\n            scrollBottom = 15;\\n          }\\n\\n          var height = bounds.height - parseFloat(style.borderTopWidth) - parseFloat(style.borderBottomWidth) - scrollBottom;\\n\\n          var out = {\\n            width: 15,\\n            height: height * 0.975 * (height / target.scrollHeight),\\n            left: bounds.left + bounds.width - parseFloat(style.borderLeftWidth) - 15\\n          };\\n\\n          var fitAdj = 0;\\n          if (height < 408 && this.target === document.body) {\\n            fitAdj = -0.00011 * Math.pow(height, 2) - 0.00727 * height + 22.58;\\n          }\\n\\n          if (this.target !== document.body) {\\n            out.height = Math.max(out.height, 24);\\n          }\\n\\n          var scrollPercentage = this.target.scrollTop / (target.scrollHeight - height);\\n          out.top = scrollPercentage * (height - out.height - fitAdj) + bounds.top + parseFloat(style.borderTopWidth);\\n\\n          if (this.target === document.body) {\\n            out.height = Math.max(out.height, 24);\\n          }\\n\\n          return out;\\n        }\\n      } else {\\n        return getBounds(this.target);\\n      }\\n    }\\n  }, {\\n    key: 'clearCache',\\n    value: function clearCache() {\\n      this._cache = {};\\n    }\\n  }, {\\n    key: 'cache',\\n    value: function cache(k, getter) {\\n      // More than one module will often need the same DOM info, so\\n      // we keep a cache which is cleared on each position call\\n      if (typeof this._cache === 'undefined') {\\n        this._cache = {};\\n      }\\n\\n      if (typeof this._cache[k] === 'undefined') {\\n        this._cache[k] = getter.call(this);\\n      }\\n\\n      return this._cache[k];\\n    }\\n  }, {\\n    key: 'enable',\\n    value: function enable() {\\n      var _this3 = this;\\n\\n      var pos = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];\\n\\n      if (!(this.options.addTargetClasses === false)) {\\n        addClass(this.target, this.getClass('enabled'));\\n      }\\n      addClass(this.element, this.getClass('enabled'));\\n      this.enabled = true;\\n\\n      this.scrollParents.forEach(function (parent) {\\n        if (parent !== _this3.target.ownerDocument) {\\n          parent.addEventListener('scroll', _this3.position);\\n        }\\n      });\\n\\n      if (pos) {\\n        this.position();\\n      }\\n    }\\n  }, {\\n    key: 'disable',\\n    value: function disable() {\\n      var _this4 = this;\\n\\n      removeClass(this.target, this.getClass('enabled'));\\n      removeClass(this.element, this.getClass('enabled'));\\n      this.enabled = false;\\n\\n      if (typeof this.scrollParents !== 'undefined') {\\n        this.scrollParents.forEach(function (parent) {\\n          parent.removeEventListener('scroll', _this4.position);\\n        });\\n      }\\n    }\\n  }, {\\n    key: 'destroy',\\n    value: function destroy() {\\n      var _this5 = this;\\n\\n      this.disable();\\n\\n      tethers.forEach(function (tether, i) {\\n        if (tether === _this5) {\\n          tethers.splice(i, 1);\\n        }\\n      });\\n\\n      // Remove any elements we were using for convenience from the DOM\\n      if (tethers.length === 0) {\\n        removeUtilElements();\\n      }\\n    }\\n  }, {\\n    key: 'updateAttachClasses',\\n    value: function updateAttachClasses(elementAttach, targetAttach) {\\n      var _this6 = this;\\n\\n      elementAttach = elementAttach || this.attachment;\\n      targetAttach = targetAttach || this.targetAttachment;\\n      var sides = ['left', 'top', 'bottom', 'right', 'middle', 'center'];\\n\\n      if (typeof this._addAttachClasses !== 'undefined' && this._addAttachClasses.length) {\\n        // updateAttachClasses can be called more than once in a position call, so\\n        // we need to clean up after ourselves such that when the last defer gets\\n        // ran it doesn't add any extra classes from previous calls.\\n        this._addAttachClasses.splice(0, this._addAttachClasses.length);\\n      }\\n\\n      if (typeof this._addAttachClasses === 'undefined') {\\n        this._addAttachClasses = [];\\n      }\\n      var add = this._addAttachClasses;\\n\\n      if (elementAttach.top) {\\n        add.push(this.getClass('element-attached') + '-' + elementAttach.top);\\n      }\\n      if (elementAttach.left) {\\n        add.push(this.getClass('element-attached') + '-' + elementAttach.left);\\n      }\\n      if (targetAttach.top) {\\n        add.push(this.getClass('target-attached') + '-' + targetAttach.top);\\n      }\\n      if (targetAttach.left) {\\n        add.push(this.getClass('target-attached') + '-' + targetAttach.left);\\n      }\\n\\n      var all = [];\\n      sides.forEach(function (side) {\\n        all.push(_this6.getClass('element-attached') + '-' + side);\\n        all.push(_this6.getClass('target-attached') + '-' + side);\\n      });\\n\\n      defer(function () {\\n        if (!(typeof _this6._addAttachClasses !== 'undefined')) {\\n          return;\\n        }\\n\\n        updateClasses(_this6.element, _this6._addAttachClasses, all);\\n        if (!(_this6.options.addTargetClasses === false)) {\\n          updateClasses(_this6.target, _this6._addAttachClasses, all);\\n        }\\n\\n        delete _this6._addAttachClasses;\\n      });\\n    }\\n  }, {\\n    key: 'position',\\n    value: function position() {\\n      var _this7 = this;\\n\\n      var flushChanges = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];\\n\\n      // flushChanges commits the changes immediately, leave true unless you are positioning multiple\\n      // tethers (in which case call Tether.Utils.flush yourself when you're done)\\n\\n      if (!this.enabled) {\\n        return;\\n      }\\n\\n      this.clearCache();\\n\\n      // Turn 'auto' attachments into the appropriate corner or edge\\n      var targetAttachment = autoToFixedAttachment(this.targetAttachment, this.attachment);\\n\\n      this.updateAttachClasses(this.attachment, targetAttachment);\\n\\n      var elementPos = this.cache('element-bounds', function () {\\n        return getBounds(_this7.element);\\n      });\\n\\n      var width = elementPos.width;\\n      var height = elementPos.height;\\n\\n      if (width === 0 && height === 0 && typeof this.lastSize !== 'undefined') {\\n        var _lastSize = this.lastSize;\\n\\n        // We cache the height and width to make it possible to position elements that are\\n        // getting hidden.\\n        width = _lastSize.width;\\n        height = _lastSize.height;\\n      } else {\\n        this.lastSize = { width: width, height: height };\\n      }\\n\\n      var targetPos = this.cache('target-bounds', function () {\\n        return _this7.getTargetBounds();\\n      });\\n      var targetSize = targetPos;\\n\\n      // Get an actual px offset from the attachment\\n      var offset = offsetToPx(attachmentToOffset(this.attachment), { width: width, height: height });\\n      var targetOffset = offsetToPx(attachmentToOffset(targetAttachment), targetSize);\\n\\n      var manualOffset = offsetToPx(this.offset, { width: width, height: height });\\n      var manualTargetOffset = offsetToPx(this.targetOffset, targetSize);\\n\\n      // Add the manually provided offset\\n      offset = addOffset(offset, manualOffset);\\n      targetOffset = addOffset(targetOffset, manualTargetOffset);\\n\\n      // It's now our goal to make (element position + offset) == (target position + target offset)\\n      var left = targetPos.left + targetOffset.left - offset.left;\\n      var top = targetPos.top + targetOffset.top - offset.top;\\n\\n      for (var i = 0; i < TetherBase.modules.length; ++i) {\\n        var _module2 = TetherBase.modules[i];\\n        var ret = _module2.position.call(this, {\\n          left: left,\\n          top: top,\\n          targetAttachment: targetAttachment,\\n          targetPos: targetPos,\\n          elementPos: elementPos,\\n          offset: offset,\\n          targetOffset: targetOffset,\\n          manualOffset: manualOffset,\\n          manualTargetOffset: manualTargetOffset,\\n          scrollbarSize: scrollbarSize,\\n          attachment: this.attachment\\n        });\\n\\n        if (ret === false) {\\n          return false;\\n        } else if (typeof ret === 'undefined' || typeof ret !== 'object') {\\n          continue;\\n        } else {\\n          top = ret.top;\\n          left = ret.left;\\n        }\\n      }\\n\\n      // We describe the position three different ways to give the optimizer\\n      // a chance to decide the best possible way to position the element\\n      // with the fewest repaints.\\n      var next = {\\n        // It's position relative to the page (absolute positioning when\\n        // the element is a child of the body)\\n        page: {\\n          top: top,\\n          left: left\\n        },\\n\\n        // It's position relative to the viewport (fixed positioning)\\n        viewport: {\\n          top: top - pageYOffset,\\n          bottom: pageYOffset - top - height + innerHeight,\\n          left: left - pageXOffset,\\n          right: pageXOffset - left - width + innerWidth\\n        }\\n      };\\n\\n      var doc = this.target.ownerDocument;\\n      var win = doc.defaultView;\\n\\n      var scrollbarSize = undefined;\\n      if (win.innerHeight > doc.documentElement.clientHeight) {\\n        scrollbarSize = this.cache('scrollbar-size', getScrollBarSize);\\n        next.viewport.bottom -= scrollbarSize.height;\\n      }\\n\\n      if (win.innerWidth > doc.documentElement.clientWidth) {\\n        scrollbarSize = this.cache('scrollbar-size', getScrollBarSize);\\n        next.viewport.right -= scrollbarSize.width;\\n      }\\n\\n      if (['', 'static'].indexOf(doc.body.style.position) === -1 || ['', 'static'].indexOf(doc.body.parentElement.style.position) === -1) {\\n        // Absolute positioning in the body will be relative to the page, not the 'initial containing block'\\n        next.page.bottom = doc.body.scrollHeight - top - height;\\n        next.page.right = doc.body.scrollWidth - left - width;\\n      }\\n\\n      if (typeof this.options.optimizations !== 'undefined' && this.options.optimizations.moveElement !== false && !(typeof this.targetModifier !== 'undefined')) {\\n        (function () {\\n          var offsetParent = _this7.cache('target-offsetparent', function () {\\n            return getOffsetParent(_this7.target);\\n          });\\n          var offsetPosition = _this7.cache('target-offsetparent-bounds', function () {\\n            return getBounds(offsetParent);\\n          });\\n          var offsetParentStyle = getComputedStyle(offsetParent);\\n          var offsetParentSize = offsetPosition;\\n\\n          var offsetBorder = {};\\n          ['Top', 'Left', 'Bottom', 'Right'].forEach(function (side) {\\n            offsetBorder[side.toLowerCase()] = parseFloat(offsetParentStyle['border' + side + 'Width']);\\n          });\\n\\n          offsetPosition.right = doc.body.scrollWidth - offsetPosition.left - offsetParentSize.width + offsetBorder.right;\\n          offsetPosition.bottom = doc.body.scrollHeight - offsetPosition.top - offsetParentSize.height + offsetBorder.bottom;\\n\\n          if (next.page.top >= offsetPosition.top + offsetBorder.top && next.page.bottom >= offsetPosition.bottom) {\\n            if (next.page.left >= offsetPosition.left + offsetBorder.left && next.page.right >= offsetPosition.right) {\\n              // We're within the visible part of the target's scroll parent\\n              var scrollTop = offsetParent.scrollTop;\\n              var scrollLeft = offsetParent.scrollLeft;\\n\\n              // It's position relative to the target's offset parent (absolute positioning when\\n              // the element is moved to be a child of the target's offset parent).\\n              next.offset = {\\n                top: next.page.top - offsetPosition.top + scrollTop - offsetBorder.top,\\n                left: next.page.left - offsetPosition.left + scrollLeft - offsetBorder.left\\n              };\\n            }\\n          }\\n        })();\\n      }\\n\\n      // We could also travel up the DOM and try each containing context, rather than only\\n      // looking at the body, but we're gonna get diminishing returns.\\n\\n      this.move(next);\\n\\n      this.history.unshift(next);\\n\\n      if (this.history.length > 3) {\\n        this.history.pop();\\n      }\\n\\n      if (flushChanges) {\\n        flush();\\n      }\\n\\n      return true;\\n    }\\n\\n    // THE ISSUE\\n  }, {\\n    key: 'move',\\n    value: function move(pos) {\\n      var _this8 = this;\\n\\n      if (!(typeof this.element.parentNode !== 'undefined')) {\\n        return;\\n      }\\n\\n      var same = {};\\n\\n      for (var type in pos) {\\n        same[type] = {};\\n\\n        for (var key in pos[type]) {\\n          var found = false;\\n\\n          for (var i = 0; i < this.history.length; ++i) {\\n            var point = this.history[i];\\n            if (typeof point[type] !== 'undefined' && !within(point[type][key], pos[type][key])) {\\n              found = true;\\n              break;\\n            }\\n          }\\n\\n          if (!found) {\\n            same[type][key] = true;\\n          }\\n        }\\n      }\\n\\n      var css = { top: '', left: '', right: '', bottom: '' };\\n\\n      var transcribe = function transcribe(_same, _pos) {\\n        var hasOptimizations = typeof _this8.options.optimizations !== 'undefined';\\n        var gpu = hasOptimizations ? _this8.options.optimizations.gpu : null;\\n        if (gpu !== false) {\\n          var yPos = undefined,\\n              xPos = undefined;\\n          if (_same.top) {\\n            css.top = 0;\\n            yPos = _pos.top;\\n          } else {\\n            css.bottom = 0;\\n            yPos = -_pos.bottom;\\n          }\\n\\n          if (_same.left) {\\n            css.left = 0;\\n            xPos = _pos.left;\\n          } else {\\n            css.right = 0;\\n            xPos = -_pos.right;\\n          }\\n\\n          if (window.matchMedia) {\\n            // HubSpot/tether#207\\n            var retina = window.matchMedia('only screen and (min-resolution: 1.3dppx)').matches || window.matchMedia('only screen and (-webkit-min-device-pixel-ratio: 1.3)').matches;\\n            if (!retina) {\\n              xPos = Math.round(xPos);\\n              yPos = Math.round(yPos);\\n            }\\n          }\\n\\n          css[transformKey] = 'translateX(' + xPos + 'px) translateY(' + yPos + 'px)';\\n\\n          if (transformKey !== 'msTransform') {\\n            // The Z transform will keep this in the GPU (faster, and prevents artifacts),\\n            // but IE9 doesn't support 3d transforms and will choke.\\n            css[transformKey] += \\\" translateZ(0)\\\";\\n          }\\n        } else {\\n          if (_same.top) {\\n            css.top = _pos.top + 'px';\\n          } else {\\n            css.bottom = _pos.bottom + 'px';\\n          }\\n\\n          if (_same.left) {\\n            css.left = _pos.left + 'px';\\n          } else {\\n            css.right = _pos.right + 'px';\\n          }\\n        }\\n      };\\n\\n      var moved = false;\\n      if ((same.page.top || same.page.bottom) && (same.page.left || same.page.right)) {\\n        css.position = 'absolute';\\n        transcribe(same.page, pos.page);\\n      } else if ((same.viewport.top || same.viewport.bottom) && (same.viewport.left || same.viewport.right)) {\\n        css.position = 'fixed';\\n        transcribe(same.viewport, pos.viewport);\\n      } else if (typeof same.offset !== 'undefined' && same.offset.top && same.offset.left) {\\n        (function () {\\n          css.position = 'absolute';\\n          var offsetParent = _this8.cache('target-offsetparent', function () {\\n            return getOffsetParent(_this8.target);\\n          });\\n\\n          if (getOffsetParent(_this8.element) !== offsetParent) {\\n            defer(function () {\\n              _this8.element.parentNode.removeChild(_this8.element);\\n              offsetParent.appendChild(_this8.element);\\n            });\\n          }\\n\\n          transcribe(same.offset, pos.offset);\\n          moved = true;\\n        })();\\n      } else {\\n        css.position = 'absolute';\\n        transcribe({ top: true, left: true }, pos.page);\\n      }\\n\\n      if (!moved) {\\n        if (this.options.bodyElement) {\\n          this.options.bodyElement.appendChild(this.element);\\n        } else {\\n          var offsetParentIsBody = true;\\n          var currentNode = this.element.parentNode;\\n          while (currentNode && currentNode.nodeType === 1 && currentNode.tagName !== 'BODY') {\\n            if (getComputedStyle(currentNode).position !== 'static') {\\n              offsetParentIsBody = false;\\n              break;\\n            }\\n\\n            currentNode = currentNode.parentNode;\\n          }\\n\\n          if (!offsetParentIsBody) {\\n            this.element.parentNode.removeChild(this.element);\\n            this.element.ownerDocument.body.appendChild(this.element);\\n          }\\n        }\\n      }\\n\\n      // Any css change will trigger a repaint, so let's avoid one if nothing changed\\n      var writeCSS = {};\\n      var write = false;\\n      for (var key in css) {\\n        var val = css[key];\\n        var elVal = this.element.style[key];\\n\\n        if (elVal !== val) {\\n          write = true;\\n          writeCSS[key] = val;\\n        }\\n      }\\n\\n      if (write) {\\n        defer(function () {\\n          extend(_this8.element.style, writeCSS);\\n          _this8.trigger('repositioned');\\n        });\\n      }\\n    }\\n  }]);\\n\\n  return TetherClass;\\n})(Evented);\\n\\nTetherClass.modules = [];\\n\\nTetherBase.position = position;\\n\\nvar Tether = extend(TetherClass, TetherBase);\\n/* globals TetherBase */\\n\\n'use strict';\\n\\nvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();\\n\\nvar _TetherBase$Utils = TetherBase.Utils;\\nvar getBounds = _TetherBase$Utils.getBounds;\\nvar extend = _TetherBase$Utils.extend;\\nvar updateClasses = _TetherBase$Utils.updateClasses;\\nvar defer = _TetherBase$Utils.defer;\\n\\nvar BOUNDS_FORMAT = ['left', 'top', 'right', 'bottom'];\\n\\nfunction getBoundingRect(tether, to) {\\n  if (to === 'scrollParent') {\\n    to = tether.scrollParents[0];\\n  } else if (to === 'window') {\\n    to = [pageXOffset, pageYOffset, innerWidth + pageXOffset, innerHeight + pageYOffset];\\n  }\\n\\n  if (to === document) {\\n    to = to.documentElement;\\n  }\\n\\n  if (typeof to.nodeType !== 'undefined') {\\n    (function () {\\n      var node = to;\\n      var size = getBounds(to);\\n      var pos = size;\\n      var style = getComputedStyle(to);\\n\\n      to = [pos.left, pos.top, size.width + pos.left, size.height + pos.top];\\n\\n      // Account any parent Frames scroll offset\\n      if (node.ownerDocument !== document) {\\n        var win = node.ownerDocument.defaultView;\\n        to[0] += win.pageXOffset;\\n        to[1] += win.pageYOffset;\\n        to[2] += win.pageXOffset;\\n        to[3] += win.pageYOffset;\\n      }\\n\\n      BOUNDS_FORMAT.forEach(function (side, i) {\\n        side = side[0].toUpperCase() + side.substr(1);\\n        if (side === 'Top' || side === 'Left') {\\n          to[i] += parseFloat(style['border' + side + 'Width']);\\n        } else {\\n          to[i] -= parseFloat(style['border' + side + 'Width']);\\n        }\\n      });\\n    })();\\n  }\\n\\n  return to;\\n}\\n\\nTetherBase.modules.push({\\n  position: function position(_ref) {\\n    var _this = this;\\n\\n    var top = _ref.top;\\n    var left = _ref.left;\\n    var targetAttachment = _ref.targetAttachment;\\n\\n    if (!this.options.constraints) {\\n      return true;\\n    }\\n\\n    var _cache = this.cache('element-bounds', function () {\\n      return getBounds(_this.element);\\n    });\\n\\n    var height = _cache.height;\\n    var width = _cache.width;\\n\\n    if (width === 0 && height === 0 && typeof this.lastSize !== 'undefined') {\\n      var _lastSize = this.lastSize;\\n\\n      // Handle the item getting hidden as a result of our positioning without glitching\\n      // the classes in and out\\n      width = _lastSize.width;\\n      height = _lastSize.height;\\n    }\\n\\n    var targetSize = this.cache('target-bounds', function () {\\n      return _this.getTargetBounds();\\n    });\\n\\n    var targetHeight = targetSize.height;\\n    var targetWidth = targetSize.width;\\n\\n    var allClasses = [this.getClass('pinned'), this.getClass('out-of-bounds')];\\n\\n    this.options.constraints.forEach(function (constraint) {\\n      var outOfBoundsClass = constraint.outOfBoundsClass;\\n      var pinnedClass = constraint.pinnedClass;\\n\\n      if (outOfBoundsClass) {\\n        allClasses.push(outOfBoundsClass);\\n      }\\n      if (pinnedClass) {\\n        allClasses.push(pinnedClass);\\n      }\\n    });\\n\\n    allClasses.forEach(function (cls) {\\n      ['left', 'top', 'right', 'bottom'].forEach(function (side) {\\n        allClasses.push(cls + '-' + side);\\n      });\\n    });\\n\\n    var addClasses = [];\\n\\n    var tAttachment = extend({}, targetAttachment);\\n    var eAttachment = extend({}, this.attachment);\\n\\n    this.options.constraints.forEach(function (constraint) {\\n      var to = constraint.to;\\n      var attachment = constraint.attachment;\\n      var pin = constraint.pin;\\n\\n      if (typeof attachment === 'undefined') {\\n        attachment = '';\\n      }\\n\\n      var changeAttachX = undefined,\\n          changeAttachY = undefined;\\n      if (attachment.indexOf(' ') >= 0) {\\n        var _attachment$split = attachment.split(' ');\\n\\n        var _attachment$split2 = _slicedToArray(_attachment$split, 2);\\n\\n        changeAttachY = _attachment$split2[0];\\n        changeAttachX = _attachment$split2[1];\\n      } else {\\n        changeAttachX = changeAttachY = attachment;\\n      }\\n\\n      var bounds = getBoundingRect(_this, to);\\n\\n      if (changeAttachY === 'target' || changeAttachY === 'both') {\\n        if (top < bounds[1] && tAttachment.top === 'top') {\\n          top += targetHeight;\\n          tAttachment.top = 'bottom';\\n        }\\n\\n        if (top + height > bounds[3] && tAttachment.top === 'bottom') {\\n          top -= targetHeight;\\n          tAttachment.top = 'top';\\n        }\\n      }\\n\\n      if (changeAttachY === 'together') {\\n        if (tAttachment.top === 'top') {\\n          if (eAttachment.top === 'bottom' && top < bounds[1]) {\\n            top += targetHeight;\\n            tAttachment.top = 'bottom';\\n\\n            top += height;\\n            eAttachment.top = 'top';\\n          } else if (eAttachment.top === 'top' && top + height > bounds[3] && top - (height - targetHeight) >= bounds[1]) {\\n            top -= height - targetHeight;\\n            tAttachment.top = 'bottom';\\n\\n            eAttachment.top = 'bottom';\\n          }\\n        }\\n\\n        if (tAttachment.top === 'bottom') {\\n          if (eAttachment.top === 'top' && top + height > bounds[3]) {\\n            top -= targetHeight;\\n            tAttachment.top = 'top';\\n\\n            top -= height;\\n            eAttachment.top = 'bottom';\\n          } else if (eAttachment.top === 'bottom' && top < bounds[1] && top + (height * 2 - targetHeight) <= bounds[3]) {\\n            top += height - targetHeight;\\n            tAttachment.top = 'top';\\n\\n            eAttachment.top = 'top';\\n          }\\n        }\\n\\n        if (tAttachment.top === 'middle') {\\n          if (top + height > bounds[3] && eAttachment.top === 'top') {\\n            top -= height;\\n            eAttachment.top = 'bottom';\\n          } else if (top < bounds[1] && eAttachment.top === 'bottom') {\\n            top += height;\\n            eAttachment.top = 'top';\\n          }\\n        }\\n      }\\n\\n      if (changeAttachX === 'target' || changeAttachX === 'both') {\\n        if (left < bounds[0] && tAttachment.left === 'left') {\\n          left += targetWidth;\\n          tAttachment.left = 'right';\\n        }\\n\\n        if (left + width > bounds[2] && tAttachment.left === 'right') {\\n          left -= targetWidth;\\n          tAttachment.left = 'left';\\n        }\\n      }\\n\\n      if (changeAttachX === 'together') {\\n        if (left < bounds[0] && tAttachment.left === 'left') {\\n          if (eAttachment.left === 'right') {\\n            left += targetWidth;\\n            tAttachment.left = 'right';\\n\\n            left += width;\\n            eAttachment.left = 'left';\\n          } else if (eAttachment.left === 'left') {\\n            left += targetWidth;\\n            tAttachment.left = 'right';\\n\\n            left -= width;\\n            eAttachment.left = 'right';\\n          }\\n        } else if (left + width > bounds[2] && tAttachment.left === 'right') {\\n          if (eAttachment.left === 'left') {\\n            left -= targetWidth;\\n            tAttachment.left = 'left';\\n\\n            left -= width;\\n            eAttachment.left = 'right';\\n          } else if (eAttachment.left === 'right') {\\n            left -= targetWidth;\\n            tAttachment.left = 'left';\\n\\n            left += width;\\n            eAttachment.left = 'left';\\n          }\\n        } else if (tAttachment.left === 'center') {\\n          if (left + width > bounds[2] && eAttachment.left === 'left') {\\n            left -= width;\\n            eAttachment.left = 'right';\\n          } else if (left < bounds[0] && eAttachment.left === 'right') {\\n            left += width;\\n            eAttachment.left = 'left';\\n          }\\n        }\\n      }\\n\\n      if (changeAttachY === 'element' || changeAttachY === 'both') {\\n        if (top < bounds[1] && eAttachment.top === 'bottom') {\\n          top += height;\\n          eAttachment.top = 'top';\\n        }\\n\\n        if (top + height > bounds[3] && eAttachment.top === 'top') {\\n          top -= height;\\n          eAttachment.top = 'bottom';\\n        }\\n      }\\n\\n      if (changeAttachX === 'element' || changeAttachX === 'both') {\\n        if (left < bounds[0]) {\\n          if (eAttachment.left === 'right') {\\n            left += width;\\n            eAttachment.left = 'left';\\n          } else if (eAttachment.left === 'center') {\\n            left += width / 2;\\n            eAttachment.left = 'left';\\n          }\\n        }\\n\\n        if (left + width > bounds[2]) {\\n          if (eAttachment.left === 'left') {\\n            left -= width;\\n            eAttachment.left = 'right';\\n          } else if (eAttachment.left === 'center') {\\n            left -= width / 2;\\n            eAttachment.left = 'right';\\n          }\\n        }\\n      }\\n\\n      if (typeof pin === 'string') {\\n        pin = pin.split(',').map(function (p) {\\n          return p.trim();\\n        });\\n      } else if (pin === true) {\\n        pin = ['top', 'left', 'right', 'bottom'];\\n      }\\n\\n      pin = pin || [];\\n\\n      var pinned = [];\\n      var oob = [];\\n\\n      if (top < bounds[1]) {\\n        if (pin.indexOf('top') >= 0) {\\n          top = bounds[1];\\n          pinned.push('top');\\n        } else {\\n          oob.push('top');\\n        }\\n      }\\n\\n      if (top + height > bounds[3]) {\\n        if (pin.indexOf('bottom') >= 0) {\\n          top = bounds[3] - height;\\n          pinned.push('bottom');\\n        } else {\\n          oob.push('bottom');\\n        }\\n      }\\n\\n      if (left < bounds[0]) {\\n        if (pin.indexOf('left') >= 0) {\\n          left = bounds[0];\\n          pinned.push('left');\\n        } else {\\n          oob.push('left');\\n        }\\n      }\\n\\n      if (left + width > bounds[2]) {\\n        if (pin.indexOf('right') >= 0) {\\n          left = bounds[2] - width;\\n          pinned.push('right');\\n        } else {\\n          oob.push('right');\\n        }\\n      }\\n\\n      if (pinned.length) {\\n        (function () {\\n          var pinnedClass = undefined;\\n          if (typeof _this.options.pinnedClass !== 'undefined') {\\n            pinnedClass = _this.options.pinnedClass;\\n          } else {\\n            pinnedClass = _this.getClass('pinned');\\n          }\\n\\n          addClasses.push(pinnedClass);\\n          pinned.forEach(function (side) {\\n            addClasses.push(pinnedClass + '-' + side);\\n          });\\n        })();\\n      }\\n\\n      if (oob.length) {\\n        (function () {\\n          var oobClass = undefined;\\n          if (typeof _this.options.outOfBoundsClass !== 'undefined') {\\n            oobClass = _this.options.outOfBoundsClass;\\n          } else {\\n            oobClass = _this.getClass('out-of-bounds');\\n          }\\n\\n          addClasses.push(oobClass);\\n          oob.forEach(function (side) {\\n            addClasses.push(oobClass + '-' + side);\\n          });\\n        })();\\n      }\\n\\n      if (pinned.indexOf('left') >= 0 || pinned.indexOf('right') >= 0) {\\n        eAttachment.left = tAttachment.left = false;\\n      }\\n      if (pinned.indexOf('top') >= 0 || pinned.indexOf('bottom') >= 0) {\\n        eAttachment.top = tAttachment.top = false;\\n      }\\n\\n      if (tAttachment.top !== targetAttachment.top || tAttachment.left !== targetAttachment.left || eAttachment.top !== _this.attachment.top || eAttachment.left !== _this.attachment.left) {\\n        _this.updateAttachClasses(eAttachment, tAttachment);\\n        _this.trigger('update', {\\n          attachment: eAttachment,\\n          targetAttachment: tAttachment\\n        });\\n      }\\n    });\\n\\n    defer(function () {\\n      if (!(_this.options.addTargetClasses === false)) {\\n        updateClasses(_this.target, addClasses, allClasses);\\n      }\\n      updateClasses(_this.element, addClasses, allClasses);\\n    });\\n\\n    return { top: top, left: left };\\n  }\\n});\\n/* globals TetherBase */\\n\\n'use strict';\\n\\nvar _TetherBase$Utils = TetherBase.Utils;\\nvar getBounds = _TetherBase$Utils.getBounds;\\nvar updateClasses = _TetherBase$Utils.updateClasses;\\nvar defer = _TetherBase$Utils.defer;\\n\\nTetherBase.modules.push({\\n  position: function position(_ref) {\\n    var _this = this;\\n\\n    var top = _ref.top;\\n    var left = _ref.left;\\n\\n    var _cache = this.cache('element-bounds', function () {\\n      return getBounds(_this.element);\\n    });\\n\\n    var height = _cache.height;\\n    var width = _cache.width;\\n\\n    var targetPos = this.getTargetBounds();\\n\\n    var bottom = top + height;\\n    var right = left + width;\\n\\n    var abutted = [];\\n    if (top <= targetPos.bottom && bottom >= targetPos.top) {\\n      ['left', 'right'].forEach(function (side) {\\n        var targetPosSide = targetPos[side];\\n        if (targetPosSide === left || targetPosSide === right) {\\n          abutted.push(side);\\n        }\\n      });\\n    }\\n\\n    if (left <= targetPos.right && right >= targetPos.left) {\\n      ['top', 'bottom'].forEach(function (side) {\\n        var targetPosSide = targetPos[side];\\n        if (targetPosSide === top || targetPosSide === bottom) {\\n          abutted.push(side);\\n        }\\n      });\\n    }\\n\\n    var allClasses = [];\\n    var addClasses = [];\\n\\n    var sides = ['left', 'top', 'right', 'bottom'];\\n    allClasses.push(this.getClass('abutted'));\\n    sides.forEach(function (side) {\\n      allClasses.push(_this.getClass('abutted') + '-' + side);\\n    });\\n\\n    if (abutted.length) {\\n      addClasses.push(this.getClass('abutted'));\\n    }\\n\\n    abutted.forEach(function (side) {\\n      addClasses.push(_this.getClass('abutted') + '-' + side);\\n    });\\n\\n    defer(function () {\\n      if (!(_this.options.addTargetClasses === false)) {\\n        updateClasses(_this.target, addClasses, allClasses);\\n      }\\n      updateClasses(_this.element, addClasses, allClasses);\\n    });\\n\\n    return true;\\n  }\\n});\\n/* globals TetherBase */\\n\\n'use strict';\\n\\nvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();\\n\\nTetherBase.modules.push({\\n  position: function position(_ref) {\\n    var top = _ref.top;\\n    var left = _ref.left;\\n\\n    if (!this.options.shift) {\\n      return;\\n    }\\n\\n    var shift = this.options.shift;\\n    if (typeof this.options.shift === 'function') {\\n      shift = this.options.shift.call(this, { top: top, left: left });\\n    }\\n\\n    var shiftTop = undefined,\\n        shiftLeft = undefined;\\n    if (typeof shift === 'string') {\\n      shift = shift.split(' ');\\n      shift[1] = shift[1] || shift[0];\\n\\n      var _shift = shift;\\n\\n      var _shift2 = _slicedToArray(_shift, 2);\\n\\n      shiftTop = _shift2[0];\\n      shiftLeft = _shift2[1];\\n\\n      shiftTop = parseFloat(shiftTop, 10);\\n      shiftLeft = parseFloat(shiftLeft, 10);\\n    } else {\\n      shiftTop = shift.top;\\n      shiftLeft = shift.left;\\n    }\\n\\n    top += shiftTop;\\n    left += shiftLeft;\\n\\n    return { top: top, left: left };\\n  }\\n});\\nreturn Tether;\\n\\n}));\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./~/tether/dist/js/tether.js\n// module id = 421\n// module chunks = 2","module.exports = \"(function (global, factory) {\\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\\n    (factory((global.THREE = global.THREE || {})));\\n}(this, (function (exports) { 'use strict';\\n\\n    // Polyfills\\n\\n    if ( Number.EPSILON === undefined ) {\\n\\n    \\tNumber.EPSILON = Math.pow( 2, - 52 );\\n\\n    }\\n\\n    //\\n\\n    if ( Math.sign === undefined ) {\\n\\n    \\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\\n\\n    \\tMath.sign = function ( x ) {\\n\\n    \\t\\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\\n\\n    \\t};\\n\\n    }\\n\\n    if ( Function.prototype.name === undefined ) {\\n\\n    \\t// Missing in IE9-11.\\n    \\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\\n\\n    \\tObject.defineProperty( Function.prototype, 'name', {\\n\\n    \\t\\tget: function () {\\n\\n    \\t\\t\\treturn this.toString().match( /^\\\\s*function\\\\s*(\\\\S*)\\\\s*\\\\(/ )[ 1 ];\\n\\n    \\t\\t}\\n\\n    \\t} );\\n\\n    }\\n\\n    if ( Object.assign === undefined ) {\\n\\n    \\t// Missing in IE.\\n    \\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\\n\\n    \\t( function () {\\n\\n    \\t\\tObject.assign = function ( target ) {\\n\\n    \\t\\t\\t'use strict';\\n\\n    \\t\\t\\tif ( target === undefined || target === null ) {\\n\\n    \\t\\t\\t\\tthrow new TypeError( 'Cannot convert undefined or null to object' );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tvar output = Object( target );\\n\\n    \\t\\t\\tfor ( var index = 1; index < arguments.length; index ++ ) {\\n\\n    \\t\\t\\t\\tvar source = arguments[ index ];\\n\\n    \\t\\t\\t\\tif ( source !== undefined && source !== null ) {\\n\\n    \\t\\t\\t\\t\\tfor ( var nextKey in source ) {\\n\\n    \\t\\t\\t\\t\\t\\tif ( Object.prototype.hasOwnProperty.call( source, nextKey ) ) {\\n\\n    \\t\\t\\t\\t\\t\\t\\toutput[ nextKey ] = source[ nextKey ];\\n\\n    \\t\\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\treturn output;\\n\\n    \\t\\t};\\n\\n    \\t} )();\\n\\n    }\\n\\n    /**\\n     * https://github.com/mrdoob/eventdispatcher.js/\\n     */\\n\\n    function EventDispatcher() {}\\n\\n    Object.assign( EventDispatcher.prototype, {\\n\\n    \\taddEventListener: function ( type, listener ) {\\n\\n    \\t\\tif ( this._listeners === undefined ) this._listeners = {};\\n\\n    \\t\\tvar listeners = this._listeners;\\n\\n    \\t\\tif ( listeners[ type ] === undefined ) {\\n\\n    \\t\\t\\tlisteners[ type ] = [];\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\\n\\n    \\t\\t\\tlisteners[ type ].push( listener );\\n\\n    \\t\\t}\\n\\n    \\t},\\n\\n    \\thasEventListener: function ( type, listener ) {\\n\\n    \\t\\tif ( this._listeners === undefined ) return false;\\n\\n    \\t\\tvar listeners = this._listeners;\\n\\n    \\t\\tif ( listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1 ) {\\n\\n    \\t\\t\\treturn true;\\n\\n    \\t\\t}\\n\\n    \\t\\treturn false;\\n\\n    \\t},\\n\\n    \\tremoveEventListener: function ( type, listener ) {\\n\\n    \\t\\tif ( this._listeners === undefined ) return;\\n\\n    \\t\\tvar listeners = this._listeners;\\n    \\t\\tvar listenerArray = listeners[ type ];\\n\\n    \\t\\tif ( listenerArray !== undefined ) {\\n\\n    \\t\\t\\tvar index = listenerArray.indexOf( listener );\\n\\n    \\t\\t\\tif ( index !== - 1 ) {\\n\\n    \\t\\t\\t\\tlistenerArray.splice( index, 1 );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t},\\n\\n    \\tdispatchEvent: function ( event ) {\\n\\n    \\t\\tif ( this._listeners === undefined ) return;\\n\\n    \\t\\tvar listeners = this._listeners;\\n    \\t\\tvar listenerArray = listeners[ event.type ];\\n\\n    \\t\\tif ( listenerArray !== undefined ) {\\n\\n    \\t\\t\\tevent.target = this;\\n\\n    \\t\\t\\tvar array = [], i = 0;\\n    \\t\\t\\tvar length = listenerArray.length;\\n\\n    \\t\\t\\tfor ( i = 0; i < length; i ++ ) {\\n\\n    \\t\\t\\t\\tarray[ i ] = listenerArray[ i ];\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tfor ( i = 0; i < length; i ++ ) {\\n\\n    \\t\\t\\t\\tarray[ i ].call( this, event );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    } );\\n\\n    var REVISION = '81';\\n    var MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\\n    var CullFaceNone = 0;\\n    var CullFaceBack = 1;\\n    var CullFaceFront = 2;\\n    var CullFaceFrontBack = 3;\\n    var FrontFaceDirectionCW = 0;\\n    var FrontFaceDirectionCCW = 1;\\n    var BasicShadowMap = 0;\\n    var PCFShadowMap = 1;\\n    var PCFSoftShadowMap = 2;\\n    var FrontSide = 0;\\n    var BackSide = 1;\\n    var DoubleSide = 2;\\n    var FlatShading = 1;\\n    var SmoothShading = 2;\\n    var NoColors = 0;\\n    var FaceColors = 1;\\n    var VertexColors = 2;\\n    var NoBlending = 0;\\n    var NormalBlending = 1;\\n    var AdditiveBlending = 2;\\n    var SubtractiveBlending = 3;\\n    var MultiplyBlending = 4;\\n    var CustomBlending = 5;\\n    var BlendingMode = {\\n        NoBlending: NoBlending,\\n        NormalBlending: NormalBlending,\\n        AdditiveBlending: AdditiveBlending,\\n        SubtractiveBlending: SubtractiveBlending,\\n        MultiplyBlending: MultiplyBlending,\\n        CustomBlending: CustomBlending\\n    };\\n    var AddEquation = 100;\\n    var SubtractEquation = 101;\\n    var ReverseSubtractEquation = 102;\\n    var MinEquation = 103;\\n    var MaxEquation = 104;\\n    var ZeroFactor = 200;\\n    var OneFactor = 201;\\n    var SrcColorFactor = 202;\\n    var OneMinusSrcColorFactor = 203;\\n    var SrcAlphaFactor = 204;\\n    var OneMinusSrcAlphaFactor = 205;\\n    var DstAlphaFactor = 206;\\n    var OneMinusDstAlphaFactor = 207;\\n    var DstColorFactor = 208;\\n    var OneMinusDstColorFactor = 209;\\n    var SrcAlphaSaturateFactor = 210;\\n    var NeverDepth = 0;\\n    var AlwaysDepth = 1;\\n    var LessDepth = 2;\\n    var LessEqualDepth = 3;\\n    var EqualDepth = 4;\\n    var GreaterEqualDepth = 5;\\n    var GreaterDepth = 6;\\n    var NotEqualDepth = 7;\\n    var MultiplyOperation = 0;\\n    var MixOperation = 1;\\n    var AddOperation = 2;\\n    var NoToneMapping = 0;\\n    var LinearToneMapping = 1;\\n    var ReinhardToneMapping = 2;\\n    var Uncharted2ToneMapping = 3;\\n    var CineonToneMapping = 4;\\n    var UVMapping = 300;\\n    var CubeReflectionMapping = 301;\\n    var CubeRefractionMapping = 302;\\n    var EquirectangularReflectionMapping = 303;\\n    var EquirectangularRefractionMapping = 304;\\n    var SphericalReflectionMapping = 305;\\n    var CubeUVReflectionMapping = 306;\\n    var CubeUVRefractionMapping = 307;\\n    var TextureMapping = {\\n        UVMapping: UVMapping,\\n        CubeReflectionMapping: CubeReflectionMapping,\\n        CubeRefractionMapping: CubeRefractionMapping,\\n        EquirectangularReflectionMapping: EquirectangularReflectionMapping,\\n        EquirectangularRefractionMapping: EquirectangularRefractionMapping,\\n        SphericalReflectionMapping: SphericalReflectionMapping,\\n        CubeUVReflectionMapping: CubeUVReflectionMapping,\\n        CubeUVRefractionMapping: CubeUVRefractionMapping\\n    };\\n    var RepeatWrapping = 1000;\\n    var ClampToEdgeWrapping = 1001;\\n    var MirroredRepeatWrapping = 1002;\\n    var TextureWrapping = {\\n        RepeatWrapping: RepeatWrapping,\\n        ClampToEdgeWrapping: ClampToEdgeWrapping,\\n        MirroredRepeatWrapping: MirroredRepeatWrapping\\n    };\\n    var NearestFilter = 1003;\\n    var NearestMipMapNearestFilter = 1004;\\n    var NearestMipMapLinearFilter = 1005;\\n    var LinearFilter = 1006;\\n    var LinearMipMapNearestFilter = 1007;\\n    var LinearMipMapLinearFilter = 1008;\\n    var TextureFilter = {\\n        NearestFilter: NearestFilter,\\n        NearestMipMapNearestFilter: NearestMipMapNearestFilter,\\n        NearestMipMapLinearFilter: NearestMipMapLinearFilter,\\n        LinearFilter: LinearFilter,\\n        LinearMipMapNearestFilter: LinearMipMapNearestFilter,\\n        LinearMipMapLinearFilter: LinearMipMapLinearFilter\\n    };\\n    var UnsignedByteType = 1009;\\n    var ByteType = 1010;\\n    var ShortType = 1011;\\n    var UnsignedShortType = 1012;\\n    var IntType = 1013;\\n    var UnsignedIntType = 1014;\\n    var FloatType = 1015;\\n    var HalfFloatType = 1016;\\n    var UnsignedShort4444Type = 1017;\\n    var UnsignedShort5551Type = 1018;\\n    var UnsignedShort565Type = 1019;\\n    var UnsignedInt248Type = 1020;\\n    var AlphaFormat = 1021;\\n    var RGBFormat = 1022;\\n    var RGBAFormat = 1023;\\n    var LuminanceFormat = 1024;\\n    var LuminanceAlphaFormat = 1025;\\n    var RGBEFormat = RGBAFormat;\\n    var DepthFormat = 1026;\\n    var DepthStencilFormat = 1027;\\n    var RGB_S3TC_DXT1_Format = 2001;\\n    var RGBA_S3TC_DXT1_Format = 2002;\\n    var RGBA_S3TC_DXT3_Format = 2003;\\n    var RGBA_S3TC_DXT5_Format = 2004;\\n    var RGB_PVRTC_4BPPV1_Format = 2100;\\n    var RGB_PVRTC_2BPPV1_Format = 2101;\\n    var RGBA_PVRTC_4BPPV1_Format = 2102;\\n    var RGBA_PVRTC_2BPPV1_Format = 2103;\\n    var RGB_ETC1_Format = 2151;\\n    var LoopOnce = 2200;\\n    var LoopRepeat = 2201;\\n    var LoopPingPong = 2202;\\n    var InterpolateDiscrete = 2300;\\n    var InterpolateLinear = 2301;\\n    var InterpolateSmooth = 2302;\\n    var ZeroCurvatureEnding = 2400;\\n    var ZeroSlopeEnding = 2401;\\n    var WrapAroundEnding = 2402;\\n    var TrianglesDrawMode = 0;\\n    var TriangleStripDrawMode = 1;\\n    var TriangleFanDrawMode = 2;\\n    var LinearEncoding = 3000;\\n    var sRGBEncoding = 3001;\\n    var GammaEncoding = 3007;\\n    var RGBEEncoding = 3002;\\n    var LogLuvEncoding = 3003;\\n    var RGBM7Encoding = 3004;\\n    var RGBM16Encoding = 3005;\\n    var RGBDEncoding = 3006;\\n    var BasicDepthPacking = 3200;\\n    var RGBADepthPacking = 3201;\\n\\n    /**\\n     * @author alteredq / http://alteredqualia.com/\\n     * @author mrdoob / http://mrdoob.com/\\n     */\\n\\n    exports.Math = {\\n\\n    \\tDEG2RAD: Math.PI / 180,\\n    \\tRAD2DEG: 180 / Math.PI,\\n\\n    \\tgenerateUUID: function () {\\n\\n    \\t\\t// http://www.broofa.com/Tools/Math.uuid.htm\\n\\n    \\t\\tvar chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split( '' );\\n    \\t\\tvar uuid = new Array( 36 );\\n    \\t\\tvar rnd = 0, r;\\n\\n    \\t\\treturn function generateUUID() {\\n\\n    \\t\\t\\tfor ( var i = 0; i < 36; i ++ ) {\\n\\n    \\t\\t\\t\\tif ( i === 8 || i === 13 || i === 18 || i === 23 ) {\\n\\n    \\t\\t\\t\\t\\tuuid[ i ] = '-';\\n\\n    \\t\\t\\t\\t} else if ( i === 14 ) {\\n\\n    \\t\\t\\t\\t\\tuuid[ i ] = '4';\\n\\n    \\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\tif ( rnd <= 0x02 ) rnd = 0x2000000 + ( Math.random() * 0x1000000 ) | 0;\\n    \\t\\t\\t\\t\\tr = rnd & 0xf;\\n    \\t\\t\\t\\t\\trnd = rnd >> 4;\\n    \\t\\t\\t\\t\\tuuid[ i ] = chars[ ( i === 19 ) ? ( r & 0x3 ) | 0x8 : r ];\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\treturn uuid.join( '' );\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\tclamp: function ( value, min, max ) {\\n\\n    \\t\\treturn Math.max( min, Math.min( max, value ) );\\n\\n    \\t},\\n\\n    \\t// compute euclidian modulo of m % n\\n    \\t// https://en.wikipedia.org/wiki/Modulo_operation\\n\\n    \\teuclideanModulo: function ( n, m ) {\\n\\n    \\t\\treturn ( ( n % m ) + m ) % m;\\n\\n    \\t},\\n\\n    \\t// Linear mapping from range <a1, a2> to range <b1, b2>\\n\\n    \\tmapLinear: function ( x, a1, a2, b1, b2 ) {\\n\\n    \\t\\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\\n\\n    \\t},\\n\\n    \\t// http://en.wikipedia.org/wiki/Smoothstep\\n\\n    \\tsmoothstep: function ( x, min, max ) {\\n\\n    \\t\\tif ( x <= min ) return 0;\\n    \\t\\tif ( x >= max ) return 1;\\n\\n    \\t\\tx = ( x - min ) / ( max - min );\\n\\n    \\t\\treturn x * x * ( 3 - 2 * x );\\n\\n    \\t},\\n\\n    \\tsmootherstep: function ( x, min, max ) {\\n\\n    \\t\\tif ( x <= min ) return 0;\\n    \\t\\tif ( x >= max ) return 1;\\n\\n    \\t\\tx = ( x - min ) / ( max - min );\\n\\n    \\t\\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\\n\\n    \\t},\\n\\n    \\trandom16: function () {\\n\\n    \\t\\tconsole.warn( 'THREE.Math.random16() has been deprecated. Use Math.random() instead.' );\\n    \\t\\treturn Math.random();\\n\\n    \\t},\\n\\n    \\t// Random integer from <low, high> interval\\n\\n    \\trandInt: function ( low, high ) {\\n\\n    \\t\\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\\n\\n    \\t},\\n\\n    \\t// Random float from <low, high> interval\\n\\n    \\trandFloat: function ( low, high ) {\\n\\n    \\t\\treturn low + Math.random() * ( high - low );\\n\\n    \\t},\\n\\n    \\t// Random float from <-range/2, range/2> interval\\n\\n    \\trandFloatSpread: function ( range ) {\\n\\n    \\t\\treturn range * ( 0.5 - Math.random() );\\n\\n    \\t},\\n\\n    \\tdegToRad: function ( degrees ) {\\n\\n    \\t\\treturn degrees * exports.Math.DEG2RAD;\\n\\n    \\t},\\n\\n    \\tradToDeg: function ( radians ) {\\n\\n    \\t\\treturn radians * exports.Math.RAD2DEG;\\n\\n    \\t},\\n\\n    \\tisPowerOfTwo: function ( value ) {\\n\\n    \\t\\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\\n\\n    \\t},\\n\\n    \\tnearestPowerOfTwo: function ( value ) {\\n\\n    \\t\\treturn Math.pow( 2, Math.round( Math.log( value ) / Math.LN2 ) );\\n\\n    \\t},\\n\\n    \\tnextPowerOfTwo: function ( value ) {\\n\\n    \\t\\tvalue --;\\n    \\t\\tvalue |= value >> 1;\\n    \\t\\tvalue |= value >> 2;\\n    \\t\\tvalue |= value >> 4;\\n    \\t\\tvalue |= value >> 8;\\n    \\t\\tvalue |= value >> 16;\\n    \\t\\tvalue ++;\\n\\n    \\t\\treturn value;\\n\\n    \\t}\\n\\n    };\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     * @author philogb / http://blog.thejit.org/\\n     * @author egraether / http://egraether.com/\\n     * @author zz85 / http://www.lab4games.net/zz85/blog\\n     */\\n\\n    function Vector2( x, y ) {\\n\\n    \\tthis.x = x || 0;\\n    \\tthis.y = y || 0;\\n\\n    }\\n\\n    Vector2.prototype = {\\n\\n    \\tconstructor: Vector2,\\n\\n    \\tisVector2: true,\\n\\n    \\tget width() {\\n\\n    \\t\\treturn this.x;\\n\\n    \\t},\\n\\n    \\tset width( value ) {\\n\\n    \\t\\tthis.x = value;\\n\\n    \\t},\\n\\n    \\tget height() {\\n\\n    \\t\\treturn this.y;\\n\\n    \\t},\\n\\n    \\tset height( value ) {\\n\\n    \\t\\tthis.y = value;\\n\\n    \\t},\\n\\n    \\t//\\n\\n    \\tset: function ( x, y ) {\\n\\n    \\t\\tthis.x = x;\\n    \\t\\tthis.y = y;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsetScalar: function ( scalar ) {\\n\\n    \\t\\tthis.x = scalar;\\n    \\t\\tthis.y = scalar;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsetX: function ( x ) {\\n\\n    \\t\\tthis.x = x;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsetY: function ( y ) {\\n\\n    \\t\\tthis.y = y;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsetComponent: function ( index, value ) {\\n\\n    \\t\\tswitch ( index ) {\\n\\n    \\t\\t\\tcase 0: this.x = value; break;\\n    \\t\\t\\tcase 1: this.y = value; break;\\n    \\t\\t\\tdefault: throw new Error( 'index is out of range: ' + index );\\n\\n    \\t\\t}\\n\\n    \\t},\\n\\n    \\tgetComponent: function ( index ) {\\n\\n    \\t\\tswitch ( index ) {\\n\\n    \\t\\t\\tcase 0: return this.x;\\n    \\t\\t\\tcase 1: return this.y;\\n    \\t\\t\\tdefault: throw new Error( 'index is out of range: ' + index );\\n\\n    \\t\\t}\\n\\n    \\t},\\n\\n    \\tclone: function () {\\n\\n    \\t\\treturn new this.constructor( this.x, this.y );\\n\\n    \\t},\\n\\n    \\tcopy: function ( v ) {\\n\\n    \\t\\tthis.x = v.x;\\n    \\t\\tthis.y = v.y;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tadd: function ( v, w ) {\\n\\n    \\t\\tif ( w !== undefined ) {\\n\\n    \\t\\t\\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\\n    \\t\\t\\treturn this.addVectors( v, w );\\n\\n    \\t\\t}\\n\\n    \\t\\tthis.x += v.x;\\n    \\t\\tthis.y += v.y;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\taddScalar: function ( s ) {\\n\\n    \\t\\tthis.x += s;\\n    \\t\\tthis.y += s;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\taddVectors: function ( a, b ) {\\n\\n    \\t\\tthis.x = a.x + b.x;\\n    \\t\\tthis.y = a.y + b.y;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\taddScaledVector: function ( v, s ) {\\n\\n    \\t\\tthis.x += v.x * s;\\n    \\t\\tthis.y += v.y * s;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsub: function ( v, w ) {\\n\\n    \\t\\tif ( w !== undefined ) {\\n\\n    \\t\\t\\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\\n    \\t\\t\\treturn this.subVectors( v, w );\\n\\n    \\t\\t}\\n\\n    \\t\\tthis.x -= v.x;\\n    \\t\\tthis.y -= v.y;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsubScalar: function ( s ) {\\n\\n    \\t\\tthis.x -= s;\\n    \\t\\tthis.y -= s;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsubVectors: function ( a, b ) {\\n\\n    \\t\\tthis.x = a.x - b.x;\\n    \\t\\tthis.y = a.y - b.y;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tmultiply: function ( v ) {\\n\\n    \\t\\tthis.x *= v.x;\\n    \\t\\tthis.y *= v.y;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tmultiplyScalar: function ( scalar ) {\\n\\n    \\t\\tif ( isFinite( scalar ) ) {\\n\\n    \\t\\t\\tthis.x *= scalar;\\n    \\t\\t\\tthis.y *= scalar;\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\tthis.x = 0;\\n    \\t\\t\\tthis.y = 0;\\n\\n    \\t\\t}\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tdivide: function ( v ) {\\n\\n    \\t\\tthis.x /= v.x;\\n    \\t\\tthis.y /= v.y;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tdivideScalar: function ( scalar ) {\\n\\n    \\t\\treturn this.multiplyScalar( 1 / scalar );\\n\\n    \\t},\\n\\n    \\tmin: function ( v ) {\\n\\n    \\t\\tthis.x = Math.min( this.x, v.x );\\n    \\t\\tthis.y = Math.min( this.y, v.y );\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tmax: function ( v ) {\\n\\n    \\t\\tthis.x = Math.max( this.x, v.x );\\n    \\t\\tthis.y = Math.max( this.y, v.y );\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tclamp: function ( min, max ) {\\n\\n    \\t\\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\\n\\n    \\t\\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\\n    \\t\\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tclampScalar: function () {\\n\\n    \\t\\tvar min, max;\\n\\n    \\t\\treturn function clampScalar( minVal, maxVal ) {\\n\\n    \\t\\t\\tif ( min === undefined ) {\\n\\n    \\t\\t\\t\\tmin = new Vector2();\\n    \\t\\t\\t\\tmax = new Vector2();\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tmin.set( minVal, minVal );\\n    \\t\\t\\tmax.set( maxVal, maxVal );\\n\\n    \\t\\t\\treturn this.clamp( min, max );\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\tclampLength: function ( min, max ) {\\n\\n    \\t\\tvar length = this.length();\\n\\n    \\t\\treturn this.multiplyScalar( Math.max( min, Math.min( max, length ) ) / length );\\n\\n    \\t},\\n\\n    \\tfloor: function () {\\n\\n    \\t\\tthis.x = Math.floor( this.x );\\n    \\t\\tthis.y = Math.floor( this.y );\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tceil: function () {\\n\\n    \\t\\tthis.x = Math.ceil( this.x );\\n    \\t\\tthis.y = Math.ceil( this.y );\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tround: function () {\\n\\n    \\t\\tthis.x = Math.round( this.x );\\n    \\t\\tthis.y = Math.round( this.y );\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\troundToZero: function () {\\n\\n    \\t\\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\\n    \\t\\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tnegate: function () {\\n\\n    \\t\\tthis.x = - this.x;\\n    \\t\\tthis.y = - this.y;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tdot: function ( v ) {\\n\\n    \\t\\treturn this.x * v.x + this.y * v.y;\\n\\n    \\t},\\n\\n    \\tlengthSq: function () {\\n\\n    \\t\\treturn this.x * this.x + this.y * this.y;\\n\\n    \\t},\\n\\n    \\tlength: function () {\\n\\n    \\t\\treturn Math.sqrt( this.x * this.x + this.y * this.y );\\n\\n    \\t},\\n\\n    \\tlengthManhattan: function() {\\n\\n    \\t\\treturn Math.abs( this.x ) + Math.abs( this.y );\\n\\n    \\t},\\n\\n    \\tnormalize: function () {\\n\\n    \\t\\treturn this.divideScalar( this.length() );\\n\\n    \\t},\\n\\n    \\tangle: function () {\\n\\n    \\t\\t// computes the angle in radians with respect to the positive x-axis\\n\\n    \\t\\tvar angle = Math.atan2( this.y, this.x );\\n\\n    \\t\\tif ( angle < 0 ) angle += 2 * Math.PI;\\n\\n    \\t\\treturn angle;\\n\\n    \\t},\\n\\n    \\tdistanceTo: function ( v ) {\\n\\n    \\t\\treturn Math.sqrt( this.distanceToSquared( v ) );\\n\\n    \\t},\\n\\n    \\tdistanceToSquared: function ( v ) {\\n\\n    \\t\\tvar dx = this.x - v.x, dy = this.y - v.y;\\n    \\t\\treturn dx * dx + dy * dy;\\n\\n    \\t},\\n\\n    \\tdistanceToManhattan: function ( v ) {\\n\\n    \\t\\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\\n\\n    \\t},\\n\\n    \\tsetLength: function ( length ) {\\n\\n    \\t\\treturn this.multiplyScalar( length / this.length() );\\n\\n    \\t},\\n\\n    \\tlerp: function ( v, alpha ) {\\n\\n    \\t\\tthis.x += ( v.x - this.x ) * alpha;\\n    \\t\\tthis.y += ( v.y - this.y ) * alpha;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tlerpVectors: function ( v1, v2, alpha ) {\\n\\n    \\t\\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\\n\\n    \\t},\\n\\n    \\tequals: function ( v ) {\\n\\n    \\t\\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\\n\\n    \\t},\\n\\n    \\tfromArray: function ( array, offset ) {\\n\\n    \\t\\tif ( offset === undefined ) offset = 0;\\n\\n    \\t\\tthis.x = array[ offset ];\\n    \\t\\tthis.y = array[ offset + 1 ];\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\ttoArray: function ( array, offset ) {\\n\\n    \\t\\tif ( array === undefined ) array = [];\\n    \\t\\tif ( offset === undefined ) offset = 0;\\n\\n    \\t\\tarray[ offset ] = this.x;\\n    \\t\\tarray[ offset + 1 ] = this.y;\\n\\n    \\t\\treturn array;\\n\\n    \\t},\\n\\n    \\tfromAttribute: function ( attribute, index, offset ) {\\n\\n    \\t\\tif ( offset === undefined ) offset = 0;\\n\\n    \\t\\tindex = index * attribute.itemSize + offset;\\n\\n    \\t\\tthis.x = attribute.array[ index ];\\n    \\t\\tthis.y = attribute.array[ index + 1 ];\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\trotateAround: function ( center, angle ) {\\n\\n    \\t\\tvar c = Math.cos( angle ), s = Math.sin( angle );\\n\\n    \\t\\tvar x = this.x - center.x;\\n    \\t\\tvar y = this.y - center.y;\\n\\n    \\t\\tthis.x = x * c - y * s + center.x;\\n    \\t\\tthis.y = x * s + y * c + center.y;\\n\\n    \\t\\treturn this;\\n\\n    \\t}\\n\\n    };\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     * @author alteredq / http://alteredqualia.com/\\n     * @author szimek / https://github.com/szimek/\\n     */\\n\\n    function Texture( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\\n\\n    \\tObject.defineProperty( this, 'id', { value: TextureIdCount() } );\\n\\n    \\tthis.uuid = exports.Math.generateUUID();\\n\\n    \\tthis.name = '';\\n    \\tthis.sourceFile = '';\\n\\n    \\tthis.image = image !== undefined ? image : Texture.DEFAULT_IMAGE;\\n    \\tthis.mipmaps = [];\\n\\n    \\tthis.mapping = mapping !== undefined ? mapping : Texture.DEFAULT_MAPPING;\\n\\n    \\tthis.wrapS = wrapS !== undefined ? wrapS : ClampToEdgeWrapping;\\n    \\tthis.wrapT = wrapT !== undefined ? wrapT : ClampToEdgeWrapping;\\n\\n    \\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\\n    \\tthis.minFilter = minFilter !== undefined ? minFilter : LinearMipMapLinearFilter;\\n\\n    \\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\\n\\n    \\tthis.format = format !== undefined ? format : RGBAFormat;\\n    \\tthis.type = type !== undefined ? type : UnsignedByteType;\\n\\n    \\tthis.offset = new Vector2( 0, 0 );\\n    \\tthis.repeat = new Vector2( 1, 1 );\\n\\n    \\tthis.generateMipmaps = true;\\n    \\tthis.premultiplyAlpha = false;\\n    \\tthis.flipY = true;\\n    \\tthis.unpackAlignment = 4;\\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\\n\\n\\n    \\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\\n    \\t//\\n    \\t// Also changing the encoding after already used by a Material will not automatically make the Material\\n    \\t// update.  You need to explicitly call Material.needsUpdate to trigger it to recompile.\\n    \\tthis.encoding = encoding !== undefined ? encoding :  LinearEncoding;\\n\\n    \\tthis.version = 0;\\n    \\tthis.onUpdate = null;\\n\\n    }\\n\\n    Texture.DEFAULT_IMAGE = undefined;\\n    Texture.DEFAULT_MAPPING = UVMapping;\\n\\n    Texture.prototype = {\\n\\n    \\tconstructor: Texture,\\n\\n    \\tisTexture: true,\\n\\n    \\tset needsUpdate( value ) {\\n\\n    \\t\\tif ( value === true ) this.version ++;\\n\\n    \\t},\\n\\n    \\tclone: function () {\\n\\n    \\t\\treturn new this.constructor().copy( this );\\n\\n    \\t},\\n\\n    \\tcopy: function ( source ) {\\n\\n    \\t\\tthis.image = source.image;\\n    \\t\\tthis.mipmaps = source.mipmaps.slice( 0 );\\n\\n    \\t\\tthis.mapping = source.mapping;\\n\\n    \\t\\tthis.wrapS = source.wrapS;\\n    \\t\\tthis.wrapT = source.wrapT;\\n\\n    \\t\\tthis.magFilter = source.magFilter;\\n    \\t\\tthis.minFilter = source.minFilter;\\n\\n    \\t\\tthis.anisotropy = source.anisotropy;\\n\\n    \\t\\tthis.format = source.format;\\n    \\t\\tthis.type = source.type;\\n\\n    \\t\\tthis.offset.copy( source.offset );\\n    \\t\\tthis.repeat.copy( source.repeat );\\n\\n    \\t\\tthis.generateMipmaps = source.generateMipmaps;\\n    \\t\\tthis.premultiplyAlpha = source.premultiplyAlpha;\\n    \\t\\tthis.flipY = source.flipY;\\n    \\t\\tthis.unpackAlignment = source.unpackAlignment;\\n    \\t\\tthis.encoding = source.encoding;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\ttoJSON: function ( meta ) {\\n\\n    \\t\\tif ( meta.textures[ this.uuid ] !== undefined ) {\\n\\n    \\t\\t\\treturn meta.textures[ this.uuid ];\\n\\n    \\t\\t}\\n\\n    \\t\\tfunction getDataURL( image ) {\\n\\n    \\t\\t\\tvar canvas;\\n\\n    \\t\\t\\tif ( image.toDataURL !== undefined ) {\\n\\n    \\t\\t\\t\\tcanvas = image;\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\tcanvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\\n    \\t\\t\\t\\tcanvas.width = image.width;\\n    \\t\\t\\t\\tcanvas.height = image.height;\\n\\n    \\t\\t\\t\\tcanvas.getContext( '2d' ).drawImage( image, 0, 0, image.width, image.height );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\\n\\n    \\t\\t\\t\\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\treturn canvas.toDataURL( 'image/png' );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\tvar output = {\\n    \\t\\t\\tmetadata: {\\n    \\t\\t\\t\\tversion: 4.4,\\n    \\t\\t\\t\\ttype: 'Texture',\\n    \\t\\t\\t\\tgenerator: 'Texture.toJSON'\\n    \\t\\t\\t},\\n\\n    \\t\\t\\tuuid: this.uuid,\\n    \\t\\t\\tname: this.name,\\n\\n    \\t\\t\\tmapping: this.mapping,\\n\\n    \\t\\t\\trepeat: [ this.repeat.x, this.repeat.y ],\\n    \\t\\t\\toffset: [ this.offset.x, this.offset.y ],\\n    \\t\\t\\twrap: [ this.wrapS, this.wrapT ],\\n\\n    \\t\\t\\tminFilter: this.minFilter,\\n    \\t\\t\\tmagFilter: this.magFilter,\\n    \\t\\t\\tanisotropy: this.anisotropy,\\n\\n    \\t\\t\\tflipY: this.flipY\\n    \\t\\t};\\n\\n    \\t\\tif ( this.image !== undefined ) {\\n\\n    \\t\\t\\t// TODO: Move to THREE.Image\\n\\n    \\t\\t\\tvar image = this.image;\\n\\n    \\t\\t\\tif ( image.uuid === undefined ) {\\n\\n    \\t\\t\\t\\timage.uuid = exports.Math.generateUUID(); // UGH\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tif ( meta.images[ image.uuid ] === undefined ) {\\n\\n    \\t\\t\\t\\tmeta.images[ image.uuid ] = {\\n    \\t\\t\\t\\t\\tuuid: image.uuid,\\n    \\t\\t\\t\\t\\turl: getDataURL( image )\\n    \\t\\t\\t\\t};\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\toutput.image = image.uuid;\\n\\n    \\t\\t}\\n\\n    \\t\\tmeta.textures[ this.uuid ] = output;\\n\\n    \\t\\treturn output;\\n\\n    \\t},\\n\\n    \\tdispose: function () {\\n\\n    \\t\\tthis.dispatchEvent( { type: 'dispose' } );\\n\\n    \\t},\\n\\n    \\ttransformUv: function ( uv ) {\\n\\n    \\t\\tif ( this.mapping !== UVMapping )  return;\\n\\n    \\t\\tuv.multiply( this.repeat );\\n    \\t\\tuv.add( this.offset );\\n\\n    \\t\\tif ( uv.x < 0 || uv.x > 1 ) {\\n\\n    \\t\\t\\tswitch ( this.wrapS ) {\\n\\n    \\t\\t\\t\\tcase RepeatWrapping:\\n\\n    \\t\\t\\t\\t\\tuv.x = uv.x - Math.floor( uv.x );\\n    \\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\tcase ClampToEdgeWrapping:\\n\\n    \\t\\t\\t\\t\\tuv.x = uv.x < 0 ? 0 : 1;\\n    \\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\tcase MirroredRepeatWrapping:\\n\\n    \\t\\t\\t\\t\\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\\n\\n    \\t\\t\\t\\t\\t\\tuv.x = Math.ceil( uv.x ) - uv.x;\\n\\n    \\t\\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\t\\tuv.x = uv.x - Math.floor( uv.x );\\n\\n    \\t\\t\\t\\t\\t}\\n    \\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( uv.y < 0 || uv.y > 1 ) {\\n\\n    \\t\\t\\tswitch ( this.wrapT ) {\\n\\n    \\t\\t\\t\\tcase RepeatWrapping:\\n\\n    \\t\\t\\t\\t\\tuv.y = uv.y - Math.floor( uv.y );\\n    \\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\tcase ClampToEdgeWrapping:\\n\\n    \\t\\t\\t\\t\\tuv.y = uv.y < 0 ? 0 : 1;\\n    \\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\tcase MirroredRepeatWrapping:\\n\\n    \\t\\t\\t\\t\\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\\n\\n    \\t\\t\\t\\t\\t\\tuv.y = Math.ceil( uv.y ) - uv.y;\\n\\n    \\t\\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\t\\tuv.y = uv.y - Math.floor( uv.y );\\n\\n    \\t\\t\\t\\t\\t}\\n    \\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( this.flipY ) {\\n\\n    \\t\\t\\tuv.y = 1 - uv.y;\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    };\\n\\n    Object.assign( Texture.prototype, EventDispatcher.prototype );\\n\\n    var count = 0;\\n    function TextureIdCount() { return count++; };\\n\\n    /**\\n     * @author supereggbert / http://www.paulbrunt.co.uk/\\n     * @author philogb / http://blog.thejit.org/\\n     * @author mikael emtinger / http://gomo.se/\\n     * @author egraether / http://egraether.com/\\n     * @author WestLangley / http://github.com/WestLangley\\n     */\\n\\n    function Vector4( x, y, z, w ) {\\n\\n    \\tthis.x = x || 0;\\n    \\tthis.y = y || 0;\\n    \\tthis.z = z || 0;\\n    \\tthis.w = ( w !== undefined ) ? w : 1;\\n\\n    }\\n\\n    Vector4.prototype = {\\n\\n    \\tconstructor: Vector4,\\n\\n    \\tisVector4: true,\\n\\n    \\tset: function ( x, y, z, w ) {\\n\\n    \\t\\tthis.x = x;\\n    \\t\\tthis.y = y;\\n    \\t\\tthis.z = z;\\n    \\t\\tthis.w = w;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsetScalar: function ( scalar ) {\\n\\n    \\t\\tthis.x = scalar;\\n    \\t\\tthis.y = scalar;\\n    \\t\\tthis.z = scalar;\\n    \\t\\tthis.w = scalar;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsetX: function ( x ) {\\n\\n    \\t\\tthis.x = x;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsetY: function ( y ) {\\n\\n    \\t\\tthis.y = y;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsetZ: function ( z ) {\\n\\n    \\t\\tthis.z = z;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsetW: function ( w ) {\\n\\n    \\t\\tthis.w = w;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsetComponent: function ( index, value ) {\\n\\n    \\t\\tswitch ( index ) {\\n\\n    \\t\\t\\tcase 0: this.x = value; break;\\n    \\t\\t\\tcase 1: this.y = value; break;\\n    \\t\\t\\tcase 2: this.z = value; break;\\n    \\t\\t\\tcase 3: this.w = value; break;\\n    \\t\\t\\tdefault: throw new Error( 'index is out of range: ' + index );\\n\\n    \\t\\t}\\n\\n    \\t},\\n\\n    \\tgetComponent: function ( index ) {\\n\\n    \\t\\tswitch ( index ) {\\n\\n    \\t\\t\\tcase 0: return this.x;\\n    \\t\\t\\tcase 1: return this.y;\\n    \\t\\t\\tcase 2: return this.z;\\n    \\t\\t\\tcase 3: return this.w;\\n    \\t\\t\\tdefault: throw new Error( 'index is out of range: ' + index );\\n\\n    \\t\\t}\\n\\n    \\t},\\n\\n    \\tclone: function () {\\n\\n    \\t\\treturn new this.constructor( this.x, this.y, this.z, this.w );\\n\\n    \\t},\\n\\n    \\tcopy: function ( v ) {\\n\\n    \\t\\tthis.x = v.x;\\n    \\t\\tthis.y = v.y;\\n    \\t\\tthis.z = v.z;\\n    \\t\\tthis.w = ( v.w !== undefined ) ? v.w : 1;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tadd: function ( v, w ) {\\n\\n    \\t\\tif ( w !== undefined ) {\\n\\n    \\t\\t\\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\\n    \\t\\t\\treturn this.addVectors( v, w );\\n\\n    \\t\\t}\\n\\n    \\t\\tthis.x += v.x;\\n    \\t\\tthis.y += v.y;\\n    \\t\\tthis.z += v.z;\\n    \\t\\tthis.w += v.w;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\taddScalar: function ( s ) {\\n\\n    \\t\\tthis.x += s;\\n    \\t\\tthis.y += s;\\n    \\t\\tthis.z += s;\\n    \\t\\tthis.w += s;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\taddVectors: function ( a, b ) {\\n\\n    \\t\\tthis.x = a.x + b.x;\\n    \\t\\tthis.y = a.y + b.y;\\n    \\t\\tthis.z = a.z + b.z;\\n    \\t\\tthis.w = a.w + b.w;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\taddScaledVector: function ( v, s ) {\\n\\n    \\t\\tthis.x += v.x * s;\\n    \\t\\tthis.y += v.y * s;\\n    \\t\\tthis.z += v.z * s;\\n    \\t\\tthis.w += v.w * s;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsub: function ( v, w ) {\\n\\n    \\t\\tif ( w !== undefined ) {\\n\\n    \\t\\t\\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\\n    \\t\\t\\treturn this.subVectors( v, w );\\n\\n    \\t\\t}\\n\\n    \\t\\tthis.x -= v.x;\\n    \\t\\tthis.y -= v.y;\\n    \\t\\tthis.z -= v.z;\\n    \\t\\tthis.w -= v.w;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsubScalar: function ( s ) {\\n\\n    \\t\\tthis.x -= s;\\n    \\t\\tthis.y -= s;\\n    \\t\\tthis.z -= s;\\n    \\t\\tthis.w -= s;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsubVectors: function ( a, b ) {\\n\\n    \\t\\tthis.x = a.x - b.x;\\n    \\t\\tthis.y = a.y - b.y;\\n    \\t\\tthis.z = a.z - b.z;\\n    \\t\\tthis.w = a.w - b.w;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tmultiplyScalar: function ( scalar ) {\\n\\n    \\t\\tif ( isFinite( scalar ) ) {\\n\\n    \\t\\t\\tthis.x *= scalar;\\n    \\t\\t\\tthis.y *= scalar;\\n    \\t\\t\\tthis.z *= scalar;\\n    \\t\\t\\tthis.w *= scalar;\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\tthis.x = 0;\\n    \\t\\t\\tthis.y = 0;\\n    \\t\\t\\tthis.z = 0;\\n    \\t\\t\\tthis.w = 0;\\n\\n    \\t\\t}\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tapplyMatrix4: function ( m ) {\\n\\n    \\t\\tvar x = this.x, y = this.y, z = this.z, w = this.w;\\n    \\t\\tvar e = m.elements;\\n\\n    \\t\\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\\n    \\t\\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\\n    \\t\\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\\n    \\t\\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tdivideScalar: function ( scalar ) {\\n\\n    \\t\\treturn this.multiplyScalar( 1 / scalar );\\n\\n    \\t},\\n\\n    \\tsetAxisAngleFromQuaternion: function ( q ) {\\n\\n    \\t\\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\\n\\n    \\t\\t// q is assumed to be normalized\\n\\n    \\t\\tthis.w = 2 * Math.acos( q.w );\\n\\n    \\t\\tvar s = Math.sqrt( 1 - q.w * q.w );\\n\\n    \\t\\tif ( s < 0.0001 ) {\\n\\n    \\t\\t\\t this.x = 1;\\n    \\t\\t\\t this.y = 0;\\n    \\t\\t\\t this.z = 0;\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\t this.x = q.x / s;\\n    \\t\\t\\t this.y = q.y / s;\\n    \\t\\t\\t this.z = q.z / s;\\n\\n    \\t\\t}\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsetAxisAngleFromRotationMatrix: function ( m ) {\\n\\n    \\t\\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\\n\\n    \\t\\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\\n\\n    \\t\\tvar angle, x, y, z,\\t\\t// variables for result\\n    \\t\\t\\tepsilon = 0.01,\\t\\t// margin to allow for rounding errors\\n    \\t\\t\\tepsilon2 = 0.1,\\t\\t// margin to distinguish between 0 and 180 degrees\\n\\n    \\t\\t\\tte = m.elements,\\n\\n    \\t\\t\\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\\n    \\t\\t\\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\\n    \\t\\t\\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\\n\\n    \\t\\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\\n    \\t\\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\\n    \\t\\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\\n\\n    \\t\\t\\t// singularity found\\n    \\t\\t\\t// first check for identity matrix which must have +1 for all terms\\n    \\t\\t\\t// in leading diagonal and zero in other terms\\n\\n    \\t\\t\\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\\n    \\t\\t\\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\\n    \\t\\t\\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\\n    \\t\\t\\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\\n\\n    \\t\\t\\t\\t// this singularity is identity matrix so angle = 0\\n\\n    \\t\\t\\t\\tthis.set( 1, 0, 0, 0 );\\n\\n    \\t\\t\\t\\treturn this; // zero angle, arbitrary axis\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\t// otherwise this singularity is angle = 180\\n\\n    \\t\\t\\tangle = Math.PI;\\n\\n    \\t\\t\\tvar xx = ( m11 + 1 ) / 2;\\n    \\t\\t\\tvar yy = ( m22 + 1 ) / 2;\\n    \\t\\t\\tvar zz = ( m33 + 1 ) / 2;\\n    \\t\\t\\tvar xy = ( m12 + m21 ) / 4;\\n    \\t\\t\\tvar xz = ( m13 + m31 ) / 4;\\n    \\t\\t\\tvar yz = ( m23 + m32 ) / 4;\\n\\n    \\t\\t\\tif ( ( xx > yy ) && ( xx > zz ) ) {\\n\\n    \\t\\t\\t\\t// m11 is the largest diagonal term\\n\\n    \\t\\t\\t\\tif ( xx < epsilon ) {\\n\\n    \\t\\t\\t\\t\\tx = 0;\\n    \\t\\t\\t\\t\\ty = 0.707106781;\\n    \\t\\t\\t\\t\\tz = 0.707106781;\\n\\n    \\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\tx = Math.sqrt( xx );\\n    \\t\\t\\t\\t\\ty = xy / x;\\n    \\t\\t\\t\\t\\tz = xz / x;\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t} else if ( yy > zz ) {\\n\\n    \\t\\t\\t\\t// m22 is the largest diagonal term\\n\\n    \\t\\t\\t\\tif ( yy < epsilon ) {\\n\\n    \\t\\t\\t\\t\\tx = 0.707106781;\\n    \\t\\t\\t\\t\\ty = 0;\\n    \\t\\t\\t\\t\\tz = 0.707106781;\\n\\n    \\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\ty = Math.sqrt( yy );\\n    \\t\\t\\t\\t\\tx = xy / y;\\n    \\t\\t\\t\\t\\tz = yz / y;\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t// m33 is the largest diagonal term so base result on this\\n\\n    \\t\\t\\t\\tif ( zz < epsilon ) {\\n\\n    \\t\\t\\t\\t\\tx = 0.707106781;\\n    \\t\\t\\t\\t\\ty = 0.707106781;\\n    \\t\\t\\t\\t\\tz = 0;\\n\\n    \\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\tz = Math.sqrt( zz );\\n    \\t\\t\\t\\t\\tx = xz / z;\\n    \\t\\t\\t\\t\\ty = yz / z;\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tthis.set( x, y, z, angle );\\n\\n    \\t\\t\\treturn this; // return 180 deg rotation\\n\\n    \\t\\t}\\n\\n    \\t\\t// as we have reached here there are no singularities so we can handle normally\\n\\n    \\t\\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\\n    \\t\\t                   ( m13 - m31 ) * ( m13 - m31 ) +\\n    \\t\\t                   ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\\n\\n    \\t\\tif ( Math.abs( s ) < 0.001 ) s = 1;\\n\\n    \\t\\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\\n    \\t\\t// caught by singularity test above, but I've left it in just in case\\n\\n    \\t\\tthis.x = ( m32 - m23 ) / s;\\n    \\t\\tthis.y = ( m13 - m31 ) / s;\\n    \\t\\tthis.z = ( m21 - m12 ) / s;\\n    \\t\\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tmin: function ( v ) {\\n\\n    \\t\\tthis.x = Math.min( this.x, v.x );\\n    \\t\\tthis.y = Math.min( this.y, v.y );\\n    \\t\\tthis.z = Math.min( this.z, v.z );\\n    \\t\\tthis.w = Math.min( this.w, v.w );\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tmax: function ( v ) {\\n\\n    \\t\\tthis.x = Math.max( this.x, v.x );\\n    \\t\\tthis.y = Math.max( this.y, v.y );\\n    \\t\\tthis.z = Math.max( this.z, v.z );\\n    \\t\\tthis.w = Math.max( this.w, v.w );\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tclamp: function ( min, max ) {\\n\\n    \\t\\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\\n\\n    \\t\\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\\n    \\t\\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\\n    \\t\\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\\n    \\t\\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tclampScalar: function () {\\n\\n    \\t\\tvar min, max;\\n\\n    \\t\\treturn function clampScalar( minVal, maxVal ) {\\n\\n    \\t\\t\\tif ( min === undefined ) {\\n\\n    \\t\\t\\t\\tmin = new Vector4();\\n    \\t\\t\\t\\tmax = new Vector4();\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tmin.set( minVal, minVal, minVal, minVal );\\n    \\t\\t\\tmax.set( maxVal, maxVal, maxVal, maxVal );\\n\\n    \\t\\t\\treturn this.clamp( min, max );\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\tfloor: function () {\\n\\n    \\t\\tthis.x = Math.floor( this.x );\\n    \\t\\tthis.y = Math.floor( this.y );\\n    \\t\\tthis.z = Math.floor( this.z );\\n    \\t\\tthis.w = Math.floor( this.w );\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tceil: function () {\\n\\n    \\t\\tthis.x = Math.ceil( this.x );\\n    \\t\\tthis.y = Math.ceil( this.y );\\n    \\t\\tthis.z = Math.ceil( this.z );\\n    \\t\\tthis.w = Math.ceil( this.w );\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tround: function () {\\n\\n    \\t\\tthis.x = Math.round( this.x );\\n    \\t\\tthis.y = Math.round( this.y );\\n    \\t\\tthis.z = Math.round( this.z );\\n    \\t\\tthis.w = Math.round( this.w );\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\troundToZero: function () {\\n\\n    \\t\\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\\n    \\t\\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\\n    \\t\\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\\n    \\t\\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tnegate: function () {\\n\\n    \\t\\tthis.x = - this.x;\\n    \\t\\tthis.y = - this.y;\\n    \\t\\tthis.z = - this.z;\\n    \\t\\tthis.w = - this.w;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tdot: function ( v ) {\\n\\n    \\t\\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\\n\\n    \\t},\\n\\n    \\tlengthSq: function () {\\n\\n    \\t\\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\\n\\n    \\t},\\n\\n    \\tlength: function () {\\n\\n    \\t\\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\\n\\n    \\t},\\n\\n    \\tlengthManhattan: function () {\\n\\n    \\t\\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\\n\\n    \\t},\\n\\n    \\tnormalize: function () {\\n\\n    \\t\\treturn this.divideScalar( this.length() );\\n\\n    \\t},\\n\\n    \\tsetLength: function ( length ) {\\n\\n    \\t\\treturn this.multiplyScalar( length / this.length() );\\n\\n    \\t},\\n\\n    \\tlerp: function ( v, alpha ) {\\n\\n    \\t\\tthis.x += ( v.x - this.x ) * alpha;\\n    \\t\\tthis.y += ( v.y - this.y ) * alpha;\\n    \\t\\tthis.z += ( v.z - this.z ) * alpha;\\n    \\t\\tthis.w += ( v.w - this.w ) * alpha;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tlerpVectors: function ( v1, v2, alpha ) {\\n\\n    \\t\\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\\n\\n    \\t},\\n\\n    \\tequals: function ( v ) {\\n\\n    \\t\\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\\n\\n    \\t},\\n\\n    \\tfromArray: function ( array, offset ) {\\n\\n    \\t\\tif ( offset === undefined ) offset = 0;\\n\\n    \\t\\tthis.x = array[ offset ];\\n    \\t\\tthis.y = array[ offset + 1 ];\\n    \\t\\tthis.z = array[ offset + 2 ];\\n    \\t\\tthis.w = array[ offset + 3 ];\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\ttoArray: function ( array, offset ) {\\n\\n    \\t\\tif ( array === undefined ) array = [];\\n    \\t\\tif ( offset === undefined ) offset = 0;\\n\\n    \\t\\tarray[ offset ] = this.x;\\n    \\t\\tarray[ offset + 1 ] = this.y;\\n    \\t\\tarray[ offset + 2 ] = this.z;\\n    \\t\\tarray[ offset + 3 ] = this.w;\\n\\n    \\t\\treturn array;\\n\\n    \\t},\\n\\n    \\tfromAttribute: function ( attribute, index, offset ) {\\n\\n    \\t\\tif ( offset === undefined ) offset = 0;\\n\\n    \\t\\tindex = index * attribute.itemSize + offset;\\n\\n    \\t\\tthis.x = attribute.array[ index ];\\n    \\t\\tthis.y = attribute.array[ index + 1 ];\\n    \\t\\tthis.z = attribute.array[ index + 2 ];\\n    \\t\\tthis.w = attribute.array[ index + 3 ];\\n\\n    \\t\\treturn this;\\n\\n    \\t}\\n\\n    };\\n\\n    /**\\n     * @author szimek / https://github.com/szimek/\\n     * @author alteredq / http://alteredqualia.com/\\n     * @author Marius Kintel / https://github.com/kintel\\n     */\\n\\n    /*\\n     In options, we can specify:\\n     * Texture parameters for an auto-generated target texture\\n     * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\\n    */\\n    function WebGLRenderTarget( width, height, options ) {\\n\\n    \\tthis.uuid = exports.Math.generateUUID();\\n\\n    \\tthis.width = width;\\n    \\tthis.height = height;\\n\\n    \\tthis.scissor = new Vector4( 0, 0, width, height );\\n    \\tthis.scissorTest = false;\\n\\n    \\tthis.viewport = new Vector4( 0, 0, width, height );\\n\\n    \\toptions = options || {};\\n\\n    \\tif ( options.minFilter === undefined ) options.minFilter = LinearFilter;\\n\\n    \\tthis.texture = new Texture( undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\\n\\n    \\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\\n    \\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\\n    \\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\\n\\n    }\\n\\n    Object.assign( WebGLRenderTarget.prototype, EventDispatcher.prototype, {\\n\\n    \\tisWebGLRenderTarget: true,\\n\\n    \\tsetSize: function ( width, height ) {\\n\\n    \\t\\tif ( this.width !== width || this.height !== height ) {\\n\\n    \\t\\t\\tthis.width = width;\\n    \\t\\t\\tthis.height = height;\\n\\n    \\t\\t\\tthis.dispose();\\n\\n    \\t\\t}\\n\\n    \\t\\tthis.viewport.set( 0, 0, width, height );\\n    \\t\\tthis.scissor.set( 0, 0, width, height );\\n\\n    \\t},\\n\\n    \\tclone: function () {\\n\\n    \\t\\treturn new this.constructor().copy( this );\\n\\n    \\t},\\n\\n    \\tcopy: function ( source ) {\\n\\n    \\t\\tthis.width = source.width;\\n    \\t\\tthis.height = source.height;\\n\\n    \\t\\tthis.viewport.copy( source.viewport );\\n\\n    \\t\\tthis.texture = source.texture.clone();\\n\\n    \\t\\tthis.depthBuffer = source.depthBuffer;\\n    \\t\\tthis.stencilBuffer = source.stencilBuffer;\\n    \\t\\tthis.depthTexture = source.depthTexture;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tdispose: function () {\\n\\n    \\t\\tthis.dispatchEvent( { type: 'dispose' } );\\n\\n    \\t}\\n\\n    } );\\n\\n    /**\\n     * @author alteredq / http://alteredqualia.com\\n     */\\n\\n    function WebGLRenderTargetCube( width, height, options ) {\\n\\n    \\tWebGLRenderTarget.call( this, width, height, options );\\n\\n    \\tthis.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\\n    \\tthis.activeMipMapLevel = 0;\\n\\n    }\\n\\n    WebGLRenderTargetCube.prototype = Object.create( WebGLRenderTarget.prototype );\\n    WebGLRenderTargetCube.prototype.constructor = WebGLRenderTargetCube;\\n\\n    WebGLRenderTargetCube.prototype.isWebGLRenderTargetCube = true;\\n\\n    /**\\n     * @author mikael emtinger / http://gomo.se/\\n     * @author alteredq / http://alteredqualia.com/\\n     * @author WestLangley / http://github.com/WestLangley\\n     * @author bhouston / http://clara.io\\n     */\\n\\n    function Quaternion( x, y, z, w ) {\\n\\n    \\tthis._x = x || 0;\\n    \\tthis._y = y || 0;\\n    \\tthis._z = z || 0;\\n    \\tthis._w = ( w !== undefined ) ? w : 1;\\n\\n    }\\n\\n    Quaternion.prototype = {\\n\\n    \\tconstructor: Quaternion,\\n\\n    \\tget x () {\\n\\n    \\t\\treturn this._x;\\n\\n    \\t},\\n\\n    \\tset x ( value ) {\\n\\n    \\t\\tthis._x = value;\\n    \\t\\tthis.onChangeCallback();\\n\\n    \\t},\\n\\n    \\tget y () {\\n\\n    \\t\\treturn this._y;\\n\\n    \\t},\\n\\n    \\tset y ( value ) {\\n\\n    \\t\\tthis._y = value;\\n    \\t\\tthis.onChangeCallback();\\n\\n    \\t},\\n\\n    \\tget z () {\\n\\n    \\t\\treturn this._z;\\n\\n    \\t},\\n\\n    \\tset z ( value ) {\\n\\n    \\t\\tthis._z = value;\\n    \\t\\tthis.onChangeCallback();\\n\\n    \\t},\\n\\n    \\tget w () {\\n\\n    \\t\\treturn this._w;\\n\\n    \\t},\\n\\n    \\tset w ( value ) {\\n\\n    \\t\\tthis._w = value;\\n    \\t\\tthis.onChangeCallback();\\n\\n    \\t},\\n\\n    \\tset: function ( x, y, z, w ) {\\n\\n    \\t\\tthis._x = x;\\n    \\t\\tthis._y = y;\\n    \\t\\tthis._z = z;\\n    \\t\\tthis._w = w;\\n\\n    \\t\\tthis.onChangeCallback();\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tclone: function () {\\n\\n    \\t\\treturn new this.constructor( this._x, this._y, this._z, this._w );\\n\\n    \\t},\\n\\n    \\tcopy: function ( quaternion ) {\\n\\n    \\t\\tthis._x = quaternion.x;\\n    \\t\\tthis._y = quaternion.y;\\n    \\t\\tthis._z = quaternion.z;\\n    \\t\\tthis._w = quaternion.w;\\n\\n    \\t\\tthis.onChangeCallback();\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsetFromEuler: function ( euler, update ) {\\n\\n    \\t\\tif ( (euler && euler.isEuler) === false ) {\\n\\n    \\t\\t\\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\\n\\n    \\t\\t}\\n\\n    \\t\\t// http://www.mathworks.com/matlabcentral/fileexchange/\\n    \\t\\t// \\t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\\n    \\t\\t//\\tcontent/SpinCalc.m\\n\\n    \\t\\tvar c1 = Math.cos( euler._x / 2 );\\n    \\t\\tvar c2 = Math.cos( euler._y / 2 );\\n    \\t\\tvar c3 = Math.cos( euler._z / 2 );\\n    \\t\\tvar s1 = Math.sin( euler._x / 2 );\\n    \\t\\tvar s2 = Math.sin( euler._y / 2 );\\n    \\t\\tvar s3 = Math.sin( euler._z / 2 );\\n\\n    \\t\\tvar order = euler.order;\\n\\n    \\t\\tif ( order === 'XYZ' ) {\\n\\n    \\t\\t\\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\\n    \\t\\t\\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\\n    \\t\\t\\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\\n    \\t\\t\\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\\n\\n    \\t\\t} else if ( order === 'YXZ' ) {\\n\\n    \\t\\t\\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\\n    \\t\\t\\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\\n    \\t\\t\\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\\n    \\t\\t\\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\\n\\n    \\t\\t} else if ( order === 'ZXY' ) {\\n\\n    \\t\\t\\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\\n    \\t\\t\\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\\n    \\t\\t\\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\\n    \\t\\t\\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\\n\\n    \\t\\t} else if ( order === 'ZYX' ) {\\n\\n    \\t\\t\\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\\n    \\t\\t\\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\\n    \\t\\t\\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\\n    \\t\\t\\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\\n\\n    \\t\\t} else if ( order === 'YZX' ) {\\n\\n    \\t\\t\\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\\n    \\t\\t\\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\\n    \\t\\t\\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\\n    \\t\\t\\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\\n\\n    \\t\\t} else if ( order === 'XZY' ) {\\n\\n    \\t\\t\\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\\n    \\t\\t\\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\\n    \\t\\t\\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\\n    \\t\\t\\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( update !== false ) this.onChangeCallback();\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsetFromAxisAngle: function ( axis, angle ) {\\n\\n    \\t\\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\\n\\n    \\t\\t// assumes axis is normalized\\n\\n    \\t\\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\\n\\n    \\t\\tthis._x = axis.x * s;\\n    \\t\\tthis._y = axis.y * s;\\n    \\t\\tthis._z = axis.z * s;\\n    \\t\\tthis._w = Math.cos( halfAngle );\\n\\n    \\t\\tthis.onChangeCallback();\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsetFromRotationMatrix: function ( m ) {\\n\\n    \\t\\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\\n\\n    \\t\\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\\n\\n    \\t\\tvar te = m.elements,\\n\\n    \\t\\t\\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\\n    \\t\\t\\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\\n    \\t\\t\\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\\n\\n    \\t\\t\\ttrace = m11 + m22 + m33,\\n    \\t\\t\\ts;\\n\\n    \\t\\tif ( trace > 0 ) {\\n\\n    \\t\\t\\ts = 0.5 / Math.sqrt( trace + 1.0 );\\n\\n    \\t\\t\\tthis._w = 0.25 / s;\\n    \\t\\t\\tthis._x = ( m32 - m23 ) * s;\\n    \\t\\t\\tthis._y = ( m13 - m31 ) * s;\\n    \\t\\t\\tthis._z = ( m21 - m12 ) * s;\\n\\n    \\t\\t} else if ( m11 > m22 && m11 > m33 ) {\\n\\n    \\t\\t\\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\\n\\n    \\t\\t\\tthis._w = ( m32 - m23 ) / s;\\n    \\t\\t\\tthis._x = 0.25 * s;\\n    \\t\\t\\tthis._y = ( m12 + m21 ) / s;\\n    \\t\\t\\tthis._z = ( m13 + m31 ) / s;\\n\\n    \\t\\t} else if ( m22 > m33 ) {\\n\\n    \\t\\t\\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\\n\\n    \\t\\t\\tthis._w = ( m13 - m31 ) / s;\\n    \\t\\t\\tthis._x = ( m12 + m21 ) / s;\\n    \\t\\t\\tthis._y = 0.25 * s;\\n    \\t\\t\\tthis._z = ( m23 + m32 ) / s;\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\\n\\n    \\t\\t\\tthis._w = ( m21 - m12 ) / s;\\n    \\t\\t\\tthis._x = ( m13 + m31 ) / s;\\n    \\t\\t\\tthis._y = ( m23 + m32 ) / s;\\n    \\t\\t\\tthis._z = 0.25 * s;\\n\\n    \\t\\t}\\n\\n    \\t\\tthis.onChangeCallback();\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsetFromUnitVectors: function () {\\n\\n    \\t\\t// http://lolengine.net/blog/2014/02/24/quaternion-from-two-vectors-final\\n\\n    \\t\\t// assumes direction vectors vFrom and vTo are normalized\\n\\n    \\t\\tvar v1, r;\\n\\n    \\t\\tvar EPS = 0.000001;\\n\\n    \\t\\treturn function setFromUnitVectors( vFrom, vTo ) {\\n\\n    \\t\\t\\tif ( v1 === undefined ) v1 = new Vector3();\\n\\n    \\t\\t\\tr = vFrom.dot( vTo ) + 1;\\n\\n    \\t\\t\\tif ( r < EPS ) {\\n\\n    \\t\\t\\t\\tr = 0;\\n\\n    \\t\\t\\t\\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\\n\\n    \\t\\t\\t\\t\\tv1.set( - vFrom.y, vFrom.x, 0 );\\n\\n    \\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\tv1.set( 0, - vFrom.z, vFrom.y );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\tv1.crossVectors( vFrom, vTo );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tthis._x = v1.x;\\n    \\t\\t\\tthis._y = v1.y;\\n    \\t\\t\\tthis._z = v1.z;\\n    \\t\\t\\tthis._w = r;\\n\\n    \\t\\t\\treturn this.normalize();\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\tinverse: function () {\\n\\n    \\t\\treturn this.conjugate().normalize();\\n\\n    \\t},\\n\\n    \\tconjugate: function () {\\n\\n    \\t\\tthis._x *= - 1;\\n    \\t\\tthis._y *= - 1;\\n    \\t\\tthis._z *= - 1;\\n\\n    \\t\\tthis.onChangeCallback();\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tdot: function ( v ) {\\n\\n    \\t\\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\\n\\n    \\t},\\n\\n    \\tlengthSq: function () {\\n\\n    \\t\\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\\n\\n    \\t},\\n\\n    \\tlength: function () {\\n\\n    \\t\\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\\n\\n    \\t},\\n\\n    \\tnormalize: function () {\\n\\n    \\t\\tvar l = this.length();\\n\\n    \\t\\tif ( l === 0 ) {\\n\\n    \\t\\t\\tthis._x = 0;\\n    \\t\\t\\tthis._y = 0;\\n    \\t\\t\\tthis._z = 0;\\n    \\t\\t\\tthis._w = 1;\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\tl = 1 / l;\\n\\n    \\t\\t\\tthis._x = this._x * l;\\n    \\t\\t\\tthis._y = this._y * l;\\n    \\t\\t\\tthis._z = this._z * l;\\n    \\t\\t\\tthis._w = this._w * l;\\n\\n    \\t\\t}\\n\\n    \\t\\tthis.onChangeCallback();\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tmultiply: function ( q, p ) {\\n\\n    \\t\\tif ( p !== undefined ) {\\n\\n    \\t\\t\\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\\n    \\t\\t\\treturn this.multiplyQuaternions( q, p );\\n\\n    \\t\\t}\\n\\n    \\t\\treturn this.multiplyQuaternions( this, q );\\n\\n    \\t},\\n\\n    \\tpremultiply: function ( q ) {\\n\\n    \\t\\treturn this.multiplyQuaternions( q, this );\\n\\n    \\t},\\n\\n    \\tmultiplyQuaternions: function ( a, b ) {\\n\\n    \\t\\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\\n\\n    \\t\\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\\n    \\t\\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\\n\\n    \\t\\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\\n    \\t\\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\\n    \\t\\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\\n    \\t\\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\\n\\n    \\t\\tthis.onChangeCallback();\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tslerp: function ( qb, t ) {\\n\\n    \\t\\tif ( t === 0 ) return this;\\n    \\t\\tif ( t === 1 ) return this.copy( qb );\\n\\n    \\t\\tvar x = this._x, y = this._y, z = this._z, w = this._w;\\n\\n    \\t\\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\\n\\n    \\t\\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\\n\\n    \\t\\tif ( cosHalfTheta < 0 ) {\\n\\n    \\t\\t\\tthis._w = - qb._w;\\n    \\t\\t\\tthis._x = - qb._x;\\n    \\t\\t\\tthis._y = - qb._y;\\n    \\t\\t\\tthis._z = - qb._z;\\n\\n    \\t\\t\\tcosHalfTheta = - cosHalfTheta;\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\tthis.copy( qb );\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( cosHalfTheta >= 1.0 ) {\\n\\n    \\t\\t\\tthis._w = w;\\n    \\t\\t\\tthis._x = x;\\n    \\t\\t\\tthis._y = y;\\n    \\t\\t\\tthis._z = z;\\n\\n    \\t\\t\\treturn this;\\n\\n    \\t\\t}\\n\\n    \\t\\tvar sinHalfTheta = Math.sqrt( 1.0 - cosHalfTheta * cosHalfTheta );\\n\\n    \\t\\tif ( Math.abs( sinHalfTheta ) < 0.001 ) {\\n\\n    \\t\\t\\tthis._w = 0.5 * ( w + this._w );\\n    \\t\\t\\tthis._x = 0.5 * ( x + this._x );\\n    \\t\\t\\tthis._y = 0.5 * ( y + this._y );\\n    \\t\\t\\tthis._z = 0.5 * ( z + this._z );\\n\\n    \\t\\t\\treturn this;\\n\\n    \\t\\t}\\n\\n    \\t\\tvar halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\\n    \\t\\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\\n    \\t\\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\\n\\n    \\t\\tthis._w = ( w * ratioA + this._w * ratioB );\\n    \\t\\tthis._x = ( x * ratioA + this._x * ratioB );\\n    \\t\\tthis._y = ( y * ratioA + this._y * ratioB );\\n    \\t\\tthis._z = ( z * ratioA + this._z * ratioB );\\n\\n    \\t\\tthis.onChangeCallback();\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tequals: function ( quaternion ) {\\n\\n    \\t\\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\\n\\n    \\t},\\n\\n    \\tfromArray: function ( array, offset ) {\\n\\n    \\t\\tif ( offset === undefined ) offset = 0;\\n\\n    \\t\\tthis._x = array[ offset ];\\n    \\t\\tthis._y = array[ offset + 1 ];\\n    \\t\\tthis._z = array[ offset + 2 ];\\n    \\t\\tthis._w = array[ offset + 3 ];\\n\\n    \\t\\tthis.onChangeCallback();\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\ttoArray: function ( array, offset ) {\\n\\n    \\t\\tif ( array === undefined ) array = [];\\n    \\t\\tif ( offset === undefined ) offset = 0;\\n\\n    \\t\\tarray[ offset ] = this._x;\\n    \\t\\tarray[ offset + 1 ] = this._y;\\n    \\t\\tarray[ offset + 2 ] = this._z;\\n    \\t\\tarray[ offset + 3 ] = this._w;\\n\\n    \\t\\treturn array;\\n\\n    \\t},\\n\\n    \\tonChange: function ( callback ) {\\n\\n    \\t\\tthis.onChangeCallback = callback;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tonChangeCallback: function () {}\\n\\n    };\\n\\n    Object.assign( Quaternion, {\\n\\n    \\tslerp: function( qa, qb, qm, t ) {\\n\\n    \\t\\treturn qm.copy( qa ).slerp( qb, t );\\n\\n    \\t},\\n\\n    \\tslerpFlat: function(\\n    \\t\\t\\tdst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\\n\\n    \\t\\t// fuzz-free, array-based Quaternion SLERP operation\\n\\n    \\t\\tvar x0 = src0[ srcOffset0 + 0 ],\\n    \\t\\t\\ty0 = src0[ srcOffset0 + 1 ],\\n    \\t\\t\\tz0 = src0[ srcOffset0 + 2 ],\\n    \\t\\t\\tw0 = src0[ srcOffset0 + 3 ],\\n\\n    \\t\\t\\tx1 = src1[ srcOffset1 + 0 ],\\n    \\t\\t\\ty1 = src1[ srcOffset1 + 1 ],\\n    \\t\\t\\tz1 = src1[ srcOffset1 + 2 ],\\n    \\t\\t\\tw1 = src1[ srcOffset1 + 3 ];\\n\\n    \\t\\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\\n\\n    \\t\\t\\tvar s = 1 - t,\\n\\n    \\t\\t\\t\\tcos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\\n\\n    \\t\\t\\t\\tdir = ( cos >= 0 ? 1 : - 1 ),\\n    \\t\\t\\t\\tsqrSin = 1 - cos * cos;\\n\\n    \\t\\t\\t// Skip the Slerp for tiny steps to avoid numeric problems:\\n    \\t\\t\\tif ( sqrSin > Number.EPSILON ) {\\n\\n    \\t\\t\\t\\tvar sin = Math.sqrt( sqrSin ),\\n    \\t\\t\\t\\t\\tlen = Math.atan2( sin, cos * dir );\\n\\n    \\t\\t\\t\\ts = Math.sin( s * len ) / sin;\\n    \\t\\t\\t\\tt = Math.sin( t * len ) / sin;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tvar tDir = t * dir;\\n\\n    \\t\\t\\tx0 = x0 * s + x1 * tDir;\\n    \\t\\t\\ty0 = y0 * s + y1 * tDir;\\n    \\t\\t\\tz0 = z0 * s + z1 * tDir;\\n    \\t\\t\\tw0 = w0 * s + w1 * tDir;\\n\\n    \\t\\t\\t// Normalize in case we just did a lerp:\\n    \\t\\t\\tif ( s === 1 - t ) {\\n\\n    \\t\\t\\t\\tvar f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\\n\\n    \\t\\t\\t\\tx0 *= f;\\n    \\t\\t\\t\\ty0 *= f;\\n    \\t\\t\\t\\tz0 *= f;\\n    \\t\\t\\t\\tw0 *= f;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\tdst[ dstOffset ] = x0;\\n    \\t\\tdst[ dstOffset + 1 ] = y0;\\n    \\t\\tdst[ dstOffset + 2 ] = z0;\\n    \\t\\tdst[ dstOffset + 3 ] = w0;\\n\\n    \\t}\\n\\n    } );\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     * @author *kile / http://kile.stravaganza.org/\\n     * @author philogb / http://blog.thejit.org/\\n     * @author mikael emtinger / http://gomo.se/\\n     * @author egraether / http://egraether.com/\\n     * @author WestLangley / http://github.com/WestLangley\\n     */\\n\\n    function Vector3( x, y, z ) {\\n\\n    \\tthis.x = x || 0;\\n    \\tthis.y = y || 0;\\n    \\tthis.z = z || 0;\\n\\n    }\\n\\n    Vector3.prototype = {\\n\\n    \\tconstructor: Vector3,\\n\\n    \\tisVector3: true,\\n\\n    \\tset: function ( x, y, z ) {\\n\\n    \\t\\tthis.x = x;\\n    \\t\\tthis.y = y;\\n    \\t\\tthis.z = z;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsetScalar: function ( scalar ) {\\n\\n    \\t\\tthis.x = scalar;\\n    \\t\\tthis.y = scalar;\\n    \\t\\tthis.z = scalar;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsetX: function ( x ) {\\n\\n    \\t\\tthis.x = x;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsetY: function ( y ) {\\n\\n    \\t\\tthis.y = y;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsetZ: function ( z ) {\\n\\n    \\t\\tthis.z = z;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsetComponent: function ( index, value ) {\\n\\n    \\t\\tswitch ( index ) {\\n\\n    \\t\\t\\tcase 0: this.x = value; break;\\n    \\t\\t\\tcase 1: this.y = value; break;\\n    \\t\\t\\tcase 2: this.z = value; break;\\n    \\t\\t\\tdefault: throw new Error( 'index is out of range: ' + index );\\n\\n    \\t\\t}\\n\\n    \\t},\\n\\n    \\tgetComponent: function ( index ) {\\n\\n    \\t\\tswitch ( index ) {\\n\\n    \\t\\t\\tcase 0: return this.x;\\n    \\t\\t\\tcase 1: return this.y;\\n    \\t\\t\\tcase 2: return this.z;\\n    \\t\\t\\tdefault: throw new Error( 'index is out of range: ' + index );\\n\\n    \\t\\t}\\n\\n    \\t},\\n\\n    \\tclone: function () {\\n\\n    \\t\\treturn new this.constructor( this.x, this.y, this.z );\\n\\n    \\t},\\n\\n    \\tcopy: function ( v ) {\\n\\n    \\t\\tthis.x = v.x;\\n    \\t\\tthis.y = v.y;\\n    \\t\\tthis.z = v.z;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tadd: function ( v, w ) {\\n\\n    \\t\\tif ( w !== undefined ) {\\n\\n    \\t\\t\\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\\n    \\t\\t\\treturn this.addVectors( v, w );\\n\\n    \\t\\t}\\n\\n    \\t\\tthis.x += v.x;\\n    \\t\\tthis.y += v.y;\\n    \\t\\tthis.z += v.z;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\taddScalar: function ( s ) {\\n\\n    \\t\\tthis.x += s;\\n    \\t\\tthis.y += s;\\n    \\t\\tthis.z += s;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\taddVectors: function ( a, b ) {\\n\\n    \\t\\tthis.x = a.x + b.x;\\n    \\t\\tthis.y = a.y + b.y;\\n    \\t\\tthis.z = a.z + b.z;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\taddScaledVector: function ( v, s ) {\\n\\n    \\t\\tthis.x += v.x * s;\\n    \\t\\tthis.y += v.y * s;\\n    \\t\\tthis.z += v.z * s;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsub: function ( v, w ) {\\n\\n    \\t\\tif ( w !== undefined ) {\\n\\n    \\t\\t\\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\\n    \\t\\t\\treturn this.subVectors( v, w );\\n\\n    \\t\\t}\\n\\n    \\t\\tthis.x -= v.x;\\n    \\t\\tthis.y -= v.y;\\n    \\t\\tthis.z -= v.z;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsubScalar: function ( s ) {\\n\\n    \\t\\tthis.x -= s;\\n    \\t\\tthis.y -= s;\\n    \\t\\tthis.z -= s;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsubVectors: function ( a, b ) {\\n\\n    \\t\\tthis.x = a.x - b.x;\\n    \\t\\tthis.y = a.y - b.y;\\n    \\t\\tthis.z = a.z - b.z;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tmultiply: function ( v, w ) {\\n\\n    \\t\\tif ( w !== undefined ) {\\n\\n    \\t\\t\\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\\n    \\t\\t\\treturn this.multiplyVectors( v, w );\\n\\n    \\t\\t}\\n\\n    \\t\\tthis.x *= v.x;\\n    \\t\\tthis.y *= v.y;\\n    \\t\\tthis.z *= v.z;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tmultiplyScalar: function ( scalar ) {\\n\\n    \\t\\tif ( isFinite( scalar ) ) {\\n\\n    \\t\\t\\tthis.x *= scalar;\\n    \\t\\t\\tthis.y *= scalar;\\n    \\t\\t\\tthis.z *= scalar;\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\tthis.x = 0;\\n    \\t\\t\\tthis.y = 0;\\n    \\t\\t\\tthis.z = 0;\\n\\n    \\t\\t}\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tmultiplyVectors: function ( a, b ) {\\n\\n    \\t\\tthis.x = a.x * b.x;\\n    \\t\\tthis.y = a.y * b.y;\\n    \\t\\tthis.z = a.z * b.z;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tapplyEuler: function () {\\n\\n    \\t\\tvar quaternion;\\n\\n    \\t\\treturn function applyEuler( euler ) {\\n\\n    \\t\\t\\tif ( (euler && euler.isEuler) === false ) {\\n\\n    \\t\\t\\t\\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tif ( quaternion === undefined ) quaternion = new Quaternion();\\n\\n    \\t\\t\\treturn this.applyQuaternion( quaternion.setFromEuler( euler ) );\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\tapplyAxisAngle: function () {\\n\\n    \\t\\tvar quaternion;\\n\\n    \\t\\treturn function applyAxisAngle( axis, angle ) {\\n\\n    \\t\\t\\tif ( quaternion === undefined ) quaternion = new Quaternion();\\n\\n    \\t\\t\\treturn this.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\tapplyMatrix3: function ( m ) {\\n\\n    \\t\\tvar x = this.x, y = this.y, z = this.z;\\n    \\t\\tvar e = m.elements;\\n\\n    \\t\\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\\n    \\t\\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\\n    \\t\\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tapplyMatrix4: function ( m ) {\\n\\n    \\t\\t// input: THREE.Matrix4 affine matrix\\n\\n    \\t\\tvar x = this.x, y = this.y, z = this.z;\\n    \\t\\tvar e = m.elements;\\n\\n    \\t\\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ];\\n    \\t\\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ];\\n    \\t\\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ];\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tapplyProjection: function ( m ) {\\n\\n    \\t\\t// input: THREE.Matrix4 projection matrix\\n\\n    \\t\\tvar x = this.x, y = this.y, z = this.z;\\n    \\t\\tvar e = m.elements;\\n    \\t\\tvar d = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] ); // perspective divide\\n\\n    \\t\\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ] ) * d;\\n    \\t\\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ] ) * d;\\n    \\t\\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * d;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tapplyQuaternion: function ( q ) {\\n\\n    \\t\\tvar x = this.x, y = this.y, z = this.z;\\n    \\t\\tvar qx = q.x, qy = q.y, qz = q.z, qw = q.w;\\n\\n    \\t\\t// calculate quat * vector\\n\\n    \\t\\tvar ix =  qw * x + qy * z - qz * y;\\n    \\t\\tvar iy =  qw * y + qz * x - qx * z;\\n    \\t\\tvar iz =  qw * z + qx * y - qy * x;\\n    \\t\\tvar iw = - qx * x - qy * y - qz * z;\\n\\n    \\t\\t// calculate result * inverse quat\\n\\n    \\t\\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\\n    \\t\\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\\n    \\t\\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tproject: function () {\\n\\n    \\t\\tvar matrix;\\n\\n    \\t\\treturn function project( camera ) {\\n\\n    \\t\\t\\tif ( matrix === undefined ) matrix = new Matrix4();\\n\\n    \\t\\t\\tmatrix.multiplyMatrices( camera.projectionMatrix, matrix.getInverse( camera.matrixWorld ) );\\n    \\t\\t\\treturn this.applyProjection( matrix );\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\tunproject: function () {\\n\\n    \\t\\tvar matrix;\\n\\n    \\t\\treturn function unproject( camera ) {\\n\\n    \\t\\t\\tif ( matrix === undefined ) matrix = new Matrix4();\\n\\n    \\t\\t\\tmatrix.multiplyMatrices( camera.matrixWorld, matrix.getInverse( camera.projectionMatrix ) );\\n    \\t\\t\\treturn this.applyProjection( matrix );\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\ttransformDirection: function ( m ) {\\n\\n    \\t\\t// input: THREE.Matrix4 affine matrix\\n    \\t\\t// vector interpreted as a direction\\n\\n    \\t\\tvar x = this.x, y = this.y, z = this.z;\\n    \\t\\tvar e = m.elements;\\n\\n    \\t\\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z;\\n    \\t\\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z;\\n    \\t\\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\\n\\n    \\t\\treturn this.normalize();\\n\\n    \\t},\\n\\n    \\tdivide: function ( v ) {\\n\\n    \\t\\tthis.x /= v.x;\\n    \\t\\tthis.y /= v.y;\\n    \\t\\tthis.z /= v.z;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tdivideScalar: function ( scalar ) {\\n\\n    \\t\\treturn this.multiplyScalar( 1 / scalar );\\n\\n    \\t},\\n\\n    \\tmin: function ( v ) {\\n\\n    \\t\\tthis.x = Math.min( this.x, v.x );\\n    \\t\\tthis.y = Math.min( this.y, v.y );\\n    \\t\\tthis.z = Math.min( this.z, v.z );\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tmax: function ( v ) {\\n\\n    \\t\\tthis.x = Math.max( this.x, v.x );\\n    \\t\\tthis.y = Math.max( this.y, v.y );\\n    \\t\\tthis.z = Math.max( this.z, v.z );\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tclamp: function ( min, max ) {\\n\\n    \\t\\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\\n\\n    \\t\\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\\n    \\t\\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\\n    \\t\\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tclampScalar: function () {\\n\\n    \\t\\tvar min, max;\\n\\n    \\t\\treturn function clampScalar( minVal, maxVal ) {\\n\\n    \\t\\t\\tif ( min === undefined ) {\\n\\n    \\t\\t\\t\\tmin = new Vector3();\\n    \\t\\t\\t\\tmax = new Vector3();\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tmin.set( minVal, minVal, minVal );\\n    \\t\\t\\tmax.set( maxVal, maxVal, maxVal );\\n\\n    \\t\\t\\treturn this.clamp( min, max );\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\tclampLength: function ( min, max ) {\\n\\n    \\t\\tvar length = this.length();\\n\\n    \\t\\treturn this.multiplyScalar( Math.max( min, Math.min( max, length ) ) / length );\\n\\n    \\t},\\n\\n    \\tfloor: function () {\\n\\n    \\t\\tthis.x = Math.floor( this.x );\\n    \\t\\tthis.y = Math.floor( this.y );\\n    \\t\\tthis.z = Math.floor( this.z );\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tceil: function () {\\n\\n    \\t\\tthis.x = Math.ceil( this.x );\\n    \\t\\tthis.y = Math.ceil( this.y );\\n    \\t\\tthis.z = Math.ceil( this.z );\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tround: function () {\\n\\n    \\t\\tthis.x = Math.round( this.x );\\n    \\t\\tthis.y = Math.round( this.y );\\n    \\t\\tthis.z = Math.round( this.z );\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\troundToZero: function () {\\n\\n    \\t\\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\\n    \\t\\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\\n    \\t\\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tnegate: function () {\\n\\n    \\t\\tthis.x = - this.x;\\n    \\t\\tthis.y = - this.y;\\n    \\t\\tthis.z = - this.z;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tdot: function ( v ) {\\n\\n    \\t\\treturn this.x * v.x + this.y * v.y + this.z * v.z;\\n\\n    \\t},\\n\\n    \\tlengthSq: function () {\\n\\n    \\t\\treturn this.x * this.x + this.y * this.y + this.z * this.z;\\n\\n    \\t},\\n\\n    \\tlength: function () {\\n\\n    \\t\\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\\n\\n    \\t},\\n\\n    \\tlengthManhattan: function () {\\n\\n    \\t\\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\\n\\n    \\t},\\n\\n    \\tnormalize: function () {\\n\\n    \\t\\treturn this.divideScalar( this.length() );\\n\\n    \\t},\\n\\n    \\tsetLength: function ( length ) {\\n\\n    \\t\\treturn this.multiplyScalar( length / this.length() );\\n\\n    \\t},\\n\\n    \\tlerp: function ( v, alpha ) {\\n\\n    \\t\\tthis.x += ( v.x - this.x ) * alpha;\\n    \\t\\tthis.y += ( v.y - this.y ) * alpha;\\n    \\t\\tthis.z += ( v.z - this.z ) * alpha;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tlerpVectors: function ( v1, v2, alpha ) {\\n\\n    \\t\\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\\n\\n    \\t},\\n\\n    \\tcross: function ( v, w ) {\\n\\n    \\t\\tif ( w !== undefined ) {\\n\\n    \\t\\t\\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\\n    \\t\\t\\treturn this.crossVectors( v, w );\\n\\n    \\t\\t}\\n\\n    \\t\\tvar x = this.x, y = this.y, z = this.z;\\n\\n    \\t\\tthis.x = y * v.z - z * v.y;\\n    \\t\\tthis.y = z * v.x - x * v.z;\\n    \\t\\tthis.z = x * v.y - y * v.x;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tcrossVectors: function ( a, b ) {\\n\\n    \\t\\tvar ax = a.x, ay = a.y, az = a.z;\\n    \\t\\tvar bx = b.x, by = b.y, bz = b.z;\\n\\n    \\t\\tthis.x = ay * bz - az * by;\\n    \\t\\tthis.y = az * bx - ax * bz;\\n    \\t\\tthis.z = ax * by - ay * bx;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tprojectOnVector: function ( vector ) {\\n\\n    \\t\\tvar scalar = vector.dot( this ) / vector.lengthSq();\\n\\n    \\t\\treturn this.copy( vector ).multiplyScalar( scalar );\\n\\n    \\t},\\n\\n    \\tprojectOnPlane: function () {\\n\\n    \\t\\tvar v1;\\n\\n    \\t\\treturn function projectOnPlane( planeNormal ) {\\n\\n    \\t\\t\\tif ( v1 === undefined ) v1 = new Vector3();\\n\\n    \\t\\t\\tv1.copy( this ).projectOnVector( planeNormal );\\n\\n    \\t\\t\\treturn this.sub( v1 );\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\treflect: function () {\\n\\n    \\t\\t// reflect incident vector off plane orthogonal to normal\\n    \\t\\t// normal is assumed to have unit length\\n\\n    \\t\\tvar v1;\\n\\n    \\t\\treturn function reflect( normal ) {\\n\\n    \\t\\t\\tif ( v1 === undefined ) v1 = new Vector3();\\n\\n    \\t\\t\\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\tangleTo: function ( v ) {\\n\\n    \\t\\tvar theta = this.dot( v ) / ( Math.sqrt( this.lengthSq() * v.lengthSq() ) );\\n\\n    \\t\\t// clamp, to handle numerical problems\\n\\n    \\t\\treturn Math.acos( exports.Math.clamp( theta, - 1, 1 ) );\\n\\n    \\t},\\n\\n    \\tdistanceTo: function ( v ) {\\n\\n    \\t\\treturn Math.sqrt( this.distanceToSquared( v ) );\\n\\n    \\t},\\n\\n    \\tdistanceToSquared: function ( v ) {\\n\\n    \\t\\tvar dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\\n\\n    \\t\\treturn dx * dx + dy * dy + dz * dz;\\n\\n    \\t},\\n\\n    \\tdistanceToManhattan: function ( v ) {\\n\\n    \\t\\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\\n\\n    \\t},\\n\\n    \\tsetFromSpherical: function( s ) {\\n\\n    \\t\\tvar sinPhiRadius = Math.sin( s.phi ) * s.radius;\\n\\n    \\t\\tthis.x = sinPhiRadius * Math.sin( s.theta );\\n    \\t\\tthis.y = Math.cos( s.phi ) * s.radius;\\n    \\t\\tthis.z = sinPhiRadius * Math.cos( s.theta );\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsetFromMatrixPosition: function ( m ) {\\n\\n    \\t\\treturn this.setFromMatrixColumn( m, 3 );\\n\\n    \\t},\\n\\n    \\tsetFromMatrixScale: function ( m ) {\\n\\n    \\t\\tvar sx = this.setFromMatrixColumn( m, 0 ).length();\\n    \\t\\tvar sy = this.setFromMatrixColumn( m, 1 ).length();\\n    \\t\\tvar sz = this.setFromMatrixColumn( m, 2 ).length();\\n\\n    \\t\\tthis.x = sx;\\n    \\t\\tthis.y = sy;\\n    \\t\\tthis.z = sz;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsetFromMatrixColumn: function ( m, index ) {\\n\\n    \\t\\tif ( typeof m === 'number' ) {\\n\\n    \\t\\t\\tconsole.warn( 'THREE.Vector3: setFromMatrixColumn now expects ( matrix, index ).' );\\n    \\t\\t\\tvar temp = m\\n    \\t\\t\\tm = index;\\n    \\t\\t\\tindex = temp;\\n\\n    \\t\\t}\\n\\n    \\t\\treturn this.fromArray( m.elements, index * 4 );\\n\\n    \\t},\\n\\n    \\tequals: function ( v ) {\\n\\n    \\t\\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\\n\\n    \\t},\\n\\n    \\tfromArray: function ( array, offset ) {\\n\\n    \\t\\tif ( offset === undefined ) offset = 0;\\n\\n    \\t\\tthis.x = array[ offset ];\\n    \\t\\tthis.y = array[ offset + 1 ];\\n    \\t\\tthis.z = array[ offset + 2 ];\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\ttoArray: function ( array, offset ) {\\n\\n    \\t\\tif ( array === undefined ) array = [];\\n    \\t\\tif ( offset === undefined ) offset = 0;\\n\\n    \\t\\tarray[ offset ] = this.x;\\n    \\t\\tarray[ offset + 1 ] = this.y;\\n    \\t\\tarray[ offset + 2 ] = this.z;\\n\\n    \\t\\treturn array;\\n\\n    \\t},\\n\\n    \\tfromAttribute: function ( attribute, index, offset ) {\\n\\n    \\t\\tif ( offset === undefined ) offset = 0;\\n\\n    \\t\\tindex = index * attribute.itemSize + offset;\\n\\n    \\t\\tthis.x = attribute.array[ index ];\\n    \\t\\tthis.y = attribute.array[ index + 1 ];\\n    \\t\\tthis.z = attribute.array[ index + 2 ];\\n\\n    \\t\\treturn this;\\n\\n    \\t}\\n\\n    };\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     * @author supereggbert / http://www.paulbrunt.co.uk/\\n     * @author philogb / http://blog.thejit.org/\\n     * @author jordi_ros / http://plattsoft.com\\n     * @author D1plo1d / http://github.com/D1plo1d\\n     * @author alteredq / http://alteredqualia.com/\\n     * @author mikael emtinger / http://gomo.se/\\n     * @author timknip / http://www.floorplanner.com/\\n     * @author bhouston / http://clara.io\\n     * @author WestLangley / http://github.com/WestLangley\\n     */\\n\\n    function Matrix4() {\\n\\n    \\tthis.elements = new Float32Array( [\\n\\n    \\t\\t1, 0, 0, 0,\\n    \\t\\t0, 1, 0, 0,\\n    \\t\\t0, 0, 1, 0,\\n    \\t\\t0, 0, 0, 1\\n\\n    \\t] );\\n\\n    \\tif ( arguments.length > 0 ) {\\n\\n    \\t\\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\\n\\n    \\t}\\n\\n    }\\n\\n    Matrix4.prototype = {\\n\\n    \\tconstructor: Matrix4,\\n\\n    \\tisMatrix4: true,\\n\\n    \\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\\n\\n    \\t\\tvar te = this.elements;\\n\\n    \\t\\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\\n    \\t\\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\\n    \\t\\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\\n    \\t\\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tidentity: function () {\\n\\n    \\t\\tthis.set(\\n\\n    \\t\\t\\t1, 0, 0, 0,\\n    \\t\\t\\t0, 1, 0, 0,\\n    \\t\\t\\t0, 0, 1, 0,\\n    \\t\\t\\t0, 0, 0, 1\\n\\n    \\t\\t);\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tclone: function () {\\n\\n    \\t\\treturn new Matrix4().fromArray( this.elements );\\n\\n    \\t},\\n\\n    \\tcopy: function ( m ) {\\n\\n    \\t\\tthis.elements.set( m.elements );\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tcopyPosition: function ( m ) {\\n\\n    \\t\\tvar te = this.elements;\\n    \\t\\tvar me = m.elements;\\n\\n    \\t\\tte[ 12 ] = me[ 12 ];\\n    \\t\\tte[ 13 ] = me[ 13 ];\\n    \\t\\tte[ 14 ] = me[ 14 ];\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\textractBasis: function ( xAxis, yAxis, zAxis ) {\\n\\n    \\t\\txAxis.setFromMatrixColumn( this, 0 );\\n    \\t\\tyAxis.setFromMatrixColumn( this, 1 );\\n    \\t\\tzAxis.setFromMatrixColumn( this, 2 );\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\\n\\n    \\t\\tthis.set(\\n    \\t\\t\\txAxis.x, yAxis.x, zAxis.x, 0,\\n    \\t\\t\\txAxis.y, yAxis.y, zAxis.y, 0,\\n    \\t\\t\\txAxis.z, yAxis.z, zAxis.z, 0,\\n    \\t\\t\\t0,       0,       0,       1\\n    \\t\\t);\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\textractRotation: function () {\\n\\n    \\t\\tvar v1;\\n\\n    \\t\\treturn function extractRotation( m ) {\\n\\n    \\t\\t\\tif ( v1 === undefined ) v1 = new Vector3();\\n\\n    \\t\\t\\tvar te = this.elements;\\n    \\t\\t\\tvar me = m.elements;\\n\\n    \\t\\t\\tvar scaleX = 1 / v1.setFromMatrixColumn( m, 0 ).length();\\n    \\t\\t\\tvar scaleY = 1 / v1.setFromMatrixColumn( m, 1 ).length();\\n    \\t\\t\\tvar scaleZ = 1 / v1.setFromMatrixColumn( m, 2 ).length();\\n\\n    \\t\\t\\tte[ 0 ] = me[ 0 ] * scaleX;\\n    \\t\\t\\tte[ 1 ] = me[ 1 ] * scaleX;\\n    \\t\\t\\tte[ 2 ] = me[ 2 ] * scaleX;\\n\\n    \\t\\t\\tte[ 4 ] = me[ 4 ] * scaleY;\\n    \\t\\t\\tte[ 5 ] = me[ 5 ] * scaleY;\\n    \\t\\t\\tte[ 6 ] = me[ 6 ] * scaleY;\\n\\n    \\t\\t\\tte[ 8 ] = me[ 8 ] * scaleZ;\\n    \\t\\t\\tte[ 9 ] = me[ 9 ] * scaleZ;\\n    \\t\\t\\tte[ 10 ] = me[ 10 ] * scaleZ;\\n\\n    \\t\\t\\treturn this;\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\tmakeRotationFromEuler: function ( euler ) {\\n\\n    \\t\\tif ( (euler && euler.isEuler) === false ) {\\n\\n    \\t\\t\\tconsole.error( 'THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\\n\\n    \\t\\t}\\n\\n    \\t\\tvar te = this.elements;\\n\\n    \\t\\tvar x = euler.x, y = euler.y, z = euler.z;\\n    \\t\\tvar a = Math.cos( x ), b = Math.sin( x );\\n    \\t\\tvar c = Math.cos( y ), d = Math.sin( y );\\n    \\t\\tvar e = Math.cos( z ), f = Math.sin( z );\\n\\n    \\t\\tif ( euler.order === 'XYZ' ) {\\n\\n    \\t\\t\\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\\n\\n    \\t\\t\\tte[ 0 ] = c * e;\\n    \\t\\t\\tte[ 4 ] = - c * f;\\n    \\t\\t\\tte[ 8 ] = d;\\n\\n    \\t\\t\\tte[ 1 ] = af + be * d;\\n    \\t\\t\\tte[ 5 ] = ae - bf * d;\\n    \\t\\t\\tte[ 9 ] = - b * c;\\n\\n    \\t\\t\\tte[ 2 ] = bf - ae * d;\\n    \\t\\t\\tte[ 6 ] = be + af * d;\\n    \\t\\t\\tte[ 10 ] = a * c;\\n\\n    \\t\\t} else if ( euler.order === 'YXZ' ) {\\n\\n    \\t\\t\\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\\n\\n    \\t\\t\\tte[ 0 ] = ce + df * b;\\n    \\t\\t\\tte[ 4 ] = de * b - cf;\\n    \\t\\t\\tte[ 8 ] = a * d;\\n\\n    \\t\\t\\tte[ 1 ] = a * f;\\n    \\t\\t\\tte[ 5 ] = a * e;\\n    \\t\\t\\tte[ 9 ] = - b;\\n\\n    \\t\\t\\tte[ 2 ] = cf * b - de;\\n    \\t\\t\\tte[ 6 ] = df + ce * b;\\n    \\t\\t\\tte[ 10 ] = a * c;\\n\\n    \\t\\t} else if ( euler.order === 'ZXY' ) {\\n\\n    \\t\\t\\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\\n\\n    \\t\\t\\tte[ 0 ] = ce - df * b;\\n    \\t\\t\\tte[ 4 ] = - a * f;\\n    \\t\\t\\tte[ 8 ] = de + cf * b;\\n\\n    \\t\\t\\tte[ 1 ] = cf + de * b;\\n    \\t\\t\\tte[ 5 ] = a * e;\\n    \\t\\t\\tte[ 9 ] = df - ce * b;\\n\\n    \\t\\t\\tte[ 2 ] = - a * d;\\n    \\t\\t\\tte[ 6 ] = b;\\n    \\t\\t\\tte[ 10 ] = a * c;\\n\\n    \\t\\t} else if ( euler.order === 'ZYX' ) {\\n\\n    \\t\\t\\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\\n\\n    \\t\\t\\tte[ 0 ] = c * e;\\n    \\t\\t\\tte[ 4 ] = be * d - af;\\n    \\t\\t\\tte[ 8 ] = ae * d + bf;\\n\\n    \\t\\t\\tte[ 1 ] = c * f;\\n    \\t\\t\\tte[ 5 ] = bf * d + ae;\\n    \\t\\t\\tte[ 9 ] = af * d - be;\\n\\n    \\t\\t\\tte[ 2 ] = - d;\\n    \\t\\t\\tte[ 6 ] = b * c;\\n    \\t\\t\\tte[ 10 ] = a * c;\\n\\n    \\t\\t} else if ( euler.order === 'YZX' ) {\\n\\n    \\t\\t\\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\\n\\n    \\t\\t\\tte[ 0 ] = c * e;\\n    \\t\\t\\tte[ 4 ] = bd - ac * f;\\n    \\t\\t\\tte[ 8 ] = bc * f + ad;\\n\\n    \\t\\t\\tte[ 1 ] = f;\\n    \\t\\t\\tte[ 5 ] = a * e;\\n    \\t\\t\\tte[ 9 ] = - b * e;\\n\\n    \\t\\t\\tte[ 2 ] = - d * e;\\n    \\t\\t\\tte[ 6 ] = ad * f + bc;\\n    \\t\\t\\tte[ 10 ] = ac - bd * f;\\n\\n    \\t\\t} else if ( euler.order === 'XZY' ) {\\n\\n    \\t\\t\\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\\n\\n    \\t\\t\\tte[ 0 ] = c * e;\\n    \\t\\t\\tte[ 4 ] = - f;\\n    \\t\\t\\tte[ 8 ] = d * e;\\n\\n    \\t\\t\\tte[ 1 ] = ac * f + bd;\\n    \\t\\t\\tte[ 5 ] = a * e;\\n    \\t\\t\\tte[ 9 ] = ad * f - bc;\\n\\n    \\t\\t\\tte[ 2 ] = bc * f - ad;\\n    \\t\\t\\tte[ 6 ] = b * e;\\n    \\t\\t\\tte[ 10 ] = bd * f + ac;\\n\\n    \\t\\t}\\n\\n    \\t\\t// last column\\n    \\t\\tte[ 3 ] = 0;\\n    \\t\\tte[ 7 ] = 0;\\n    \\t\\tte[ 11 ] = 0;\\n\\n    \\t\\t// bottom row\\n    \\t\\tte[ 12 ] = 0;\\n    \\t\\tte[ 13 ] = 0;\\n    \\t\\tte[ 14 ] = 0;\\n    \\t\\tte[ 15 ] = 1;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tmakeRotationFromQuaternion: function ( q ) {\\n\\n    \\t\\tvar te = this.elements;\\n\\n    \\t\\tvar x = q.x, y = q.y, z = q.z, w = q.w;\\n    \\t\\tvar x2 = x + x, y2 = y + y, z2 = z + z;\\n    \\t\\tvar xx = x * x2, xy = x * y2, xz = x * z2;\\n    \\t\\tvar yy = y * y2, yz = y * z2, zz = z * z2;\\n    \\t\\tvar wx = w * x2, wy = w * y2, wz = w * z2;\\n\\n    \\t\\tte[ 0 ] = 1 - ( yy + zz );\\n    \\t\\tte[ 4 ] = xy - wz;\\n    \\t\\tte[ 8 ] = xz + wy;\\n\\n    \\t\\tte[ 1 ] = xy + wz;\\n    \\t\\tte[ 5 ] = 1 - ( xx + zz );\\n    \\t\\tte[ 9 ] = yz - wx;\\n\\n    \\t\\tte[ 2 ] = xz - wy;\\n    \\t\\tte[ 6 ] = yz + wx;\\n    \\t\\tte[ 10 ] = 1 - ( xx + yy );\\n\\n    \\t\\t// last column\\n    \\t\\tte[ 3 ] = 0;\\n    \\t\\tte[ 7 ] = 0;\\n    \\t\\tte[ 11 ] = 0;\\n\\n    \\t\\t// bottom row\\n    \\t\\tte[ 12 ] = 0;\\n    \\t\\tte[ 13 ] = 0;\\n    \\t\\tte[ 14 ] = 0;\\n    \\t\\tte[ 15 ] = 1;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tlookAt: function () {\\n\\n    \\t\\tvar x, y, z;\\n\\n    \\t\\treturn function lookAt( eye, target, up ) {\\n\\n    \\t\\t\\tif ( x === undefined ) {\\n\\n    \\t\\t\\t\\tx = new Vector3();\\n    \\t\\t\\t\\ty = new Vector3();\\n    \\t\\t\\t\\tz = new Vector3();\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tvar te = this.elements;\\n\\n    \\t\\t\\tz.subVectors( eye, target ).normalize();\\n\\n    \\t\\t\\tif ( z.lengthSq() === 0 ) {\\n\\n    \\t\\t\\t\\tz.z = 1;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tx.crossVectors( up, z ).normalize();\\n\\n    \\t\\t\\tif ( x.lengthSq() === 0 ) {\\n\\n    \\t\\t\\t\\tz.z += 0.0001;\\n    \\t\\t\\t\\tx.crossVectors( up, z ).normalize();\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\ty.crossVectors( z, x );\\n\\n\\n    \\t\\t\\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\\n    \\t\\t\\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\\n    \\t\\t\\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\\n\\n    \\t\\t\\treturn this;\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\tmultiply: function ( m, n ) {\\n\\n    \\t\\tif ( n !== undefined ) {\\n\\n    \\t\\t\\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\\n    \\t\\t\\treturn this.multiplyMatrices( m, n );\\n\\n    \\t\\t}\\n\\n    \\t\\treturn this.multiplyMatrices( this, m );\\n\\n    \\t},\\n\\n    \\tpremultiply: function ( m ) {\\n\\n    \\t\\treturn this.multiplyMatrices( m, this );\\n\\n    \\t},\\n\\n    \\tmultiplyMatrices: function ( a, b ) {\\n\\n    \\t\\tvar ae = a.elements;\\n    \\t\\tvar be = b.elements;\\n    \\t\\tvar te = this.elements;\\n\\n    \\t\\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\\n    \\t\\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\\n    \\t\\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\\n    \\t\\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\\n\\n    \\t\\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\\n    \\t\\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\\n    \\t\\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\\n    \\t\\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\\n\\n    \\t\\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\\n    \\t\\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\\n    \\t\\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\\n    \\t\\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\\n\\n    \\t\\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\\n    \\t\\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\\n    \\t\\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\\n    \\t\\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\\n\\n    \\t\\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\\n    \\t\\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\\n    \\t\\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\\n    \\t\\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\\n\\n    \\t\\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\\n    \\t\\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\\n    \\t\\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\\n    \\t\\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tmultiplyToArray: function ( a, b, r ) {\\n\\n    \\t\\tvar te = this.elements;\\n\\n    \\t\\tthis.multiplyMatrices( a, b );\\n\\n    \\t\\tr[ 0 ] = te[ 0 ]; r[ 1 ] = te[ 1 ]; r[ 2 ] = te[ 2 ]; r[ 3 ] = te[ 3 ];\\n    \\t\\tr[ 4 ] = te[ 4 ]; r[ 5 ] = te[ 5 ]; r[ 6 ] = te[ 6 ]; r[ 7 ] = te[ 7 ];\\n    \\t\\tr[ 8 ]  = te[ 8 ]; r[ 9 ]  = te[ 9 ]; r[ 10 ] = te[ 10 ]; r[ 11 ] = te[ 11 ];\\n    \\t\\tr[ 12 ] = te[ 12 ]; r[ 13 ] = te[ 13 ]; r[ 14 ] = te[ 14 ]; r[ 15 ] = te[ 15 ];\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tmultiplyScalar: function ( s ) {\\n\\n    \\t\\tvar te = this.elements;\\n\\n    \\t\\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\\n    \\t\\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\\n    \\t\\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\\n    \\t\\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tapplyToVector3Array: function () {\\n\\n    \\t\\tvar v1;\\n\\n    \\t\\treturn function applyToVector3Array( array, offset, length ) {\\n\\n    \\t\\t\\tif ( v1 === undefined ) v1 = new Vector3();\\n    \\t\\t\\tif ( offset === undefined ) offset = 0;\\n    \\t\\t\\tif ( length === undefined ) length = array.length;\\n\\n    \\t\\t\\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\\n\\n    \\t\\t\\t\\tv1.fromArray( array, j );\\n    \\t\\t\\t\\tv1.applyMatrix4( this );\\n    \\t\\t\\t\\tv1.toArray( array, j );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\treturn array;\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\tapplyToBuffer: function () {\\n\\n    \\t\\tvar v1;\\n\\n    \\t\\treturn function applyToBuffer( buffer, offset, length ) {\\n\\n    \\t\\t\\tif ( v1 === undefined ) v1 = new Vector3();\\n    \\t\\t\\tif ( offset === undefined ) offset = 0;\\n    \\t\\t\\tif ( length === undefined ) length = buffer.length / buffer.itemSize;\\n\\n    \\t\\t\\tfor ( var i = 0, j = offset; i < length; i ++, j ++ ) {\\n\\n    \\t\\t\\t\\tv1.x = buffer.getX( j );\\n    \\t\\t\\t\\tv1.y = buffer.getY( j );\\n    \\t\\t\\t\\tv1.z = buffer.getZ( j );\\n\\n    \\t\\t\\t\\tv1.applyMatrix4( this );\\n\\n    \\t\\t\\t\\tbuffer.setXYZ( v1.x, v1.y, v1.z );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\treturn buffer;\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\tdeterminant: function () {\\n\\n    \\t\\tvar te = this.elements;\\n\\n    \\t\\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\\n    \\t\\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\\n    \\t\\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\\n    \\t\\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\\n\\n    \\t\\t//TODO: make this more efficient\\n    \\t\\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\\n\\n    \\t\\treturn (\\n    \\t\\t\\tn41 * (\\n    \\t\\t\\t\\t+ n14 * n23 * n32\\n    \\t\\t\\t\\t - n13 * n24 * n32\\n    \\t\\t\\t\\t - n14 * n22 * n33\\n    \\t\\t\\t\\t + n12 * n24 * n33\\n    \\t\\t\\t\\t + n13 * n22 * n34\\n    \\t\\t\\t\\t - n12 * n23 * n34\\n    \\t\\t\\t) +\\n    \\t\\t\\tn42 * (\\n    \\t\\t\\t\\t+ n11 * n23 * n34\\n    \\t\\t\\t\\t - n11 * n24 * n33\\n    \\t\\t\\t\\t + n14 * n21 * n33\\n    \\t\\t\\t\\t - n13 * n21 * n34\\n    \\t\\t\\t\\t + n13 * n24 * n31\\n    \\t\\t\\t\\t - n14 * n23 * n31\\n    \\t\\t\\t) +\\n    \\t\\t\\tn43 * (\\n    \\t\\t\\t\\t+ n11 * n24 * n32\\n    \\t\\t\\t\\t - n11 * n22 * n34\\n    \\t\\t\\t\\t - n14 * n21 * n32\\n    \\t\\t\\t\\t + n12 * n21 * n34\\n    \\t\\t\\t\\t + n14 * n22 * n31\\n    \\t\\t\\t\\t - n12 * n24 * n31\\n    \\t\\t\\t) +\\n    \\t\\t\\tn44 * (\\n    \\t\\t\\t\\t- n13 * n22 * n31\\n    \\t\\t\\t\\t - n11 * n23 * n32\\n    \\t\\t\\t\\t + n11 * n22 * n33\\n    \\t\\t\\t\\t + n13 * n21 * n32\\n    \\t\\t\\t\\t - n12 * n21 * n33\\n    \\t\\t\\t\\t + n12 * n23 * n31\\n    \\t\\t\\t)\\n\\n    \\t\\t);\\n\\n    \\t},\\n\\n    \\ttranspose: function () {\\n\\n    \\t\\tvar te = this.elements;\\n    \\t\\tvar tmp;\\n\\n    \\t\\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\\n    \\t\\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\\n    \\t\\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\\n\\n    \\t\\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\\n    \\t\\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\\n    \\t\\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tflattenToArrayOffset: function ( array, offset ) {\\n\\n    \\t\\tconsole.warn( \\\"THREE.Matrix3: .flattenToArrayOffset is deprecated \\\" +\\n    \\t\\t\\t\\t\\\"- just use .toArray instead.\\\" );\\n\\n    \\t\\treturn this.toArray( array, offset );\\n\\n    \\t},\\n\\n    \\tgetPosition: function () {\\n\\n    \\t\\tvar v1;\\n\\n    \\t\\treturn function getPosition() {\\n\\n    \\t\\t\\tif ( v1 === undefined ) v1 = new Vector3();\\n    \\t\\t\\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\\n\\n    \\t\\t\\treturn v1.setFromMatrixColumn( this, 3 );\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\tsetPosition: function ( v ) {\\n\\n    \\t\\tvar te = this.elements;\\n\\n    \\t\\tte[ 12 ] = v.x;\\n    \\t\\tte[ 13 ] = v.y;\\n    \\t\\tte[ 14 ] = v.z;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tgetInverse: function ( m, throwOnDegenerate ) {\\n\\n    \\t\\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\\n    \\t\\tvar te = this.elements,\\n    \\t\\t\\tme = m.elements,\\n\\n    \\t\\t\\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ], n41 = me[ 3 ],\\n    \\t\\t\\tn12 = me[ 4 ], n22 = me[ 5 ], n32 = me[ 6 ], n42 = me[ 7 ],\\n    \\t\\t\\tn13 = me[ 8 ], n23 = me[ 9 ], n33 = me[ 10 ], n43 = me[ 11 ],\\n    \\t\\t\\tn14 = me[ 12 ], n24 = me[ 13 ], n34 = me[ 14 ], n44 = me[ 15 ],\\n\\n    \\t\\t\\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\\n    \\t\\t\\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\\n    \\t\\t\\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\\n    \\t\\t\\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\\n\\n    \\t\\tvar det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\\n\\n    \\t\\tif ( det === 0 ) {\\n\\n    \\t\\t\\tvar msg = \\\"THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0\\\";\\n\\n    \\t\\t\\tif ( throwOnDegenerate === true ) {\\n\\n    \\t\\t\\t\\tthrow new Error( msg );\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\tconsole.warn( msg );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\treturn this.identity();\\n\\n    \\t\\t}\\n\\n    \\t\\tvar detInv = 1 / det;\\n\\n    \\t\\tte[ 0 ] = t11 * detInv;\\n    \\t\\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\\n    \\t\\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\\n    \\t\\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\\n\\n    \\t\\tte[ 4 ] = t12 * detInv;\\n    \\t\\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\\n    \\t\\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\\n    \\t\\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\\n\\n    \\t\\tte[ 8 ] = t13 * detInv;\\n    \\t\\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\\n    \\t\\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\\n    \\t\\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\\n\\n    \\t\\tte[ 12 ] = t14 * detInv;\\n    \\t\\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\\n    \\t\\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\\n    \\t\\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tscale: function ( v ) {\\n\\n    \\t\\tvar te = this.elements;\\n    \\t\\tvar x = v.x, y = v.y, z = v.z;\\n\\n    \\t\\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\\n    \\t\\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\\n    \\t\\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\\n    \\t\\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tgetMaxScaleOnAxis: function () {\\n\\n    \\t\\tvar te = this.elements;\\n\\n    \\t\\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\\n    \\t\\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\\n    \\t\\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\\n\\n    \\t\\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\\n\\n    \\t},\\n\\n    \\tmakeTranslation: function ( x, y, z ) {\\n\\n    \\t\\tthis.set(\\n\\n    \\t\\t\\t1, 0, 0, x,\\n    \\t\\t\\t0, 1, 0, y,\\n    \\t\\t\\t0, 0, 1, z,\\n    \\t\\t\\t0, 0, 0, 1\\n\\n    \\t\\t);\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tmakeRotationX: function ( theta ) {\\n\\n    \\t\\tvar c = Math.cos( theta ), s = Math.sin( theta );\\n\\n    \\t\\tthis.set(\\n\\n    \\t\\t\\t1, 0,  0, 0,\\n    \\t\\t\\t0, c, - s, 0,\\n    \\t\\t\\t0, s,  c, 0,\\n    \\t\\t\\t0, 0,  0, 1\\n\\n    \\t\\t);\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tmakeRotationY: function ( theta ) {\\n\\n    \\t\\tvar c = Math.cos( theta ), s = Math.sin( theta );\\n\\n    \\t\\tthis.set(\\n\\n    \\t\\t\\t c, 0, s, 0,\\n    \\t\\t\\t 0, 1, 0, 0,\\n    \\t\\t\\t- s, 0, c, 0,\\n    \\t\\t\\t 0, 0, 0, 1\\n\\n    \\t\\t);\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tmakeRotationZ: function ( theta ) {\\n\\n    \\t\\tvar c = Math.cos( theta ), s = Math.sin( theta );\\n\\n    \\t\\tthis.set(\\n\\n    \\t\\t\\tc, - s, 0, 0,\\n    \\t\\t\\ts,  c, 0, 0,\\n    \\t\\t\\t0,  0, 1, 0,\\n    \\t\\t\\t0,  0, 0, 1\\n\\n    \\t\\t);\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tmakeRotationAxis: function ( axis, angle ) {\\n\\n    \\t\\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\\n\\n    \\t\\tvar c = Math.cos( angle );\\n    \\t\\tvar s = Math.sin( angle );\\n    \\t\\tvar t = 1 - c;\\n    \\t\\tvar x = axis.x, y = axis.y, z = axis.z;\\n    \\t\\tvar tx = t * x, ty = t * y;\\n\\n    \\t\\tthis.set(\\n\\n    \\t\\t\\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\\n    \\t\\t\\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\\n    \\t\\t\\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\\n    \\t\\t\\t0, 0, 0, 1\\n\\n    \\t\\t);\\n\\n    \\t\\t return this;\\n\\n    \\t},\\n\\n    \\tmakeScale: function ( x, y, z ) {\\n\\n    \\t\\tthis.set(\\n\\n    \\t\\t\\tx, 0, 0, 0,\\n    \\t\\t\\t0, y, 0, 0,\\n    \\t\\t\\t0, 0, z, 0,\\n    \\t\\t\\t0, 0, 0, 1\\n\\n    \\t\\t);\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tcompose: function ( position, quaternion, scale ) {\\n\\n    \\t\\tthis.makeRotationFromQuaternion( quaternion );\\n    \\t\\tthis.scale( scale );\\n    \\t\\tthis.setPosition( position );\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tdecompose: function () {\\n\\n    \\t\\tvar vector, matrix;\\n\\n    \\t\\treturn function decompose( position, quaternion, scale ) {\\n\\n    \\t\\t\\tif ( vector === undefined ) {\\n\\n    \\t\\t\\t\\tvector = new Vector3();\\n    \\t\\t\\t\\tmatrix = new Matrix4();\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tvar te = this.elements;\\n\\n    \\t\\t\\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\\n    \\t\\t\\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\\n    \\t\\t\\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\\n\\n    \\t\\t\\t// if determine is negative, we need to invert one scale\\n    \\t\\t\\tvar det = this.determinant();\\n    \\t\\t\\tif ( det < 0 ) {\\n\\n    \\t\\t\\t\\tsx = - sx;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tposition.x = te[ 12 ];\\n    \\t\\t\\tposition.y = te[ 13 ];\\n    \\t\\t\\tposition.z = te[ 14 ];\\n\\n    \\t\\t\\t// scale the rotation part\\n\\n    \\t\\t\\tmatrix.elements.set( this.elements ); // at this point matrix is incomplete so we can't use .copy()\\n\\n    \\t\\t\\tvar invSX = 1 / sx;\\n    \\t\\t\\tvar invSY = 1 / sy;\\n    \\t\\t\\tvar invSZ = 1 / sz;\\n\\n    \\t\\t\\tmatrix.elements[ 0 ] *= invSX;\\n    \\t\\t\\tmatrix.elements[ 1 ] *= invSX;\\n    \\t\\t\\tmatrix.elements[ 2 ] *= invSX;\\n\\n    \\t\\t\\tmatrix.elements[ 4 ] *= invSY;\\n    \\t\\t\\tmatrix.elements[ 5 ] *= invSY;\\n    \\t\\t\\tmatrix.elements[ 6 ] *= invSY;\\n\\n    \\t\\t\\tmatrix.elements[ 8 ] *= invSZ;\\n    \\t\\t\\tmatrix.elements[ 9 ] *= invSZ;\\n    \\t\\t\\tmatrix.elements[ 10 ] *= invSZ;\\n\\n    \\t\\t\\tquaternion.setFromRotationMatrix( matrix );\\n\\n    \\t\\t\\tscale.x = sx;\\n    \\t\\t\\tscale.y = sy;\\n    \\t\\t\\tscale.z = sz;\\n\\n    \\t\\t\\treturn this;\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\tmakeFrustum: function ( left, right, bottom, top, near, far ) {\\n\\n    \\t\\tvar te = this.elements;\\n    \\t\\tvar x = 2 * near / ( right - left );\\n    \\t\\tvar y = 2 * near / ( top - bottom );\\n\\n    \\t\\tvar a = ( right + left ) / ( right - left );\\n    \\t\\tvar b = ( top + bottom ) / ( top - bottom );\\n    \\t\\tvar c = - ( far + near ) / ( far - near );\\n    \\t\\tvar d = - 2 * far * near / ( far - near );\\n\\n    \\t\\tte[ 0 ] = x;\\tte[ 4 ] = 0;\\tte[ 8 ] = a;\\tte[ 12 ] = 0;\\n    \\t\\tte[ 1 ] = 0;\\tte[ 5 ] = y;\\tte[ 9 ] = b;\\tte[ 13 ] = 0;\\n    \\t\\tte[ 2 ] = 0;\\tte[ 6 ] = 0;\\tte[ 10 ] = c;\\tte[ 14 ] = d;\\n    \\t\\tte[ 3 ] = 0;\\tte[ 7 ] = 0;\\tte[ 11 ] = - 1;\\tte[ 15 ] = 0;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tmakePerspective: function ( fov, aspect, near, far ) {\\n\\n    \\t\\tvar ymax = near * Math.tan( exports.Math.DEG2RAD * fov * 0.5 );\\n    \\t\\tvar ymin = - ymax;\\n    \\t\\tvar xmin = ymin * aspect;\\n    \\t\\tvar xmax = ymax * aspect;\\n\\n    \\t\\treturn this.makeFrustum( xmin, xmax, ymin, ymax, near, far );\\n\\n    \\t},\\n\\n    \\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\\n\\n    \\t\\tvar te = this.elements;\\n    \\t\\tvar w = 1.0 / ( right - left );\\n    \\t\\tvar h = 1.0 / ( top - bottom );\\n    \\t\\tvar p = 1.0 / ( far - near );\\n\\n    \\t\\tvar x = ( right + left ) * w;\\n    \\t\\tvar y = ( top + bottom ) * h;\\n    \\t\\tvar z = ( far + near ) * p;\\n\\n    \\t\\tte[ 0 ] = 2 * w;\\tte[ 4 ] = 0;\\tte[ 8 ] = 0;\\tte[ 12 ] = - x;\\n    \\t\\tte[ 1 ] = 0;\\tte[ 5 ] = 2 * h;\\tte[ 9 ] = 0;\\tte[ 13 ] = - y;\\n    \\t\\tte[ 2 ] = 0;\\tte[ 6 ] = 0;\\tte[ 10 ] = - 2 * p;\\tte[ 14 ] = - z;\\n    \\t\\tte[ 3 ] = 0;\\tte[ 7 ] = 0;\\tte[ 11 ] = 0;\\tte[ 15 ] = 1;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tequals: function ( matrix ) {\\n\\n    \\t\\tvar te = this.elements;\\n    \\t\\tvar me = matrix.elements;\\n\\n    \\t\\tfor ( var i = 0; i < 16; i ++ ) {\\n\\n    \\t\\t\\tif ( te[ i ] !== me[ i ] ) return false;\\n\\n    \\t\\t}\\n\\n    \\t\\treturn true;\\n\\n    \\t},\\n\\n    \\tfromArray: function ( array, offset ) {\\n\\n    \\t\\tif ( offset === undefined ) offset = 0;\\n\\n    \\t\\tfor( var i = 0; i < 16; i ++ ) {\\n\\n    \\t\\t\\tthis.elements[ i ] = array[ i + offset ];\\n\\n    \\t\\t}\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\ttoArray: function ( array, offset ) {\\n\\n    \\t\\tif ( array === undefined ) array = [];\\n    \\t\\tif ( offset === undefined ) offset = 0;\\n\\n    \\t\\tvar te = this.elements;\\n\\n    \\t\\tarray[ offset ] = te[ 0 ];\\n    \\t\\tarray[ offset + 1 ] = te[ 1 ];\\n    \\t\\tarray[ offset + 2 ] = te[ 2 ];\\n    \\t\\tarray[ offset + 3 ] = te[ 3 ];\\n\\n    \\t\\tarray[ offset + 4 ] = te[ 4 ];\\n    \\t\\tarray[ offset + 5 ] = te[ 5 ];\\n    \\t\\tarray[ offset + 6 ] = te[ 6 ];\\n    \\t\\tarray[ offset + 7 ] = te[ 7 ];\\n\\n    \\t\\tarray[ offset + 8 ]  = te[ 8 ];\\n    \\t\\tarray[ offset + 9 ]  = te[ 9 ];\\n    \\t\\tarray[ offset + 10 ] = te[ 10 ];\\n    \\t\\tarray[ offset + 11 ] = te[ 11 ];\\n\\n    \\t\\tarray[ offset + 12 ] = te[ 12 ];\\n    \\t\\tarray[ offset + 13 ] = te[ 13 ];\\n    \\t\\tarray[ offset + 14 ] = te[ 14 ];\\n    \\t\\tarray[ offset + 15 ] = te[ 15 ];\\n\\n    \\t\\treturn array;\\n\\n    \\t}\\n\\n    };\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     */\\n\\n    function CubeTexture( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\\n\\n    \\timages = images !== undefined ? images : [];\\n    \\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\\n\\n    \\tTexture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\\n\\n    \\tthis.flipY = false;\\n\\n    }\\n\\n    CubeTexture.prototype = Object.create( Texture.prototype );\\n    CubeTexture.prototype.constructor = CubeTexture;\\n\\n    CubeTexture.prototype.isCubeTexture = true;\\n\\n    Object.defineProperty( CubeTexture.prototype, 'images', {\\n\\n    \\tget: function () {\\n\\n    \\t\\treturn this.image;\\n\\n    \\t},\\n\\n    \\tset: function ( value ) {\\n\\n    \\t\\tthis.image = value;\\n\\n    \\t}\\n\\n    } );\\n\\n    var emptyTexture = new Texture();\\n    var emptyCubeTexture = new CubeTexture();\\n\\n    // --- Base for inner nodes (including the root) ---\\n\\n    function UniformContainer() {\\n\\n    \\tthis.seq = [];\\n    \\tthis.map = {};\\n\\n    }\\n\\n    // --- Utilities ---\\n\\n    // Array Caches (provide typed arrays for temporary by size)\\n\\n    var arrayCacheF32 = [];\\n    var arrayCacheI32 = [];\\n\\n    // Flattening for arrays of vectors and matrices\\n\\n    function flatten( array, nBlocks, blockSize ) {\\n\\n    \\tvar firstElem = array[ 0 ];\\n\\n    \\tif ( firstElem <= 0 || firstElem > 0 ) return array;\\n    \\t// unoptimized: ! isNaN( firstElem )\\n    \\t// see http://jacksondunstan.com/articles/983\\n\\n    \\tvar n = nBlocks * blockSize,\\n    \\t\\tr = arrayCacheF32[ n ];\\n\\n    \\tif ( r === undefined ) {\\n\\n    \\t\\tr = new Float32Array( n );\\n    \\t\\tarrayCacheF32[ n ] = r;\\n\\n    \\t}\\n\\n    \\tif ( nBlocks !== 0 ) {\\n\\n    \\t\\tfirstElem.toArray( r, 0 );\\n\\n    \\t\\tfor ( var i = 1, offset = 0; i !== nBlocks; ++ i ) {\\n\\n    \\t\\t\\toffset += blockSize;\\n    \\t\\t\\tarray[ i ].toArray( r, offset );\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\treturn r;\\n\\n    }\\n\\n    // Texture unit allocation\\n\\n    function allocTexUnits( renderer, n ) {\\n\\n    \\tvar r = arrayCacheI32[ n ];\\n\\n    \\tif ( r === undefined ) {\\n\\n    \\t\\tr = new Int32Array( n );\\n    \\t\\tarrayCacheI32[ n ] = r;\\n\\n    \\t}\\n\\n    \\tfor ( var i = 0; i !== n; ++ i )\\n    \\t\\tr[ i ] = renderer.allocTextureUnit();\\n\\n    \\treturn r;\\n\\n    }\\n\\n    // --- Setters ---\\n\\n    // Note: Defining these methods externally, because they come in a bunch\\n    // and this way their names minify.\\n\\n    // Single scalar\\n\\n    function setValue1f( gl, v ) { gl.uniform1f( this.addr, v ); }\\n    function setValue1i( gl, v ) { gl.uniform1i( this.addr, v ); }\\n\\n    // Single float vector (from flat array or THREE.VectorN)\\n\\n    function setValue2fv( gl, v ) {\\n\\n    \\tif ( v.x === undefined ) gl.uniform2fv( this.addr, v );\\n    \\telse gl.uniform2f( this.addr, v.x, v.y );\\n\\n    }\\n\\n    function setValue3fv( gl, v ) {\\n\\n    \\tif ( v.x !== undefined )\\n    \\t\\tgl.uniform3f( this.addr, v.x, v.y, v.z );\\n    \\telse if ( v.r !== undefined )\\n    \\t\\tgl.uniform3f( this.addr, v.r, v.g, v.b );\\n    \\telse\\n    \\t\\tgl.uniform3fv( this.addr, v );\\n\\n    }\\n\\n    function setValue4fv( gl, v ) {\\n\\n    \\tif ( v.x === undefined ) gl.uniform4fv( this.addr, v );\\n    \\telse gl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\\n\\n    }\\n\\n    // Single matrix (from flat array or MatrixN)\\n\\n    function setValue2fm( gl, v ) {\\n\\n    \\tgl.uniformMatrix2fv( this.addr, false, v.elements || v );\\n\\n    }\\n\\n    function setValue3fm( gl, v ) {\\n\\n    \\tgl.uniformMatrix3fv( this.addr, false, v.elements || v );\\n\\n    }\\n\\n    function setValue4fm( gl, v ) {\\n\\n    \\tgl.uniformMatrix4fv( this.addr, false, v.elements || v );\\n\\n    }\\n\\n    // Single texture (2D / Cube)\\n\\n    function setValueT1( gl, v, renderer ) {\\n\\n    \\tvar unit = renderer.allocTextureUnit();\\n    \\tgl.uniform1i( this.addr, unit );\\n    \\trenderer.setTexture2D( v || emptyTexture, unit );\\n\\n    }\\n\\n    function setValueT6( gl, v, renderer ) {\\n\\n    \\tvar unit = renderer.allocTextureUnit();\\n    \\tgl.uniform1i( this.addr, unit );\\n    \\trenderer.setTextureCube( v || emptyCubeTexture, unit );\\n\\n    }\\n\\n    // Integer / Boolean vectors or arrays thereof (always flat arrays)\\n\\n    function setValue2iv( gl, v ) { gl.uniform2iv( this.addr, v ); }\\n    function setValue3iv( gl, v ) { gl.uniform3iv( this.addr, v ); }\\n    function setValue4iv( gl, v ) { gl.uniform4iv( this.addr, v ); }\\n\\n    // Helper to pick the right setter for the singular case\\n\\n    function getSingularSetter( type ) {\\n\\n    \\tswitch ( type ) {\\n\\n    \\t\\tcase 0x1406: return setValue1f; // FLOAT\\n    \\t\\tcase 0x8b50: return setValue2fv; // _VEC2\\n    \\t\\tcase 0x8b51: return setValue3fv; // _VEC3\\n    \\t\\tcase 0x8b52: return setValue4fv; // _VEC4\\n\\n    \\t\\tcase 0x8b5a: return setValue2fm; // _MAT2\\n    \\t\\tcase 0x8b5b: return setValue3fm; // _MAT3\\n    \\t\\tcase 0x8b5c: return setValue4fm; // _MAT4\\n\\n    \\t\\tcase 0x8b5e: return setValueT1; // SAMPLER_2D\\n    \\t\\tcase 0x8b60: return setValueT6; // SAMPLER_CUBE\\n\\n    \\t\\tcase 0x1404: case 0x8b56: return setValue1i; // INT, BOOL\\n    \\t\\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\\n    \\t\\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\\n    \\t\\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\\n\\n    \\t}\\n\\n    }\\n\\n    // Array of scalars\\n\\n    function setValue1fv( gl, v ) { gl.uniform1fv( this.addr, v ); }\\n    function setValue1iv( gl, v ) { gl.uniform1iv( this.addr, v ); }\\n\\n    // Array of vectors (flat or from THREE classes)\\n\\n    function setValueV2a( gl, v ) {\\n\\n    \\tgl.uniform2fv( this.addr, flatten( v, this.size, 2 ) );\\n\\n    }\\n\\n    function setValueV3a( gl, v ) {\\n\\n    \\tgl.uniform3fv( this.addr, flatten( v, this.size, 3 ) );\\n\\n    }\\n\\n    function setValueV4a( gl, v ) {\\n\\n    \\tgl.uniform4fv( this.addr, flatten( v, this.size, 4 ) );\\n\\n    }\\n\\n    // Array of matrices (flat or from THREE clases)\\n\\n    function setValueM2a( gl, v ) {\\n\\n    \\tgl.uniformMatrix2fv( this.addr, false, flatten( v, this.size, 4 ) );\\n\\n    }\\n\\n    function setValueM3a( gl, v ) {\\n\\n    \\tgl.uniformMatrix3fv( this.addr, false, flatten( v, this.size, 9 ) );\\n\\n    }\\n\\n    function setValueM4a( gl, v ) {\\n\\n    \\tgl.uniformMatrix4fv( this.addr, false, flatten( v, this.size, 16 ) );\\n\\n    }\\n\\n    // Array of textures (2D / Cube)\\n\\n    function setValueT1a( gl, v, renderer ) {\\n\\n    \\tvar n = v.length,\\n    \\t\\tunits = allocTexUnits( renderer, n );\\n\\n    \\tgl.uniform1iv( this.addr, units );\\n\\n    \\tfor ( var i = 0; i !== n; ++ i ) {\\n\\n    \\t\\trenderer.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\\n\\n    \\t}\\n\\n    }\\n\\n    function setValueT6a( gl, v, renderer ) {\\n\\n    \\tvar n = v.length,\\n    \\t\\tunits = allocTexUnits( renderer, n );\\n\\n    \\tgl.uniform1iv( this.addr, units );\\n\\n    \\tfor ( var i = 0; i !== n; ++ i ) {\\n\\n    \\t\\trenderer.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\\n\\n    \\t}\\n\\n    }\\n\\n    // Helper to pick the right setter for a pure (bottom-level) array\\n\\n    function getPureArraySetter( type ) {\\n\\n    \\tswitch ( type ) {\\n\\n    \\t\\tcase 0x1406: return setValue1fv; // FLOAT\\n    \\t\\tcase 0x8b50: return setValueV2a; // _VEC2\\n    \\t\\tcase 0x8b51: return setValueV3a; // _VEC3\\n    \\t\\tcase 0x8b52: return setValueV4a; // _VEC4\\n\\n    \\t\\tcase 0x8b5a: return setValueM2a; // _MAT2\\n    \\t\\tcase 0x8b5b: return setValueM3a; // _MAT3\\n    \\t\\tcase 0x8b5c: return setValueM4a; // _MAT4\\n\\n    \\t\\tcase 0x8b5e: return setValueT1a; // SAMPLER_2D\\n    \\t\\tcase 0x8b60: return setValueT6a; // SAMPLER_CUBE\\n\\n    \\t\\tcase 0x1404: case 0x8b56: return setValue1iv; // INT, BOOL\\n    \\t\\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\\n    \\t\\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\\n    \\t\\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\\n\\n    \\t}\\n\\n    }\\n\\n    // --- Uniform Classes ---\\n\\n    function SingleUniform( id, activeInfo, addr ) {\\n\\n    \\tthis.id = id;\\n    \\tthis.addr = addr;\\n    \\tthis.setValue = getSingularSetter( activeInfo.type );\\n\\n    \\t// this.path = activeInfo.name; // DEBUG\\n\\n    }\\n\\n    function PureArrayUniform( id, activeInfo, addr ) {\\n\\n    \\tthis.id = id;\\n    \\tthis.addr = addr;\\n    \\tthis.size = activeInfo.size;\\n    \\tthis.setValue = getPureArraySetter( activeInfo.type );\\n\\n    \\t// this.path = activeInfo.name; // DEBUG\\n\\n    }\\n\\n    function StructuredUniform( id ) {\\n\\n    \\tthis.id = id;\\n\\n    \\tUniformContainer.call( this ); // mix-in\\n\\n    }\\n\\n    StructuredUniform.prototype.setValue = function( gl, value ) {\\n\\n    \\t// Note: Don't need an extra 'renderer' parameter, since samplers\\n    \\t// are not allowed in structured uniforms.\\n\\n    \\tvar seq = this.seq;\\n\\n    \\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\\n\\n    \\t\\tvar u = seq[ i ];\\n    \\t\\tu.setValue( gl, value[ u.id ] );\\n\\n    \\t}\\n\\n    };\\n\\n    // --- Top-level ---\\n\\n    // Parser - builds up the property tree from the path strings\\n\\n    var RePathPart = /([\\\\w\\\\d_]+)(\\\\])?(\\\\[|\\\\.)?/g;\\n\\n    // extracts\\n    // \\t- the identifier (member name or array index)\\n    //  - followed by an optional right bracket (found when array index)\\n    //  - followed by an optional left bracket or dot (type of subscript)\\n    //\\n    // Note: These portions can be read in a non-overlapping fashion and\\n    // allow straightforward parsing of the hierarchy that WebGL encodes\\n    // in the uniform names.\\n\\n    function addUniform( container, uniformObject ) {\\n\\n    \\tcontainer.seq.push( uniformObject );\\n    \\tcontainer.map[ uniformObject.id ] = uniformObject;\\n\\n    }\\n\\n    function parseUniform( activeInfo, addr, container ) {\\n\\n    \\tvar path = activeInfo.name,\\n    \\t\\tpathLength = path.length;\\n\\n    \\t// reset RegExp object, because of the early exit of a previous run\\n    \\tRePathPart.lastIndex = 0;\\n\\n    \\tfor (; ;) {\\n\\n    \\t\\tvar match = RePathPart.exec( path ),\\n    \\t\\t\\tmatchEnd = RePathPart.lastIndex,\\n\\n    \\t\\t\\tid = match[ 1 ],\\n    \\t\\t\\tidIsIndex = match[ 2 ] === ']',\\n    \\t\\t\\tsubscript = match[ 3 ];\\n\\n    \\t\\tif ( idIsIndex ) id = id | 0; // convert to integer\\n\\n    \\t\\tif ( subscript === undefined ||\\n    \\t\\t\\t\\tsubscript === '[' && matchEnd + 2 === pathLength ) {\\n    \\t\\t\\t// bare name or \\\"pure\\\" bottom-level array \\\"[0]\\\" suffix\\n\\n    \\t\\t\\taddUniform( container, subscript === undefined ?\\n    \\t\\t\\t\\t\\tnew SingleUniform( id, activeInfo, addr ) :\\n    \\t\\t\\t\\t\\tnew PureArrayUniform( id, activeInfo, addr ) );\\n\\n    \\t\\t\\tbreak;\\n\\n    \\t\\t} else {\\n    \\t\\t\\t// step into inner node / create it in case it doesn't exist\\n\\n    \\t\\t\\tvar map = container.map,\\n    \\t\\t\\t\\tnext = map[ id ];\\n\\n    \\t\\t\\tif ( next === undefined ) {\\n\\n    \\t\\t\\t\\tnext = new StructuredUniform( id );\\n    \\t\\t\\t\\taddUniform( container, next );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tcontainer = next;\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    }\\n\\n    // Root Container\\n\\n    function WebGLUniforms( gl, program, renderer ) {\\n\\n    \\tUniformContainer.call( this );\\n\\n    \\tthis.renderer = renderer;\\n\\n    \\tvar n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\\n\\n    \\tfor ( var i = 0; i !== n; ++ i ) {\\n\\n    \\t\\tvar info = gl.getActiveUniform( program, i ),\\n    \\t\\t\\tpath = info.name,\\n    \\t\\t\\taddr = gl.getUniformLocation( program, path );\\n\\n    \\t\\tparseUniform( info, addr, this );\\n\\n    \\t}\\n\\n    }\\n\\n    WebGLUniforms.prototype.setValue = function( gl, name, value ) {\\n\\n    \\tvar u = this.map[ name ];\\n\\n    \\tif ( u !== undefined ) u.setValue( gl, value, this.renderer );\\n\\n    };\\n\\n    WebGLUniforms.prototype.set = function( gl, object, name ) {\\n\\n    \\tvar u = this.map[ name ];\\n\\n    \\tif ( u !== undefined ) u.setValue( gl, object[ name ], this.renderer );\\n\\n    };\\n\\n    WebGLUniforms.prototype.setOptional = function( gl, object, name ) {\\n\\n    \\tvar v = object[ name ];\\n\\n    \\tif ( v !== undefined ) this.setValue( gl, name, v );\\n\\n    };\\n\\n\\n    // Static interface\\n\\n    WebGLUniforms.upload = function( gl, seq, values, renderer ) {\\n\\n    \\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\\n\\n    \\t\\tvar u = seq[ i ],\\n    \\t\\t\\tv = values[ u.id ];\\n\\n    \\t\\tif ( v.needsUpdate !== false ) {\\n    \\t\\t\\t// note: always updating when .needsUpdate is undefined\\n\\n    \\t\\t\\tu.setValue( gl, v.value, renderer );\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    };\\n\\n    WebGLUniforms.seqWithValue = function( seq, values ) {\\n\\n    \\tvar r = [];\\n\\n    \\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\\n\\n    \\t\\tvar u = seq[ i ];\\n    \\t\\tif ( u.id in values ) r.push( u );\\n\\n    \\t}\\n\\n    \\treturn r;\\n\\n    };\\n\\n    WebGLUniforms.splitDynamic = function( seq, values ) {\\n\\n    \\tvar r = null,\\n    \\t\\tn = seq.length,\\n    \\t\\tw = 0;\\n\\n    \\tfor ( var i = 0; i !== n; ++ i ) {\\n\\n    \\t\\tvar u = seq[ i ],\\n    \\t\\t\\tv = values[ u.id ];\\n\\n    \\t\\tif ( v && v.dynamic === true ) {\\n\\n    \\t\\t\\tif ( r === null ) r = [];\\n    \\t\\t\\tr.push( u );\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\t// in-place compact 'seq', removing the matches\\n    \\t\\t\\tif ( w < i ) seq[ w ] = u;\\n    \\t\\t\\t++ w;\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\tif ( w < n ) seq.length = w;\\n\\n    \\treturn r;\\n\\n    };\\n\\n    WebGLUniforms.evalDynamic = function( seq, values, object, material, camera ) {\\n\\n    \\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\\n\\n    \\t\\tvar v = values[ seq[ i ].id ],\\n    \\t\\t\\tf = v.onUpdateCallback;\\n\\n    \\t\\tif ( f !== undefined ) f.call( v, object, material, camera );\\n\\n    \\t}\\n\\n    };\\n\\n    /**\\n     * Uniform Utilities\\n     */\\n\\n    exports.UniformsUtils = {\\n\\n    \\tmerge: function ( uniforms ) {\\n\\n    \\t\\tvar merged = {};\\n\\n    \\t\\tfor ( var u = 0; u < uniforms.length; u ++ ) {\\n\\n    \\t\\t\\tvar tmp = this.clone( uniforms[ u ] );\\n\\n    \\t\\t\\tfor ( var p in tmp ) {\\n\\n    \\t\\t\\t\\tmerged[ p ] = tmp[ p ];\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\treturn merged;\\n\\n    \\t},\\n\\n    \\tclone: function ( uniforms_src ) {\\n\\n    \\t\\tvar uniforms_dst = {};\\n\\n    \\t\\tfor ( var u in uniforms_src ) {\\n\\n    \\t\\t\\tuniforms_dst[ u ] = {};\\n\\n    \\t\\t\\tfor ( var p in uniforms_src[ u ] ) {\\n\\n    \\t\\t\\t\\tvar parameter_src = uniforms_src[ u ][ p ];\\n\\n    \\t\\t\\t\\tif ( (parameter_src && parameter_src.isColor) ||\\n    \\t\\t\\t\\t\\t (parameter_src && parameter_src.isVector2) ||\\n    \\t\\t\\t\\t\\t (parameter_src && parameter_src.isVector3) ||\\n    \\t\\t\\t\\t\\t (parameter_src && parameter_src.isVector4) ||\\n    \\t\\t\\t\\t\\t (parameter_src && parameter_src.isMatrix3) ||\\n    \\t\\t\\t\\t\\t (parameter_src && parameter_src.isMatrix4) ||\\n    \\t\\t\\t\\t\\t (parameter_src && parameter_src.isTexture) ) {\\n\\n    \\t\\t\\t\\t\\tuniforms_dst[ u ][ p ] = parameter_src.clone();\\n\\n    \\t\\t\\t\\t} else if ( Array.isArray( parameter_src ) ) {\\n\\n    \\t\\t\\t\\t\\tuniforms_dst[ u ][ p ] = parameter_src.slice();\\n\\n    \\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\tuniforms_dst[ u ][ p ] = parameter_src;\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\treturn uniforms_dst;\\n\\n    \\t}\\n\\n    };\\n\\n    var alphamap_fragment = \\\"#ifdef USE_ALPHAMAP\\\\n\\\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\\\n#endif\\\\n\\\";\\n\\n    var alphamap_pars_fragment = \\\"#ifdef USE_ALPHAMAP\\\\n\\\\tuniform sampler2D alphaMap;\\\\n#endif\\\\n\\\";\\n\\n    var alphatest_fragment = \\\"#ifdef ALPHATEST\\\\n\\\\tif ( diffuseColor.a < ALPHATEST ) discard;\\\\n#endif\\\\n\\\";\\n\\n    var aomap_fragment = \\\"#ifdef USE_AOMAP\\\\n\\\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\\\n\\\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\\\n\\\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\\\n\\\\t\\\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\\\n\\\\t\\\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\\\n\\\\t#endif\\\\n#endif\\\\n\\\";\\n\\n    var aomap_pars_fragment = \\\"#ifdef USE_AOMAP\\\\n\\\\tuniform sampler2D aoMap;\\\\n\\\\tuniform float aoMapIntensity;\\\\n#endif\\\";\\n\\n    var begin_vertex = \\\"\\\\nvec3 transformed = vec3( position );\\\\n\\\";\\n\\n    var beginnormal_vertex = \\\"\\\\nvec3 objectNormal = vec3( normal );\\\\n\\\";\\n\\n    var bsdfs = \\\"bool testLightInRange( const in float lightDistance, const in float cutoffDistance ) {\\\\n\\\\treturn any( bvec2( cutoffDistance == 0.0, lightDistance < cutoffDistance ) );\\\\n}\\\\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\\\n\\\\t\\\\tif( decayExponent > 0.0 ) {\\\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\\\n\\\\t\\\\t\\\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\\\n\\\\t\\\\t\\\\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\\\n\\\\t\\\\t\\\\treturn distanceFalloff * maxDistanceCutoffFactor;\\\\n#else\\\\n\\\\t\\\\t\\\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\\\n#endif\\\\n\\\\t\\\\t}\\\\n\\\\t\\\\treturn 1.0;\\\\n}\\\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\\\n\\\\treturn RECIPROCAL_PI * diffuseColor;\\\\n}\\\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\\\n\\\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\\\n\\\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\\\n}\\\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\\\n\\\\tfloat a2 = pow2( alpha );\\\\n\\\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\\\n\\\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\\\n\\\\treturn 1.0 / ( gl * gv );\\\\n}\\\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\\\n\\\\tfloat a2 = pow2( alpha );\\\\n\\\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\\\n\\\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\\\n\\\\treturn 0.5 / max( gv + gl, EPSILON );\\\\n}\\\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\\\n\\\\tfloat a2 = pow2( alpha );\\\\n\\\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\\\n\\\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\\\n}\\\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\\\n\\\\tfloat alpha = pow2( roughness );\\\\n\\\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\\\n\\\\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\\\n\\\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\\\n\\\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\\\n\\\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\\\n\\\\tvec3 F = F_Schlick( specularColor, dotLH );\\\\n\\\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\\\n\\\\tfloat D = D_GGX( alpha, dotNH );\\\\n\\\\treturn F * ( G * D );\\\\n}\\\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\\\n\\\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\\\n\\\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\\\n\\\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\\\n\\\\tvec4 r = roughness * c0 + c1;\\\\n\\\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\\\n\\\\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\\\\n\\\\treturn specularColor * AB.x + AB.y;\\\\n}\\\\nfloat G_BlinnPhong_Implicit( ) {\\\\n\\\\treturn 0.25;\\\\n}\\\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\\\n\\\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\\\n}\\\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\\\n\\\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\\\n\\\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\\\n\\\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\\\n\\\\tvec3 F = F_Schlick( specularColor, dotLH );\\\\n\\\\tfloat G = G_BlinnPhong_Implicit( );\\\\n\\\\tfloat D = D_BlinnPhong( shininess, dotNH );\\\\n\\\\treturn F * ( G * D );\\\\n}\\\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\\\n\\\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\\\n}\\\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\\\n\\\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\\\n}\\\\n\\\";\\n\\n    var bumpmap_pars_fragment = \\\"#ifdef USE_BUMPMAP\\\\n\\\\tuniform sampler2D bumpMap;\\\\n\\\\tuniform float bumpScale;\\\\n\\\\tvec2 dHdxy_fwd() {\\\\n\\\\t\\\\tvec2 dSTdx = dFdx( vUv );\\\\n\\\\t\\\\tvec2 dSTdy = dFdy( vUv );\\\\n\\\\t\\\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\\\n\\\\t\\\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\\\n\\\\t\\\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\\\n\\\\t\\\\treturn vec2( dBx, dBy );\\\\n\\\\t}\\\\n\\\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\\\n\\\\t\\\\tvec3 vSigmaX = dFdx( surf_pos );\\\\n\\\\t\\\\tvec3 vSigmaY = dFdy( surf_pos );\\\\n\\\\t\\\\tvec3 vN = surf_norm;\\\\n\\\\t\\\\tvec3 R1 = cross( vSigmaY, vN );\\\\n\\\\t\\\\tvec3 R2 = cross( vN, vSigmaX );\\\\n\\\\t\\\\tfloat fDet = dot( vSigmaX, R1 );\\\\n\\\\t\\\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\\\n\\\\t\\\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\\\n\\\\t}\\\\n#endif\\\\n\\\";\\n\\n    var clipping_planes_fragment = \\\"#if NUM_CLIPPING_PLANES > 0\\\\n\\\\tfor ( int i = 0; i < NUM_CLIPPING_PLANES; ++ i ) {\\\\n\\\\t\\\\tvec4 plane = clippingPlanes[ i ];\\\\n\\\\t\\\\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\\\n\\\\t}\\\\n#endif\\\\n\\\";\\n\\n    var clipping_planes_pars_fragment = \\\"#if NUM_CLIPPING_PLANES > 0\\\\n\\\\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\\\\n\\\\t\\\\tvarying vec3 vViewPosition;\\\\n\\\\t#endif\\\\n\\\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\\\n#endif\\\\n\\\";\\n\\n    var clipping_planes_pars_vertex = \\\"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\\\n\\\\tvarying vec3 vViewPosition;\\\\n#endif\\\\n\\\";\\n\\n    var clipping_planes_vertex = \\\"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\\\n\\\\tvViewPosition = - mvPosition.xyz;\\\\n#endif\\\\n\\\";\\n\\n    var color_fragment = \\\"#ifdef USE_COLOR\\\\n\\\\tdiffuseColor.rgb *= vColor;\\\\n#endif\\\";\\n\\n    var color_pars_fragment = \\\"#ifdef USE_COLOR\\\\n\\\\tvarying vec3 vColor;\\\\n#endif\\\\n\\\";\\n\\n    var color_pars_vertex = \\\"#ifdef USE_COLOR\\\\n\\\\tvarying vec3 vColor;\\\\n#endif\\\";\\n\\n    var color_vertex = \\\"#ifdef USE_COLOR\\\\n\\\\tvColor.xyz = color.xyz;\\\\n#endif\\\";\\n\\n    var common = \\\"#define PI 3.14159265359\\\\n#define PI2 6.28318530718\\\\n#define RECIPROCAL_PI 0.31830988618\\\\n#define RECIPROCAL_PI2 0.15915494\\\\n#define LOG2 1.442695\\\\n#define EPSILON 1e-6\\\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\\\nfloat pow2( const in float x ) { return x*x; }\\\\nfloat pow3( const in float x ) { return x*x*x; }\\\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\\\nhighp float rand( const in vec2 uv ) {\\\\n\\\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\\\n\\\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\\\n\\\\treturn fract(sin(sn) * c);\\\\n}\\\\nstruct IncidentLight {\\\\n\\\\tvec3 color;\\\\n\\\\tvec3 direction;\\\\n\\\\tbool visible;\\\\n};\\\\nstruct ReflectedLight {\\\\n\\\\tvec3 directDiffuse;\\\\n\\\\tvec3 directSpecular;\\\\n\\\\tvec3 indirectDiffuse;\\\\n\\\\tvec3 indirectSpecular;\\\\n};\\\\nstruct GeometricContext {\\\\n\\\\tvec3 position;\\\\n\\\\tvec3 normal;\\\\n\\\\tvec3 viewDir;\\\\n};\\\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\\\n\\\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\\\n}\\\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\\\n\\\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\\\n}\\\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\\\n\\\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\\\n\\\\treturn - distance * planeNormal + point;\\\\n}\\\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\\\n\\\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\\\n}\\\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\\\n\\\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\\\n}\\\\n\\\";\\n\\n    var cube_uv_reflection_fragment = \\\"#ifdef ENVMAP_TYPE_CUBE_UV\\\\n#define cubeUV_textureSize (1024.0)\\\\nint getFaceFromDirection(vec3 direction) {\\\\n\\\\tvec3 absDirection = abs(direction);\\\\n\\\\tint face = -1;\\\\n\\\\tif( absDirection.x > absDirection.z ) {\\\\n\\\\t\\\\tif(absDirection.x > absDirection.y )\\\\n\\\\t\\\\t\\\\tface = direction.x > 0.0 ? 0 : 3;\\\\n\\\\t\\\\telse\\\\n\\\\t\\\\t\\\\tface = direction.y > 0.0 ? 1 : 4;\\\\n\\\\t}\\\\n\\\\telse {\\\\n\\\\t\\\\tif(absDirection.z > absDirection.y )\\\\n\\\\t\\\\t\\\\tface = direction.z > 0.0 ? 2 : 5;\\\\n\\\\t\\\\telse\\\\n\\\\t\\\\t\\\\tface = direction.y > 0.0 ? 1 : 4;\\\\n\\\\t}\\\\n\\\\treturn face;\\\\n}\\\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\\\n\\\\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\\\n\\\\tfloat dxRoughness = dFdx(roughness);\\\\n\\\\tfloat dyRoughness = dFdy(roughness);\\\\n\\\\tvec3 dx = dFdx( vec * scale * dxRoughness );\\\\n\\\\tvec3 dy = dFdy( vec * scale * dyRoughness );\\\\n\\\\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\\\n\\\\td = clamp(d, 1.0, cubeUV_rangeClamp);\\\\n\\\\tfloat mipLevel = 0.5 * log2(d);\\\\n\\\\treturn vec2(floor(mipLevel), fract(mipLevel));\\\\n}\\\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\\\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\\\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\\\n\\\\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\\\n\\\\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\\\n\\\\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\\\n\\\\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\\\n\\\\tfloat powScale = exp2_packed.x * exp2_packed.y;\\\\n\\\\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\\\n\\\\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\\\n\\\\tbool bRes = mipLevel == 0.0;\\\\n\\\\tscale =  bRes && (scale < a) ? a : scale;\\\\n\\\\tvec3 r;\\\\n\\\\tvec2 offset;\\\\n\\\\tint face = getFaceFromDirection(direction);\\\\n\\\\tfloat rcpPowScale = 1.0 / powScale;\\\\n\\\\tif( face == 0) {\\\\n\\\\t\\\\tr = vec3(direction.x, -direction.z, direction.y);\\\\n\\\\t\\\\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\\\n\\\\t\\\\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\\\\n\\\\t}\\\\n\\\\telse if( face == 1) {\\\\n\\\\t\\\\tr = vec3(direction.y, direction.x, direction.z);\\\\n\\\\t\\\\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\\\n\\\\t\\\\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\\\\n\\\\t}\\\\n\\\\telse if( face == 2) {\\\\n\\\\t\\\\tr = vec3(direction.z, direction.x, direction.y);\\\\n\\\\t\\\\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\\\n\\\\t\\\\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\\\\n\\\\t}\\\\n\\\\telse if( face == 3) {\\\\n\\\\t\\\\tr = vec3(direction.x, direction.z, direction.y);\\\\n\\\\t\\\\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\\\n\\\\t\\\\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\\\\n\\\\t}\\\\n\\\\telse if( face == 4) {\\\\n\\\\t\\\\tr = vec3(direction.y, direction.x, -direction.z);\\\\n\\\\t\\\\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\\\n\\\\t\\\\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\\\\n\\\\t}\\\\n\\\\telse {\\\\n\\\\t\\\\tr = vec3(direction.z, -direction.x, direction.y);\\\\n\\\\t\\\\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\\\n\\\\t\\\\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\\\\n\\\\t}\\\\n\\\\tr = normalize(r);\\\\n\\\\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\\\n\\\\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\\\n\\\\tvec2 base = offset + vec2( texelOffset );\\\\n\\\\treturn base + s * ( scale - 2.0 * texelOffset );\\\\n}\\\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\\\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\\\\n\\\\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\\\n\\\\tfloat r1 = floor(roughnessVal);\\\\n\\\\tfloat r2 = r1 + 1.0;\\\\n\\\\tfloat t = fract(roughnessVal);\\\\n\\\\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\\\n\\\\tfloat s = mipInfo.y;\\\\n\\\\tfloat level0 = mipInfo.x;\\\\n\\\\tfloat level1 = level0 + 1.0;\\\\n\\\\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\\\n\\\\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\\\n\\\\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\\\n\\\\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\\\n\\\\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\\\n\\\\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\\\n\\\\tvec4 result = mix(color10, color20, t);\\\\n\\\\treturn vec4(result.rgb, 1.0);\\\\n}\\\\n#endif\\\\n\\\";\\n\\n    var defaultnormal_vertex = \\\"#ifdef FLIP_SIDED\\\\n\\\\tobjectNormal = -objectNormal;\\\\n#endif\\\\nvec3 transformedNormal = normalMatrix * objectNormal;\\\\n\\\";\\n\\n    var displacementmap_pars_vertex = \\\"#ifdef USE_DISPLACEMENTMAP\\\\n\\\\tuniform sampler2D displacementMap;\\\\n\\\\tuniform float displacementScale;\\\\n\\\\tuniform float displacementBias;\\\\n#endif\\\\n\\\";\\n\\n    var displacementmap_vertex = \\\"#ifdef USE_DISPLACEMENTMAP\\\\n\\\\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\\\n#endif\\\\n\\\";\\n\\n    var emissivemap_fragment = \\\"#ifdef USE_EMISSIVEMAP\\\\n\\\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\\\n\\\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\\\n\\\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\\\n#endif\\\\n\\\";\\n\\n    var emissivemap_pars_fragment = \\\"#ifdef USE_EMISSIVEMAP\\\\n\\\\tuniform sampler2D emissiveMap;\\\\n#endif\\\\n\\\";\\n\\n    var encodings_fragment = \\\"  gl_FragColor = linearToOutputTexel( gl_FragColor );\\\\n\\\";\\n\\n    var encodings_pars_fragment = \\\"\\\\nvec4 LinearToLinear( in vec4 value ) {\\\\n  return value;\\\\n}\\\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\\\n  return vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\\\\n}\\\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\\\n  return vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\\\\n}\\\\nvec4 sRGBToLinear( in vec4 value ) {\\\\n  return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\\\\n}\\\\nvec4 LinearTosRGB( in vec4 value ) {\\\\n  return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\\\\n}\\\\nvec4 RGBEToLinear( in vec4 value ) {\\\\n  return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\\\n}\\\\nvec4 LinearToRGBE( in vec4 value ) {\\\\n  float maxComponent = max( max( value.r, value.g ), value.b );\\\\n  float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\\\n  return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\\\n}\\\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\\\n  return vec4( value.xyz * value.w * maxRange, 1.0 );\\\\n}\\\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\\\n  float maxRGB = max( value.x, max( value.g, value.b ) );\\\\n  float M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\\\\n  M            = ceil( M * 255.0 ) / 255.0;\\\\n  return vec4( value.rgb / ( M * maxRange ), M );\\\\n}\\\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\\\n    return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\\\n}\\\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\\\n    float maxRGB = max( value.x, max( value.g, value.b ) );\\\\n    float D      = max( maxRange / maxRGB, 1.0 );\\\\n    D            = min( floor( D ) / 255.0, 1.0 );\\\\n    return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\\\n}\\\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\\\nvec4 LinearToLogLuv( in vec4 value )  {\\\\n  vec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\\\\n  Xp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\\\\n  vec4 vResult;\\\\n  vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\\\n  float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\\\n  vResult.w = fract(Le);\\\\n  vResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\\\\n  return vResult;\\\\n}\\\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\\\nvec4 LogLuvToLinear( in vec4 value ) {\\\\n  float Le = value.z * 255.0 + value.w;\\\\n  vec3 Xp_Y_XYZp;\\\\n  Xp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\\\\n  Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\\\n  Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\\\n  vec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\\\\n  return vec4( max(vRGB, 0.0), 1.0 );\\\\n}\\\\n\\\";\\n\\n    var envmap_fragment = \\\"#ifdef USE_ENVMAP\\\\n\\\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\\\n\\\\t\\\\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\\\n\\\\t\\\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\\\n\\\\t\\\\t#ifdef ENVMAP_MODE_REFLECTION\\\\n\\\\t\\\\t\\\\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\\\n\\\\t\\\\t#else\\\\n\\\\t\\\\t\\\\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\\\n\\\\t\\\\t#endif\\\\n\\\\t#else\\\\n\\\\t\\\\tvec3 reflectVec = vReflect;\\\\n\\\\t#endif\\\\n\\\\t#ifdef ENVMAP_TYPE_CUBE\\\\n\\\\t\\\\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\\\n\\\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\\\n\\\\t\\\\tvec2 sampleUV;\\\\n\\\\t\\\\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\\\n\\\\t\\\\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\\\n\\\\t\\\\tvec4 envColor = texture2D( envMap, sampleUV );\\\\n\\\\t#elif defined( ENVMAP_TYPE_SPHERE )\\\\n\\\\t\\\\tvec3 reflectView = flipNormal * normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\\\\n\\\\t\\\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\\\n\\\\t#else\\\\n\\\\t\\\\tvec4 envColor = vec4( 0.0 );\\\\n\\\\t#endif\\\\n\\\\tenvColor = envMapTexelToLinear( envColor );\\\\n\\\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\\\n\\\\t\\\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\\\n\\\\t#elif defined( ENVMAP_BLENDING_MIX )\\\\n\\\\t\\\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\\\n\\\\t#elif defined( ENVMAP_BLENDING_ADD )\\\\n\\\\t\\\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\\\n\\\\t#endif\\\\n#endif\\\\n\\\";\\n\\n    var envmap_pars_fragment = \\\"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\\\\n\\\\tuniform float reflectivity;\\\\n\\\\tuniform float envMapIntenstiy;\\\\n#endif\\\\n#ifdef USE_ENVMAP\\\\n\\\\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\\\\n\\\\t\\\\tvarying vec3 vWorldPosition;\\\\n\\\\t#endif\\\\n\\\\t#ifdef ENVMAP_TYPE_CUBE\\\\n\\\\t\\\\tuniform samplerCube envMap;\\\\n\\\\t#else\\\\n\\\\t\\\\tuniform sampler2D envMap;\\\\n\\\\t#endif\\\\n\\\\tuniform float flipEnvMap;\\\\n\\\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\\\\n\\\\t\\\\tuniform float refractionRatio;\\\\n\\\\t#else\\\\n\\\\t\\\\tvarying vec3 vReflect;\\\\n\\\\t#endif\\\\n#endif\\\\n\\\";\\n\\n    var envmap_pars_vertex = \\\"#ifdef USE_ENVMAP\\\\n\\\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\\\n\\\\t\\\\tvarying vec3 vWorldPosition;\\\\n\\\\t#else\\\\n\\\\t\\\\tvarying vec3 vReflect;\\\\n\\\\t\\\\tuniform float refractionRatio;\\\\n\\\\t#endif\\\\n#endif\\\\n\\\";\\n\\n    var envmap_vertex = \\\"#ifdef USE_ENVMAP\\\\n\\\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\\\n\\\\t\\\\tvWorldPosition = worldPosition.xyz;\\\\n\\\\t#else\\\\n\\\\t\\\\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\\\n\\\\t\\\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\\\n\\\\t\\\\t#ifdef ENVMAP_MODE_REFLECTION\\\\n\\\\t\\\\t\\\\tvReflect = reflect( cameraToVertex, worldNormal );\\\\n\\\\t\\\\t#else\\\\n\\\\t\\\\t\\\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\\\n\\\\t\\\\t#endif\\\\n\\\\t#endif\\\\n#endif\\\\n\\\";\\n\\n    var fog_fragment = \\\"#ifdef USE_FOG\\\\n\\\\t#ifdef USE_LOGDEPTHBUF_EXT\\\\n\\\\t\\\\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\\\\n\\\\t#else\\\\n\\\\t\\\\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\\\n\\\\t#endif\\\\n\\\\t#ifdef FOG_EXP2\\\\n\\\\t\\\\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\\\\n\\\\t#else\\\\n\\\\t\\\\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\\\\n\\\\t#endif\\\\n\\\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\\\n#endif\\\\n\\\";\\n\\n    var fog_pars_fragment = \\\"#ifdef USE_FOG\\\\n\\\\tuniform vec3 fogColor;\\\\n\\\\t#ifdef FOG_EXP2\\\\n\\\\t\\\\tuniform float fogDensity;\\\\n\\\\t#else\\\\n\\\\t\\\\tuniform float fogNear;\\\\n\\\\t\\\\tuniform float fogFar;\\\\n\\\\t#endif\\\\n#endif\\\";\\n\\n    var lightmap_fragment = \\\"#ifdef USE_LIGHTMAP\\\\n\\\\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\\\n#endif\\\\n\\\";\\n\\n    var lightmap_pars_fragment = \\\"#ifdef USE_LIGHTMAP\\\\n\\\\tuniform sampler2D lightMap;\\\\n\\\\tuniform float lightMapIntensity;\\\\n#endif\\\";\\n\\n    var lights_lambert_vertex = \\\"vec3 diffuse = vec3( 1.0 );\\\\nGeometricContext geometry;\\\\ngeometry.position = mvPosition.xyz;\\\\ngeometry.normal = normalize( transformedNormal );\\\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\\\nGeometricContext backGeometry;\\\\nbackGeometry.position = geometry.position;\\\\nbackGeometry.normal = -geometry.normal;\\\\nbackGeometry.viewDir = geometry.viewDir;\\\\nvLightFront = vec3( 0.0 );\\\\n#ifdef DOUBLE_SIDED\\\\n\\\\tvLightBack = vec3( 0.0 );\\\\n#endif\\\\nIncidentLight directLight;\\\\nfloat dotNL;\\\\nvec3 directLightColor_Diffuse;\\\\n#if NUM_POINT_LIGHTS > 0\\\\n\\\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\\\n\\\\t\\\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\\\n\\\\t\\\\tdotNL = dot( geometry.normal, directLight.direction );\\\\n\\\\t\\\\tdirectLightColor_Diffuse = PI * directLight.color;\\\\n\\\\t\\\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\\\n\\\\t\\\\t#ifdef DOUBLE_SIDED\\\\n\\\\t\\\\t\\\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\\\n\\\\t\\\\t#endif\\\\n\\\\t}\\\\n#endif\\\\n#if NUM_SPOT_LIGHTS > 0\\\\n\\\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\\\n\\\\t\\\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\\\n\\\\t\\\\tdotNL = dot( geometry.normal, directLight.direction );\\\\n\\\\t\\\\tdirectLightColor_Diffuse = PI * directLight.color;\\\\n\\\\t\\\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\\\n\\\\t\\\\t#ifdef DOUBLE_SIDED\\\\n\\\\t\\\\t\\\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\\\n\\\\t\\\\t#endif\\\\n\\\\t}\\\\n#endif\\\\n#if NUM_DIR_LIGHTS > 0\\\\n\\\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\\\n\\\\t\\\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\\\n\\\\t\\\\tdotNL = dot( geometry.normal, directLight.direction );\\\\n\\\\t\\\\tdirectLightColor_Diffuse = PI * directLight.color;\\\\n\\\\t\\\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\\\n\\\\t\\\\t#ifdef DOUBLE_SIDED\\\\n\\\\t\\\\t\\\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\\\n\\\\t\\\\t#endif\\\\n\\\\t}\\\\n#endif\\\\n#if NUM_HEMI_LIGHTS > 0\\\\n\\\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\\\n\\\\t\\\\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\\\n\\\\t\\\\t#ifdef DOUBLE_SIDED\\\\n\\\\t\\\\t\\\\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\\\n\\\\t\\\\t#endif\\\\n\\\\t}\\\\n#endif\\\\n\\\";\\n\\n    var lights_pars = \\\"uniform vec3 ambientLightColor;\\\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\\\n\\\\tvec3 irradiance = ambientLightColor;\\\\n\\\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\\\n\\\\t\\\\tirradiance *= PI;\\\\n\\\\t#endif\\\\n\\\\treturn irradiance;\\\\n}\\\\n#if NUM_DIR_LIGHTS > 0\\\\n\\\\tstruct DirectionalLight {\\\\n\\\\t\\\\tvec3 direction;\\\\n\\\\t\\\\tvec3 color;\\\\n\\\\t\\\\tint shadow;\\\\n\\\\t\\\\tfloat shadowBias;\\\\n\\\\t\\\\tfloat shadowRadius;\\\\n\\\\t\\\\tvec2 shadowMapSize;\\\\n\\\\t};\\\\n\\\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\\\n\\\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\\\n\\\\t\\\\tdirectLight.color = directionalLight.color;\\\\n\\\\t\\\\tdirectLight.direction = directionalLight.direction;\\\\n\\\\t\\\\tdirectLight.visible = true;\\\\n\\\\t}\\\\n#endif\\\\n#if NUM_POINT_LIGHTS > 0\\\\n\\\\tstruct PointLight {\\\\n\\\\t\\\\tvec3 position;\\\\n\\\\t\\\\tvec3 color;\\\\n\\\\t\\\\tfloat distance;\\\\n\\\\t\\\\tfloat decay;\\\\n\\\\t\\\\tint shadow;\\\\n\\\\t\\\\tfloat shadowBias;\\\\n\\\\t\\\\tfloat shadowRadius;\\\\n\\\\t\\\\tvec2 shadowMapSize;\\\\n\\\\t};\\\\n\\\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\\\n\\\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\\\n\\\\t\\\\tvec3 lVector = pointLight.position - geometry.position;\\\\n\\\\t\\\\tdirectLight.direction = normalize( lVector );\\\\n\\\\t\\\\tfloat lightDistance = length( lVector );\\\\n\\\\t\\\\tif ( testLightInRange( lightDistance, pointLight.distance ) ) {\\\\n\\\\t\\\\t\\\\tdirectLight.color = pointLight.color;\\\\n\\\\t\\\\t\\\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\\\n\\\\t\\\\t\\\\tdirectLight.visible = true;\\\\n\\\\t\\\\t} else {\\\\n\\\\t\\\\t\\\\tdirectLight.color = vec3( 0.0 );\\\\n\\\\t\\\\t\\\\tdirectLight.visible = false;\\\\n\\\\t\\\\t}\\\\n\\\\t}\\\\n#endif\\\\n#if NUM_SPOT_LIGHTS > 0\\\\n\\\\tstruct SpotLight {\\\\n\\\\t\\\\tvec3 position;\\\\n\\\\t\\\\tvec3 direction;\\\\n\\\\t\\\\tvec3 color;\\\\n\\\\t\\\\tfloat distance;\\\\n\\\\t\\\\tfloat decay;\\\\n\\\\t\\\\tfloat coneCos;\\\\n\\\\t\\\\tfloat penumbraCos;\\\\n\\\\t\\\\tint shadow;\\\\n\\\\t\\\\tfloat shadowBias;\\\\n\\\\t\\\\tfloat shadowRadius;\\\\n\\\\t\\\\tvec2 shadowMapSize;\\\\n\\\\t};\\\\n\\\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\\\n\\\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\\\n\\\\t\\\\tvec3 lVector = spotLight.position - geometry.position;\\\\n\\\\t\\\\tdirectLight.direction = normalize( lVector );\\\\n\\\\t\\\\tfloat lightDistance = length( lVector );\\\\n\\\\t\\\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\\\n\\\\t\\\\tif ( all( bvec2( angleCos > spotLight.coneCos, testLightInRange( lightDistance, spotLight.distance ) ) ) ) {\\\\n\\\\t\\\\t\\\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\\\n\\\\t\\\\t\\\\tdirectLight.color = spotLight.color;\\\\n\\\\t\\\\t\\\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\\\n\\\\t\\\\t\\\\tdirectLight.visible = true;\\\\n\\\\t\\\\t} else {\\\\n\\\\t\\\\t\\\\tdirectLight.color = vec3( 0.0 );\\\\n\\\\t\\\\t\\\\tdirectLight.visible = false;\\\\n\\\\t\\\\t}\\\\n\\\\t}\\\\n#endif\\\\n#if NUM_HEMI_LIGHTS > 0\\\\n\\\\tstruct HemisphereLight {\\\\n\\\\t\\\\tvec3 direction;\\\\n\\\\t\\\\tvec3 skyColor;\\\\n\\\\t\\\\tvec3 groundColor;\\\\n\\\\t};\\\\n\\\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\\\n\\\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\\\n\\\\t\\\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\\\n\\\\t\\\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\\\n\\\\t\\\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\\\n\\\\t\\\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\\\n\\\\t\\\\t\\\\tirradiance *= PI;\\\\n\\\\t\\\\t#endif\\\\n\\\\t\\\\treturn irradiance;\\\\n\\\\t}\\\\n#endif\\\\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\\\n\\\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\\\n\\\\t\\\\t#include <normal_flip>\\\\n\\\\t\\\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\\\n\\\\t\\\\t#ifdef ENVMAP_TYPE_CUBE\\\\n\\\\t\\\\t\\\\tvec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\\\n\\\\t\\\\t\\\\t#ifdef TEXTURE_LOD_EXT\\\\n\\\\t\\\\t\\\\t\\\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\\\n\\\\t\\\\t\\\\t#else\\\\n\\\\t\\\\t\\\\t\\\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\\\n\\\\t\\\\t\\\\t#endif\\\\n\\\\t\\\\t\\\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\\\n\\\\t\\\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\\\n\\\\t\\\\t\\\\tvec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\\\n\\\\t\\\\t\\\\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\\\\n\\\\t\\\\t#else\\\\n\\\\t\\\\t\\\\tvec4 envMapColor = vec4( 0.0 );\\\\n\\\\t\\\\t#endif\\\\n\\\\t\\\\treturn PI * envMapColor.rgb * envMapIntensity;\\\\n\\\\t}\\\\n\\\\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\\\n\\\\t\\\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\\\n\\\\t\\\\tfloat desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\\\n\\\\t\\\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\\\n\\\\t}\\\\n\\\\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\\\n\\\\t\\\\t#ifdef ENVMAP_MODE_REFLECTION\\\\n\\\\t\\\\t\\\\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\\\n\\\\t\\\\t#else\\\\n\\\\t\\\\t\\\\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\\\n\\\\t\\\\t#endif\\\\n\\\\t\\\\t#include <normal_flip>\\\\n\\\\t\\\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\\\n\\\\t\\\\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\\\n\\\\t\\\\t#ifdef ENVMAP_TYPE_CUBE\\\\n\\\\t\\\\t\\\\tvec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\\\n\\\\t\\\\t\\\\t#ifdef TEXTURE_LOD_EXT\\\\n\\\\t\\\\t\\\\t\\\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\\\n\\\\t\\\\t\\\\t#else\\\\n\\\\t\\\\t\\\\t\\\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\\\n\\\\t\\\\t\\\\t#endif\\\\n\\\\t\\\\t\\\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\\\n\\\\t\\\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\\\n\\\\t\\\\t\\\\tvec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\\\n\\\\t\\\\t\\\\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\\\\n\\\\t\\\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\\\n\\\\t\\\\t\\\\tvec2 sampleUV;\\\\n\\\\t\\\\t\\\\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\\\n\\\\t\\\\t\\\\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\\\n\\\\t\\\\t\\\\t#ifdef TEXTURE_LOD_EXT\\\\n\\\\t\\\\t\\\\t\\\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\\\n\\\\t\\\\t\\\\t#else\\\\n\\\\t\\\\t\\\\t\\\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\\\n\\\\t\\\\t\\\\t#endif\\\\n\\\\t\\\\t\\\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\\\n\\\\t\\\\t#elif defined( ENVMAP_TYPE_SPHERE )\\\\n\\\\t\\\\t\\\\tvec3 reflectView = flipNormal * normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\\\\n\\\\t\\\\t\\\\t#ifdef TEXTURE_LOD_EXT\\\\n\\\\t\\\\t\\\\t\\\\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\\\n\\\\t\\\\t\\\\t#else\\\\n\\\\t\\\\t\\\\t\\\\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\\\n\\\\t\\\\t\\\\t#endif\\\\n\\\\t\\\\t\\\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\\\n\\\\t\\\\t#endif\\\\n\\\\t\\\\treturn envMapColor.rgb * envMapIntensity;\\\\n\\\\t}\\\\n#endif\\\\n\\\";\\n\\n    var lights_phong_fragment = \\\"BlinnPhongMaterial material;\\\\nmaterial.diffuseColor = diffuseColor.rgb;\\\\nmaterial.specularColor = specular;\\\\nmaterial.specularShininess = shininess;\\\\nmaterial.specularStrength = specularStrength;\\\\n\\\";\\n\\n    var lights_phong_pars_fragment = \\\"varying vec3 vViewPosition;\\\\n#ifndef FLAT_SHADED\\\\n\\\\tvarying vec3 vNormal;\\\\n#endif\\\\nstruct BlinnPhongMaterial {\\\\n\\\\tvec3\\\\tdiffuseColor;\\\\n\\\\tvec3\\\\tspecularColor;\\\\n\\\\tfloat\\\\tspecularShininess;\\\\n\\\\tfloat\\\\tspecularStrength;\\\\n};\\\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\\\n\\\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\\\n\\\\tvec3 irradiance = dotNL * directLight.color;\\\\n\\\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\\\n\\\\t\\\\tirradiance *= PI;\\\\n\\\\t#endif\\\\n\\\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\\\n\\\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\\\n}\\\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\\\n\\\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\\\n}\\\\n#define RE_Direct\\\\t\\\\t\\\\t\\\\tRE_Direct_BlinnPhong\\\\n#define RE_IndirectDiffuse\\\\t\\\\tRE_IndirectDiffuse_BlinnPhong\\\\n#define Material_LightProbeLOD( material )\\\\t(0)\\\\n\\\";\\n\\n    var lights_physical_fragment = \\\"PhysicalMaterial material;\\\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\\\n#ifdef STANDARD\\\\n\\\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\\\n#else\\\\n\\\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\\\n\\\\tmaterial.clearCoat = saturate( clearCoat );\\\\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\\\\n#endif\\\\n\\\";\\n\\n    var lights_physical_pars_fragment = \\\"struct PhysicalMaterial {\\\\n\\\\tvec3\\\\tdiffuseColor;\\\\n\\\\tfloat\\\\tspecularRoughness;\\\\n\\\\tvec3\\\\tspecularColor;\\\\n\\\\t#ifndef STANDARD\\\\n\\\\t\\\\tfloat clearCoat;\\\\n\\\\t\\\\tfloat clearCoatRoughness;\\\\n\\\\t#endif\\\\n};\\\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\\\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\\\\n\\\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\\\n}\\\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\\\n\\\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\\\n\\\\tvec3 irradiance = dotNL * directLight.color;\\\\n\\\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\\\n\\\\t\\\\tirradiance *= PI;\\\\n\\\\t#endif\\\\n\\\\t#ifndef STANDARD\\\\n\\\\t\\\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\\\n\\\\t#else\\\\n\\\\t\\\\tfloat clearCoatDHR = 0.0;\\\\n\\\\t#endif\\\\n\\\\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\\\n\\\\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\\\n\\\\t#ifndef STANDARD\\\\n\\\\t\\\\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\\\n\\\\t#endif\\\\n}\\\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\\\n\\\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\\\n}\\\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\\\n\\\\t#ifndef STANDARD\\\\n\\\\t\\\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\\\n\\\\t\\\\tfloat dotNL = dotNV;\\\\n\\\\t\\\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\\\n\\\\t#else\\\\n\\\\t\\\\tfloat clearCoatDHR = 0.0;\\\\n\\\\t#endif\\\\n\\\\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\\\n\\\\t#ifndef STANDARD\\\\n\\\\t\\\\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\\\n\\\\t#endif\\\\n}\\\\n#define RE_Direct\\\\t\\\\t\\\\t\\\\tRE_Direct_Physical\\\\n#define RE_IndirectDiffuse\\\\t\\\\tRE_IndirectDiffuse_Physical\\\\n#define RE_IndirectSpecular\\\\t\\\\tRE_IndirectSpecular_Physical\\\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\\\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\\\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\\\n\\\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\\\n}\\\\n\\\";\\n\\n    var lights_template = \\\"\\\\nGeometricContext geometry;\\\\ngeometry.position = - vViewPosition;\\\\ngeometry.normal = normal;\\\\ngeometry.viewDir = normalize( vViewPosition );\\\\nIncidentLight directLight;\\\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\\\n\\\\tPointLight pointLight;\\\\n\\\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\\\n\\\\t\\\\tpointLight = pointLights[ i ];\\\\n\\\\t\\\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\\\n\\\\t\\\\t#ifdef USE_SHADOWMAP\\\\n\\\\t\\\\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\\\\n\\\\t\\\\t#endif\\\\n\\\\t\\\\tRE_Direct( directLight, geometry, material, reflectedLight );\\\\n\\\\t}\\\\n#endif\\\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\\\n\\\\tSpotLight spotLight;\\\\n\\\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\\\n\\\\t\\\\tspotLight = spotLights[ i ];\\\\n\\\\t\\\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\\\n\\\\t\\\\t#ifdef USE_SHADOWMAP\\\\n\\\\t\\\\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\\\n\\\\t\\\\t#endif\\\\n\\\\t\\\\tRE_Direct( directLight, geometry, material, reflectedLight );\\\\n\\\\t}\\\\n#endif\\\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\\\n\\\\tDirectionalLight directionalLight;\\\\n\\\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\\\n\\\\t\\\\tdirectionalLight = directionalLights[ i ];\\\\n\\\\t\\\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\\\n\\\\t\\\\t#ifdef USE_SHADOWMAP\\\\n\\\\t\\\\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\\\n\\\\t\\\\t#endif\\\\n\\\\t\\\\tRE_Direct( directLight, geometry, material, reflectedLight );\\\\n\\\\t}\\\\n#endif\\\\n#if defined( RE_IndirectDiffuse )\\\\n\\\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\\\n\\\\t#ifdef USE_LIGHTMAP\\\\n\\\\t\\\\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\\\n\\\\t\\\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\\\n\\\\t\\\\t\\\\tlightMapIrradiance *= PI;\\\\n\\\\t\\\\t#endif\\\\n\\\\t\\\\tirradiance += lightMapIrradiance;\\\\n\\\\t#endif\\\\n\\\\t#if ( NUM_HEMI_LIGHTS > 0 )\\\\n\\\\t\\\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\\\n\\\\t\\\\t\\\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\\\n\\\\t\\\\t}\\\\n\\\\t#endif\\\\n\\\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\\\n\\\\t \\\\tirradiance += getLightProbeIndirectIrradiance( geometry, 8 );\\\\n\\\\t#endif\\\\n\\\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\\\n#endif\\\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\\\n\\\\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\\\\n\\\\t#ifndef STANDARD\\\\n\\\\t\\\\tvec3 clearCoatRadiance = getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), 8 );\\\\n\\\\t#else\\\\n\\\\t\\\\tvec3 clearCoatRadiance = vec3( 0.0 );\\\\n\\\\t#endif\\\\n\\\\t\\\\t\\\\n\\\\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\\\\n#endif\\\\n\\\";\\n\\n    var logdepthbuf_fragment = \\\"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\\\\n\\\\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\\\\n#endif\\\";\\n\\n    var logdepthbuf_pars_fragment = \\\"#ifdef USE_LOGDEPTHBUF\\\\n\\\\tuniform float logDepthBufFC;\\\\n\\\\t#ifdef USE_LOGDEPTHBUF_EXT\\\\n\\\\t\\\\tvarying float vFragDepth;\\\\n\\\\t#endif\\\\n#endif\\\\n\\\";\\n\\n    var logdepthbuf_pars_vertex = \\\"#ifdef USE_LOGDEPTHBUF\\\\n\\\\t#ifdef USE_LOGDEPTHBUF_EXT\\\\n\\\\t\\\\tvarying float vFragDepth;\\\\n\\\\t#endif\\\\n\\\\tuniform float logDepthBufFC;\\\\n#endif\\\";\\n\\n    var logdepthbuf_vertex = \\\"#ifdef USE_LOGDEPTHBUF\\\\n\\\\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\\\\n\\\\t#ifdef USE_LOGDEPTHBUF_EXT\\\\n\\\\t\\\\tvFragDepth = 1.0 + gl_Position.w;\\\\n\\\\t#else\\\\n\\\\t\\\\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\\\\n\\\\t#endif\\\\n#endif\\\\n\\\";\\n\\n    var map_fragment = \\\"#ifdef USE_MAP\\\\n\\\\tvec4 texelColor = texture2D( map, vUv );\\\\n\\\\ttexelColor = mapTexelToLinear( texelColor );\\\\n\\\\tdiffuseColor *= texelColor;\\\\n#endif\\\\n\\\";\\n\\n    var map_pars_fragment = \\\"#ifdef USE_MAP\\\\n\\\\tuniform sampler2D map;\\\\n#endif\\\\n\\\";\\n\\n    var map_particle_fragment = \\\"#ifdef USE_MAP\\\\n\\\\tvec4 mapTexel = texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\\\\n\\\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\\\n#endif\\\\n\\\";\\n\\n    var map_particle_pars_fragment = \\\"#ifdef USE_MAP\\\\n\\\\tuniform vec4 offsetRepeat;\\\\n\\\\tuniform sampler2D map;\\\\n#endif\\\\n\\\";\\n\\n    var metalnessmap_fragment = \\\"float metalnessFactor = metalness;\\\\n#ifdef USE_METALNESSMAP\\\\n\\\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\\\n\\\\tmetalnessFactor *= texelMetalness.r;\\\\n#endif\\\\n\\\";\\n\\n    var metalnessmap_pars_fragment = \\\"#ifdef USE_METALNESSMAP\\\\n\\\\tuniform sampler2D metalnessMap;\\\\n#endif\\\";\\n\\n    var morphnormal_vertex = \\\"#ifdef USE_MORPHNORMALS\\\\n\\\\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\\\n\\\\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\\\n\\\\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\\\n\\\\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\\\n#endif\\\\n\\\";\\n\\n    var morphtarget_pars_vertex = \\\"#ifdef USE_MORPHTARGETS\\\\n\\\\t#ifndef USE_MORPHNORMALS\\\\n\\\\tuniform float morphTargetInfluences[ 8 ];\\\\n\\\\t#else\\\\n\\\\tuniform float morphTargetInfluences[ 4 ];\\\\n\\\\t#endif\\\\n#endif\\\";\\n\\n    var morphtarget_vertex = \\\"#ifdef USE_MORPHTARGETS\\\\n\\\\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\\\n\\\\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\\\n\\\\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\\\n\\\\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\\\n\\\\t#ifndef USE_MORPHNORMALS\\\\n\\\\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\\\n\\\\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\\\n\\\\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\\\n\\\\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\\\n\\\\t#endif\\\\n#endif\\\\n\\\";\\n\\n    var normal_flip = \\\"#ifdef DOUBLE_SIDED\\\\n\\\\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\\\n#else\\\\n\\\\tfloat flipNormal = 1.0;\\\\n#endif\\\\n\\\";\\n\\n    var normal_fragment = \\\"#ifdef FLAT_SHADED\\\\n\\\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\\\n\\\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\\\n\\\\tvec3 normal = normalize( cross( fdx, fdy ) );\\\\n#else\\\\n\\\\tvec3 normal = normalize( vNormal ) * flipNormal;\\\\n#endif\\\\n#ifdef USE_NORMALMAP\\\\n\\\\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\\\n#elif defined( USE_BUMPMAP )\\\\n\\\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\\\n#endif\\\\n\\\";\\n\\n    var normalmap_pars_fragment = \\\"#ifdef USE_NORMALMAP\\\\n\\\\tuniform sampler2D normalMap;\\\\n\\\\tuniform vec2 normalScale;\\\\n\\\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\\\n\\\\t\\\\tvec3 q0 = dFdx( eye_pos.xyz );\\\\n\\\\t\\\\tvec3 q1 = dFdy( eye_pos.xyz );\\\\n\\\\t\\\\tvec2 st0 = dFdx( vUv.st );\\\\n\\\\t\\\\tvec2 st1 = dFdy( vUv.st );\\\\n\\\\t\\\\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\\\n\\\\t\\\\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\\\n\\\\t\\\\tvec3 N = normalize( surf_norm );\\\\n\\\\t\\\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\\\n\\\\t\\\\tmapN.xy = normalScale * mapN.xy;\\\\n\\\\t\\\\tmat3 tsn = mat3( S, T, N );\\\\n\\\\t\\\\treturn normalize( tsn * mapN );\\\\n\\\\t}\\\\n#endif\\\\n\\\";\\n\\n    var packing = \\\"vec3 packNormalToRGB( const in vec3 normal ) {\\\\n  return normalize( normal ) * 0.5 + 0.5;\\\\n}\\\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\\\n  return 1.0 - 2.0 * rgb.xyz;\\\\n}\\\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\\\nconst float ShiftRight8 = 1. / 256.;\\\\nvec4 packDepthToRGBA( const in float v ) {\\\\n\\\\tvec4 r = vec4( fract( v * PackFactors ), v );\\\\n\\\\tr.yzw -= r.xyz * ShiftRight8;\\\\treturn r * PackUpscale;\\\\n}\\\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\\\n\\\\treturn dot( v, UnpackFactors );\\\\n}\\\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\\\n  return ( viewZ + near ) / ( near - far );\\\\n}\\\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\\\n  return linearClipZ * ( near - far ) - near;\\\\n}\\\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\\\n  return (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\\\n}\\\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\\\n  return ( near * far ) / ( ( far - near ) * invClipZ - far );\\\\n}\\\\n\\\";\\n\\n    var premultiplied_alpha_fragment = \\\"#ifdef PREMULTIPLIED_ALPHA\\\\n\\\\tgl_FragColor.rgb *= gl_FragColor.a;\\\\n#endif\\\\n\\\";\\n\\n    var project_vertex = \\\"#ifdef USE_SKINNING\\\\n\\\\tvec4 mvPosition = modelViewMatrix * skinned;\\\\n#else\\\\n\\\\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\\\n#endif\\\\ngl_Position = projectionMatrix * mvPosition;\\\\n\\\";\\n\\n    var roughnessmap_fragment = \\\"float roughnessFactor = roughness;\\\\n#ifdef USE_ROUGHNESSMAP\\\\n\\\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\\\n\\\\troughnessFactor *= texelRoughness.r;\\\\n#endif\\\\n\\\";\\n\\n    var roughnessmap_pars_fragment = \\\"#ifdef USE_ROUGHNESSMAP\\\\n\\\\tuniform sampler2D roughnessMap;\\\\n#endif\\\";\\n\\n    var shadowmap_pars_fragment = \\\"#ifdef USE_SHADOWMAP\\\\n\\\\t#if NUM_DIR_LIGHTS > 0\\\\n\\\\t\\\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\\\n\\\\t\\\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\\\n\\\\t#endif\\\\n\\\\t#if NUM_SPOT_LIGHTS > 0\\\\n\\\\t\\\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\\\n\\\\t\\\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\\\n\\\\t#endif\\\\n\\\\t#if NUM_POINT_LIGHTS > 0\\\\n\\\\t\\\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\\\n\\\\t\\\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\\\n\\\\t#endif\\\\n\\\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\\\n\\\\t\\\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\\\n\\\\t}\\\\n\\\\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\\\n\\\\t\\\\tconst vec2 offset = vec2( 0.0, 1.0 );\\\\n\\\\t\\\\tvec2 texelSize = vec2( 1.0 ) / size;\\\\n\\\\t\\\\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\\\\n\\\\t\\\\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\\\n\\\\t\\\\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\\\n\\\\t\\\\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\\\n\\\\t\\\\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\\\n\\\\t\\\\tvec2 f = fract( uv * size + 0.5 );\\\\n\\\\t\\\\tfloat a = mix( lb, lt, f.y );\\\\n\\\\t\\\\tfloat b = mix( rb, rt, f.y );\\\\n\\\\t\\\\tfloat c = mix( a, b, f.x );\\\\n\\\\t\\\\treturn c;\\\\n\\\\t}\\\\n\\\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\\\n\\\\t\\\\tshadowCoord.xyz /= shadowCoord.w;\\\\n\\\\t\\\\tshadowCoord.z += shadowBias;\\\\n\\\\t\\\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\\\n\\\\t\\\\tbool inFrustum = all( inFrustumVec );\\\\n\\\\t\\\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\\\n\\\\t\\\\tbool frustumTest = all( frustumTestVec );\\\\n\\\\t\\\\tif ( frustumTest ) {\\\\n\\\\t\\\\t#if defined( SHADOWMAP_TYPE_PCF )\\\\n\\\\t\\\\t\\\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\\\n\\\\t\\\\t\\\\tfloat dx0 = - texelSize.x * shadowRadius;\\\\n\\\\t\\\\t\\\\tfloat dy0 = - texelSize.y * shadowRadius;\\\\n\\\\t\\\\t\\\\tfloat dx1 = + texelSize.x * shadowRadius;\\\\n\\\\t\\\\t\\\\tfloat dy1 = + texelSize.y * shadowRadius;\\\\n\\\\t\\\\t\\\\treturn (\\\\n\\\\t\\\\t\\\\t\\\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\\\n\\\\t\\\\t\\\\t\\\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\\\n\\\\t\\\\t\\\\t\\\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\\\n\\\\t\\\\t\\\\t\\\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\\\n\\\\t\\\\t\\\\t\\\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\\\n\\\\t\\\\t\\\\t\\\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\\\n\\\\t\\\\t\\\\t\\\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\\\n\\\\t\\\\t\\\\t\\\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\\\n\\\\t\\\\t\\\\t\\\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\\\n\\\\t\\\\t\\\\t) * ( 1.0 / 9.0 );\\\\n\\\\t\\\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\\\n\\\\t\\\\t\\\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\\\n\\\\t\\\\t\\\\tfloat dx0 = - texelSize.x * shadowRadius;\\\\n\\\\t\\\\t\\\\tfloat dy0 = - texelSize.y * shadowRadius;\\\\n\\\\t\\\\t\\\\tfloat dx1 = + texelSize.x * shadowRadius;\\\\n\\\\t\\\\t\\\\tfloat dy1 = + texelSize.y * shadowRadius;\\\\n\\\\t\\\\t\\\\treturn (\\\\n\\\\t\\\\t\\\\t\\\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\\\n\\\\t\\\\t\\\\t\\\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\\\n\\\\t\\\\t\\\\t\\\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\\\n\\\\t\\\\t\\\\t\\\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\\\n\\\\t\\\\t\\\\t\\\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\\\n\\\\t\\\\t\\\\t\\\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\\\n\\\\t\\\\t\\\\t\\\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\\\n\\\\t\\\\t\\\\t\\\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\\\n\\\\t\\\\t\\\\t\\\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\\\n\\\\t\\\\t\\\\t) * ( 1.0 / 9.0 );\\\\n\\\\t\\\\t#else\\\\n\\\\t\\\\t\\\\treturn texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\\\n\\\\t\\\\t#endif\\\\n\\\\t\\\\t}\\\\n\\\\t\\\\treturn 1.0;\\\\n\\\\t}\\\\n\\\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\\\n\\\\t\\\\tvec3 absV = abs( v );\\\\n\\\\t\\\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\\\n\\\\t\\\\tabsV *= scaleToCube;\\\\n\\\\t\\\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\\\n\\\\t\\\\tvec2 planar = v.xy;\\\\n\\\\t\\\\tfloat almostATexel = 1.5 * texelSizeY;\\\\n\\\\t\\\\tfloat almostOne = 1.0 - almostATexel;\\\\n\\\\t\\\\tif ( absV.z >= almostOne ) {\\\\n\\\\t\\\\t\\\\tif ( v.z > 0.0 )\\\\n\\\\t\\\\t\\\\t\\\\tplanar.x = 4.0 - v.x;\\\\n\\\\t\\\\t} else if ( absV.x >= almostOne ) {\\\\n\\\\t\\\\t\\\\tfloat signX = sign( v.x );\\\\n\\\\t\\\\t\\\\tplanar.x = v.z * signX + 2.0 * signX;\\\\n\\\\t\\\\t} else if ( absV.y >= almostOne ) {\\\\n\\\\t\\\\t\\\\tfloat signY = sign( v.y );\\\\n\\\\t\\\\t\\\\tplanar.x = v.x + 2.0 * signY + 2.0;\\\\n\\\\t\\\\t\\\\tplanar.y = v.z * signY - 2.0;\\\\n\\\\t\\\\t}\\\\n\\\\t\\\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\\\n\\\\t}\\\\n\\\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\\\n\\\\t\\\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\\\n\\\\t\\\\tvec3 lightToPosition = shadowCoord.xyz;\\\\n\\\\t\\\\tvec3 bd3D = normalize( lightToPosition );\\\\n\\\\t\\\\tfloat dp = ( length( lightToPosition ) - shadowBias ) / 1000.0;\\\\n\\\\t\\\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\\\n\\\\t\\\\t\\\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\\\n\\\\t\\\\t\\\\treturn (\\\\n\\\\t\\\\t\\\\t\\\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\\\n\\\\t\\\\t\\\\t\\\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\\\n\\\\t\\\\t\\\\t\\\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\\\n\\\\t\\\\t\\\\t\\\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\\\n\\\\t\\\\t\\\\t\\\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\\\n\\\\t\\\\t\\\\t\\\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\\\n\\\\t\\\\t\\\\t\\\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\\\n\\\\t\\\\t\\\\t\\\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\\\n\\\\t\\\\t\\\\t\\\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\\\n\\\\t\\\\t\\\\t) * ( 1.0 / 9.0 );\\\\n\\\\t\\\\t#else\\\\n\\\\t\\\\t\\\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\\\n\\\\t\\\\t#endif\\\\n\\\\t}\\\\n#endif\\\\n\\\";\\n\\n    var shadowmap_pars_vertex = \\\"#ifdef USE_SHADOWMAP\\\\n\\\\t#if NUM_DIR_LIGHTS > 0\\\\n\\\\t\\\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\\\n\\\\t\\\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\\\n\\\\t#endif\\\\n\\\\t#if NUM_SPOT_LIGHTS > 0\\\\n\\\\t\\\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\\\n\\\\t\\\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\\\n\\\\t#endif\\\\n\\\\t#if NUM_POINT_LIGHTS > 0\\\\n\\\\t\\\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\\\n\\\\t\\\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\\\n\\\\t#endif\\\\n#endif\\\\n\\\";\\n\\n    var shadowmap_vertex = \\\"#ifdef USE_SHADOWMAP\\\\n\\\\t#if NUM_DIR_LIGHTS > 0\\\\n\\\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\\\n\\\\t\\\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\\\n\\\\t}\\\\n\\\\t#endif\\\\n\\\\t#if NUM_SPOT_LIGHTS > 0\\\\n\\\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\\\n\\\\t\\\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\\\n\\\\t}\\\\n\\\\t#endif\\\\n\\\\t#if NUM_POINT_LIGHTS > 0\\\\n\\\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\\\n\\\\t\\\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\\\n\\\\t}\\\\n\\\\t#endif\\\\n#endif\\\\n\\\";\\n\\n    var shadowmask_pars_fragment = \\\"float getShadowMask() {\\\\n\\\\tfloat shadow = 1.0;\\\\n\\\\t#ifdef USE_SHADOWMAP\\\\n\\\\t#if NUM_DIR_LIGHTS > 0\\\\n\\\\tDirectionalLight directionalLight;\\\\n\\\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\\\n\\\\t\\\\tdirectionalLight = directionalLights[ i ];\\\\n\\\\t\\\\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\\\n\\\\t}\\\\n\\\\t#endif\\\\n\\\\t#if NUM_SPOT_LIGHTS > 0\\\\n\\\\tSpotLight spotLight;\\\\n\\\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\\\n\\\\t\\\\tspotLight = spotLights[ i ];\\\\n\\\\t\\\\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\\\n\\\\t}\\\\n\\\\t#endif\\\\n\\\\t#if NUM_POINT_LIGHTS > 0\\\\n\\\\tPointLight pointLight;\\\\n\\\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\\\n\\\\t\\\\tpointLight = pointLights[ i ];\\\\n\\\\t\\\\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\\\\n\\\\t}\\\\n\\\\t#endif\\\\n\\\\t#endif\\\\n\\\\treturn shadow;\\\\n}\\\\n\\\";\\n\\n    var skinbase_vertex = \\\"#ifdef USE_SKINNING\\\\n\\\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\\\n\\\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\\\n\\\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\\\n\\\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\\\n#endif\\\";\\n\\n    var skinning_pars_vertex = \\\"#ifdef USE_SKINNING\\\\n\\\\tuniform mat4 bindMatrix;\\\\n\\\\tuniform mat4 bindMatrixInverse;\\\\n\\\\t#ifdef BONE_TEXTURE\\\\n\\\\t\\\\tuniform sampler2D boneTexture;\\\\n\\\\t\\\\tuniform int boneTextureWidth;\\\\n\\\\t\\\\tuniform int boneTextureHeight;\\\\n\\\\t\\\\tmat4 getBoneMatrix( const in float i ) {\\\\n\\\\t\\\\t\\\\tfloat j = i * 4.0;\\\\n\\\\t\\\\t\\\\tfloat x = mod( j, float( boneTextureWidth ) );\\\\n\\\\t\\\\t\\\\tfloat y = floor( j / float( boneTextureWidth ) );\\\\n\\\\t\\\\t\\\\tfloat dx = 1.0 / float( boneTextureWidth );\\\\n\\\\t\\\\t\\\\tfloat dy = 1.0 / float( boneTextureHeight );\\\\n\\\\t\\\\t\\\\ty = dy * ( y + 0.5 );\\\\n\\\\t\\\\t\\\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\\\n\\\\t\\\\t\\\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\\\n\\\\t\\\\t\\\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\\\n\\\\t\\\\t\\\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\\\n\\\\t\\\\t\\\\tmat4 bone = mat4( v1, v2, v3, v4 );\\\\n\\\\t\\\\t\\\\treturn bone;\\\\n\\\\t\\\\t}\\\\n\\\\t#else\\\\n\\\\t\\\\tuniform mat4 boneMatrices[ MAX_BONES ];\\\\n\\\\t\\\\tmat4 getBoneMatrix( const in float i ) {\\\\n\\\\t\\\\t\\\\tmat4 bone = boneMatrices[ int(i) ];\\\\n\\\\t\\\\t\\\\treturn bone;\\\\n\\\\t\\\\t}\\\\n\\\\t#endif\\\\n#endif\\\\n\\\";\\n\\n    var skinning_vertex = \\\"#ifdef USE_SKINNING\\\\n\\\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\\\n\\\\tvec4 skinned = vec4( 0.0 );\\\\n\\\\tskinned += boneMatX * skinVertex * skinWeight.x;\\\\n\\\\tskinned += boneMatY * skinVertex * skinWeight.y;\\\\n\\\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\\\n\\\\tskinned += boneMatW * skinVertex * skinWeight.w;\\\\n\\\\tskinned  = bindMatrixInverse * skinned;\\\\n#endif\\\\n\\\";\\n\\n    var skinnormal_vertex = \\\"#ifdef USE_SKINNING\\\\n\\\\tmat4 skinMatrix = mat4( 0.0 );\\\\n\\\\tskinMatrix += skinWeight.x * boneMatX;\\\\n\\\\tskinMatrix += skinWeight.y * boneMatY;\\\\n\\\\tskinMatrix += skinWeight.z * boneMatZ;\\\\n\\\\tskinMatrix += skinWeight.w * boneMatW;\\\\n\\\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\\\n\\\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\\\n#endif\\\\n\\\";\\n\\n    var specularmap_fragment = \\\"float specularStrength;\\\\n#ifdef USE_SPECULARMAP\\\\n\\\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\\\n\\\\tspecularStrength = texelSpecular.r;\\\\n#else\\\\n\\\\tspecularStrength = 1.0;\\\\n#endif\\\";\\n\\n    var specularmap_pars_fragment = \\\"#ifdef USE_SPECULARMAP\\\\n\\\\tuniform sampler2D specularMap;\\\\n#endif\\\";\\n\\n    var tonemapping_fragment = \\\"#if defined( TONE_MAPPING )\\\\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\\\n#endif\\\\n\\\";\\n\\n    var tonemapping_pars_fragment = \\\"#define saturate(a) clamp( a, 0.0, 1.0 )\\\\nuniform float toneMappingExposure;\\\\nuniform float toneMappingWhitePoint;\\\\nvec3 LinearToneMapping( vec3 color ) {\\\\n  return toneMappingExposure * color;\\\\n}\\\\nvec3 ReinhardToneMapping( vec3 color ) {\\\\n  color *= toneMappingExposure;\\\\n  return saturate( color / ( vec3( 1.0 ) + color ) );\\\\n}\\\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\\\n  color *= toneMappingExposure;\\\\n  return saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\\\n}\\\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\\\n  color *= toneMappingExposure;\\\\n  color = max( vec3( 0.0 ), color - 0.004 );\\\\n  return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\\\n}\\\\n\\\";\\n\\n    var uv_pars_fragment = \\\"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\\\n\\\\tvarying vec2 vUv;\\\\n#endif\\\";\\n\\n    var uv_pars_vertex = \\\"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\\\n\\\\tvarying vec2 vUv;\\\\n\\\\tuniform vec4 offsetRepeat;\\\\n#endif\\\\n\\\";\\n\\n    var uv_vertex = \\\"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\\\n\\\\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\\\n#endif\\\";\\n\\n    var uv2_pars_fragment = \\\"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\\\n\\\\tvarying vec2 vUv2;\\\\n#endif\\\";\\n\\n    var uv2_pars_vertex = \\\"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\\\n\\\\tattribute vec2 uv2;\\\\n\\\\tvarying vec2 vUv2;\\\\n#endif\\\";\\n\\n    var uv2_vertex = \\\"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\\\n\\\\tvUv2 = uv2;\\\\n#endif\\\";\\n\\n    var worldpos_vertex = \\\"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( PHYSICAL ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\\\\n\\\\t#ifdef USE_SKINNING\\\\n\\\\t\\\\tvec4 worldPosition = modelMatrix * skinned;\\\\n\\\\t#else\\\\n\\\\t\\\\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\\\n\\\\t#endif\\\\n#endif\\\\n\\\";\\n\\n    var cube_frag = \\\"uniform samplerCube tCube;\\\\nuniform float tFlip;\\\\nuniform float opacity;\\\\nvarying vec3 vWorldPosition;\\\\n#include <common>\\\\nvoid main() {\\\\n\\\\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\\\\n\\\\tgl_FragColor.a *= opacity;\\\\n}\\\\n\\\";\\n\\n    var cube_vert = \\\"varying vec3 vWorldPosition;\\\\n#include <common>\\\\nvoid main() {\\\\n\\\\tvWorldPosition = transformDirection( position, modelMatrix );\\\\n\\\\t#include <begin_vertex>\\\\n\\\\t#include <project_vertex>\\\\n}\\\\n\\\";\\n\\n    var depth_frag = \\\"#if DEPTH_PACKING == 3200\\\\n\\\\tuniform float opacity;\\\\n#endif\\\\n#include <common>\\\\n#include <packing>\\\\n#include <uv_pars_fragment>\\\\n#include <map_pars_fragment>\\\\n#include <alphamap_pars_fragment>\\\\n#include <logdepthbuf_pars_fragment>\\\\n#include <clipping_planes_pars_fragment>\\\\nvoid main() {\\\\n\\\\t#include <clipping_planes_fragment>\\\\n\\\\tvec4 diffuseColor = vec4( 1.0 );\\\\n\\\\t#if DEPTH_PACKING == 3200\\\\n\\\\t\\\\tdiffuseColor.a = opacity;\\\\n\\\\t#endif\\\\n\\\\t#include <map_fragment>\\\\n\\\\t#include <alphamap_fragment>\\\\n\\\\t#include <alphatest_fragment>\\\\n\\\\t#include <logdepthbuf_fragment>\\\\n\\\\t#if DEPTH_PACKING == 3200\\\\n\\\\t\\\\tgl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\\\\n\\\\t#elif DEPTH_PACKING == 3201\\\\n\\\\t\\\\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\\\n\\\\t#endif\\\\n}\\\\n\\\";\\n\\n    var depth_vert = \\\"#include <common>\\\\n#include <uv_pars_vertex>\\\\n#include <displacementmap_pars_vertex>\\\\n#include <morphtarget_pars_vertex>\\\\n#include <skinning_pars_vertex>\\\\n#include <logdepthbuf_pars_vertex>\\\\n#include <clipping_planes_pars_vertex>\\\\nvoid main() {\\\\n\\\\t#include <uv_vertex>\\\\n\\\\t#include <skinbase_vertex>\\\\n\\\\t#include <begin_vertex>\\\\n\\\\t#include <displacementmap_vertex>\\\\n\\\\t#include <morphtarget_vertex>\\\\n\\\\t#include <skinning_vertex>\\\\n\\\\t#include <project_vertex>\\\\n\\\\t#include <logdepthbuf_vertex>\\\\n\\\\t#include <clipping_planes_vertex>\\\\n}\\\\n\\\";\\n\\n    var distanceRGBA_frag = \\\"uniform vec3 lightPos;\\\\nvarying vec4 vWorldPosition;\\\\n#include <common>\\\\n#include <packing>\\\\n#include <clipping_planes_pars_fragment>\\\\nvoid main () {\\\\n\\\\t#include <clipping_planes_fragment>\\\\n\\\\tgl_FragColor = packDepthToRGBA( length( vWorldPosition.xyz - lightPos.xyz ) / 1000.0 );\\\\n}\\\\n\\\";\\n\\n    var distanceRGBA_vert = \\\"varying vec4 vWorldPosition;\\\\n#include <common>\\\\n#include <morphtarget_pars_vertex>\\\\n#include <skinning_pars_vertex>\\\\n#include <clipping_planes_pars_vertex>\\\\nvoid main() {\\\\n\\\\t#include <skinbase_vertex>\\\\n\\\\t#include <begin_vertex>\\\\n\\\\t#include <morphtarget_vertex>\\\\n\\\\t#include <skinning_vertex>\\\\n\\\\t#include <project_vertex>\\\\n\\\\t#include <worldpos_vertex>\\\\n\\\\t#include <clipping_planes_vertex>\\\\n\\\\tvWorldPosition = worldPosition;\\\\n}\\\\n\\\";\\n\\n    var equirect_frag = \\\"uniform sampler2D tEquirect;\\\\nuniform float tFlip;\\\\nvarying vec3 vWorldPosition;\\\\n#include <common>\\\\nvoid main() {\\\\n\\\\tvec3 direction = normalize( vWorldPosition );\\\\n\\\\tvec2 sampleUV;\\\\n\\\\tsampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\\\\n\\\\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\\\n\\\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\\\n}\\\\n\\\";\\n\\n    var equirect_vert = \\\"varying vec3 vWorldPosition;\\\\n#include <common>\\\\nvoid main() {\\\\n\\\\tvWorldPosition = transformDirection( position, modelMatrix );\\\\n\\\\t#include <begin_vertex>\\\\n\\\\t#include <project_vertex>\\\\n}\\\\n\\\";\\n\\n    var linedashed_frag = \\\"uniform vec3 diffuse;\\\\nuniform float opacity;\\\\nuniform float dashSize;\\\\nuniform float totalSize;\\\\nvarying float vLineDistance;\\\\n#include <common>\\\\n#include <color_pars_fragment>\\\\n#include <fog_pars_fragment>\\\\n#include <logdepthbuf_pars_fragment>\\\\n#include <clipping_planes_pars_fragment>\\\\nvoid main() {\\\\n\\\\t#include <clipping_planes_fragment>\\\\n\\\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\\\n\\\\t\\\\tdiscard;\\\\n\\\\t}\\\\n\\\\tvec3 outgoingLight = vec3( 0.0 );\\\\n\\\\tvec4 diffuseColor = vec4( diffuse, opacity );\\\\n\\\\t#include <logdepthbuf_fragment>\\\\n\\\\t#include <color_fragment>\\\\n\\\\toutgoingLight = diffuseColor.rgb;\\\\n\\\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\\\n\\\\t#include <premultiplied_alpha_fragment>\\\\n\\\\t#include <tonemapping_fragment>\\\\n\\\\t#include <encodings_fragment>\\\\n\\\\t#include <fog_fragment>\\\\n}\\\\n\\\";\\n\\n    var linedashed_vert = \\\"uniform float scale;\\\\nattribute float lineDistance;\\\\nvarying float vLineDistance;\\\\n#include <common>\\\\n#include <color_pars_vertex>\\\\n#include <logdepthbuf_pars_vertex>\\\\n#include <clipping_planes_pars_vertex>\\\\nvoid main() {\\\\n\\\\t#include <color_vertex>\\\\n\\\\tvLineDistance = scale * lineDistance;\\\\n\\\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\\\n\\\\tgl_Position = projectionMatrix * mvPosition;\\\\n\\\\t#include <logdepthbuf_vertex>\\\\n\\\\t#include <clipping_planes_vertex>\\\\n}\\\\n\\\";\\n\\n    var meshbasic_frag = \\\"uniform vec3 diffuse;\\\\nuniform float opacity;\\\\n#ifndef FLAT_SHADED\\\\n\\\\tvarying vec3 vNormal;\\\\n#endif\\\\n#include <common>\\\\n#include <color_pars_fragment>\\\\n#include <uv_pars_fragment>\\\\n#include <uv2_pars_fragment>\\\\n#include <map_pars_fragment>\\\\n#include <alphamap_pars_fragment>\\\\n#include <aomap_pars_fragment>\\\\n#include <envmap_pars_fragment>\\\\n#include <fog_pars_fragment>\\\\n#include <specularmap_pars_fragment>\\\\n#include <logdepthbuf_pars_fragment>\\\\n#include <clipping_planes_pars_fragment>\\\\nvoid main() {\\\\n\\\\t#include <clipping_planes_fragment>\\\\n\\\\tvec4 diffuseColor = vec4( diffuse, opacity );\\\\n\\\\t#include <logdepthbuf_fragment>\\\\n\\\\t#include <map_fragment>\\\\n\\\\t#include <color_fragment>\\\\n\\\\t#include <alphamap_fragment>\\\\n\\\\t#include <alphatest_fragment>\\\\n\\\\t#include <specularmap_fragment>\\\\n\\\\tReflectedLight reflectedLight;\\\\n\\\\treflectedLight.directDiffuse = vec3( 0.0 );\\\\n\\\\treflectedLight.directSpecular = vec3( 0.0 );\\\\n\\\\treflectedLight.indirectDiffuse = diffuseColor.rgb;\\\\n\\\\treflectedLight.indirectSpecular = vec3( 0.0 );\\\\n\\\\t#include <aomap_fragment>\\\\n\\\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\\\n\\\\t#include <normal_flip>\\\\n\\\\t#include <envmap_fragment>\\\\n\\\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\\\n\\\\t#include <premultiplied_alpha_fragment>\\\\n\\\\t#include <tonemapping_fragment>\\\\n\\\\t#include <encodings_fragment>\\\\n\\\\t#include <fog_fragment>\\\\n}\\\\n\\\";\\n\\n    var meshbasic_vert = \\\"#include <common>\\\\n#include <uv_pars_vertex>\\\\n#include <uv2_pars_vertex>\\\\n#include <envmap_pars_vertex>\\\\n#include <color_pars_vertex>\\\\n#include <morphtarget_pars_vertex>\\\\n#include <skinning_pars_vertex>\\\\n#include <logdepthbuf_pars_vertex>\\\\n#include <clipping_planes_pars_vertex>\\\\nvoid main() {\\\\n\\\\t#include <uv_vertex>\\\\n\\\\t#include <uv2_vertex>\\\\n\\\\t#include <color_vertex>\\\\n\\\\t#include <skinbase_vertex>\\\\n\\\\t#ifdef USE_ENVMAP\\\\n\\\\t#include <beginnormal_vertex>\\\\n\\\\t#include <morphnormal_vertex>\\\\n\\\\t#include <skinnormal_vertex>\\\\n\\\\t#include <defaultnormal_vertex>\\\\n\\\\t#endif\\\\n\\\\t#include <begin_vertex>\\\\n\\\\t#include <morphtarget_vertex>\\\\n\\\\t#include <skinning_vertex>\\\\n\\\\t#include <project_vertex>\\\\n\\\\t#include <logdepthbuf_vertex>\\\\n\\\\t#include <worldpos_vertex>\\\\n\\\\t#include <clipping_planes_vertex>\\\\n\\\\t#include <envmap_vertex>\\\\n}\\\\n\\\";\\n\\n    var meshlambert_frag = \\\"uniform vec3 diffuse;\\\\nuniform vec3 emissive;\\\\nuniform float opacity;\\\\nvarying vec3 vLightFront;\\\\n#ifdef DOUBLE_SIDED\\\\n\\\\tvarying vec3 vLightBack;\\\\n#endif\\\\n#include <common>\\\\n#include <packing>\\\\n#include <color_pars_fragment>\\\\n#include <uv_pars_fragment>\\\\n#include <uv2_pars_fragment>\\\\n#include <map_pars_fragment>\\\\n#include <alphamap_pars_fragment>\\\\n#include <aomap_pars_fragment>\\\\n#include <lightmap_pars_fragment>\\\\n#include <emissivemap_pars_fragment>\\\\n#include <envmap_pars_fragment>\\\\n#include <bsdfs>\\\\n#include <lights_pars>\\\\n#include <fog_pars_fragment>\\\\n#include <shadowmap_pars_fragment>\\\\n#include <shadowmask_pars_fragment>\\\\n#include <specularmap_pars_fragment>\\\\n#include <logdepthbuf_pars_fragment>\\\\n#include <clipping_planes_pars_fragment>\\\\nvoid main() {\\\\n\\\\t#include <clipping_planes_fragment>\\\\n\\\\tvec4 diffuseColor = vec4( diffuse, opacity );\\\\n\\\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\\\n\\\\tvec3 totalEmissiveRadiance = emissive;\\\\n\\\\t#include <logdepthbuf_fragment>\\\\n\\\\t#include <map_fragment>\\\\n\\\\t#include <color_fragment>\\\\n\\\\t#include <alphamap_fragment>\\\\n\\\\t#include <alphatest_fragment>\\\\n\\\\t#include <specularmap_fragment>\\\\n\\\\t#include <emissivemap_fragment>\\\\n\\\\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\\\n\\\\t#include <lightmap_fragment>\\\\n\\\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\\\n\\\\t#ifdef DOUBLE_SIDED\\\\n\\\\t\\\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\\\n\\\\t#else\\\\n\\\\t\\\\treflectedLight.directDiffuse = vLightFront;\\\\n\\\\t#endif\\\\n\\\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\\\n\\\\t#include <aomap_fragment>\\\\n\\\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\\\n\\\\t#include <normal_flip>\\\\n\\\\t#include <envmap_fragment>\\\\n\\\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\\\n\\\\t#include <premultiplied_alpha_fragment>\\\\n\\\\t#include <tonemapping_fragment>\\\\n\\\\t#include <encodings_fragment>\\\\n\\\\t#include <fog_fragment>\\\\n}\\\\n\\\";\\n\\n    var meshlambert_vert = \\\"#define LAMBERT\\\\nvarying vec3 vLightFront;\\\\n#ifdef DOUBLE_SIDED\\\\n\\\\tvarying vec3 vLightBack;\\\\n#endif\\\\n#include <common>\\\\n#include <uv_pars_vertex>\\\\n#include <uv2_pars_vertex>\\\\n#include <envmap_pars_vertex>\\\\n#include <bsdfs>\\\\n#include <lights_pars>\\\\n#include <color_pars_vertex>\\\\n#include <morphtarget_pars_vertex>\\\\n#include <skinning_pars_vertex>\\\\n#include <shadowmap_pars_vertex>\\\\n#include <logdepthbuf_pars_vertex>\\\\n#include <clipping_planes_pars_vertex>\\\\nvoid main() {\\\\n\\\\t#include <uv_vertex>\\\\n\\\\t#include <uv2_vertex>\\\\n\\\\t#include <color_vertex>\\\\n\\\\t#include <beginnormal_vertex>\\\\n\\\\t#include <morphnormal_vertex>\\\\n\\\\t#include <skinbase_vertex>\\\\n\\\\t#include <skinnormal_vertex>\\\\n\\\\t#include <defaultnormal_vertex>\\\\n\\\\t#include <begin_vertex>\\\\n\\\\t#include <morphtarget_vertex>\\\\n\\\\t#include <skinning_vertex>\\\\n\\\\t#include <project_vertex>\\\\n\\\\t#include <logdepthbuf_vertex>\\\\n\\\\t#include <clipping_planes_vertex>\\\\n\\\\t#include <worldpos_vertex>\\\\n\\\\t#include <envmap_vertex>\\\\n\\\\t#include <lights_lambert_vertex>\\\\n\\\\t#include <shadowmap_vertex>\\\\n}\\\\n\\\";\\n\\n    var meshphong_frag = \\\"#define PHONG\\\\nuniform vec3 diffuse;\\\\nuniform vec3 emissive;\\\\nuniform vec3 specular;\\\\nuniform float shininess;\\\\nuniform float opacity;\\\\n#include <common>\\\\n#include <packing>\\\\n#include <color_pars_fragment>\\\\n#include <uv_pars_fragment>\\\\n#include <uv2_pars_fragment>\\\\n#include <map_pars_fragment>\\\\n#include <alphamap_pars_fragment>\\\\n#include <aomap_pars_fragment>\\\\n#include <lightmap_pars_fragment>\\\\n#include <emissivemap_pars_fragment>\\\\n#include <envmap_pars_fragment>\\\\n#include <fog_pars_fragment>\\\\n#include <bsdfs>\\\\n#include <lights_pars>\\\\n#include <lights_phong_pars_fragment>\\\\n#include <shadowmap_pars_fragment>\\\\n#include <bumpmap_pars_fragment>\\\\n#include <normalmap_pars_fragment>\\\\n#include <specularmap_pars_fragment>\\\\n#include <logdepthbuf_pars_fragment>\\\\n#include <clipping_planes_pars_fragment>\\\\nvoid main() {\\\\n\\\\t#include <clipping_planes_fragment>\\\\n\\\\tvec4 diffuseColor = vec4( diffuse, opacity );\\\\n\\\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\\\n\\\\tvec3 totalEmissiveRadiance = emissive;\\\\n\\\\t#include <logdepthbuf_fragment>\\\\n\\\\t#include <map_fragment>\\\\n\\\\t#include <color_fragment>\\\\n\\\\t#include <alphamap_fragment>\\\\n\\\\t#include <alphatest_fragment>\\\\n\\\\t#include <specularmap_fragment>\\\\n\\\\t#include <normal_flip>\\\\n\\\\t#include <normal_fragment>\\\\n\\\\t#include <emissivemap_fragment>\\\\n\\\\t#include <lights_phong_fragment>\\\\n\\\\t#include <lights_template>\\\\n\\\\t#include <aomap_fragment>\\\\n\\\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\\\n\\\\t#include <envmap_fragment>\\\\n\\\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\\\n\\\\t#include <premultiplied_alpha_fragment>\\\\n\\\\t#include <tonemapping_fragment>\\\\n\\\\t#include <encodings_fragment>\\\\n\\\\t#include <fog_fragment>\\\\n}\\\\n\\\";\\n\\n    var meshphong_vert = \\\"#define PHONG\\\\nvarying vec3 vViewPosition;\\\\n#ifndef FLAT_SHADED\\\\n\\\\tvarying vec3 vNormal;\\\\n#endif\\\\n#include <common>\\\\n#include <uv_pars_vertex>\\\\n#include <uv2_pars_vertex>\\\\n#include <displacementmap_pars_vertex>\\\\n#include <envmap_pars_vertex>\\\\n#include <color_pars_vertex>\\\\n#include <morphtarget_pars_vertex>\\\\n#include <skinning_pars_vertex>\\\\n#include <shadowmap_pars_vertex>\\\\n#include <logdepthbuf_pars_vertex>\\\\n#include <clipping_planes_pars_vertex>\\\\nvoid main() {\\\\n\\\\t#include <uv_vertex>\\\\n\\\\t#include <uv2_vertex>\\\\n\\\\t#include <color_vertex>\\\\n\\\\t#include <beginnormal_vertex>\\\\n\\\\t#include <morphnormal_vertex>\\\\n\\\\t#include <skinbase_vertex>\\\\n\\\\t#include <skinnormal_vertex>\\\\n\\\\t#include <defaultnormal_vertex>\\\\n#ifndef FLAT_SHADED\\\\n\\\\tvNormal = normalize( transformedNormal );\\\\n#endif\\\\n\\\\t#include <begin_vertex>\\\\n\\\\t#include <displacementmap_vertex>\\\\n\\\\t#include <morphtarget_vertex>\\\\n\\\\t#include <skinning_vertex>\\\\n\\\\t#include <project_vertex>\\\\n\\\\t#include <logdepthbuf_vertex>\\\\n\\\\t#include <clipping_planes_vertex>\\\\n\\\\tvViewPosition = - mvPosition.xyz;\\\\n\\\\t#include <worldpos_vertex>\\\\n\\\\t#include <envmap_vertex>\\\\n\\\\t#include <shadowmap_vertex>\\\\n}\\\\n\\\";\\n\\n    var meshphysical_frag = \\\"#define PHYSICAL\\\\nuniform vec3 diffuse;\\\\nuniform vec3 emissive;\\\\nuniform float roughness;\\\\nuniform float metalness;\\\\nuniform float opacity;\\\\n#ifndef STANDARD\\\\n\\\\tuniform float clearCoat;\\\\n\\\\tuniform float clearCoatRoughness;\\\\n#endif\\\\nuniform float envMapIntensity;\\\\nvarying vec3 vViewPosition;\\\\n#ifndef FLAT_SHADED\\\\n\\\\tvarying vec3 vNormal;\\\\n#endif\\\\n#include <common>\\\\n#include <packing>\\\\n#include <color_pars_fragment>\\\\n#include <uv_pars_fragment>\\\\n#include <uv2_pars_fragment>\\\\n#include <map_pars_fragment>\\\\n#include <alphamap_pars_fragment>\\\\n#include <aomap_pars_fragment>\\\\n#include <lightmap_pars_fragment>\\\\n#include <emissivemap_pars_fragment>\\\\n#include <envmap_pars_fragment>\\\\n#include <fog_pars_fragment>\\\\n#include <bsdfs>\\\\n#include <cube_uv_reflection_fragment>\\\\n#include <lights_pars>\\\\n#include <lights_physical_pars_fragment>\\\\n#include <shadowmap_pars_fragment>\\\\n#include <bumpmap_pars_fragment>\\\\n#include <normalmap_pars_fragment>\\\\n#include <roughnessmap_pars_fragment>\\\\n#include <metalnessmap_pars_fragment>\\\\n#include <logdepthbuf_pars_fragment>\\\\n#include <clipping_planes_pars_fragment>\\\\nvoid main() {\\\\n\\\\t#include <clipping_planes_fragment>\\\\n\\\\tvec4 diffuseColor = vec4( diffuse, opacity );\\\\n\\\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\\\n\\\\tvec3 totalEmissiveRadiance = emissive;\\\\n\\\\t#include <logdepthbuf_fragment>\\\\n\\\\t#include <map_fragment>\\\\n\\\\t#include <color_fragment>\\\\n\\\\t#include <alphamap_fragment>\\\\n\\\\t#include <alphatest_fragment>\\\\n\\\\t#include <specularmap_fragment>\\\\n\\\\t#include <roughnessmap_fragment>\\\\n\\\\t#include <metalnessmap_fragment>\\\\n\\\\t#include <normal_flip>\\\\n\\\\t#include <normal_fragment>\\\\n\\\\t#include <emissivemap_fragment>\\\\n\\\\t#include <lights_physical_fragment>\\\\n\\\\t#include <lights_template>\\\\n\\\\t#include <aomap_fragment>\\\\n\\\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\\\n\\\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\\\n\\\\t#include <premultiplied_alpha_fragment>\\\\n\\\\t#include <tonemapping_fragment>\\\\n\\\\t#include <encodings_fragment>\\\\n\\\\t#include <fog_fragment>\\\\n}\\\\n\\\";\\n\\n    var meshphysical_vert = \\\"#define PHYSICAL\\\\nvarying vec3 vViewPosition;\\\\n#ifndef FLAT_SHADED\\\\n\\\\tvarying vec3 vNormal;\\\\n#endif\\\\n#include <common>\\\\n#include <uv_pars_vertex>\\\\n#include <uv2_pars_vertex>\\\\n#include <displacementmap_pars_vertex>\\\\n#include <color_pars_vertex>\\\\n#include <morphtarget_pars_vertex>\\\\n#include <skinning_pars_vertex>\\\\n#include <shadowmap_pars_vertex>\\\\n#include <specularmap_pars_fragment>\\\\n#include <logdepthbuf_pars_vertex>\\\\n#include <clipping_planes_pars_vertex>\\\\nvoid main() {\\\\n\\\\t#include <uv_vertex>\\\\n\\\\t#include <uv2_vertex>\\\\n\\\\t#include <color_vertex>\\\\n\\\\t#include <beginnormal_vertex>\\\\n\\\\t#include <morphnormal_vertex>\\\\n\\\\t#include <skinbase_vertex>\\\\n\\\\t#include <skinnormal_vertex>\\\\n\\\\t#include <defaultnormal_vertex>\\\\n#ifndef FLAT_SHADED\\\\n\\\\tvNormal = normalize( transformedNormal );\\\\n#endif\\\\n\\\\t#include <begin_vertex>\\\\n\\\\t#include <displacementmap_vertex>\\\\n\\\\t#include <morphtarget_vertex>\\\\n\\\\t#include <skinning_vertex>\\\\n\\\\t#include <project_vertex>\\\\n\\\\t#include <logdepthbuf_vertex>\\\\n\\\\t#include <clipping_planes_vertex>\\\\n\\\\tvViewPosition = - mvPosition.xyz;\\\\n\\\\t#include <worldpos_vertex>\\\\n\\\\t#include <shadowmap_vertex>\\\\n}\\\\n\\\";\\n\\n    var normal_frag = \\\"uniform float opacity;\\\\nvarying vec3 vNormal;\\\\n#include <common>\\\\n#include <packing>\\\\n#include <logdepthbuf_pars_fragment>\\\\n#include <clipping_planes_pars_fragment>\\\\nvoid main() {\\\\n\\\\t#include <clipping_planes_fragment>\\\\n\\\\tgl_FragColor = vec4( packNormalToRGB( vNormal ), opacity );\\\\n\\\\t#include <logdepthbuf_fragment>\\\\n}\\\\n\\\";\\n\\n    var normal_vert = \\\"varying vec3 vNormal;\\\\n#include <common>\\\\n#include <morphtarget_pars_vertex>\\\\n#include <logdepthbuf_pars_vertex>\\\\n#include <clipping_planes_pars_vertex>\\\\nvoid main() {\\\\n\\\\tvNormal = normalize( normalMatrix * normal );\\\\n\\\\t#include <begin_vertex>\\\\n\\\\t#include <morphtarget_vertex>\\\\n\\\\t#include <project_vertex>\\\\n\\\\t#include <logdepthbuf_vertex>\\\\n\\\\t#include <clipping_planes_vertex>\\\\n}\\\\n\\\";\\n\\n    var points_frag = \\\"uniform vec3 diffuse;\\\\nuniform float opacity;\\\\n#include <common>\\\\n#include <packing>\\\\n#include <color_pars_fragment>\\\\n#include <map_particle_pars_fragment>\\\\n#include <fog_pars_fragment>\\\\n#include <shadowmap_pars_fragment>\\\\n#include <logdepthbuf_pars_fragment>\\\\n#include <clipping_planes_pars_fragment>\\\\nvoid main() {\\\\n\\\\t#include <clipping_planes_fragment>\\\\n\\\\tvec3 outgoingLight = vec3( 0.0 );\\\\n\\\\tvec4 diffuseColor = vec4( diffuse, opacity );\\\\n\\\\t#include <logdepthbuf_fragment>\\\\n\\\\t#include <map_particle_fragment>\\\\n\\\\t#include <color_fragment>\\\\n\\\\t#include <alphatest_fragment>\\\\n\\\\toutgoingLight = diffuseColor.rgb;\\\\n\\\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\\\n\\\\t#include <premultiplied_alpha_fragment>\\\\n\\\\t#include <tonemapping_fragment>\\\\n\\\\t#include <encodings_fragment>\\\\n\\\\t#include <fog_fragment>\\\\n}\\\\n\\\";\\n\\n    var points_vert = \\\"uniform float size;\\\\nuniform float scale;\\\\n#include <common>\\\\n#include <color_pars_vertex>\\\\n#include <shadowmap_pars_vertex>\\\\n#include <logdepthbuf_pars_vertex>\\\\n#include <clipping_planes_pars_vertex>\\\\nvoid main() {\\\\n\\\\t#include <color_vertex>\\\\n\\\\t#include <begin_vertex>\\\\n\\\\t#include <project_vertex>\\\\n\\\\t#ifdef USE_SIZEATTENUATION\\\\n\\\\t\\\\tgl_PointSize = size * ( scale / - mvPosition.z );\\\\n\\\\t#else\\\\n\\\\t\\\\tgl_PointSize = size;\\\\n\\\\t#endif\\\\n\\\\t#include <logdepthbuf_vertex>\\\\n\\\\t#include <clipping_planes_vertex>\\\\n\\\\t#include <worldpos_vertex>\\\\n\\\\t#include <shadowmap_vertex>\\\\n}\\\\n\\\";\\n\\n    var shadow_frag = \\\"uniform float opacity;\\\\n#include <common>\\\\n#include <packing>\\\\n#include <bsdfs>\\\\n#include <lights_pars>\\\\n#include <shadowmap_pars_fragment>\\\\n#include <shadowmask_pars_fragment>\\\\nvoid main() {\\\\n\\\\tgl_FragColor = vec4( 0.0, 0.0, 0.0, opacity * ( 1.0  - getShadowMask() ) );\\\\n}\\\\n\\\";\\n\\n    var shadow_vert = \\\"#include <shadowmap_pars_vertex>\\\\nvoid main() {\\\\n\\\\t#include <begin_vertex>\\\\n\\\\t#include <project_vertex>\\\\n\\\\t#include <worldpos_vertex>\\\\n\\\\t#include <shadowmap_vertex>\\\\n}\\\\n\\\";\\n\\n    var ShaderChunk = {\\n    \\talphamap_fragment: alphamap_fragment,\\n    \\talphamap_pars_fragment: alphamap_pars_fragment,\\n    \\talphatest_fragment: alphatest_fragment,\\n    \\taomap_fragment: aomap_fragment,\\n    \\taomap_pars_fragment: aomap_pars_fragment,\\n    \\tbegin_vertex: begin_vertex,\\n    \\tbeginnormal_vertex: beginnormal_vertex,\\n    \\tbsdfs: bsdfs,\\n    \\tbumpmap_pars_fragment: bumpmap_pars_fragment,\\n    \\tclipping_planes_fragment: clipping_planes_fragment,\\n    \\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\\n    \\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\\n    \\tclipping_planes_vertex: clipping_planes_vertex,\\n    \\tcolor_fragment: color_fragment,\\n    \\tcolor_pars_fragment: color_pars_fragment,\\n    \\tcolor_pars_vertex: color_pars_vertex,\\n    \\tcolor_vertex: color_vertex,\\n    \\tcommon: common,\\n    \\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\\n    \\tdefaultnormal_vertex: defaultnormal_vertex,\\n    \\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\\n    \\tdisplacementmap_vertex: displacementmap_vertex,\\n    \\temissivemap_fragment: emissivemap_fragment,\\n    \\temissivemap_pars_fragment: emissivemap_pars_fragment,\\n    \\tencodings_fragment: encodings_fragment,\\n    \\tencodings_pars_fragment: encodings_pars_fragment,\\n    \\tenvmap_fragment: envmap_fragment,\\n    \\tenvmap_pars_fragment: envmap_pars_fragment,\\n    \\tenvmap_pars_vertex: envmap_pars_vertex,\\n    \\tenvmap_vertex: envmap_vertex,\\n    \\tfog_fragment: fog_fragment,\\n    \\tfog_pars_fragment: fog_pars_fragment,\\n    \\tlightmap_fragment: lightmap_fragment,\\n    \\tlightmap_pars_fragment: lightmap_pars_fragment,\\n    \\tlights_lambert_vertex: lights_lambert_vertex,\\n    \\tlights_pars: lights_pars,\\n    \\tlights_phong_fragment: lights_phong_fragment,\\n    \\tlights_phong_pars_fragment: lights_phong_pars_fragment,\\n    \\tlights_physical_fragment: lights_physical_fragment,\\n    \\tlights_physical_pars_fragment: lights_physical_pars_fragment,\\n    \\tlights_template: lights_template,\\n    \\tlogdepthbuf_fragment: logdepthbuf_fragment,\\n    \\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\\n    \\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\\n    \\tlogdepthbuf_vertex: logdepthbuf_vertex,\\n    \\tmap_fragment: map_fragment,\\n    \\tmap_pars_fragment: map_pars_fragment,\\n    \\tmap_particle_fragment: map_particle_fragment,\\n    \\tmap_particle_pars_fragment: map_particle_pars_fragment,\\n    \\tmetalnessmap_fragment: metalnessmap_fragment,\\n    \\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\\n    \\tmorphnormal_vertex: morphnormal_vertex,\\n    \\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\\n    \\tmorphtarget_vertex: morphtarget_vertex,\\n    \\tnormal_flip: normal_flip,\\n    \\tnormal_fragment: normal_fragment,\\n    \\tnormalmap_pars_fragment: normalmap_pars_fragment,\\n    \\tpacking: packing,\\n    \\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\\n    \\tproject_vertex: project_vertex,\\n    \\troughnessmap_fragment: roughnessmap_fragment,\\n    \\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\\n    \\tshadowmap_pars_fragment: shadowmap_pars_fragment,\\n    \\tshadowmap_pars_vertex: shadowmap_pars_vertex,\\n    \\tshadowmap_vertex: shadowmap_vertex,\\n    \\tshadowmask_pars_fragment: shadowmask_pars_fragment,\\n    \\tskinbase_vertex: skinbase_vertex,\\n    \\tskinning_pars_vertex: skinning_pars_vertex,\\n    \\tskinning_vertex: skinning_vertex,\\n    \\tskinnormal_vertex: skinnormal_vertex,\\n    \\tspecularmap_fragment: specularmap_fragment,\\n    \\tspecularmap_pars_fragment: specularmap_pars_fragment,\\n    \\ttonemapping_fragment: tonemapping_fragment,\\n    \\ttonemapping_pars_fragment: tonemapping_pars_fragment,\\n    \\tuv_pars_fragment: uv_pars_fragment,\\n    \\tuv_pars_vertex: uv_pars_vertex,\\n    \\tuv_vertex: uv_vertex,\\n    \\tuv2_pars_fragment: uv2_pars_fragment,\\n    \\tuv2_pars_vertex: uv2_pars_vertex,\\n    \\tuv2_vertex: uv2_vertex,\\n    \\tworldpos_vertex: worldpos_vertex,\\n\\n    \\tcube_frag: cube_frag,\\n    \\tcube_vert: cube_vert,\\n    \\tdepth_frag: depth_frag,\\n    \\tdepth_vert: depth_vert,\\n    \\tdistanceRGBA_frag: distanceRGBA_frag,\\n    \\tdistanceRGBA_vert: distanceRGBA_vert,\\n    \\tequirect_frag: equirect_frag,\\n    \\tequirect_vert: equirect_vert,\\n    \\tlinedashed_frag: linedashed_frag,\\n    \\tlinedashed_vert: linedashed_vert,\\n    \\tmeshbasic_frag: meshbasic_frag,\\n    \\tmeshbasic_vert: meshbasic_vert,\\n    \\tmeshlambert_frag: meshlambert_frag,\\n    \\tmeshlambert_vert: meshlambert_vert,\\n    \\tmeshphong_frag: meshphong_frag,\\n    \\tmeshphong_vert: meshphong_vert,\\n    \\tmeshphysical_frag: meshphysical_frag,\\n    \\tmeshphysical_vert: meshphysical_vert,\\n    \\tnormal_frag: normal_frag,\\n    \\tnormal_vert: normal_vert,\\n    \\tpoints_frag: points_frag,\\n    \\tpoints_vert: points_vert,\\n    \\tshadow_frag: shadow_frag,\\n    \\tshadow_vert: shadow_vert\\n    };\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     */\\n\\n    function Color( r, g, b ) {\\n\\n    \\tif ( g === undefined && b === undefined ) {\\n\\n    \\t\\t// r is THREE.Color, hex or string\\n    \\t\\treturn this.set( r );\\n\\n    \\t}\\n\\n    \\treturn this.setRGB( r, g, b );\\n\\n    }\\n\\n    Color.prototype = {\\n\\n    \\tconstructor: Color,\\n\\n    \\tisColor: true,\\n\\n    \\tr: 1, g: 1, b: 1,\\n\\n    \\tset: function ( value ) {\\n\\n    \\t\\tif ( (value && value.isColor) ) {\\n\\n    \\t\\t\\tthis.copy( value );\\n\\n    \\t\\t} else if ( typeof value === 'number' ) {\\n\\n    \\t\\t\\tthis.setHex( value );\\n\\n    \\t\\t} else if ( typeof value === 'string' ) {\\n\\n    \\t\\t\\tthis.setStyle( value );\\n\\n    \\t\\t}\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsetScalar: function ( scalar ) {\\n\\n    \\t\\tthis.r = scalar;\\n    \\t\\tthis.g = scalar;\\n    \\t\\tthis.b = scalar;\\n\\n    \\t},\\n\\n    \\tsetHex: function ( hex ) {\\n\\n    \\t\\thex = Math.floor( hex );\\n\\n    \\t\\tthis.r = ( hex >> 16 & 255 ) / 255;\\n    \\t\\tthis.g = ( hex >> 8 & 255 ) / 255;\\n    \\t\\tthis.b = ( hex & 255 ) / 255;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsetRGB: function ( r, g, b ) {\\n\\n    \\t\\tthis.r = r;\\n    \\t\\tthis.g = g;\\n    \\t\\tthis.b = b;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsetHSL: function () {\\n\\n    \\t\\tfunction hue2rgb( p, q, t ) {\\n\\n    \\t\\t\\tif ( t < 0 ) t += 1;\\n    \\t\\t\\tif ( t > 1 ) t -= 1;\\n    \\t\\t\\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\\n    \\t\\t\\tif ( t < 1 / 2 ) return q;\\n    \\t\\t\\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\\n    \\t\\t\\treturn p;\\n\\n    \\t\\t}\\n\\n    \\t\\treturn function setHSL( h, s, l ) {\\n\\n    \\t\\t\\t// h,s,l ranges are in 0.0 - 1.0\\n    \\t\\t\\th = exports.Math.euclideanModulo( h, 1 );\\n    \\t\\t\\ts = exports.Math.clamp( s, 0, 1 );\\n    \\t\\t\\tl = exports.Math.clamp( l, 0, 1 );\\n\\n    \\t\\t\\tif ( s === 0 ) {\\n\\n    \\t\\t\\t\\tthis.r = this.g = this.b = l;\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\\n    \\t\\t\\t\\tvar q = ( 2 * l ) - p;\\n\\n    \\t\\t\\t\\tthis.r = hue2rgb( q, p, h + 1 / 3 );\\n    \\t\\t\\t\\tthis.g = hue2rgb( q, p, h );\\n    \\t\\t\\t\\tthis.b = hue2rgb( q, p, h - 1 / 3 );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\treturn this;\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\tsetStyle: function ( style ) {\\n\\n    \\t\\tfunction handleAlpha( string ) {\\n\\n    \\t\\t\\tif ( string === undefined ) return;\\n\\n    \\t\\t\\tif ( parseFloat( string ) < 1 ) {\\n\\n    \\t\\t\\t\\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n\\n    \\t\\tvar m;\\n\\n    \\t\\tif ( m = /^((?:rgb|hsl)a?)\\\\(\\\\s*([^\\\\)]*)\\\\)/.exec( style ) ) {\\n\\n    \\t\\t\\t// rgb / hsl\\n\\n    \\t\\t\\tvar color;\\n    \\t\\t\\tvar name = m[ 1 ];\\n    \\t\\t\\tvar components = m[ 2 ];\\n\\n    \\t\\t\\tswitch ( name ) {\\n\\n    \\t\\t\\t\\tcase 'rgb':\\n    \\t\\t\\t\\tcase 'rgba':\\n\\n    \\t\\t\\t\\t\\tif ( color = /^(\\\\d+)\\\\s*,\\\\s*(\\\\d+)\\\\s*,\\\\s*(\\\\d+)\\\\s*(,\\\\s*([0-9]*\\\\.?[0-9]+)\\\\s*)?$/.exec( components ) ) {\\n\\n    \\t\\t\\t\\t\\t\\t// rgb(255,0,0) rgba(255,0,0,0.5)\\n    \\t\\t\\t\\t\\t\\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\\n    \\t\\t\\t\\t\\t\\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\\n    \\t\\t\\t\\t\\t\\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\\n\\n    \\t\\t\\t\\t\\t\\thandleAlpha( color[ 5 ] );\\n\\n    \\t\\t\\t\\t\\t\\treturn this;\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\tif ( color = /^(\\\\d+)\\\\%\\\\s*,\\\\s*(\\\\d+)\\\\%\\\\s*,\\\\s*(\\\\d+)\\\\%\\\\s*(,\\\\s*([0-9]*\\\\.?[0-9]+)\\\\s*)?$/.exec( components ) ) {\\n\\n    \\t\\t\\t\\t\\t\\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\\n    \\t\\t\\t\\t\\t\\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\\n    \\t\\t\\t\\t\\t\\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\\n    \\t\\t\\t\\t\\t\\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\\n\\n    \\t\\t\\t\\t\\t\\thandleAlpha( color[ 5 ] );\\n\\n    \\t\\t\\t\\t\\t\\treturn this;\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\tcase 'hsl':\\n    \\t\\t\\t\\tcase 'hsla':\\n\\n    \\t\\t\\t\\t\\tif ( color = /^([0-9]*\\\\.?[0-9]+)\\\\s*,\\\\s*(\\\\d+)\\\\%\\\\s*,\\\\s*(\\\\d+)\\\\%\\\\s*(,\\\\s*([0-9]*\\\\.?[0-9]+)\\\\s*)?$/.exec( components ) ) {\\n\\n    \\t\\t\\t\\t\\t\\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\\n    \\t\\t\\t\\t\\t\\tvar h = parseFloat( color[ 1 ] ) / 360;\\n    \\t\\t\\t\\t\\t\\tvar s = parseInt( color[ 2 ], 10 ) / 100;\\n    \\t\\t\\t\\t\\t\\tvar l = parseInt( color[ 3 ], 10 ) / 100;\\n\\n    \\t\\t\\t\\t\\t\\thandleAlpha( color[ 5 ] );\\n\\n    \\t\\t\\t\\t\\t\\treturn this.setHSL( h, s, l );\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t} else if ( m = /^\\\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\\n\\n    \\t\\t\\t// hex color\\n\\n    \\t\\t\\tvar hex = m[ 1 ];\\n    \\t\\t\\tvar size = hex.length;\\n\\n    \\t\\t\\tif ( size === 3 ) {\\n\\n    \\t\\t\\t\\t// #ff0\\n    \\t\\t\\t\\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\\n    \\t\\t\\t\\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\\n    \\t\\t\\t\\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\\n\\n    \\t\\t\\t\\treturn this;\\n\\n    \\t\\t\\t} else if ( size === 6 ) {\\n\\n    \\t\\t\\t\\t// #ff0000\\n    \\t\\t\\t\\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\\n    \\t\\t\\t\\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\\n    \\t\\t\\t\\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\\n\\n    \\t\\t\\t\\treturn this;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( style && style.length > 0 ) {\\n\\n    \\t\\t\\t// color keywords\\n    \\t\\t\\tvar hex = exports.ColorKeywords[ style ];\\n\\n    \\t\\t\\tif ( hex !== undefined ) {\\n\\n    \\t\\t\\t\\t// red\\n    \\t\\t\\t\\tthis.setHex( hex );\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t// unknown color\\n    \\t\\t\\t\\tconsole.warn( 'THREE.Color: Unknown color ' + style );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tclone: function () {\\n\\n    \\t\\treturn new this.constructor( this.r, this.g, this.b );\\n\\n    \\t},\\n\\n    \\tcopy: function ( color ) {\\n\\n    \\t\\tthis.r = color.r;\\n    \\t\\tthis.g = color.g;\\n    \\t\\tthis.b = color.b;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tcopyGammaToLinear: function ( color, gammaFactor ) {\\n\\n    \\t\\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\\n\\n    \\t\\tthis.r = Math.pow( color.r, gammaFactor );\\n    \\t\\tthis.g = Math.pow( color.g, gammaFactor );\\n    \\t\\tthis.b = Math.pow( color.b, gammaFactor );\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tcopyLinearToGamma: function ( color, gammaFactor ) {\\n\\n    \\t\\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\\n\\n    \\t\\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\\n\\n    \\t\\tthis.r = Math.pow( color.r, safeInverse );\\n    \\t\\tthis.g = Math.pow( color.g, safeInverse );\\n    \\t\\tthis.b = Math.pow( color.b, safeInverse );\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tconvertGammaToLinear: function () {\\n\\n    \\t\\tvar r = this.r, g = this.g, b = this.b;\\n\\n    \\t\\tthis.r = r * r;\\n    \\t\\tthis.g = g * g;\\n    \\t\\tthis.b = b * b;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tconvertLinearToGamma: function () {\\n\\n    \\t\\tthis.r = Math.sqrt( this.r );\\n    \\t\\tthis.g = Math.sqrt( this.g );\\n    \\t\\tthis.b = Math.sqrt( this.b );\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tgetHex: function () {\\n\\n    \\t\\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\\n\\n    \\t},\\n\\n    \\tgetHexString: function () {\\n\\n    \\t\\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\\n\\n    \\t},\\n\\n    \\tgetHSL: function ( optionalTarget ) {\\n\\n    \\t\\t// h,s,l ranges are in 0.0 - 1.0\\n\\n    \\t\\tvar hsl = optionalTarget || { h: 0, s: 0, l: 0 };\\n\\n    \\t\\tvar r = this.r, g = this.g, b = this.b;\\n\\n    \\t\\tvar max = Math.max( r, g, b );\\n    \\t\\tvar min = Math.min( r, g, b );\\n\\n    \\t\\tvar hue, saturation;\\n    \\t\\tvar lightness = ( min + max ) / 2.0;\\n\\n    \\t\\tif ( min === max ) {\\n\\n    \\t\\t\\thue = 0;\\n    \\t\\t\\tsaturation = 0;\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\tvar delta = max - min;\\n\\n    \\t\\t\\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\\n\\n    \\t\\t\\tswitch ( max ) {\\n\\n    \\t\\t\\t\\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\\n    \\t\\t\\t\\tcase g: hue = ( b - r ) / delta + 2; break;\\n    \\t\\t\\t\\tcase b: hue = ( r - g ) / delta + 4; break;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\thue /= 6;\\n\\n    \\t\\t}\\n\\n    \\t\\thsl.h = hue;\\n    \\t\\thsl.s = saturation;\\n    \\t\\thsl.l = lightness;\\n\\n    \\t\\treturn hsl;\\n\\n    \\t},\\n\\n    \\tgetStyle: function () {\\n\\n    \\t\\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\\n\\n    \\t},\\n\\n    \\toffsetHSL: function ( h, s, l ) {\\n\\n    \\t\\tvar hsl = this.getHSL();\\n\\n    \\t\\thsl.h += h; hsl.s += s; hsl.l += l;\\n\\n    \\t\\tthis.setHSL( hsl.h, hsl.s, hsl.l );\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tadd: function ( color ) {\\n\\n    \\t\\tthis.r += color.r;\\n    \\t\\tthis.g += color.g;\\n    \\t\\tthis.b += color.b;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\taddColors: function ( color1, color2 ) {\\n\\n    \\t\\tthis.r = color1.r + color2.r;\\n    \\t\\tthis.g = color1.g + color2.g;\\n    \\t\\tthis.b = color1.b + color2.b;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\taddScalar: function ( s ) {\\n\\n    \\t\\tthis.r += s;\\n    \\t\\tthis.g += s;\\n    \\t\\tthis.b += s;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsub: function( color ) {\\n\\n    \\t\\tthis.r = Math.max( 0, this.r - color.r );\\n    \\t\\tthis.g = Math.max( 0, this.g - color.g );\\n    \\t\\tthis.b = Math.max( 0, this.b - color.b );\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tmultiply: function ( color ) {\\n\\n    \\t\\tthis.r *= color.r;\\n    \\t\\tthis.g *= color.g;\\n    \\t\\tthis.b *= color.b;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tmultiplyScalar: function ( s ) {\\n\\n    \\t\\tthis.r *= s;\\n    \\t\\tthis.g *= s;\\n    \\t\\tthis.b *= s;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tlerp: function ( color, alpha ) {\\n\\n    \\t\\tthis.r += ( color.r - this.r ) * alpha;\\n    \\t\\tthis.g += ( color.g - this.g ) * alpha;\\n    \\t\\tthis.b += ( color.b - this.b ) * alpha;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tequals: function ( c ) {\\n\\n    \\t\\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\\n\\n    \\t},\\n\\n    \\tfromArray: function ( array, offset ) {\\n\\n    \\t\\tif ( offset === undefined ) offset = 0;\\n\\n    \\t\\tthis.r = array[ offset ];\\n    \\t\\tthis.g = array[ offset + 1 ];\\n    \\t\\tthis.b = array[ offset + 2 ];\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\ttoArray: function ( array, offset ) {\\n\\n    \\t\\tif ( array === undefined ) array = [];\\n    \\t\\tif ( offset === undefined ) offset = 0;\\n\\n    \\t\\tarray[ offset ] = this.r;\\n    \\t\\tarray[ offset + 1 ] = this.g;\\n    \\t\\tarray[ offset + 2 ] = this.b;\\n\\n    \\t\\treturn array;\\n\\n    \\t},\\n\\n    \\ttoJSON: function () {\\n\\n    \\t\\treturn this.getHex();\\n\\n    \\t}\\n\\n    };\\n\\n    exports.ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\\n    'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\\n    'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\\n    'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\\n    'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\\n    'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\\n    'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\\n    'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\\n    'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\\n    'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\\n    'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\\n    'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\\n    'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\\n    'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\\n    'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\\n    'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\\n    'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\\n    'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\\n    'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\\n    'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\\n    'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\\n    'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\\n    'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\\n    'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\\n\\n    /**\\n     * Uniforms library for shared webgl shaders\\n     */\\n\\n    var UniformsLib = {\\n\\n    \\tcommon: {\\n\\n    \\t\\tdiffuse: { value: new Color( 0xeeeeee ) },\\n    \\t\\topacity: { value: 1.0 },\\n\\n    \\t\\tmap: { value: null },\\n    \\t\\toffsetRepeat: { value: new Vector4( 0, 0, 1, 1 ) },\\n\\n    \\t\\tspecularMap: { value: null },\\n    \\t\\talphaMap: { value: null },\\n\\n    \\t\\tenvMap: { value: null },\\n    \\t\\tflipEnvMap: { value: - 1 },\\n    \\t\\treflectivity: { value: 1.0 },\\n    \\t\\trefractionRatio: { value: 0.98 }\\n\\n    \\t},\\n\\n    \\taomap: {\\n\\n    \\t\\taoMap: { value: null },\\n    \\t\\taoMapIntensity: { value: 1 }\\n\\n    \\t},\\n\\n    \\tlightmap: {\\n\\n    \\t\\tlightMap: { value: null },\\n    \\t\\tlightMapIntensity: { value: 1 }\\n\\n    \\t},\\n\\n    \\temissivemap: {\\n\\n    \\t\\temissiveMap: { value: null }\\n\\n    \\t},\\n\\n    \\tbumpmap: {\\n\\n    \\t\\tbumpMap: { value: null },\\n    \\t\\tbumpScale: { value: 1 }\\n\\n    \\t},\\n\\n    \\tnormalmap: {\\n\\n    \\t\\tnormalMap: { value: null },\\n    \\t\\tnormalScale: { value: new Vector2( 1, 1 ) }\\n\\n    \\t},\\n\\n    \\tdisplacementmap: {\\n\\n    \\t\\tdisplacementMap: { value: null },\\n    \\t\\tdisplacementScale: { value: 1 },\\n    \\t\\tdisplacementBias: { value: 0 }\\n\\n    \\t},\\n\\n    \\troughnessmap: {\\n\\n    \\t\\troughnessMap: { value: null }\\n\\n    \\t},\\n\\n    \\tmetalnessmap: {\\n\\n    \\t\\tmetalnessMap: { value: null }\\n\\n    \\t},\\n\\n    \\tfog: {\\n\\n    \\t\\tfogDensity: { value: 0.00025 },\\n    \\t\\tfogNear: { value: 1 },\\n    \\t\\tfogFar: { value: 2000 },\\n    \\t\\tfogColor: { value: new Color( 0xffffff ) }\\n\\n    \\t},\\n\\n    \\tlights: {\\n\\n    \\t\\tambientLightColor: { value: [] },\\n\\n    \\t\\tdirectionalLights: { value: [], properties: {\\n    \\t\\t\\tdirection: {},\\n    \\t\\t\\tcolor: {},\\n\\n    \\t\\t\\tshadow: {},\\n    \\t\\t\\tshadowBias: {},\\n    \\t\\t\\tshadowRadius: {},\\n    \\t\\t\\tshadowMapSize: {}\\n    \\t\\t} },\\n\\n    \\t\\tdirectionalShadowMap: { value: [] },\\n    \\t\\tdirectionalShadowMatrix: { value: [] },\\n\\n    \\t\\tspotLights: { value: [], properties: {\\n    \\t\\t\\tcolor: {},\\n    \\t\\t\\tposition: {},\\n    \\t\\t\\tdirection: {},\\n    \\t\\t\\tdistance: {},\\n    \\t\\t\\tconeCos: {},\\n    \\t\\t\\tpenumbraCos: {},\\n    \\t\\t\\tdecay: {},\\n\\n    \\t\\t\\tshadow: {},\\n    \\t\\t\\tshadowBias: {},\\n    \\t\\t\\tshadowRadius: {},\\n    \\t\\t\\tshadowMapSize: {}\\n    \\t\\t} },\\n\\n    \\t\\tspotShadowMap: { value: [] },\\n    \\t\\tspotShadowMatrix: { value: [] },\\n\\n    \\t\\tpointLights: { value: [], properties: {\\n    \\t\\t\\tcolor: {},\\n    \\t\\t\\tposition: {},\\n    \\t\\t\\tdecay: {},\\n    \\t\\t\\tdistance: {},\\n\\n    \\t\\t\\tshadow: {},\\n    \\t\\t\\tshadowBias: {},\\n    \\t\\t\\tshadowRadius: {},\\n    \\t\\t\\tshadowMapSize: {}\\n    \\t\\t} },\\n\\n    \\t\\tpointShadowMap: { value: [] },\\n    \\t\\tpointShadowMatrix: { value: [] },\\n\\n    \\t\\themisphereLights: { value: [], properties: {\\n    \\t\\t\\tdirection: {},\\n    \\t\\t\\tskyColor: {},\\n    \\t\\t\\tgroundColor: {}\\n    \\t\\t} }\\n\\n    \\t},\\n\\n    \\tpoints: {\\n\\n    \\t\\tdiffuse: { value: new Color( 0xeeeeee ) },\\n    \\t\\topacity: { value: 1.0 },\\n    \\t\\tsize: { value: 1.0 },\\n    \\t\\tscale: { value: 1.0 },\\n    \\t\\tmap: { value: null },\\n    \\t\\toffsetRepeat: { value: new Vector4( 0, 0, 1, 1 ) }\\n\\n    \\t}\\n\\n    };\\n\\n    /**\\n     * @author alteredq / http://alteredqualia.com/\\n     * @author mrdoob / http://mrdoob.com/\\n     * @author mikael emtinger / http://gomo.se/\\n     */\\n\\n    var ShaderLib = {\\n\\n    \\tbasic: {\\n\\n    \\t\\tuniforms: exports.UniformsUtils.merge( [\\n\\n    \\t\\t\\tUniformsLib.common,\\n    \\t\\t\\tUniformsLib.aomap,\\n    \\t\\t\\tUniformsLib.fog\\n\\n    \\t\\t] ),\\n\\n    \\t\\tvertexShader: ShaderChunk.meshbasic_vert,\\n    \\t\\tfragmentShader: ShaderChunk.meshbasic_frag\\n\\n    \\t},\\n\\n    \\tlambert: {\\n\\n    \\t\\tuniforms: exports.UniformsUtils.merge( [\\n\\n    \\t\\t\\tUniformsLib.common,\\n    \\t\\t\\tUniformsLib.aomap,\\n    \\t\\t\\tUniformsLib.lightmap,\\n    \\t\\t\\tUniformsLib.emissivemap,\\n    \\t\\t\\tUniformsLib.fog,\\n    \\t\\t\\tUniformsLib.lights,\\n\\n    \\t\\t\\t{\\n    \\t\\t\\t\\temissive : { value: new Color( 0x000000 ) }\\n    \\t\\t\\t}\\n\\n    \\t\\t] ),\\n\\n    \\t\\tvertexShader: ShaderChunk.meshlambert_vert,\\n    \\t\\tfragmentShader: ShaderChunk.meshlambert_frag\\n\\n    \\t},\\n\\n    \\tphong: {\\n\\n    \\t\\tuniforms: exports.UniformsUtils.merge( [\\n\\n    \\t\\t\\tUniformsLib.common,\\n    \\t\\t\\tUniformsLib.aomap,\\n    \\t\\t\\tUniformsLib.lightmap,\\n    \\t\\t\\tUniformsLib.emissivemap,\\n    \\t\\t\\tUniformsLib.bumpmap,\\n    \\t\\t\\tUniformsLib.normalmap,\\n    \\t\\t\\tUniformsLib.displacementmap,\\n    \\t\\t\\tUniformsLib.fog,\\n    \\t\\t\\tUniformsLib.lights,\\n\\n    \\t\\t\\t{\\n    \\t\\t\\t\\temissive : { value: new Color( 0x000000 ) },\\n    \\t\\t\\t\\tspecular : { value: new Color( 0x111111 ) },\\n    \\t\\t\\t\\tshininess: { value: 30 }\\n    \\t\\t\\t}\\n\\n    \\t\\t] ),\\n\\n    \\t\\tvertexShader: ShaderChunk.meshphong_vert,\\n    \\t\\tfragmentShader: ShaderChunk.meshphong_frag\\n\\n    \\t},\\n\\n    \\tstandard: {\\n\\n    \\t\\tuniforms: exports.UniformsUtils.merge( [\\n\\n    \\t\\t\\tUniformsLib.common,\\n    \\t\\t\\tUniformsLib.aomap,\\n    \\t\\t\\tUniformsLib.lightmap,\\n    \\t\\t\\tUniformsLib.emissivemap,\\n    \\t\\t\\tUniformsLib.bumpmap,\\n    \\t\\t\\tUniformsLib.normalmap,\\n    \\t\\t\\tUniformsLib.displacementmap,\\n    \\t\\t\\tUniformsLib.roughnessmap,\\n    \\t\\t\\tUniformsLib.metalnessmap,\\n    \\t\\t\\tUniformsLib.fog,\\n    \\t\\t\\tUniformsLib.lights,\\n\\n    \\t\\t\\t{\\n    \\t\\t\\t\\temissive : { value: new Color( 0x000000 ) },\\n    \\t\\t\\t\\troughness: { value: 0.5 },\\n    \\t\\t\\t\\tmetalness: { value: 0 },\\n    \\t\\t\\t\\tenvMapIntensity : { value: 1 }, // temporary\\n    \\t\\t\\t}\\n\\n    \\t\\t] ),\\n\\n    \\t\\tvertexShader: ShaderChunk.meshphysical_vert,\\n    \\t\\tfragmentShader: ShaderChunk.meshphysical_frag\\n\\n    \\t},\\n\\n    \\tpoints: {\\n\\n    \\t\\tuniforms: exports.UniformsUtils.merge( [\\n\\n    \\t\\t\\tUniformsLib.points,\\n    \\t\\t\\tUniformsLib.fog\\n\\n    \\t\\t] ),\\n\\n    \\t\\tvertexShader: ShaderChunk.points_vert,\\n    \\t\\tfragmentShader: ShaderChunk.points_frag\\n\\n    \\t},\\n\\n    \\tdashed: {\\n\\n    \\t\\tuniforms: exports.UniformsUtils.merge( [\\n\\n    \\t\\t\\tUniformsLib.common,\\n    \\t\\t\\tUniformsLib.fog,\\n\\n    \\t\\t\\t{\\n    \\t\\t\\t\\tscale    : { value: 1 },\\n    \\t\\t\\t\\tdashSize : { value: 1 },\\n    \\t\\t\\t\\ttotalSize: { value: 2 }\\n    \\t\\t\\t}\\n\\n    \\t\\t] ),\\n\\n    \\t\\tvertexShader: ShaderChunk.linedashed_vert,\\n    \\t\\tfragmentShader: ShaderChunk.linedashed_frag\\n\\n    \\t},\\n\\n    \\tdepth: {\\n\\n    \\t\\tuniforms: exports.UniformsUtils.merge( [\\n\\n    \\t\\t\\tUniformsLib.common,\\n    \\t\\t\\tUniformsLib.displacementmap\\n\\n    \\t\\t] ),\\n\\n    \\t\\tvertexShader: ShaderChunk.depth_vert,\\n    \\t\\tfragmentShader: ShaderChunk.depth_frag\\n\\n    \\t},\\n\\n    \\tnormal: {\\n\\n    \\t\\tuniforms: {\\n\\n    \\t\\t\\topacity : { value: 1.0 }\\n\\n    \\t\\t},\\n\\n    \\t\\tvertexShader: ShaderChunk.normal_vert,\\n    \\t\\tfragmentShader: ShaderChunk.normal_frag\\n\\n    \\t},\\n\\n    \\t/* -------------------------------------------------------------------------\\n    \\t//\\tCube map shader\\n    \\t ------------------------------------------------------------------------- */\\n\\n    \\tcube: {\\n\\n    \\t\\tuniforms: {\\n    \\t\\t\\ttCube: { value: null },\\n    \\t\\t\\ttFlip: { value: - 1 },\\n    \\t\\t\\topacity: { value: 1.0 }\\n    \\t\\t},\\n\\n    \\t\\tvertexShader: ShaderChunk.cube_vert,\\n    \\t\\tfragmentShader: ShaderChunk.cube_frag\\n\\n    \\t},\\n\\n    \\t/* -------------------------------------------------------------------------\\n    \\t//\\tCube map shader\\n    \\t ------------------------------------------------------------------------- */\\n\\n    \\tequirect: {\\n\\n    \\t\\tuniforms: {\\n    \\t\\t\\ttEquirect: { value: null },\\n    \\t\\t\\ttFlip: { value: - 1 }\\n    \\t\\t},\\n\\n    \\t\\tvertexShader: ShaderChunk.equirect_vert,\\n    \\t\\tfragmentShader: ShaderChunk.equirect_frag\\n\\n    \\t},\\n\\n    \\tdistanceRGBA: {\\n\\n    \\t\\tuniforms: {\\n\\n    \\t\\t\\tlightPos: { value: new Vector3() }\\n\\n    \\t\\t},\\n\\n    \\t\\tvertexShader: ShaderChunk.distanceRGBA_vert,\\n    \\t\\tfragmentShader: ShaderChunk.distanceRGBA_frag\\n\\n    \\t}\\n\\n    };\\n\\n    ShaderLib.physical = {\\n\\n    \\tuniforms: exports.UniformsUtils.merge( [\\n\\n    \\t\\tShaderLib.standard.uniforms,\\n\\n    \\t\\t{\\n    \\t\\t\\tclearCoat: { value: 0 },\\n    \\t\\t\\tclearCoatRoughness: { value: 0 }\\n    \\t\\t}\\n\\n    \\t] ),\\n\\n    \\tvertexShader: ShaderChunk.meshphysical_vert,\\n    \\tfragmentShader: ShaderChunk.meshphysical_frag\\n\\n    };\\n\\n    /**\\n     * @author bhouston / http://clara.io\\n     */\\n\\n    function Box2( min, max ) {\\n\\n    \\tthis.min = ( min !== undefined ) ? min : new Vector2( + Infinity, + Infinity );\\n    \\tthis.max = ( max !== undefined ) ? max : new Vector2( - Infinity, - Infinity );\\n\\n    }\\n\\n    Box2.prototype = {\\n\\n    \\tconstructor: Box2,\\n\\n    \\tset: function ( min, max ) {\\n\\n    \\t\\tthis.min.copy( min );\\n    \\t\\tthis.max.copy( max );\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsetFromPoints: function ( points ) {\\n\\n    \\t\\tthis.makeEmpty();\\n\\n    \\t\\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\\n\\n    \\t\\t\\tthis.expandByPoint( points[ i ] );\\n\\n    \\t\\t}\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsetFromCenterAndSize: function () {\\n\\n    \\t\\tvar v1 = new Vector2();\\n\\n    \\t\\treturn function setFromCenterAndSize( center, size ) {\\n\\n    \\t\\t\\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\\n    \\t\\t\\tthis.min.copy( center ).sub( halfSize );\\n    \\t\\t\\tthis.max.copy( center ).add( halfSize );\\n\\n    \\t\\t\\treturn this;\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\tclone: function () {\\n\\n    \\t\\treturn new this.constructor().copy( this );\\n\\n    \\t},\\n\\n    \\tcopy: function ( box ) {\\n\\n    \\t\\tthis.min.copy( box.min );\\n    \\t\\tthis.max.copy( box.max );\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tmakeEmpty: function () {\\n\\n    \\t\\tthis.min.x = this.min.y = + Infinity;\\n    \\t\\tthis.max.x = this.max.y = - Infinity;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tisEmpty: function () {\\n\\n    \\t\\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\\n\\n    \\t\\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\\n\\n    \\t},\\n\\n    \\tgetCenter: function ( optionalTarget ) {\\n\\n    \\t\\tvar result = optionalTarget || new Vector2();\\n    \\t\\treturn this.isEmpty() ? result.set( 0, 0 ) : result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\\n\\n    \\t},\\n\\n    \\tgetSize: function ( optionalTarget ) {\\n\\n    \\t\\tvar result = optionalTarget || new Vector2();\\n    \\t\\treturn this.isEmpty() ? result.set( 0, 0 ) : result.subVectors( this.max, this.min );\\n\\n    \\t},\\n\\n    \\texpandByPoint: function ( point ) {\\n\\n    \\t\\tthis.min.min( point );\\n    \\t\\tthis.max.max( point );\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\texpandByVector: function ( vector ) {\\n\\n    \\t\\tthis.min.sub( vector );\\n    \\t\\tthis.max.add( vector );\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\texpandByScalar: function ( scalar ) {\\n\\n    \\t\\tthis.min.addScalar( - scalar );\\n    \\t\\tthis.max.addScalar( scalar );\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tcontainsPoint: function ( point ) {\\n\\n    \\t\\tif ( point.x < this.min.x || point.x > this.max.x ||\\n    \\t\\t     point.y < this.min.y || point.y > this.max.y ) {\\n\\n    \\t\\t\\treturn false;\\n\\n    \\t\\t}\\n\\n    \\t\\treturn true;\\n\\n    \\t},\\n\\n    \\tcontainsBox: function ( box ) {\\n\\n    \\t\\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\\n    \\t\\t     ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) ) {\\n\\n    \\t\\t\\treturn true;\\n\\n    \\t\\t}\\n\\n    \\t\\treturn false;\\n\\n    \\t},\\n\\n    \\tgetParameter: function ( point, optionalTarget ) {\\n\\n    \\t\\t// This can potentially have a divide by zero if the box\\n    \\t\\t// has a size dimension of 0.\\n\\n    \\t\\tvar result = optionalTarget || new Vector2();\\n\\n    \\t\\treturn result.set(\\n    \\t\\t\\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\\n    \\t\\t\\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\\n    \\t\\t);\\n\\n    \\t},\\n\\n    \\tintersectsBox: function ( box ) {\\n\\n    \\t\\t// using 6 splitting planes to rule out intersections.\\n\\n    \\t\\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\\n    \\t\\t     box.max.y < this.min.y || box.min.y > this.max.y ) {\\n\\n    \\t\\t\\treturn false;\\n\\n    \\t\\t}\\n\\n    \\t\\treturn true;\\n\\n    \\t},\\n\\n    \\tclampPoint: function ( point, optionalTarget ) {\\n\\n    \\t\\tvar result = optionalTarget || new Vector2();\\n    \\t\\treturn result.copy( point ).clamp( this.min, this.max );\\n\\n    \\t},\\n\\n    \\tdistanceToPoint: function () {\\n\\n    \\t\\tvar v1 = new Vector2();\\n\\n    \\t\\treturn function distanceToPoint( point ) {\\n\\n    \\t\\t\\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\\n    \\t\\t\\treturn clampedPoint.sub( point ).length();\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\tintersect: function ( box ) {\\n\\n    \\t\\tthis.min.max( box.min );\\n    \\t\\tthis.max.min( box.max );\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tunion: function ( box ) {\\n\\n    \\t\\tthis.min.min( box.min );\\n    \\t\\tthis.max.max( box.max );\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\ttranslate: function ( offset ) {\\n\\n    \\t\\tthis.min.add( offset );\\n    \\t\\tthis.max.add( offset );\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tequals: function ( box ) {\\n\\n    \\t\\treturn box.min.equals( this.min ) && box.max.equals( this.max );\\n\\n    \\t}\\n\\n    };\\n\\n    /**\\n     * @author mikael emtinger / http://gomo.se/\\n     * @author alteredq / http://alteredqualia.com/\\n     */\\n\\n    function LensFlarePlugin( renderer, flares ) {\\n\\n    \\tvar gl = renderer.context;\\n    \\tvar state = renderer.state;\\n\\n    \\tvar vertexBuffer, elementBuffer;\\n    \\tvar shader, program, attributes, uniforms;\\n\\n    \\tvar tempTexture, occlusionTexture;\\n\\n    \\tfunction init() {\\n\\n    \\t\\tvar vertices = new Float32Array( [\\n    \\t\\t\\t- 1, - 1,  0, 0,\\n    \\t\\t\\t 1, - 1,  1, 0,\\n    \\t\\t\\t 1,  1,  1, 1,\\n    \\t\\t\\t- 1,  1,  0, 1\\n    \\t\\t] );\\n\\n    \\t\\tvar faces = new Uint16Array( [\\n    \\t\\t\\t0, 1, 2,\\n    \\t\\t\\t0, 2, 3\\n    \\t\\t] );\\n\\n    \\t\\t// buffers\\n\\n    \\t\\tvertexBuffer     = gl.createBuffer();\\n    \\t\\telementBuffer    = gl.createBuffer();\\n\\n    \\t\\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\\n    \\t\\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\\n\\n    \\t\\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\\n    \\t\\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\\n\\n    \\t\\t// textures\\n\\n    \\t\\ttempTexture      = gl.createTexture();\\n    \\t\\tocclusionTexture = gl.createTexture();\\n\\n    \\t\\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\\n    \\t\\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGB, 16, 16, 0, gl.RGB, gl.UNSIGNED_BYTE, null );\\n    \\t\\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\\n    \\t\\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\\n    \\t\\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\\n    \\t\\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\\n\\n    \\t\\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\\n    \\t\\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGBA, 16, 16, 0, gl.RGBA, gl.UNSIGNED_BYTE, null );\\n    \\t\\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\\n    \\t\\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\\n    \\t\\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\\n    \\t\\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\\n\\n    \\t\\tshader = {\\n\\n    \\t\\t\\tvertexShader: [\\n\\n    \\t\\t\\t\\t\\\"uniform lowp int renderType;\\\",\\n\\n    \\t\\t\\t\\t\\\"uniform vec3 screenPosition;\\\",\\n    \\t\\t\\t\\t\\\"uniform vec2 scale;\\\",\\n    \\t\\t\\t\\t\\\"uniform float rotation;\\\",\\n\\n    \\t\\t\\t\\t\\\"uniform sampler2D occlusionMap;\\\",\\n\\n    \\t\\t\\t\\t\\\"attribute vec2 position;\\\",\\n    \\t\\t\\t\\t\\\"attribute vec2 uv;\\\",\\n\\n    \\t\\t\\t\\t\\\"varying vec2 vUV;\\\",\\n    \\t\\t\\t\\t\\\"varying float vVisibility;\\\",\\n\\n    \\t\\t\\t\\t\\\"void main() {\\\",\\n\\n    \\t\\t\\t\\t\\t\\\"vUV = uv;\\\",\\n\\n    \\t\\t\\t\\t\\t\\\"vec2 pos = position;\\\",\\n\\n    \\t\\t\\t\\t\\t\\\"if ( renderType == 2 ) {\\\",\\n\\n    \\t\\t\\t\\t\\t\\t\\\"vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\\\",\\n    \\t\\t\\t\\t\\t\\t\\\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\\\",\\n    \\t\\t\\t\\t\\t\\t\\\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\\\",\\n    \\t\\t\\t\\t\\t\\t\\\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\\\",\\n    \\t\\t\\t\\t\\t\\t\\\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\\\",\\n    \\t\\t\\t\\t\\t\\t\\\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\\\",\\n    \\t\\t\\t\\t\\t\\t\\\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\\\",\\n    \\t\\t\\t\\t\\t\\t\\\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\\\",\\n    \\t\\t\\t\\t\\t\\t\\\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\\\",\\n\\n    \\t\\t\\t\\t\\t\\t\\\"vVisibility =        visibility.r / 9.0;\\\",\\n    \\t\\t\\t\\t\\t\\t\\\"vVisibility *= 1.0 - visibility.g / 9.0;\\\",\\n    \\t\\t\\t\\t\\t\\t\\\"vVisibility *=       visibility.b / 9.0;\\\",\\n    \\t\\t\\t\\t\\t\\t\\\"vVisibility *= 1.0 - visibility.a / 9.0;\\\",\\n\\n    \\t\\t\\t\\t\\t\\t\\\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\\\",\\n    \\t\\t\\t\\t\\t\\t\\\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\\\",\\n\\n    \\t\\t\\t\\t\\t\\\"}\\\",\\n\\n    \\t\\t\\t\\t\\t\\\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\\\",\\n\\n    \\t\\t\\t\\t\\\"}\\\"\\n\\n    \\t\\t\\t].join( \\\"\\\\n\\\" ),\\n\\n    \\t\\t\\tfragmentShader: [\\n\\n    \\t\\t\\t\\t\\\"uniform lowp int renderType;\\\",\\n\\n    \\t\\t\\t\\t\\\"uniform sampler2D map;\\\",\\n    \\t\\t\\t\\t\\\"uniform float opacity;\\\",\\n    \\t\\t\\t\\t\\\"uniform vec3 color;\\\",\\n\\n    \\t\\t\\t\\t\\\"varying vec2 vUV;\\\",\\n    \\t\\t\\t\\t\\\"varying float vVisibility;\\\",\\n\\n    \\t\\t\\t\\t\\\"void main() {\\\",\\n\\n    \\t\\t\\t\\t\\t// pink square\\n\\n    \\t\\t\\t\\t\\t\\\"if ( renderType == 0 ) {\\\",\\n\\n    \\t\\t\\t\\t\\t\\t\\\"gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\\\",\\n\\n    \\t\\t\\t\\t\\t// restore\\n\\n    \\t\\t\\t\\t\\t\\\"} else if ( renderType == 1 ) {\\\",\\n\\n    \\t\\t\\t\\t\\t\\t\\\"gl_FragColor = texture2D( map, vUV );\\\",\\n\\n    \\t\\t\\t\\t\\t// flare\\n\\n    \\t\\t\\t\\t\\t\\\"} else {\\\",\\n\\n    \\t\\t\\t\\t\\t\\t\\\"vec4 texture = texture2D( map, vUV );\\\",\\n    \\t\\t\\t\\t\\t\\t\\\"texture.a *= opacity * vVisibility;\\\",\\n    \\t\\t\\t\\t\\t\\t\\\"gl_FragColor = texture;\\\",\\n    \\t\\t\\t\\t\\t\\t\\\"gl_FragColor.rgb *= color;\\\",\\n\\n    \\t\\t\\t\\t\\t\\\"}\\\",\\n\\n    \\t\\t\\t\\t\\\"}\\\"\\n\\n    \\t\\t\\t].join( \\\"\\\\n\\\" )\\n\\n    \\t\\t};\\n\\n    \\t\\tprogram = createProgram( shader );\\n\\n    \\t\\tattributes = {\\n    \\t\\t\\tvertex: gl.getAttribLocation ( program, \\\"position\\\" ),\\n    \\t\\t\\tuv:     gl.getAttribLocation ( program, \\\"uv\\\" )\\n    \\t\\t};\\n\\n    \\t\\tuniforms = {\\n    \\t\\t\\trenderType:     gl.getUniformLocation( program, \\\"renderType\\\" ),\\n    \\t\\t\\tmap:            gl.getUniformLocation( program, \\\"map\\\" ),\\n    \\t\\t\\tocclusionMap:   gl.getUniformLocation( program, \\\"occlusionMap\\\" ),\\n    \\t\\t\\topacity:        gl.getUniformLocation( program, \\\"opacity\\\" ),\\n    \\t\\t\\tcolor:          gl.getUniformLocation( program, \\\"color\\\" ),\\n    \\t\\t\\tscale:          gl.getUniformLocation( program, \\\"scale\\\" ),\\n    \\t\\t\\trotation:       gl.getUniformLocation( program, \\\"rotation\\\" ),\\n    \\t\\t\\tscreenPosition: gl.getUniformLocation( program, \\\"screenPosition\\\" )\\n    \\t\\t};\\n\\n    \\t}\\n\\n    \\t/*\\n    \\t * Render lens flares\\n    \\t * Method: renders 16x16 0xff00ff-colored points scattered over the light source area,\\n    \\t *         reads these back and calculates occlusion.\\n    \\t */\\n\\n    \\tthis.render = function ( scene, camera, viewport ) {\\n\\n    \\t\\tif ( flares.length === 0 ) return;\\n\\n    \\t\\tvar tempPosition = new Vector3();\\n\\n    \\t\\tvar invAspect = viewport.w / viewport.z,\\n    \\t\\t\\thalfViewportWidth = viewport.z * 0.5,\\n    \\t\\t\\thalfViewportHeight = viewport.w * 0.5;\\n\\n    \\t\\tvar size = 16 / viewport.w,\\n    \\t\\t\\tscale = new Vector2( size * invAspect, size );\\n\\n    \\t\\tvar screenPosition = new Vector3( 1, 1, 0 ),\\n    \\t\\t\\tscreenPositionPixels = new Vector2( 1, 1 );\\n\\n    \\t\\tvar validArea = new Box2();\\n\\n    \\t\\tvalidArea.min.set( 0, 0 );\\n    \\t\\tvalidArea.max.set( viewport.z - 16, viewport.w - 16 );\\n\\n    \\t\\tif ( program === undefined ) {\\n\\n    \\t\\t\\tinit();\\n\\n    \\t\\t}\\n\\n    \\t\\tgl.useProgram( program );\\n\\n    \\t\\tstate.initAttributes();\\n    \\t\\tstate.enableAttribute( attributes.vertex );\\n    \\t\\tstate.enableAttribute( attributes.uv );\\n    \\t\\tstate.disableUnusedAttributes();\\n\\n    \\t\\t// loop through all lens flares to update their occlusion and positions\\n    \\t\\t// setup gl and common used attribs/uniforms\\n\\n    \\t\\tgl.uniform1i( uniforms.occlusionMap, 0 );\\n    \\t\\tgl.uniform1i( uniforms.map, 1 );\\n\\n    \\t\\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\\n    \\t\\tgl.vertexAttribPointer( attributes.vertex, 2, gl.FLOAT, false, 2 * 8, 0 );\\n    \\t\\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\\n\\n    \\t\\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\\n\\n    \\t\\tstate.disable( gl.CULL_FACE );\\n    \\t\\tstate.setDepthWrite( false );\\n\\n    \\t\\tfor ( var i = 0, l = flares.length; i < l; i ++ ) {\\n\\n    \\t\\t\\tsize = 16 / viewport.w;\\n    \\t\\t\\tscale.set( size * invAspect, size );\\n\\n    \\t\\t\\t// calc object screen position\\n\\n    \\t\\t\\tvar flare = flares[ i ];\\n\\n    \\t\\t\\ttempPosition.set( flare.matrixWorld.elements[ 12 ], flare.matrixWorld.elements[ 13 ], flare.matrixWorld.elements[ 14 ] );\\n\\n    \\t\\t\\ttempPosition.applyMatrix4( camera.matrixWorldInverse );\\n    \\t\\t\\ttempPosition.applyProjection( camera.projectionMatrix );\\n\\n    \\t\\t\\t// setup arrays for gl programs\\n\\n    \\t\\t\\tscreenPosition.copy( tempPosition );\\n\\n    \\t\\t\\t// horizontal and vertical coordinate of the lower left corner of the pixels to copy\\n\\n    \\t\\t\\tscreenPositionPixels.x = viewport.x + ( screenPosition.x * halfViewportWidth ) + halfViewportWidth - 8;\\n    \\t\\t\\tscreenPositionPixels.y = viewport.y + ( screenPosition.y * halfViewportHeight ) + halfViewportHeight - 8;\\n\\n    \\t\\t\\t// screen cull\\n\\n    \\t\\t\\tif ( validArea.containsPoint( screenPositionPixels ) === true ) {\\n\\n    \\t\\t\\t\\t// save current RGB to temp texture\\n\\n    \\t\\t\\t\\tstate.activeTexture( gl.TEXTURE0 );\\n    \\t\\t\\t\\tstate.bindTexture( gl.TEXTURE_2D, null );\\n    \\t\\t\\t\\tstate.activeTexture( gl.TEXTURE1 );\\n    \\t\\t\\t\\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\\n    \\t\\t\\t\\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGB, screenPositionPixels.x, screenPositionPixels.y, 16, 16, 0 );\\n\\n\\n    \\t\\t\\t\\t// render pink quad\\n\\n    \\t\\t\\t\\tgl.uniform1i( uniforms.renderType, 0 );\\n    \\t\\t\\t\\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\\n    \\t\\t\\t\\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\\n\\n    \\t\\t\\t\\tstate.disable( gl.BLEND );\\n    \\t\\t\\t\\tstate.enable( gl.DEPTH_TEST );\\n\\n    \\t\\t\\t\\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\\n\\n\\n    \\t\\t\\t\\t// copy result to occlusionMap\\n\\n    \\t\\t\\t\\tstate.activeTexture( gl.TEXTURE0 );\\n    \\t\\t\\t\\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\\n    \\t\\t\\t\\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGBA, screenPositionPixels.x, screenPositionPixels.y, 16, 16, 0 );\\n\\n\\n    \\t\\t\\t\\t// restore graphics\\n\\n    \\t\\t\\t\\tgl.uniform1i( uniforms.renderType, 1 );\\n    \\t\\t\\t\\tstate.disable( gl.DEPTH_TEST );\\n\\n    \\t\\t\\t\\tstate.activeTexture( gl.TEXTURE1 );\\n    \\t\\t\\t\\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\\n    \\t\\t\\t\\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\\n\\n\\n    \\t\\t\\t\\t// update object positions\\n\\n    \\t\\t\\t\\tflare.positionScreen.copy( screenPosition );\\n\\n    \\t\\t\\t\\tif ( flare.customUpdateCallback ) {\\n\\n    \\t\\t\\t\\t\\tflare.customUpdateCallback( flare );\\n\\n    \\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\tflare.updateLensFlares();\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t// render flares\\n\\n    \\t\\t\\t\\tgl.uniform1i( uniforms.renderType, 2 );\\n    \\t\\t\\t\\tstate.enable( gl.BLEND );\\n\\n    \\t\\t\\t\\tfor ( var j = 0, jl = flare.lensFlares.length; j < jl; j ++ ) {\\n\\n    \\t\\t\\t\\t\\tvar sprite = flare.lensFlares[ j ];\\n\\n    \\t\\t\\t\\t\\tif ( sprite.opacity > 0.001 && sprite.scale > 0.001 ) {\\n\\n    \\t\\t\\t\\t\\t\\tscreenPosition.x = sprite.x;\\n    \\t\\t\\t\\t\\t\\tscreenPosition.y = sprite.y;\\n    \\t\\t\\t\\t\\t\\tscreenPosition.z = sprite.z;\\n\\n    \\t\\t\\t\\t\\t\\tsize = sprite.size * sprite.scale / viewport.w;\\n\\n    \\t\\t\\t\\t\\t\\tscale.x = size * invAspect;\\n    \\t\\t\\t\\t\\t\\tscale.y = size;\\n\\n    \\t\\t\\t\\t\\t\\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\\n    \\t\\t\\t\\t\\t\\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\\n    \\t\\t\\t\\t\\t\\tgl.uniform1f( uniforms.rotation, sprite.rotation );\\n\\n    \\t\\t\\t\\t\\t\\tgl.uniform1f( uniforms.opacity, sprite.opacity );\\n    \\t\\t\\t\\t\\t\\tgl.uniform3f( uniforms.color, sprite.color.r, sprite.color.g, sprite.color.b );\\n\\n    \\t\\t\\t\\t\\t\\tstate.setBlending( sprite.blending, sprite.blendEquation, sprite.blendSrc, sprite.blendDst );\\n    \\t\\t\\t\\t\\t\\trenderer.setTexture2D( sprite.texture, 1 );\\n\\n    \\t\\t\\t\\t\\t\\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\t// restore gl\\n\\n    \\t\\tstate.enable( gl.CULL_FACE );\\n    \\t\\tstate.enable( gl.DEPTH_TEST );\\n    \\t\\tstate.setDepthWrite( true );\\n\\n    \\t\\trenderer.resetGLState();\\n\\n    \\t};\\n\\n    \\tfunction createProgram( shader ) {\\n\\n    \\t\\tvar program = gl.createProgram();\\n\\n    \\t\\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\\n    \\t\\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\\n\\n    \\t\\tvar prefix = \\\"precision \\\" + renderer.getPrecision() + \\\" float;\\\\n\\\";\\n\\n    \\t\\tgl.shaderSource( fragmentShader, prefix + shader.fragmentShader );\\n    \\t\\tgl.shaderSource( vertexShader, prefix + shader.vertexShader );\\n\\n    \\t\\tgl.compileShader( fragmentShader );\\n    \\t\\tgl.compileShader( vertexShader );\\n\\n    \\t\\tgl.attachShader( program, fragmentShader );\\n    \\t\\tgl.attachShader( program, vertexShader );\\n\\n    \\t\\tgl.linkProgram( program );\\n\\n    \\t\\treturn program;\\n\\n    \\t}\\n\\n    }\\n\\n    /**\\n     * @author mikael emtinger / http://gomo.se/\\n     * @author alteredq / http://alteredqualia.com/\\n     */\\n\\n    function SpritePlugin( renderer, sprites ) {\\n\\n    \\tvar gl = renderer.context;\\n    \\tvar state = renderer.state;\\n\\n    \\tvar vertexBuffer, elementBuffer;\\n    \\tvar program, attributes, uniforms;\\n\\n    \\tvar texture;\\n\\n    \\t// decompose matrixWorld\\n\\n    \\tvar spritePosition = new Vector3();\\n    \\tvar spriteRotation = new Quaternion();\\n    \\tvar spriteScale = new Vector3();\\n\\n    \\tfunction init() {\\n\\n    \\t\\tvar vertices = new Float32Array( [\\n    \\t\\t\\t- 0.5, - 0.5,  0, 0,\\n    \\t\\t\\t  0.5, - 0.5,  1, 0,\\n    \\t\\t\\t  0.5,   0.5,  1, 1,\\n    \\t\\t\\t- 0.5,   0.5,  0, 1\\n    \\t\\t] );\\n\\n    \\t\\tvar faces = new Uint16Array( [\\n    \\t\\t\\t0, 1, 2,\\n    \\t\\t\\t0, 2, 3\\n    \\t\\t] );\\n\\n    \\t\\tvertexBuffer  = gl.createBuffer();\\n    \\t\\telementBuffer = gl.createBuffer();\\n\\n    \\t\\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\\n    \\t\\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\\n\\n    \\t\\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\\n    \\t\\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\\n\\n    \\t\\tprogram = createProgram();\\n\\n    \\t\\tattributes = {\\n    \\t\\t\\tposition:\\t\\t\\tgl.getAttribLocation ( program, 'position' ),\\n    \\t\\t\\tuv:\\t\\t\\t\\t\\tgl.getAttribLocation ( program, 'uv' )\\n    \\t\\t};\\n\\n    \\t\\tuniforms = {\\n    \\t\\t\\tuvOffset:\\t\\t\\tgl.getUniformLocation( program, 'uvOffset' ),\\n    \\t\\t\\tuvScale:\\t\\t\\tgl.getUniformLocation( program, 'uvScale' ),\\n\\n    \\t\\t\\trotation:\\t\\t\\tgl.getUniformLocation( program, 'rotation' ),\\n    \\t\\t\\tscale:\\t\\t\\t\\tgl.getUniformLocation( program, 'scale' ),\\n\\n    \\t\\t\\tcolor:\\t\\t\\t\\tgl.getUniformLocation( program, 'color' ),\\n    \\t\\t\\tmap:\\t\\t\\t\\tgl.getUniformLocation( program, 'map' ),\\n    \\t\\t\\topacity:\\t\\t\\tgl.getUniformLocation( program, 'opacity' ),\\n\\n    \\t\\t\\tmodelViewMatrix: \\tgl.getUniformLocation( program, 'modelViewMatrix' ),\\n    \\t\\t\\tprojectionMatrix:\\tgl.getUniformLocation( program, 'projectionMatrix' ),\\n\\n    \\t\\t\\tfogType:\\t\\t\\tgl.getUniformLocation( program, 'fogType' ),\\n    \\t\\t\\tfogDensity:\\t\\t\\tgl.getUniformLocation( program, 'fogDensity' ),\\n    \\t\\t\\tfogNear:\\t\\t\\tgl.getUniformLocation( program, 'fogNear' ),\\n    \\t\\t\\tfogFar:\\t\\t\\t\\tgl.getUniformLocation( program, 'fogFar' ),\\n    \\t\\t\\tfogColor:\\t\\t\\tgl.getUniformLocation( program, 'fogColor' ),\\n\\n    \\t\\t\\talphaTest:\\t\\t\\tgl.getUniformLocation( program, 'alphaTest' )\\n    \\t\\t};\\n\\n    \\t\\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\\n    \\t\\tcanvas.width = 8;\\n    \\t\\tcanvas.height = 8;\\n\\n    \\t\\tvar context = canvas.getContext( '2d' );\\n    \\t\\tcontext.fillStyle = 'white';\\n    \\t\\tcontext.fillRect( 0, 0, 8, 8 );\\n\\n    \\t\\ttexture = new Texture( canvas );\\n    \\t\\ttexture.needsUpdate = true;\\n\\n    \\t}\\n\\n    \\tthis.render = function ( scene, camera ) {\\n\\n    \\t\\tif ( sprites.length === 0 ) return;\\n\\n    \\t\\t// setup gl\\n\\n    \\t\\tif ( program === undefined ) {\\n\\n    \\t\\t\\tinit();\\n\\n    \\t\\t}\\n\\n    \\t\\tgl.useProgram( program );\\n\\n    \\t\\tstate.initAttributes();\\n    \\t\\tstate.enableAttribute( attributes.position );\\n    \\t\\tstate.enableAttribute( attributes.uv );\\n    \\t\\tstate.disableUnusedAttributes();\\n\\n    \\t\\tstate.disable( gl.CULL_FACE );\\n    \\t\\tstate.enable( gl.BLEND );\\n\\n    \\t\\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\\n    \\t\\tgl.vertexAttribPointer( attributes.position, 2, gl.FLOAT, false, 2 * 8, 0 );\\n    \\t\\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\\n\\n    \\t\\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\\n\\n    \\t\\tgl.uniformMatrix4fv( uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\\n\\n    \\t\\tstate.activeTexture( gl.TEXTURE0 );\\n    \\t\\tgl.uniform1i( uniforms.map, 0 );\\n\\n    \\t\\tvar oldFogType = 0;\\n    \\t\\tvar sceneFogType = 0;\\n    \\t\\tvar fog = scene.fog;\\n\\n    \\t\\tif ( fog ) {\\n\\n    \\t\\t\\tgl.uniform3f( uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b );\\n\\n    \\t\\t\\tif ( (fog && fog.isFog) ) {\\n\\n    \\t\\t\\t\\tgl.uniform1f( uniforms.fogNear, fog.near );\\n    \\t\\t\\t\\tgl.uniform1f( uniforms.fogFar, fog.far );\\n\\n    \\t\\t\\t\\tgl.uniform1i( uniforms.fogType, 1 );\\n    \\t\\t\\t\\toldFogType = 1;\\n    \\t\\t\\t\\tsceneFogType = 1;\\n\\n    \\t\\t\\t} else if ( (fog && fog.isFogExp2) ) {\\n\\n    \\t\\t\\t\\tgl.uniform1f( uniforms.fogDensity, fog.density );\\n\\n    \\t\\t\\t\\tgl.uniform1i( uniforms.fogType, 2 );\\n    \\t\\t\\t\\toldFogType = 2;\\n    \\t\\t\\t\\tsceneFogType = 2;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\tgl.uniform1i( uniforms.fogType, 0 );\\n    \\t\\t\\toldFogType = 0;\\n    \\t\\t\\tsceneFogType = 0;\\n\\n    \\t\\t}\\n\\n\\n    \\t\\t// update positions and sort\\n\\n    \\t\\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\\n\\n    \\t\\t\\tvar sprite = sprites[ i ];\\n\\n    \\t\\t\\tsprite.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, sprite.matrixWorld );\\n    \\t\\t\\tsprite.z = - sprite.modelViewMatrix.elements[ 14 ];\\n\\n    \\t\\t}\\n\\n    \\t\\tsprites.sort( painterSortStable );\\n\\n    \\t\\t// render all sprites\\n\\n    \\t\\tvar scale = [];\\n\\n    \\t\\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\\n\\n    \\t\\t\\tvar sprite = sprites[ i ];\\n    \\t\\t\\tvar material = sprite.material;\\n\\n    \\t\\t\\tif ( material.visible === false ) continue;\\n\\n    \\t\\t\\tgl.uniform1f( uniforms.alphaTest, material.alphaTest );\\n    \\t\\t\\tgl.uniformMatrix4fv( uniforms.modelViewMatrix, false, sprite.modelViewMatrix.elements );\\n\\n    \\t\\t\\tsprite.matrixWorld.decompose( spritePosition, spriteRotation, spriteScale );\\n\\n    \\t\\t\\tscale[ 0 ] = spriteScale.x;\\n    \\t\\t\\tscale[ 1 ] = spriteScale.y;\\n\\n    \\t\\t\\tvar fogType = 0;\\n\\n    \\t\\t\\tif ( scene.fog && material.fog ) {\\n\\n    \\t\\t\\t\\tfogType = sceneFogType;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tif ( oldFogType !== fogType ) {\\n\\n    \\t\\t\\t\\tgl.uniform1i( uniforms.fogType, fogType );\\n    \\t\\t\\t\\toldFogType = fogType;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tif ( material.map !== null ) {\\n\\n    \\t\\t\\t\\tgl.uniform2f( uniforms.uvOffset, material.map.offset.x, material.map.offset.y );\\n    \\t\\t\\t\\tgl.uniform2f( uniforms.uvScale, material.map.repeat.x, material.map.repeat.y );\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\tgl.uniform2f( uniforms.uvOffset, 0, 0 );\\n    \\t\\t\\t\\tgl.uniform2f( uniforms.uvScale, 1, 1 );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tgl.uniform1f( uniforms.opacity, material.opacity );\\n    \\t\\t\\tgl.uniform3f( uniforms.color, material.color.r, material.color.g, material.color.b );\\n\\n    \\t\\t\\tgl.uniform1f( uniforms.rotation, material.rotation );\\n    \\t\\t\\tgl.uniform2fv( uniforms.scale, scale );\\n\\n    \\t\\t\\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst );\\n    \\t\\t\\tstate.setDepthTest( material.depthTest );\\n    \\t\\t\\tstate.setDepthWrite( material.depthWrite );\\n\\n    \\t\\t\\tif ( material.map ) {\\n\\n    \\t\\t\\t\\trenderer.setTexture2D( material.map, 0 );\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\trenderer.setTexture2D( texture, 0 );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\\n\\n    \\t\\t}\\n\\n    \\t\\t// restore gl\\n\\n    \\t\\tstate.enable( gl.CULL_FACE );\\n\\n    \\t\\trenderer.resetGLState();\\n\\n    \\t};\\n\\n    \\tfunction createProgram() {\\n\\n    \\t\\tvar program = gl.createProgram();\\n\\n    \\t\\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\\n    \\t\\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\\n\\n    \\t\\tgl.shaderSource( vertexShader, [\\n\\n    \\t\\t\\t'precision ' + renderer.getPrecision() + ' float;',\\n\\n    \\t\\t\\t'uniform mat4 modelViewMatrix;',\\n    \\t\\t\\t'uniform mat4 projectionMatrix;',\\n    \\t\\t\\t'uniform float rotation;',\\n    \\t\\t\\t'uniform vec2 scale;',\\n    \\t\\t\\t'uniform vec2 uvOffset;',\\n    \\t\\t\\t'uniform vec2 uvScale;',\\n\\n    \\t\\t\\t'attribute vec2 position;',\\n    \\t\\t\\t'attribute vec2 uv;',\\n\\n    \\t\\t\\t'varying vec2 vUV;',\\n\\n    \\t\\t\\t'void main() {',\\n\\n    \\t\\t\\t\\t'vUV = uvOffset + uv * uvScale;',\\n\\n    \\t\\t\\t\\t'vec2 alignedPosition = position * scale;',\\n\\n    \\t\\t\\t\\t'vec2 rotatedPosition;',\\n    \\t\\t\\t\\t'rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;',\\n    \\t\\t\\t\\t'rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;',\\n\\n    \\t\\t\\t\\t'vec4 finalPosition;',\\n\\n    \\t\\t\\t\\t'finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );',\\n    \\t\\t\\t\\t'finalPosition.xy += rotatedPosition;',\\n    \\t\\t\\t\\t'finalPosition = projectionMatrix * finalPosition;',\\n\\n    \\t\\t\\t\\t'gl_Position = finalPosition;',\\n\\n    \\t\\t\\t'}'\\n\\n    \\t\\t].join( '\\\\n' ) );\\n\\n    \\t\\tgl.shaderSource( fragmentShader, [\\n\\n    \\t\\t\\t'precision ' + renderer.getPrecision() + ' float;',\\n\\n    \\t\\t\\t'uniform vec3 color;',\\n    \\t\\t\\t'uniform sampler2D map;',\\n    \\t\\t\\t'uniform float opacity;',\\n\\n    \\t\\t\\t'uniform int fogType;',\\n    \\t\\t\\t'uniform vec3 fogColor;',\\n    \\t\\t\\t'uniform float fogDensity;',\\n    \\t\\t\\t'uniform float fogNear;',\\n    \\t\\t\\t'uniform float fogFar;',\\n    \\t\\t\\t'uniform float alphaTest;',\\n\\n    \\t\\t\\t'varying vec2 vUV;',\\n\\n    \\t\\t\\t'void main() {',\\n\\n    \\t\\t\\t\\t'vec4 texture = texture2D( map, vUV );',\\n\\n    \\t\\t\\t\\t'if ( texture.a < alphaTest ) discard;',\\n\\n    \\t\\t\\t\\t'gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );',\\n\\n    \\t\\t\\t\\t'if ( fogType > 0 ) {',\\n\\n    \\t\\t\\t\\t\\t'float depth = gl_FragCoord.z / gl_FragCoord.w;',\\n    \\t\\t\\t\\t\\t'float fogFactor = 0.0;',\\n\\n    \\t\\t\\t\\t\\t'if ( fogType == 1 ) {',\\n\\n    \\t\\t\\t\\t\\t\\t'fogFactor = smoothstep( fogNear, fogFar, depth );',\\n\\n    \\t\\t\\t\\t\\t'} else {',\\n\\n    \\t\\t\\t\\t\\t\\t'const float LOG2 = 1.442695;',\\n    \\t\\t\\t\\t\\t\\t'fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );',\\n    \\t\\t\\t\\t\\t\\t'fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );',\\n\\n    \\t\\t\\t\\t\\t'}',\\n\\n    \\t\\t\\t\\t\\t'gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );',\\n\\n    \\t\\t\\t\\t'}',\\n\\n    \\t\\t\\t'}'\\n\\n    \\t\\t].join( '\\\\n' ) );\\n\\n    \\t\\tgl.compileShader( vertexShader );\\n    \\t\\tgl.compileShader( fragmentShader );\\n\\n    \\t\\tgl.attachShader( program, vertexShader );\\n    \\t\\tgl.attachShader( program, fragmentShader );\\n\\n    \\t\\tgl.linkProgram( program );\\n\\n    \\t\\treturn program;\\n\\n    \\t}\\n\\n    \\tfunction painterSortStable( a, b ) {\\n\\n    \\t\\tif ( a.renderOrder !== b.renderOrder ) {\\n\\n    \\t\\t\\treturn a.renderOrder - b.renderOrder;\\n\\n    \\t\\t} else if ( a.z !== b.z ) {\\n\\n    \\t\\t\\treturn b.z - a.z;\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\treturn b.id - a.id;\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    }\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     * @author alteredq / http://alteredqualia.com/\\n     */\\n\\n    function Material() {\\n\\n    \\tObject.defineProperty( this, 'id', { value: MaterialIdCount() } );\\n\\n    \\tthis.uuid = exports.Math.generateUUID();\\n\\n    \\tthis.name = '';\\n    \\tthis.type = 'Material';\\n\\n    \\tthis.fog = true;\\n    \\tthis.lights = true;\\n\\n    \\tthis.blending = NormalBlending;\\n    \\tthis.side = FrontSide;\\n    \\tthis.shading = SmoothShading; // THREE.FlatShading, THREE.SmoothShading\\n    \\tthis.vertexColors = NoColors; // THREE.NoColors, THREE.VertexColors, THREE.FaceColors\\n\\n    \\tthis.opacity = 1;\\n    \\tthis.transparent = false;\\n\\n    \\tthis.blendSrc = SrcAlphaFactor;\\n    \\tthis.blendDst = OneMinusSrcAlphaFactor;\\n    \\tthis.blendEquation = AddEquation;\\n    \\tthis.blendSrcAlpha = null;\\n    \\tthis.blendDstAlpha = null;\\n    \\tthis.blendEquationAlpha = null;\\n\\n    \\tthis.depthFunc = LessEqualDepth;\\n    \\tthis.depthTest = true;\\n    \\tthis.depthWrite = true;\\n\\n    \\tthis.clippingPlanes = null;\\n    \\tthis.clipShadows = false;\\n\\n    \\tthis.colorWrite = true;\\n\\n    \\tthis.precision = null; // override the renderer's default precision for this material\\n\\n    \\tthis.polygonOffset = false;\\n    \\tthis.polygonOffsetFactor = 0;\\n    \\tthis.polygonOffsetUnits = 0;\\n\\n    \\tthis.alphaTest = 0;\\n    \\tthis.premultipliedAlpha = false;\\n\\n    \\tthis.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\\n\\n    \\tthis.visible = true;\\n\\n    \\tthis._needsUpdate = true;\\n\\n    }\\n\\n    Material.prototype = {\\n\\n    \\tconstructor: Material,\\n\\n    \\tisMaterial: true,\\n\\n    \\tget needsUpdate() {\\n\\n    \\t\\treturn this._needsUpdate;\\n\\n    \\t},\\n\\n    \\tset needsUpdate( value ) {\\n\\n    \\t\\tif ( value === true ) this.update();\\n    \\t\\tthis._needsUpdate = value;\\n\\n    \\t},\\n\\n    \\tsetValues: function ( values ) {\\n\\n    \\t\\tif ( values === undefined ) return;\\n\\n    \\t\\tfor ( var key in values ) {\\n\\n    \\t\\t\\tvar newValue = values[ key ];\\n\\n    \\t\\t\\tif ( newValue === undefined ) {\\n\\n    \\t\\t\\t\\tconsole.warn( \\\"THREE.Material: '\\\" + key + \\\"' parameter is undefined.\\\" );\\n    \\t\\t\\t\\tcontinue;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tvar currentValue = this[ key ];\\n\\n    \\t\\t\\tif ( currentValue === undefined ) {\\n\\n    \\t\\t\\t\\tconsole.warn( \\\"THREE.\\\" + this.type + \\\": '\\\" + key + \\\"' is not a property of this material.\\\" );\\n    \\t\\t\\t\\tcontinue;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tif ( (currentValue && currentValue.isColor) ) {\\n\\n    \\t\\t\\t\\tcurrentValue.set( newValue );\\n\\n    \\t\\t\\t} else if ( (currentValue && currentValue.isVector3) && (newValue && newValue.isVector3) ) {\\n\\n    \\t\\t\\t\\tcurrentValue.copy( newValue );\\n\\n    \\t\\t\\t} else if ( key === 'overdraw' ) {\\n\\n    \\t\\t\\t\\t// ensure overdraw is backwards-compatible with legacy boolean type\\n    \\t\\t\\t\\tthis[ key ] = Number( newValue );\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\tthis[ key ] = newValue;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t},\\n\\n    \\ttoJSON: function ( meta ) {\\n\\n    \\t\\tvar isRoot = meta === undefined;\\n\\n    \\t\\tif ( isRoot ) {\\n\\n    \\t\\t\\tmeta = {\\n    \\t\\t\\t\\ttextures: {},\\n    \\t\\t\\t\\timages: {}\\n    \\t\\t\\t};\\n\\n    \\t\\t}\\n\\n    \\t\\tvar data = {\\n    \\t\\t\\tmetadata: {\\n    \\t\\t\\t\\tversion: 4.4,\\n    \\t\\t\\t\\ttype: 'Material',\\n    \\t\\t\\t\\tgenerator: 'Material.toJSON'\\n    \\t\\t\\t}\\n    \\t\\t};\\n\\n    \\t\\t// standard Material serialization\\n    \\t\\tdata.uuid = this.uuid;\\n    \\t\\tdata.type = this.type;\\n\\n    \\t\\tif ( this.name !== '' ) data.name = this.name;\\n\\n    \\t\\tif ( (this.color && this.color.isColor) ) data.color = this.color.getHex();\\n\\n    \\t\\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\\n    \\t\\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\\n\\n    \\t\\tif ( (this.emissive && this.emissive.isColor) ) data.emissive = this.emissive.getHex();\\n    \\t\\tif ( (this.specular && this.specular.isColor) ) data.specular = this.specular.getHex();\\n    \\t\\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\\n\\n    \\t\\tif ( (this.map && this.map.isTexture) ) data.map = this.map.toJSON( meta ).uuid;\\n    \\t\\tif ( (this.alphaMap && this.alphaMap.isTexture) ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\\n    \\t\\tif ( (this.lightMap && this.lightMap.isTexture) ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\\n    \\t\\tif ( (this.bumpMap && this.bumpMap.isTexture) ) {\\n\\n    \\t\\t\\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\\n    \\t\\t\\tdata.bumpScale = this.bumpScale;\\n\\n    \\t\\t}\\n    \\t\\tif ( (this.normalMap && this.normalMap.isTexture) ) {\\n\\n    \\t\\t\\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\\n    \\t\\t\\tdata.normalScale = this.normalScale.toArray();\\n\\n    \\t\\t}\\n    \\t\\tif ( (this.displacementMap && this.displacementMap.isTexture) ) {\\n\\n    \\t\\t\\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\\n    \\t\\t\\tdata.displacementScale = this.displacementScale;\\n    \\t\\t\\tdata.displacementBias = this.displacementBias;\\n\\n    \\t\\t}\\n    \\t\\tif ( (this.roughnessMap && this.roughnessMap.isTexture) ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\\n    \\t\\tif ( (this.metalnessMap && this.metalnessMap.isTexture) ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\\n\\n    \\t\\tif ( (this.emissiveMap && this.emissiveMap.isTexture) ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\\n    \\t\\tif ( (this.specularMap && this.specularMap.isTexture) ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\\n\\n    \\t\\tif ( (this.envMap && this.envMap.isTexture) ) {\\n\\n    \\t\\t\\tdata.envMap = this.envMap.toJSON( meta ).uuid;\\n    \\t\\t\\tdata.reflectivity = this.reflectivity; // Scale behind envMap\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( this.size !== undefined ) data.size = this.size;\\n    \\t\\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\\n\\n    \\t\\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\\n    \\t\\tif ( this.shading !== SmoothShading ) data.shading = this.shading;\\n    \\t\\tif ( this.side !== FrontSide ) data.side = this.side;\\n    \\t\\tif ( this.vertexColors !== NoColors ) data.vertexColors = this.vertexColors;\\n\\n    \\t\\tif ( this.opacity < 1 ) data.opacity = this.opacity;\\n    \\t\\tif ( this.transparent === true ) data.transparent = this.transparent;\\n\\n    \\t\\tdata.depthFunc = this.depthFunc;\\n    \\t\\tdata.depthTest = this.depthTest;\\n    \\t\\tdata.depthWrite = this.depthWrite;\\n\\n    \\t\\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\\n    \\t\\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\\n    \\t\\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\\n    \\t\\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\\n    \\t\\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\\n    \\t\\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\\n\\n    \\t\\tdata.skinning = this.skinning;\\n    \\t\\tdata.morphTargets = this.morphTargets;\\n\\n    \\t\\t// TODO: Copied from Object3D.toJSON\\n\\n    \\t\\tfunction extractFromCache( cache ) {\\n\\n    \\t\\t\\tvar values = [];\\n\\n    \\t\\t\\tfor ( var key in cache ) {\\n\\n    \\t\\t\\t\\tvar data = cache[ key ];\\n    \\t\\t\\t\\tdelete data.metadata;\\n    \\t\\t\\t\\tvalues.push( data );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\treturn values;\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( isRoot ) {\\n\\n    \\t\\t\\tvar textures = extractFromCache( meta.textures );\\n    \\t\\t\\tvar images = extractFromCache( meta.images );\\n\\n    \\t\\t\\tif ( textures.length > 0 ) data.textures = textures;\\n    \\t\\t\\tif ( images.length > 0 ) data.images = images;\\n\\n    \\t\\t}\\n\\n    \\t\\treturn data;\\n\\n    \\t},\\n\\n    \\tclone: function () {\\n\\n    \\t\\treturn new this.constructor().copy( this );\\n\\n    \\t},\\n\\n    \\tcopy: function ( source ) {\\n\\n    \\t\\tthis.name = source.name;\\n\\n    \\t\\tthis.fog = source.fog;\\n    \\t\\tthis.lights = source.lights;\\n\\n    \\t\\tthis.blending = source.blending;\\n    \\t\\tthis.side = source.side;\\n    \\t\\tthis.shading = source.shading;\\n    \\t\\tthis.vertexColors = source.vertexColors;\\n\\n    \\t\\tthis.opacity = source.opacity;\\n    \\t\\tthis.transparent = source.transparent;\\n\\n    \\t\\tthis.blendSrc = source.blendSrc;\\n    \\t\\tthis.blendDst = source.blendDst;\\n    \\t\\tthis.blendEquation = source.blendEquation;\\n    \\t\\tthis.blendSrcAlpha = source.blendSrcAlpha;\\n    \\t\\tthis.blendDstAlpha = source.blendDstAlpha;\\n    \\t\\tthis.blendEquationAlpha = source.blendEquationAlpha;\\n\\n    \\t\\tthis.depthFunc = source.depthFunc;\\n    \\t\\tthis.depthTest = source.depthTest;\\n    \\t\\tthis.depthWrite = source.depthWrite;\\n\\n    \\t\\tthis.colorWrite = source.colorWrite;\\n\\n    \\t\\tthis.precision = source.precision;\\n\\n    \\t\\tthis.polygonOffset = source.polygonOffset;\\n    \\t\\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\\n    \\t\\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\\n\\n    \\t\\tthis.alphaTest = source.alphaTest;\\n\\n    \\t\\tthis.premultipliedAlpha = source.premultipliedAlpha;\\n\\n    \\t\\tthis.overdraw = source.overdraw;\\n\\n    \\t\\tthis.visible = source.visible;\\n    \\t\\tthis.clipShadows = source.clipShadows;\\n\\n    \\t\\tvar srcPlanes = source.clippingPlanes,\\n    \\t\\t\\tdstPlanes = null;\\n\\n    \\t\\tif ( srcPlanes !== null ) {\\n\\n    \\t\\t\\tvar n = srcPlanes.length;\\n    \\t\\t\\tdstPlanes = new Array( n );\\n\\n    \\t\\t\\tfor ( var i = 0; i !== n; ++ i )\\n    \\t\\t\\t\\tdstPlanes[ i ] = srcPlanes[ i ].clone();\\n\\n    \\t\\t}\\n\\n    \\t\\tthis.clippingPlanes = dstPlanes;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tupdate: function () {\\n\\n    \\t\\tthis.dispatchEvent( { type: 'update' } );\\n\\n    \\t},\\n\\n    \\tdispose: function () {\\n\\n    \\t\\tthis.dispatchEvent( { type: 'dispose' } );\\n\\n    \\t}\\n\\n    };\\n\\n    Object.assign( Material.prototype, EventDispatcher.prototype );\\n\\n    var count$1 = 0;\\n    function MaterialIdCount() { return count$1++; };\\n\\n    /**\\n     * @author alteredq / http://alteredqualia.com/\\n     *\\n     * parameters = {\\n     *  defines: { \\\"label\\\" : \\\"value\\\" },\\n     *  uniforms: { \\\"parameter1\\\": { value: 1.0 }, \\\"parameter2\\\": { value2: 2 } },\\n     *\\n     *  fragmentShader: <string>,\\n     *  vertexShader: <string>,\\n     *\\n     *  wireframe: <boolean>,\\n     *  wireframeLinewidth: <float>,\\n     *\\n     *  lights: <bool>,\\n     *\\n     *  skinning: <bool>,\\n     *  morphTargets: <bool>,\\n     *  morphNormals: <bool>\\n     * }\\n     */\\n\\n    function ShaderMaterial( parameters ) {\\n\\n    \\tMaterial.call( this );\\n\\n    \\tthis.type = 'ShaderMaterial';\\n\\n    \\tthis.defines = {};\\n    \\tthis.uniforms = {};\\n\\n    \\tthis.vertexShader = 'void main() {\\\\n\\\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\\\n}';\\n    \\tthis.fragmentShader = 'void main() {\\\\n\\\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\\\n}';\\n\\n    \\tthis.linewidth = 1;\\n\\n    \\tthis.wireframe = false;\\n    \\tthis.wireframeLinewidth = 1;\\n\\n    \\tthis.fog = false; // set to use scene fog\\n    \\tthis.lights = false; // set to use scene lights\\n    \\tthis.clipping = false; // set to use user-defined clipping planes\\n\\n    \\tthis.skinning = false; // set to use skinning attribute streams\\n    \\tthis.morphTargets = false; // set to use morph targets\\n    \\tthis.morphNormals = false; // set to use morph normals\\n\\n    \\tthis.extensions = {\\n    \\t\\tderivatives: false, // set to use derivatives\\n    \\t\\tfragDepth: false, // set to use fragment depth values\\n    \\t\\tdrawBuffers: false, // set to use draw buffers\\n    \\t\\tshaderTextureLOD: false // set to use shader texture LOD\\n    \\t};\\n\\n    \\t// When rendered geometry doesn't include these attributes but the material does,\\n    \\t// use these default values in WebGL. This avoids errors when buffer data is missing.\\n    \\tthis.defaultAttributeValues = {\\n    \\t\\t'color': [ 1, 1, 1 ],\\n    \\t\\t'uv': [ 0, 0 ],\\n    \\t\\t'uv2': [ 0, 0 ]\\n    \\t};\\n\\n    \\tthis.index0AttributeName = undefined;\\n\\n    \\tif ( parameters !== undefined ) {\\n\\n    \\t\\tif ( parameters.attributes !== undefined ) {\\n\\n    \\t\\t\\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\\n\\n    \\t\\t}\\n\\n    \\t\\tthis.setValues( parameters );\\n\\n    \\t}\\n\\n    }\\n\\n    ShaderMaterial.prototype = Object.create( Material.prototype );\\n    ShaderMaterial.prototype.constructor = ShaderMaterial;\\n\\n    ShaderMaterial.prototype.isShaderMaterial = true;\\n\\n    ShaderMaterial.prototype.copy = function ( source ) {\\n\\n    \\tMaterial.prototype.copy.call( this, source );\\n\\n    \\tthis.fragmentShader = source.fragmentShader;\\n    \\tthis.vertexShader = source.vertexShader;\\n\\n    \\tthis.uniforms = exports.UniformsUtils.clone( source.uniforms );\\n\\n    \\tthis.defines = source.defines;\\n\\n    \\tthis.wireframe = source.wireframe;\\n    \\tthis.wireframeLinewidth = source.wireframeLinewidth;\\n\\n    \\tthis.lights = source.lights;\\n    \\tthis.clipping = source.clipping;\\n\\n    \\tthis.skinning = source.skinning;\\n\\n    \\tthis.morphTargets = source.morphTargets;\\n    \\tthis.morphNormals = source.morphNormals;\\n\\n    \\tthis.extensions = source.extensions;\\n\\n    \\treturn this;\\n\\n    };\\n\\n    ShaderMaterial.prototype.toJSON = function ( meta ) {\\n\\n    \\tvar data = Material.prototype.toJSON.call( this, meta );\\n\\n    \\tdata.uniforms = this.uniforms;\\n    \\tdata.vertexShader = this.vertexShader;\\n    \\tdata.fragmentShader = this.fragmentShader;\\n\\n    \\treturn data;\\n\\n    };\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     * @author alteredq / http://alteredqualia.com/\\n     * @author bhouston / https://clara.io\\n     * @author WestLangley / http://github.com/WestLangley\\n     *\\n     * parameters = {\\n     *\\n     *  opacity: <float>,\\n     *\\n     *  map: new THREE.Texture( <Image> ),\\n     *\\n     *  alphaMap: new THREE.Texture( <Image> ),\\n     *\\n     *  displacementMap: new THREE.Texture( <Image> ),\\n     *  displacementScale: <float>,\\n     *  displacementBias: <float>,\\n     *\\n     *  wireframe: <boolean>,\\n     *  wireframeLinewidth: <float>\\n     * }\\n     */\\n\\n    function MeshDepthMaterial( parameters ) {\\n\\n    \\tMaterial.call( this );\\n\\n    \\tthis.type = 'MeshDepthMaterial';\\n\\n    \\tthis.depthPacking = BasicDepthPacking;\\n\\n    \\tthis.skinning = false;\\n    \\tthis.morphTargets = false;\\n\\n    \\tthis.map = null;\\n\\n    \\tthis.alphaMap = null;\\n\\n    \\tthis.displacementMap = null;\\n    \\tthis.displacementScale = 1;\\n    \\tthis.displacementBias = 0;\\n\\n    \\tthis.wireframe = false;\\n    \\tthis.wireframeLinewidth = 1;\\n\\n    \\tthis.fog = false;\\n    \\tthis.lights = false;\\n\\n    \\tthis.setValues( parameters );\\n\\n    }\\n\\n    MeshDepthMaterial.prototype = Object.create( Material.prototype );\\n    MeshDepthMaterial.prototype.constructor = MeshDepthMaterial;\\n\\n    MeshDepthMaterial.prototype.isMeshDepthMaterial = true;\\n\\n    MeshDepthMaterial.prototype.copy = function ( source ) {\\n\\n    \\tMaterial.prototype.copy.call( this, source );\\n\\n    \\tthis.depthPacking = source.depthPacking;\\n\\n    \\tthis.skinning = source.skinning;\\n    \\tthis.morphTargets = source.morphTargets;\\n\\n    \\tthis.map = source.map;\\n\\n    \\tthis.alphaMap = source.alphaMap;\\n\\n    \\tthis.displacementMap = source.displacementMap;\\n    \\tthis.displacementScale = source.displacementScale;\\n    \\tthis.displacementBias = source.displacementBias;\\n\\n    \\tthis.wireframe = source.wireframe;\\n    \\tthis.wireframeLinewidth = source.wireframeLinewidth;\\n\\n    \\treturn this;\\n\\n    };\\n\\n    /**\\n     * @author bhouston / http://clara.io\\n     * @author WestLangley / http://github.com/WestLangley\\n     */\\n\\n    function Box3( min, max ) {\\n\\n    \\tthis.min = ( min !== undefined ) ? min : new Vector3( + Infinity, + Infinity, + Infinity );\\n    \\tthis.max = ( max !== undefined ) ? max : new Vector3( - Infinity, - Infinity, - Infinity );\\n\\n    }\\n\\n    Box3.prototype = {\\n\\n    \\tconstructor: Box3,\\n\\n    \\tisBox3: true,\\n\\n    \\tset: function ( min, max ) {\\n\\n    \\t\\tthis.min.copy( min );\\n    \\t\\tthis.max.copy( max );\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsetFromArray: function ( array ) {\\n\\n    \\t\\tvar minX = + Infinity;\\n    \\t\\tvar minY = + Infinity;\\n    \\t\\tvar minZ = + Infinity;\\n\\n    \\t\\tvar maxX = - Infinity;\\n    \\t\\tvar maxY = - Infinity;\\n    \\t\\tvar maxZ = - Infinity;\\n\\n    \\t\\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\\n\\n    \\t\\t\\tvar x = array[ i ];\\n    \\t\\t\\tvar y = array[ i + 1 ];\\n    \\t\\t\\tvar z = array[ i + 2 ];\\n\\n    \\t\\t\\tif ( x < minX ) minX = x;\\n    \\t\\t\\tif ( y < minY ) minY = y;\\n    \\t\\t\\tif ( z < minZ ) minZ = z;\\n\\n    \\t\\t\\tif ( x > maxX ) maxX = x;\\n    \\t\\t\\tif ( y > maxY ) maxY = y;\\n    \\t\\t\\tif ( z > maxZ ) maxZ = z;\\n\\n    \\t\\t}\\n\\n    \\t\\tthis.min.set( minX, minY, minZ );\\n    \\t\\tthis.max.set( maxX, maxY, maxZ );\\n\\n    \\t},\\n\\n    \\tsetFromPoints: function ( points ) {\\n\\n    \\t\\tthis.makeEmpty();\\n\\n    \\t\\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\\n\\n    \\t\\t\\tthis.expandByPoint( points[ i ] );\\n\\n    \\t\\t}\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsetFromCenterAndSize: function () {\\n\\n    \\t\\tvar v1 = new Vector3();\\n\\n    \\t\\treturn function setFromCenterAndSize( center, size ) {\\n\\n    \\t\\t\\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\\n\\n    \\t\\t\\tthis.min.copy( center ).sub( halfSize );\\n    \\t\\t\\tthis.max.copy( center ).add( halfSize );\\n\\n    \\t\\t\\treturn this;\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\tsetFromObject: function () {\\n\\n    \\t\\t// Computes the world-axis-aligned bounding box of an object (including its children),\\n    \\t\\t// accounting for both the object's, and children's, world transforms\\n\\n    \\t\\tvar v1 = new Vector3();\\n\\n    \\t\\treturn function setFromObject( object ) {\\n\\n    \\t\\t\\tvar scope = this;\\n\\n    \\t\\t\\tobject.updateMatrixWorld( true );\\n\\n    \\t\\t\\tthis.makeEmpty();\\n\\n    \\t\\t\\tobject.traverse( function ( node ) {\\n\\n    \\t\\t\\t\\tvar geometry = node.geometry;\\n\\n    \\t\\t\\t\\tif ( geometry !== undefined ) {\\n\\n    \\t\\t\\t\\t\\tif ( (geometry && geometry.isGeometry) ) {\\n\\n    \\t\\t\\t\\t\\t\\tvar vertices = geometry.vertices;\\n\\n    \\t\\t\\t\\t\\t\\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\\n\\n    \\t\\t\\t\\t\\t\\t\\tv1.copy( vertices[ i ] );\\n    \\t\\t\\t\\t\\t\\t\\tv1.applyMatrix4( node.matrixWorld );\\n\\n    \\t\\t\\t\\t\\t\\t\\tscope.expandByPoint( v1 );\\n\\n    \\t\\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\t} else if ( (geometry && geometry.isBufferGeometry) ) {\\n\\n    \\t\\t\\t\\t\\t\\tvar attribute = geometry.attributes.position;\\n\\n    \\t\\t\\t\\t\\t\\tif ( attribute !== undefined ) {\\n\\n    \\t\\t\\t\\t\\t\\t\\tvar array, offset, stride;\\n\\n    \\t\\t\\t\\t\\t\\t\\tif ( (attribute && attribute.isInterleavedBufferAttribute) ) {\\n\\n    \\t\\t\\t\\t\\t\\t\\t\\tarray = attribute.data.array;\\n    \\t\\t\\t\\t\\t\\t\\t\\toffset = attribute.offset;\\n    \\t\\t\\t\\t\\t\\t\\t\\tstride = attribute.data.stride;\\n\\n    \\t\\t\\t\\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\t\\t\\t\\tarray = attribute.array;\\n    \\t\\t\\t\\t\\t\\t\\t\\toffset = 0;\\n    \\t\\t\\t\\t\\t\\t\\t\\tstride = 3;\\n\\n    \\t\\t\\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\t\\t\\tfor ( var i = offset, il = array.length; i < il; i += stride ) {\\n\\n    \\t\\t\\t\\t\\t\\t\\t\\tv1.fromArray( array, i );\\n    \\t\\t\\t\\t\\t\\t\\t\\tv1.applyMatrix4( node.matrixWorld );\\n\\n    \\t\\t\\t\\t\\t\\t\\t\\tscope.expandByPoint( v1 );\\n\\n    \\t\\t\\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t} );\\n\\n    \\t\\t\\treturn this;\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\tclone: function () {\\n\\n    \\t\\treturn new this.constructor().copy( this );\\n\\n    \\t},\\n\\n    \\tcopy: function ( box ) {\\n\\n    \\t\\tthis.min.copy( box.min );\\n    \\t\\tthis.max.copy( box.max );\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tmakeEmpty: function () {\\n\\n    \\t\\tthis.min.x = this.min.y = this.min.z = + Infinity;\\n    \\t\\tthis.max.x = this.max.y = this.max.z = - Infinity;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tisEmpty: function () {\\n\\n    \\t\\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\\n\\n    \\t\\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\\n\\n    \\t},\\n\\n    \\tgetCenter: function ( optionalTarget ) {\\n\\n    \\t\\tvar result = optionalTarget || new Vector3();\\n    \\t\\treturn this.isEmpty() ? result.set( 0, 0, 0 ) : result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\\n\\n    \\t},\\n\\n    \\tgetSize: function ( optionalTarget ) {\\n\\n    \\t\\tvar result = optionalTarget || new Vector3();\\n    \\t\\treturn this.isEmpty() ? result.set( 0, 0, 0 ) : result.subVectors( this.max, this.min );\\n\\n    \\t},\\n\\n    \\texpandByPoint: function ( point ) {\\n\\n    \\t\\tthis.min.min( point );\\n    \\t\\tthis.max.max( point );\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\texpandByVector: function ( vector ) {\\n\\n    \\t\\tthis.min.sub( vector );\\n    \\t\\tthis.max.add( vector );\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\texpandByScalar: function ( scalar ) {\\n\\n    \\t\\tthis.min.addScalar( - scalar );\\n    \\t\\tthis.max.addScalar( scalar );\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tcontainsPoint: function ( point ) {\\n\\n    \\t\\tif ( point.x < this.min.x || point.x > this.max.x ||\\n    \\t\\t\\t\\t point.y < this.min.y || point.y > this.max.y ||\\n    \\t\\t\\t\\t point.z < this.min.z || point.z > this.max.z ) {\\n\\n    \\t\\t\\treturn false;\\n\\n    \\t\\t}\\n\\n    \\t\\treturn true;\\n\\n    \\t},\\n\\n    \\tcontainsBox: function ( box ) {\\n\\n    \\t\\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\\n    \\t\\t\\t ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) &&\\n    \\t\\t\\t ( this.min.z <= box.min.z ) && ( box.max.z <= this.max.z ) ) {\\n\\n    \\t\\t\\treturn true;\\n\\n    \\t\\t}\\n\\n    \\t\\treturn false;\\n\\n    \\t},\\n\\n    \\tgetParameter: function ( point, optionalTarget ) {\\n\\n    \\t\\t// This can potentially have a divide by zero if the box\\n    \\t\\t// has a size dimension of 0.\\n\\n    \\t\\tvar result = optionalTarget || new Vector3();\\n\\n    \\t\\treturn result.set(\\n    \\t\\t\\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\\n    \\t\\t\\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\\n    \\t\\t\\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\\n    \\t\\t);\\n\\n    \\t},\\n\\n    \\tintersectsBox: function ( box ) {\\n\\n    \\t\\t// using 6 splitting planes to rule out intersections.\\n\\n    \\t\\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\\n    \\t\\t\\t\\t box.max.y < this.min.y || box.min.y > this.max.y ||\\n    \\t\\t\\t\\t box.max.z < this.min.z || box.min.z > this.max.z ) {\\n\\n    \\t\\t\\treturn false;\\n\\n    \\t\\t}\\n\\n    \\t\\treturn true;\\n\\n    \\t},\\n\\n    \\tintersectsSphere: ( function () {\\n\\n    \\t\\tvar closestPoint;\\n\\n    \\t\\treturn function intersectsSphere( sphere ) {\\n\\n    \\t\\t\\tif ( closestPoint === undefined ) closestPoint = new Vector3();\\n\\n    \\t\\t\\t// Find the point on the AABB closest to the sphere center.\\n    \\t\\t\\tthis.clampPoint( sphere.center, closestPoint );\\n\\n    \\t\\t\\t// If that point is inside the sphere, the AABB and sphere intersect.\\n    \\t\\t\\treturn closestPoint.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\\n\\n    \\t\\t};\\n\\n    \\t} )(),\\n\\n    \\tintersectsPlane: function ( plane ) {\\n\\n    \\t\\t// We compute the minimum and maximum dot product values. If those values\\n    \\t\\t// are on the same side (back or front) of the plane, then there is no intersection.\\n\\n    \\t\\tvar min, max;\\n\\n    \\t\\tif ( plane.normal.x > 0 ) {\\n\\n    \\t\\t\\tmin = plane.normal.x * this.min.x;\\n    \\t\\t\\tmax = plane.normal.x * this.max.x;\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\tmin = plane.normal.x * this.max.x;\\n    \\t\\t\\tmax = plane.normal.x * this.min.x;\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( plane.normal.y > 0 ) {\\n\\n    \\t\\t\\tmin += plane.normal.y * this.min.y;\\n    \\t\\t\\tmax += plane.normal.y * this.max.y;\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\tmin += plane.normal.y * this.max.y;\\n    \\t\\t\\tmax += plane.normal.y * this.min.y;\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( plane.normal.z > 0 ) {\\n\\n    \\t\\t\\tmin += plane.normal.z * this.min.z;\\n    \\t\\t\\tmax += plane.normal.z * this.max.z;\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\tmin += plane.normal.z * this.max.z;\\n    \\t\\t\\tmax += plane.normal.z * this.min.z;\\n\\n    \\t\\t}\\n\\n    \\t\\treturn ( min <= plane.constant && max >= plane.constant );\\n\\n    \\t},\\n\\n    \\tclampPoint: function ( point, optionalTarget ) {\\n\\n    \\t\\tvar result = optionalTarget || new Vector3();\\n    \\t\\treturn result.copy( point ).clamp( this.min, this.max );\\n\\n    \\t},\\n\\n    \\tdistanceToPoint: function () {\\n\\n    \\t\\tvar v1 = new Vector3();\\n\\n    \\t\\treturn function distanceToPoint( point ) {\\n\\n    \\t\\t\\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\\n    \\t\\t\\treturn clampedPoint.sub( point ).length();\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\tgetBoundingSphere: function () {\\n\\n    \\t\\tvar v1 = new Vector3();\\n\\n    \\t\\treturn function getBoundingSphere( optionalTarget ) {\\n\\n    \\t\\t\\tvar result = optionalTarget || new Sphere();\\n\\n    \\t\\t\\tthis.getCenter( result.center );\\n\\n    \\t\\t\\tresult.radius = this.size( v1 ).length() * 0.5;\\n\\n    \\t\\t\\treturn result;\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\tintersect: function ( box ) {\\n\\n    \\t\\tthis.min.max( box.min );\\n    \\t\\tthis.max.min( box.max );\\n\\n    \\t\\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\\n    \\t\\tif( this.isEmpty() ) this.makeEmpty();\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tunion: function ( box ) {\\n\\n    \\t\\tthis.min.min( box.min );\\n    \\t\\tthis.max.max( box.max );\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tapplyMatrix4: function () {\\n\\n    \\t\\tvar points = [\\n    \\t\\t\\tnew Vector3(),\\n    \\t\\t\\tnew Vector3(),\\n    \\t\\t\\tnew Vector3(),\\n    \\t\\t\\tnew Vector3(),\\n    \\t\\t\\tnew Vector3(),\\n    \\t\\t\\tnew Vector3(),\\n    \\t\\t\\tnew Vector3(),\\n    \\t\\t\\tnew Vector3()\\n    \\t\\t];\\n\\n    \\t\\treturn function applyMatrix4( matrix ) {\\n\\n    \\t\\t\\t// transform of empty box is an empty box.\\n    \\t\\t\\tif( this.isEmpty() ) return this;\\n\\n    \\t\\t\\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\\n    \\t\\t\\tpoints[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\\n    \\t\\t\\tpoints[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\\n    \\t\\t\\tpoints[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\\n    \\t\\t\\tpoints[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\\n    \\t\\t\\tpoints[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\\n    \\t\\t\\tpoints[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\\n    \\t\\t\\tpoints[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\\n    \\t\\t\\tpoints[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix );\\t// 111\\n\\n    \\t\\t\\tthis.setFromPoints( points );\\n\\n    \\t\\t\\treturn this;\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\ttranslate: function ( offset ) {\\n\\n    \\t\\tthis.min.add( offset );\\n    \\t\\tthis.max.add( offset );\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tequals: function ( box ) {\\n\\n    \\t\\treturn box.min.equals( this.min ) && box.max.equals( this.max );\\n\\n    \\t}\\n\\n    };\\n\\n    /**\\n     * @author bhouston / http://clara.io\\n     * @author mrdoob / http://mrdoob.com/\\n     */\\n\\n    function Sphere( center, radius ) {\\n\\n    \\tthis.center = ( center !== undefined ) ? center : new Vector3();\\n    \\tthis.radius = ( radius !== undefined ) ? radius : 0;\\n\\n    }\\n\\n    Sphere.prototype = {\\n\\n    \\tconstructor: Sphere,\\n\\n    \\tset: function ( center, radius ) {\\n\\n    \\t\\tthis.center.copy( center );\\n    \\t\\tthis.radius = radius;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsetFromPoints: function () {\\n\\n    \\t\\tvar box = new Box3();\\n\\n    \\t\\treturn function setFromPoints( points, optionalCenter ) {\\n\\n    \\t\\t\\tvar center = this.center;\\n\\n    \\t\\t\\tif ( optionalCenter !== undefined ) {\\n\\n    \\t\\t\\t\\tcenter.copy( optionalCenter );\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\tbox.setFromPoints( points ).getCenter( center );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tvar maxRadiusSq = 0;\\n\\n    \\t\\t\\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\\n\\n    \\t\\t\\t\\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tthis.radius = Math.sqrt( maxRadiusSq );\\n\\n    \\t\\t\\treturn this;\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\tclone: function () {\\n\\n    \\t\\treturn new this.constructor().copy( this );\\n\\n    \\t},\\n\\n    \\tcopy: function ( sphere ) {\\n\\n    \\t\\tthis.center.copy( sphere.center );\\n    \\t\\tthis.radius = sphere.radius;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tempty: function () {\\n\\n    \\t\\treturn ( this.radius <= 0 );\\n\\n    \\t},\\n\\n    \\tcontainsPoint: function ( point ) {\\n\\n    \\t\\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\\n\\n    \\t},\\n\\n    \\tdistanceToPoint: function ( point ) {\\n\\n    \\t\\treturn ( point.distanceTo( this.center ) - this.radius );\\n\\n    \\t},\\n\\n    \\tintersectsSphere: function ( sphere ) {\\n\\n    \\t\\tvar radiusSum = this.radius + sphere.radius;\\n\\n    \\t\\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\\n\\n    \\t},\\n\\n    \\tintersectsBox: function ( box ) {\\n\\n    \\t\\treturn box.intersectsSphere( this );\\n\\n    \\t},\\n\\n    \\tintersectsPlane: function ( plane ) {\\n\\n    \\t\\t// We use the following equation to compute the signed distance from\\n    \\t\\t// the center of the sphere to the plane.\\n    \\t\\t//\\n    \\t\\t// distance = q * n - d\\n    \\t\\t//\\n    \\t\\t// If this distance is greater than the radius of the sphere,\\n    \\t\\t// then there is no intersection.\\n\\n    \\t\\treturn Math.abs( this.center.dot( plane.normal ) - plane.constant ) <= this.radius;\\n\\n    \\t},\\n\\n    \\tclampPoint: function ( point, optionalTarget ) {\\n\\n    \\t\\tvar deltaLengthSq = this.center.distanceToSquared( point );\\n\\n    \\t\\tvar result = optionalTarget || new Vector3();\\n\\n    \\t\\tresult.copy( point );\\n\\n    \\t\\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\\n\\n    \\t\\t\\tresult.sub( this.center ).normalize();\\n    \\t\\t\\tresult.multiplyScalar( this.radius ).add( this.center );\\n\\n    \\t\\t}\\n\\n    \\t\\treturn result;\\n\\n    \\t},\\n\\n    \\tgetBoundingBox: function ( optionalTarget ) {\\n\\n    \\t\\tvar box = optionalTarget || new Box3();\\n\\n    \\t\\tbox.set( this.center, this.center );\\n    \\t\\tbox.expandByScalar( this.radius );\\n\\n    \\t\\treturn box;\\n\\n    \\t},\\n\\n    \\tapplyMatrix4: function ( matrix ) {\\n\\n    \\t\\tthis.center.applyMatrix4( matrix );\\n    \\t\\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\ttranslate: function ( offset ) {\\n\\n    \\t\\tthis.center.add( offset );\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tequals: function ( sphere ) {\\n\\n    \\t\\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\\n\\n    \\t}\\n\\n    };\\n\\n    /**\\n     * @author alteredq / http://alteredqualia.com/\\n     * @author WestLangley / http://github.com/WestLangley\\n     * @author bhouston / http://clara.io\\n     * @author tschw\\n     */\\n\\n    function Matrix3() {\\n\\n    \\tthis.elements = new Float32Array( [\\n\\n    \\t\\t1, 0, 0,\\n    \\t\\t0, 1, 0,\\n    \\t\\t0, 0, 1\\n\\n    \\t] );\\n\\n    \\tif ( arguments.length > 0 ) {\\n\\n    \\t\\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\\n\\n    \\t}\\n\\n    }\\n\\n    Matrix3.prototype = {\\n\\n    \\tconstructor: Matrix3,\\n\\n    \\tisMatrix3: true,\\n\\n    \\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\\n\\n    \\t\\tvar te = this.elements;\\n\\n    \\t\\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\\n    \\t\\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\\n    \\t\\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tidentity: function () {\\n\\n    \\t\\tthis.set(\\n\\n    \\t\\t\\t1, 0, 0,\\n    \\t\\t\\t0, 1, 0,\\n    \\t\\t\\t0, 0, 1\\n\\n    \\t\\t);\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tclone: function () {\\n\\n    \\t\\treturn new this.constructor().fromArray( this.elements );\\n\\n    \\t},\\n\\n    \\tcopy: function ( m ) {\\n\\n    \\t\\tvar me = m.elements;\\n\\n    \\t\\tthis.set(\\n\\n    \\t\\t\\tme[ 0 ], me[ 3 ], me[ 6 ],\\n    \\t\\t\\tme[ 1 ], me[ 4 ], me[ 7 ],\\n    \\t\\t\\tme[ 2 ], me[ 5 ], me[ 8 ]\\n\\n    \\t\\t);\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsetFromMatrix4: function( m ) {\\n\\n    \\t\\tvar me = m.elements;\\n\\n    \\t\\tthis.set(\\n\\n    \\t\\t\\tme[ 0 ], me[ 4 ], me[  8 ],\\n    \\t\\t\\tme[ 1 ], me[ 5 ], me[  9 ],\\n    \\t\\t\\tme[ 2 ], me[ 6 ], me[ 10 ]\\n\\n    \\t\\t);\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tapplyToVector3Array: function () {\\n\\n    \\t\\tvar v1;\\n\\n    \\t\\treturn function applyToVector3Array( array, offset, length ) {\\n\\n    \\t\\t\\tif ( v1 === undefined ) v1 = new Vector3();\\n    \\t\\t\\tif ( offset === undefined ) offset = 0;\\n    \\t\\t\\tif ( length === undefined ) length = array.length;\\n\\n    \\t\\t\\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\\n\\n    \\t\\t\\t\\tv1.fromArray( array, j );\\n    \\t\\t\\t\\tv1.applyMatrix3( this );\\n    \\t\\t\\t\\tv1.toArray( array, j );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\treturn array;\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\tapplyToBuffer: function () {\\n\\n    \\t\\tvar v1;\\n\\n    \\t\\treturn function applyToBuffer( buffer, offset, length ) {\\n\\n    \\t\\t\\tif ( v1 === undefined ) v1 = new Vector3();\\n    \\t\\t\\tif ( offset === undefined ) offset = 0;\\n    \\t\\t\\tif ( length === undefined ) length = buffer.length / buffer.itemSize;\\n\\n    \\t\\t\\tfor ( var i = 0, j = offset; i < length; i ++, j ++ ) {\\n\\n    \\t\\t\\t\\tv1.x = buffer.getX( j );\\n    \\t\\t\\t\\tv1.y = buffer.getY( j );\\n    \\t\\t\\t\\tv1.z = buffer.getZ( j );\\n\\n    \\t\\t\\t\\tv1.applyMatrix3( this );\\n\\n    \\t\\t\\t\\tbuffer.setXYZ( v1.x, v1.y, v1.z );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\treturn buffer;\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\tmultiplyScalar: function ( s ) {\\n\\n    \\t\\tvar te = this.elements;\\n\\n    \\t\\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\\n    \\t\\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\\n    \\t\\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tdeterminant: function () {\\n\\n    \\t\\tvar te = this.elements;\\n\\n    \\t\\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\\n    \\t\\t\\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\\n    \\t\\t\\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\\n\\n    \\t\\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\\n\\n    \\t},\\n\\n    \\tgetInverse: function ( matrix, throwOnDegenerate ) {\\n\\n    \\t\\tif ( (matrix && matrix.isMatrix4) ) {\\n\\n    \\t\\t\\tconsole.error( \\\"THREE.Matrix3.getInverse no longer takes a Matrix4 argument.\\\" );\\n\\n    \\t\\t}\\n\\n    \\t\\tvar me = matrix.elements,\\n    \\t\\t\\tte = this.elements,\\n\\n    \\t\\t\\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ],\\n    \\t\\t\\tn12 = me[ 3 ], n22 = me[ 4 ], n32 = me[ 5 ],\\n    \\t\\t\\tn13 = me[ 6 ], n23 = me[ 7 ], n33 = me[ 8 ],\\n\\n    \\t\\t\\tt11 = n33 * n22 - n32 * n23,\\n    \\t\\t\\tt12 = n32 * n13 - n33 * n12,\\n    \\t\\t\\tt13 = n23 * n12 - n22 * n13,\\n\\n    \\t\\t\\tdet = n11 * t11 + n21 * t12 + n31 * t13;\\n\\n    \\t\\tif ( det === 0 ) {\\n\\n    \\t\\t\\tvar msg = \\\"THREE.Matrix3.getInverse(): can't invert matrix, determinant is 0\\\";\\n\\n    \\t\\t\\tif ( throwOnDegenerate === true ) {\\n\\n    \\t\\t\\t\\tthrow new Error( msg );\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\tconsole.warn( msg );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\treturn this.identity();\\n    \\t\\t}\\n\\n    \\t\\tvar detInv = 1 / det;\\n\\n    \\t\\tte[ 0 ] = t11 * detInv;\\n    \\t\\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\\n    \\t\\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\\n\\n    \\t\\tte[ 3 ] = t12 * detInv;\\n    \\t\\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\\n    \\t\\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\\n\\n    \\t\\tte[ 6 ] = t13 * detInv;\\n    \\t\\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\\n    \\t\\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\ttranspose: function () {\\n\\n    \\t\\tvar tmp, m = this.elements;\\n\\n    \\t\\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\\n    \\t\\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\\n    \\t\\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tflattenToArrayOffset: function ( array, offset ) {\\n\\n    \\t\\tconsole.warn( \\\"THREE.Matrix3: .flattenToArrayOffset is deprecated \\\" +\\n    \\t\\t\\t\\t\\\"- just use .toArray instead.\\\" );\\n\\n    \\t\\treturn this.toArray( array, offset );\\n\\n    \\t},\\n\\n    \\tgetNormalMatrix: function ( matrix4 ) {\\n\\n    \\t\\treturn this.setFromMatrix4( matrix4 ).getInverse( this ).transpose();\\n\\n    \\t},\\n\\n    \\ttransposeIntoArray: function ( r ) {\\n\\n    \\t\\tvar m = this.elements;\\n\\n    \\t\\tr[ 0 ] = m[ 0 ];\\n    \\t\\tr[ 1 ] = m[ 3 ];\\n    \\t\\tr[ 2 ] = m[ 6 ];\\n    \\t\\tr[ 3 ] = m[ 1 ];\\n    \\t\\tr[ 4 ] = m[ 4 ];\\n    \\t\\tr[ 5 ] = m[ 7 ];\\n    \\t\\tr[ 6 ] = m[ 2 ];\\n    \\t\\tr[ 7 ] = m[ 5 ];\\n    \\t\\tr[ 8 ] = m[ 8 ];\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tfromArray: function ( array, offset ) {\\n\\n    \\t\\tif ( offset === undefined ) offset = 0;\\n\\n    \\t\\tfor( var i = 0; i < 9; i ++ ) {\\n\\n    \\t\\t\\tthis.elements[ i ] = array[ i + offset ];\\n\\n    \\t\\t}\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\ttoArray: function ( array, offset ) {\\n\\n    \\t\\tif ( array === undefined ) array = [];\\n    \\t\\tif ( offset === undefined ) offset = 0;\\n\\n    \\t\\tvar te = this.elements;\\n\\n    \\t\\tarray[ offset ] = te[ 0 ];\\n    \\t\\tarray[ offset + 1 ] = te[ 1 ];\\n    \\t\\tarray[ offset + 2 ] = te[ 2 ];\\n\\n    \\t\\tarray[ offset + 3 ] = te[ 3 ];\\n    \\t\\tarray[ offset + 4 ] = te[ 4 ];\\n    \\t\\tarray[ offset + 5 ] = te[ 5 ];\\n\\n    \\t\\tarray[ offset + 6 ] = te[ 6 ];\\n    \\t\\tarray[ offset + 7 ] = te[ 7 ];\\n    \\t\\tarray[ offset + 8 ]  = te[ 8 ];\\n\\n    \\t\\treturn array;\\n\\n    \\t}\\n\\n    };\\n\\n    /**\\n     * @author bhouston / http://clara.io\\n     */\\n\\n    function Plane( normal, constant ) {\\n\\n    \\tthis.normal = ( normal !== undefined ) ? normal : new Vector3( 1, 0, 0 );\\n    \\tthis.constant = ( constant !== undefined ) ? constant : 0;\\n\\n    }\\n\\n    Plane.prototype = {\\n\\n    \\tconstructor: Plane,\\n\\n    \\tset: function ( normal, constant ) {\\n\\n    \\t\\tthis.normal.copy( normal );\\n    \\t\\tthis.constant = constant;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsetComponents: function ( x, y, z, w ) {\\n\\n    \\t\\tthis.normal.set( x, y, z );\\n    \\t\\tthis.constant = w;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\\n\\n    \\t\\tthis.normal.copy( normal );\\n    \\t\\tthis.constant = - point.dot( this.normal );\\t// must be this.normal, not normal, as this.normal is normalized\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsetFromCoplanarPoints: function () {\\n\\n    \\t\\tvar v1 = new Vector3();\\n    \\t\\tvar v2 = new Vector3();\\n\\n    \\t\\treturn function setFromCoplanarPoints( a, b, c ) {\\n\\n    \\t\\t\\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\\n\\n    \\t\\t\\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\\n\\n    \\t\\t\\tthis.setFromNormalAndCoplanarPoint( normal, a );\\n\\n    \\t\\t\\treturn this;\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\tclone: function () {\\n\\n    \\t\\treturn new this.constructor().copy( this );\\n\\n    \\t},\\n\\n    \\tcopy: function ( plane ) {\\n\\n    \\t\\tthis.normal.copy( plane.normal );\\n    \\t\\tthis.constant = plane.constant;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tnormalize: function () {\\n\\n    \\t\\t// Note: will lead to a divide by zero if the plane is invalid.\\n\\n    \\t\\tvar inverseNormalLength = 1.0 / this.normal.length();\\n    \\t\\tthis.normal.multiplyScalar( inverseNormalLength );\\n    \\t\\tthis.constant *= inverseNormalLength;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tnegate: function () {\\n\\n    \\t\\tthis.constant *= - 1;\\n    \\t\\tthis.normal.negate();\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tdistanceToPoint: function ( point ) {\\n\\n    \\t\\treturn this.normal.dot( point ) + this.constant;\\n\\n    \\t},\\n\\n    \\tdistanceToSphere: function ( sphere ) {\\n\\n    \\t\\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\\n\\n    \\t},\\n\\n    \\tprojectPoint: function ( point, optionalTarget ) {\\n\\n    \\t\\treturn this.orthoPoint( point, optionalTarget ).sub( point ).negate();\\n\\n    \\t},\\n\\n    \\torthoPoint: function ( point, optionalTarget ) {\\n\\n    \\t\\tvar perpendicularMagnitude = this.distanceToPoint( point );\\n\\n    \\t\\tvar result = optionalTarget || new Vector3();\\n    \\t\\treturn result.copy( this.normal ).multiplyScalar( perpendicularMagnitude );\\n\\n    \\t},\\n\\n    \\tintersectLine: function () {\\n\\n    \\t\\tvar v1 = new Vector3();\\n\\n    \\t\\treturn function intersectLine( line, optionalTarget ) {\\n\\n    \\t\\t\\tvar result = optionalTarget || new Vector3();\\n\\n    \\t\\t\\tvar direction = line.delta( v1 );\\n\\n    \\t\\t\\tvar denominator = this.normal.dot( direction );\\n\\n    \\t\\t\\tif ( denominator === 0 ) {\\n\\n    \\t\\t\\t\\t// line is coplanar, return origin\\n    \\t\\t\\t\\tif ( this.distanceToPoint( line.start ) === 0 ) {\\n\\n    \\t\\t\\t\\t\\treturn result.copy( line.start );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t// Unsure if this is the correct method to handle this case.\\n    \\t\\t\\t\\treturn undefined;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\\n\\n    \\t\\t\\tif ( t < 0 || t > 1 ) {\\n\\n    \\t\\t\\t\\treturn undefined;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\treturn result.copy( direction ).multiplyScalar( t ).add( line.start );\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\tintersectsLine: function ( line ) {\\n\\n    \\t\\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\\n\\n    \\t\\tvar startSign = this.distanceToPoint( line.start );\\n    \\t\\tvar endSign = this.distanceToPoint( line.end );\\n\\n    \\t\\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\\n\\n    \\t},\\n\\n    \\tintersectsBox: function ( box ) {\\n\\n    \\t\\treturn box.intersectsPlane( this );\\n\\n    \\t},\\n\\n    \\tintersectsSphere: function ( sphere ) {\\n\\n    \\t\\treturn sphere.intersectsPlane( this );\\n\\n    \\t},\\n\\n    \\tcoplanarPoint: function ( optionalTarget ) {\\n\\n    \\t\\tvar result = optionalTarget || new Vector3();\\n    \\t\\treturn result.copy( this.normal ).multiplyScalar( - this.constant );\\n\\n    \\t},\\n\\n    \\tapplyMatrix4: function () {\\n\\n    \\t\\tvar v1 = new Vector3();\\n    \\t\\tvar m1 = new Matrix3();\\n\\n    \\t\\treturn function applyMatrix4( matrix, optionalNormalMatrix ) {\\n\\n    \\t\\t\\tvar referencePoint = this.coplanarPoint( v1 ).applyMatrix4( matrix );\\n\\n    \\t\\t\\t// transform normal based on theory here:\\n    \\t\\t\\t// http://www.songho.ca/opengl/gl_normaltransform.html\\n    \\t\\t\\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\\n    \\t\\t\\tvar normal = this.normal.applyMatrix3( normalMatrix ).normalize();\\n\\n    \\t\\t\\t// recalculate constant (like in setFromNormalAndCoplanarPoint)\\n    \\t\\t\\tthis.constant = - referencePoint.dot( normal );\\n\\n    \\t\\t\\treturn this;\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\ttranslate: function ( offset ) {\\n\\n    \\t\\tthis.constant = this.constant - offset.dot( this.normal );\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tequals: function ( plane ) {\\n\\n    \\t\\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\\n\\n    \\t}\\n\\n    };\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     * @author alteredq / http://alteredqualia.com/\\n     * @author bhouston / http://clara.io\\n     */\\n\\n    function Frustum( p0, p1, p2, p3, p4, p5 ) {\\n\\n    \\tthis.planes = [\\n\\n    \\t\\t( p0 !== undefined ) ? p0 : new Plane(),\\n    \\t\\t( p1 !== undefined ) ? p1 : new Plane(),\\n    \\t\\t( p2 !== undefined ) ? p2 : new Plane(),\\n    \\t\\t( p3 !== undefined ) ? p3 : new Plane(),\\n    \\t\\t( p4 !== undefined ) ? p4 : new Plane(),\\n    \\t\\t( p5 !== undefined ) ? p5 : new Plane()\\n\\n    \\t];\\n\\n    }\\n\\n    Frustum.prototype = {\\n\\n    \\tconstructor: Frustum,\\n\\n    \\tset: function ( p0, p1, p2, p3, p4, p5 ) {\\n\\n    \\t\\tvar planes = this.planes;\\n\\n    \\t\\tplanes[ 0 ].copy( p0 );\\n    \\t\\tplanes[ 1 ].copy( p1 );\\n    \\t\\tplanes[ 2 ].copy( p2 );\\n    \\t\\tplanes[ 3 ].copy( p3 );\\n    \\t\\tplanes[ 4 ].copy( p4 );\\n    \\t\\tplanes[ 5 ].copy( p5 );\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tclone: function () {\\n\\n    \\t\\treturn new this.constructor().copy( this );\\n\\n    \\t},\\n\\n    \\tcopy: function ( frustum ) {\\n\\n    \\t\\tvar planes = this.planes;\\n\\n    \\t\\tfor ( var i = 0; i < 6; i ++ ) {\\n\\n    \\t\\t\\tplanes[ i ].copy( frustum.planes[ i ] );\\n\\n    \\t\\t}\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsetFromMatrix: function ( m ) {\\n\\n    \\t\\tvar planes = this.planes;\\n    \\t\\tvar me = m.elements;\\n    \\t\\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\\n    \\t\\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\\n    \\t\\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\\n    \\t\\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\\n\\n    \\t\\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\\n    \\t\\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\\n    \\t\\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\\n    \\t\\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\\n    \\t\\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\\n    \\t\\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tintersectsObject: function () {\\n\\n    \\t\\tvar sphere = new Sphere();\\n\\n    \\t\\treturn function intersectsObject( object ) {\\n\\n    \\t\\t\\tvar geometry = object.geometry;\\n\\n    \\t\\t\\tif ( geometry.boundingSphere === null )\\n    \\t\\t\\t\\tgeometry.computeBoundingSphere();\\n\\n    \\t\\t\\tsphere.copy( geometry.boundingSphere )\\n    \\t\\t\\t\\t.applyMatrix4( object.matrixWorld );\\n\\n    \\t\\t\\treturn this.intersectsSphere( sphere );\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\tintersectsSprite: function () {\\n\\n    \\t\\tvar sphere = new Sphere();\\n\\n    \\t\\treturn function intersectsSprite( sprite ) {\\n\\n    \\t\\t\\tsphere.center.set( 0, 0, 0 );\\n    \\t\\t\\tsphere.radius = 0.7071067811865476;\\n    \\t\\t\\tsphere.applyMatrix4( sprite.matrixWorld );\\n\\n    \\t\\t\\treturn this.intersectsSphere( sphere );\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\tintersectsSphere: function ( sphere ) {\\n\\n    \\t\\tvar planes = this.planes;\\n    \\t\\tvar center = sphere.center;\\n    \\t\\tvar negRadius = - sphere.radius;\\n\\n    \\t\\tfor ( var i = 0; i < 6; i ++ ) {\\n\\n    \\t\\t\\tvar distance = planes[ i ].distanceToPoint( center );\\n\\n    \\t\\t\\tif ( distance < negRadius ) {\\n\\n    \\t\\t\\t\\treturn false;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\treturn true;\\n\\n    \\t},\\n\\n    \\tintersectsBox: function () {\\n\\n    \\t\\tvar p1 = new Vector3(),\\n    \\t\\t\\tp2 = new Vector3();\\n\\n    \\t\\treturn function intersectsBox( box ) {\\n\\n    \\t\\t\\tvar planes = this.planes;\\n\\n    \\t\\t\\tfor ( var i = 0; i < 6 ; i ++ ) {\\n\\n    \\t\\t\\t\\tvar plane = planes[ i ];\\n\\n    \\t\\t\\t\\tp1.x = plane.normal.x > 0 ? box.min.x : box.max.x;\\n    \\t\\t\\t\\tp2.x = plane.normal.x > 0 ? box.max.x : box.min.x;\\n    \\t\\t\\t\\tp1.y = plane.normal.y > 0 ? box.min.y : box.max.y;\\n    \\t\\t\\t\\tp2.y = plane.normal.y > 0 ? box.max.y : box.min.y;\\n    \\t\\t\\t\\tp1.z = plane.normal.z > 0 ? box.min.z : box.max.z;\\n    \\t\\t\\t\\tp2.z = plane.normal.z > 0 ? box.max.z : box.min.z;\\n\\n    \\t\\t\\t\\tvar d1 = plane.distanceToPoint( p1 );\\n    \\t\\t\\t\\tvar d2 = plane.distanceToPoint( p2 );\\n\\n    \\t\\t\\t\\t// if both outside plane, no intersection\\n\\n    \\t\\t\\t\\tif ( d1 < 0 && d2 < 0 ) {\\n\\n    \\t\\t\\t\\t\\treturn false;\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\treturn true;\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n\\n    \\tcontainsPoint: function ( point ) {\\n\\n    \\t\\tvar planes = this.planes;\\n\\n    \\t\\tfor ( var i = 0; i < 6; i ++ ) {\\n\\n    \\t\\t\\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\\n\\n    \\t\\t\\t\\treturn false;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\treturn true;\\n\\n    \\t}\\n\\n    };\\n\\n    function WebGLShadowMap( _renderer, _lights, _objects, capabilities ) {\\n\\n    \\tvar _gl = _renderer.context,\\n    \\t_state = _renderer.state,\\n    \\t_frustum = new Frustum(),\\n    \\t_projScreenMatrix = new Matrix4(),\\n\\n    \\t_lightShadows = _lights.shadows,\\n\\n    \\t_shadowMapSize = new Vector2(),\\n    \\t_maxShadowMapSize = new Vector2( capabilities.maxTextureSize, capabilities.maxTextureSize ),\\n\\n    \\t_lookTarget = new Vector3(),\\n    \\t_lightPositionWorld = new Vector3(),\\n\\n    \\t_renderList = [],\\n\\n    \\t_MorphingFlag = 1,\\n    \\t_SkinningFlag = 2,\\n\\n    \\t_NumberOfMaterialVariants = ( _MorphingFlag | _SkinningFlag ) + 1,\\n\\n    \\t_depthMaterials = new Array( _NumberOfMaterialVariants ),\\n    \\t_distanceMaterials = new Array( _NumberOfMaterialVariants ),\\n\\n    \\t_materialCache = {};\\n\\n    \\tvar cubeDirections = [\\n    \\t\\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\\n    \\t\\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\\n    \\t];\\n\\n    \\tvar cubeUps = [\\n    \\t\\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\\n    \\t\\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\\tnew Vector3( 0, 0, - 1 )\\n    \\t];\\n\\n    \\tvar cube2DViewPorts = [\\n    \\t\\tnew Vector4(), new Vector4(), new Vector4(),\\n    \\t\\tnew Vector4(), new Vector4(), new Vector4()\\n    \\t];\\n\\n    \\t// init\\n\\n    \\tvar depthMaterialTemplate = new MeshDepthMaterial();\\n    \\tdepthMaterialTemplate.depthPacking = RGBADepthPacking;\\n    \\tdepthMaterialTemplate.clipping = true;\\n\\n    \\tvar distanceShader = ShaderLib[ \\\"distanceRGBA\\\" ];\\n    \\tvar distanceUniforms = exports.UniformsUtils.clone( distanceShader.uniforms );\\n\\n    \\tfor ( var i = 0; i !== _NumberOfMaterialVariants; ++ i ) {\\n\\n    \\t\\tvar useMorphing = ( i & _MorphingFlag ) !== 0;\\n    \\t\\tvar useSkinning = ( i & _SkinningFlag ) !== 0;\\n\\n    \\t\\tvar depthMaterial = depthMaterialTemplate.clone();\\n    \\t\\tdepthMaterial.morphTargets = useMorphing;\\n    \\t\\tdepthMaterial.skinning = useSkinning;\\n\\n    \\t\\t_depthMaterials[ i ] = depthMaterial;\\n\\n    \\t\\tvar distanceMaterial = new ShaderMaterial( {\\n    \\t\\t\\tdefines: {\\n    \\t\\t\\t\\t'USE_SHADOWMAP': ''\\n    \\t\\t\\t},\\n    \\t\\t\\tuniforms: distanceUniforms,\\n    \\t\\t\\tvertexShader: distanceShader.vertexShader,\\n    \\t\\t\\tfragmentShader: distanceShader.fragmentShader,\\n    \\t\\t\\tmorphTargets: useMorphing,\\n    \\t\\t\\tskinning: useSkinning,\\n    \\t\\t\\tclipping: true\\n    \\t\\t} );\\n\\n    \\t\\t_distanceMaterials[ i ] = distanceMaterial;\\n\\n    \\t}\\n\\n    \\t//\\n\\n    \\tvar scope = this;\\n\\n    \\tthis.enabled = false;\\n\\n    \\tthis.autoUpdate = true;\\n    \\tthis.needsUpdate = false;\\n\\n    \\tthis.type = PCFShadowMap;\\n\\n    \\tthis.renderReverseSided = true;\\n    \\tthis.renderSingleSided = true;\\n\\n    \\tthis.render = function ( scene, camera ) {\\n\\n    \\t\\tif ( scope.enabled === false ) return;\\n    \\t\\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\\n\\n    \\t\\tif ( _lightShadows.length === 0 ) return;\\n\\n    \\t\\t// Set GL state for depth map.\\n    \\t\\t_state.clearColor( 1, 1, 1, 1 );\\n    \\t\\t_state.disable( _gl.BLEND );\\n    \\t\\t_state.setDepthTest( true );\\n    \\t\\t_state.setScissorTest( false );\\n\\n    \\t\\t// render depth map\\n\\n    \\t\\tvar faceCount, isPointLight;\\n\\n    \\t\\tfor ( var i = 0, il = _lightShadows.length; i < il; i ++ ) {\\n\\n    \\t\\t\\tvar light = _lightShadows[ i ];\\n    \\t\\t\\tvar shadow = light.shadow;\\n\\n    \\t\\t\\tif ( shadow === undefined ) {\\n\\n    \\t\\t\\t\\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\\n    \\t\\t\\t\\tcontinue;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tvar shadowCamera = shadow.camera;\\n\\n    \\t\\t\\t_shadowMapSize.copy( shadow.mapSize );\\n    \\t\\t\\t_shadowMapSize.min( _maxShadowMapSize );\\n\\n    \\t\\t\\tif ( (light && light.isPointLight) ) {\\n\\n    \\t\\t\\t\\tfaceCount = 6;\\n    \\t\\t\\t\\tisPointLight = true;\\n\\n    \\t\\t\\t\\tvar vpWidth = _shadowMapSize.x;\\n    \\t\\t\\t\\tvar vpHeight = _shadowMapSize.y;\\n\\n    \\t\\t\\t\\t// These viewports map a cube-map onto a 2D texture with the\\n    \\t\\t\\t\\t// following orientation:\\n    \\t\\t\\t\\t//\\n    \\t\\t\\t\\t//  xzXZ\\n    \\t\\t\\t\\t//   y Y\\n    \\t\\t\\t\\t//\\n    \\t\\t\\t\\t// X - Positive x direction\\n    \\t\\t\\t\\t// x - Negative x direction\\n    \\t\\t\\t\\t// Y - Positive y direction\\n    \\t\\t\\t\\t// y - Negative y direction\\n    \\t\\t\\t\\t// Z - Positive z direction\\n    \\t\\t\\t\\t// z - Negative z direction\\n\\n    \\t\\t\\t\\t// positive X\\n    \\t\\t\\t\\tcube2DViewPorts[ 0 ].set( vpWidth * 2, vpHeight, vpWidth, vpHeight );\\n    \\t\\t\\t\\t// negative X\\n    \\t\\t\\t\\tcube2DViewPorts[ 1 ].set( 0, vpHeight, vpWidth, vpHeight );\\n    \\t\\t\\t\\t// positive Z\\n    \\t\\t\\t\\tcube2DViewPorts[ 2 ].set( vpWidth * 3, vpHeight, vpWidth, vpHeight );\\n    \\t\\t\\t\\t// negative Z\\n    \\t\\t\\t\\tcube2DViewPorts[ 3 ].set( vpWidth, vpHeight, vpWidth, vpHeight );\\n    \\t\\t\\t\\t// positive Y\\n    \\t\\t\\t\\tcube2DViewPorts[ 4 ].set( vpWidth * 3, 0, vpWidth, vpHeight );\\n    \\t\\t\\t\\t// negative Y\\n    \\t\\t\\t\\tcube2DViewPorts[ 5 ].set( vpWidth, 0, vpWidth, vpHeight );\\n\\n    \\t\\t\\t\\t_shadowMapSize.x *= 4.0;\\n    \\t\\t\\t\\t_shadowMapSize.y *= 2.0;\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\tfaceCount = 1;\\n    \\t\\t\\t\\tisPointLight = false;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tif ( shadow.map === null ) {\\n\\n    \\t\\t\\t\\tvar pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };\\n\\n    \\t\\t\\t\\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\\n\\n    \\t\\t\\t\\tshadowCamera.updateProjectionMatrix();\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tif ( (shadow && shadow.isSpotLightShadow) ) {\\n\\n    \\t\\t\\t\\tshadow.update( light );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tvar shadowMap = shadow.map;\\n    \\t\\t\\tvar shadowMatrix = shadow.matrix;\\n\\n    \\t\\t\\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\\n    \\t\\t\\tshadowCamera.position.copy( _lightPositionWorld );\\n\\n    \\t\\t\\t_renderer.setRenderTarget( shadowMap );\\n    \\t\\t\\t_renderer.clear();\\n\\n    \\t\\t\\t// render shadow map for each cube face (if omni-directional) or\\n    \\t\\t\\t// run a single pass if not\\n\\n    \\t\\t\\tfor ( var face = 0; face < faceCount; face ++ ) {\\n\\n    \\t\\t\\t\\tif ( isPointLight ) {\\n\\n    \\t\\t\\t\\t\\t_lookTarget.copy( shadowCamera.position );\\n    \\t\\t\\t\\t\\t_lookTarget.add( cubeDirections[ face ] );\\n    \\t\\t\\t\\t\\tshadowCamera.up.copy( cubeUps[ face ] );\\n    \\t\\t\\t\\t\\tshadowCamera.lookAt( _lookTarget );\\n\\n    \\t\\t\\t\\t\\tvar vpDimensions = cube2DViewPorts[ face ];\\n    \\t\\t\\t\\t\\t_state.viewport( vpDimensions );\\n\\n    \\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\t_lookTarget.setFromMatrixPosition( light.target.matrixWorld );\\n    \\t\\t\\t\\t\\tshadowCamera.lookAt( _lookTarget );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\tshadowCamera.updateMatrixWorld();\\n    \\t\\t\\t\\tshadowCamera.matrixWorldInverse.getInverse( shadowCamera.matrixWorld );\\n\\n    \\t\\t\\t\\t// compute shadow matrix\\n\\n    \\t\\t\\t\\tshadowMatrix.set(\\n    \\t\\t\\t\\t\\t0.5, 0.0, 0.0, 0.5,\\n    \\t\\t\\t\\t\\t0.0, 0.5, 0.0, 0.5,\\n    \\t\\t\\t\\t\\t0.0, 0.0, 0.5, 0.5,\\n    \\t\\t\\t\\t\\t0.0, 0.0, 0.0, 1.0\\n    \\t\\t\\t\\t);\\n\\n    \\t\\t\\t\\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\\n    \\t\\t\\t\\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\\n\\n    \\t\\t\\t\\t// update camera matrices and frustum\\n\\n    \\t\\t\\t\\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\\n    \\t\\t\\t\\t_frustum.setFromMatrix( _projScreenMatrix );\\n\\n    \\t\\t\\t\\t// set object matrices & frustum culling\\n\\n    \\t\\t\\t\\t_renderList.length = 0;\\n\\n    \\t\\t\\t\\tprojectObject( scene, camera, shadowCamera );\\n\\n    \\t\\t\\t\\t// render shadow map\\n    \\t\\t\\t\\t// render regular objects\\n\\n    \\t\\t\\t\\tfor ( var j = 0, jl = _renderList.length; j < jl; j ++ ) {\\n\\n    \\t\\t\\t\\t\\tvar object = _renderList[ j ];\\n    \\t\\t\\t\\t\\tvar geometry = _objects.update( object );\\n    \\t\\t\\t\\t\\tvar material = object.material;\\n\\n    \\t\\t\\t\\t\\tif ( (material && material.isMultiMaterial) ) {\\n\\n    \\t\\t\\t\\t\\t\\tvar groups = geometry.groups;\\n    \\t\\t\\t\\t\\t\\tvar materials = material.materials;\\n\\n    \\t\\t\\t\\t\\t\\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\\n\\n    \\t\\t\\t\\t\\t\\t\\tvar group = groups[ k ];\\n    \\t\\t\\t\\t\\t\\t\\tvar groupMaterial = materials[ group.materialIndex ];\\n\\n    \\t\\t\\t\\t\\t\\t\\tif ( groupMaterial.visible === true ) {\\n\\n    \\t\\t\\t\\t\\t\\t\\t\\tvar depthMaterial = getDepthMaterial( object, groupMaterial, isPointLight, _lightPositionWorld );\\n    \\t\\t\\t\\t\\t\\t\\t\\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\\n\\n    \\t\\t\\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\t\\tvar depthMaterial = getDepthMaterial( object, material, isPointLight, _lightPositionWorld );\\n    \\t\\t\\t\\t\\t\\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\t// Restore GL state.\\n    \\t\\tvar clearColor = _renderer.getClearColor(),\\n    \\t\\tclearAlpha = _renderer.getClearAlpha();\\n    \\t\\t_renderer.setClearColor( clearColor, clearAlpha );\\n\\n    \\t\\tscope.needsUpdate = false;\\n\\n    \\t};\\n\\n    \\tfunction getDepthMaterial( object, material, isPointLight, lightPositionWorld ) {\\n\\n    \\t\\tvar geometry = object.geometry;\\n\\n    \\t\\tvar result = null;\\n\\n    \\t\\tvar materialVariants = _depthMaterials;\\n    \\t\\tvar customMaterial = object.customDepthMaterial;\\n\\n    \\t\\tif ( isPointLight ) {\\n\\n    \\t\\t\\tmaterialVariants = _distanceMaterials;\\n    \\t\\t\\tcustomMaterial = object.customDistanceMaterial;\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( ! customMaterial ) {\\n\\n    \\t\\t\\tvar useMorphing = false;\\n\\n    \\t\\t\\tif ( material.morphTargets ) {\\n\\n    \\t\\t\\t\\tif ( (geometry && geometry.isBufferGeometry) ) {\\n\\n    \\t\\t\\t\\t\\tuseMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\\n\\n    \\t\\t\\t\\t} else if ( (geometry && geometry.isGeometry) ) {\\n\\n    \\t\\t\\t\\t\\tuseMorphing = geometry.morphTargets && geometry.morphTargets.length > 0;\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tvar useSkinning = object.isSkinnedMesh && material.skinning;\\n\\n    \\t\\t\\tvar variantIndex = 0;\\n\\n    \\t\\t\\tif ( useMorphing ) variantIndex |= _MorphingFlag;\\n    \\t\\t\\tif ( useSkinning ) variantIndex |= _SkinningFlag;\\n\\n    \\t\\t\\tresult = materialVariants[ variantIndex ];\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\tresult = customMaterial;\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( _renderer.localClippingEnabled &&\\n    \\t\\t\\t material.clipShadows === true &&\\n    \\t\\t\\t\\tmaterial.clippingPlanes.length !== 0 ) {\\n\\n    \\t\\t\\t// in this case we need a unique material instance reflecting the\\n    \\t\\t\\t// appropriate state\\n\\n    \\t\\t\\tvar keyA = result.uuid, keyB = material.uuid;\\n\\n    \\t\\t\\tvar materialsForVariant = _materialCache[ keyA ];\\n\\n    \\t\\t\\tif ( materialsForVariant === undefined ) {\\n\\n    \\t\\t\\t\\tmaterialsForVariant = {};\\n    \\t\\t\\t\\t_materialCache[ keyA ] = materialsForVariant;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tvar cachedMaterial = materialsForVariant[ keyB ];\\n\\n    \\t\\t\\tif ( cachedMaterial === undefined ) {\\n\\n    \\t\\t\\t\\tcachedMaterial = result.clone();\\n    \\t\\t\\t\\tmaterialsForVariant[ keyB ] = cachedMaterial;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tresult = cachedMaterial;\\n\\n    \\t\\t}\\n\\n    \\t\\tresult.visible = material.visible;\\n    \\t\\tresult.wireframe = material.wireframe;\\n\\n    \\t\\tvar side = material.side;\\n\\n    \\t\\tif ( scope.renderSingleSided && side == DoubleSide ) {\\n\\n    \\t\\t\\tside = FrontSide;\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( scope.renderReverseSided ) {\\n\\n    \\t\\t\\tif ( side === FrontSide ) side = BackSide;\\n    \\t\\t\\telse if ( side === BackSide ) side = FrontSide;\\n\\n    \\t\\t}\\n\\n    \\t\\tresult.side = side;\\n\\n    \\t\\tresult.clipShadows = material.clipShadows;\\n    \\t\\tresult.clippingPlanes = material.clippingPlanes;\\n\\n    \\t\\tresult.wireframeLinewidth = material.wireframeLinewidth;\\n    \\t\\tresult.linewidth = material.linewidth;\\n\\n    \\t\\tif ( isPointLight && result.uniforms.lightPos !== undefined ) {\\n\\n    \\t\\t\\tresult.uniforms.lightPos.value.copy( lightPositionWorld );\\n\\n    \\t\\t}\\n\\n    \\t\\treturn result;\\n\\n    \\t}\\n\\n    \\tfunction projectObject( object, camera, shadowCamera ) {\\n\\n    \\t\\tif ( object.visible === false ) return;\\n\\n    \\t\\tvar visible = ( object.layers.mask & camera.layers.mask ) !== 0;\\n\\n    \\t\\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\\n\\n    \\t\\t\\tif ( object.castShadow && ( object.frustumCulled === false || _frustum.intersectsObject( object ) === true ) ) {\\n\\n    \\t\\t\\t\\tvar material = object.material;\\n\\n    \\t\\t\\t\\tif ( material.visible === true ) {\\n\\n    \\t\\t\\t\\t\\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\\n    \\t\\t\\t\\t\\t_renderList.push( object );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\tvar children = object.children;\\n\\n    \\t\\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\\n\\n    \\t\\t\\tprojectObject( children[ i ], camera, shadowCamera );\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    }\\n\\n    /**\\n     * @author bhouston / http://clara.io\\n     */\\n\\n    function Ray( origin, direction ) {\\n\\n    \\tthis.origin = ( origin !== undefined ) ? origin : new Vector3();\\n    \\tthis.direction = ( direction !== undefined ) ? direction : new Vector3();\\n\\n    }\\n\\n    Ray.prototype = {\\n\\n    \\tconstructor: Ray,\\n\\n    \\tset: function ( origin, direction ) {\\n\\n    \\t\\tthis.origin.copy( origin );\\n    \\t\\tthis.direction.copy( direction );\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tclone: function () {\\n\\n    \\t\\treturn new this.constructor().copy( this );\\n\\n    \\t},\\n\\n    \\tcopy: function ( ray ) {\\n\\n    \\t\\tthis.origin.copy( ray.origin );\\n    \\t\\tthis.direction.copy( ray.direction );\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tat: function ( t, optionalTarget ) {\\n\\n    \\t\\tvar result = optionalTarget || new Vector3();\\n\\n    \\t\\treturn result.copy( this.direction ).multiplyScalar( t ).add( this.origin );\\n\\n    \\t},\\n\\n    \\tlookAt: function ( v ) {\\n\\n    \\t\\tthis.direction.copy( v ).sub( this.origin ).normalize();\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\trecast: function () {\\n\\n    \\t\\tvar v1 = new Vector3();\\n\\n    \\t\\treturn function recast( t ) {\\n\\n    \\t\\t\\tthis.origin.copy( this.at( t, v1 ) );\\n\\n    \\t\\t\\treturn this;\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\tclosestPointToPoint: function ( point, optionalTarget ) {\\n\\n    \\t\\tvar result = optionalTarget || new Vector3();\\n    \\t\\tresult.subVectors( point, this.origin );\\n    \\t\\tvar directionDistance = result.dot( this.direction );\\n\\n    \\t\\tif ( directionDistance < 0 ) {\\n\\n    \\t\\t\\treturn result.copy( this.origin );\\n\\n    \\t\\t}\\n\\n    \\t\\treturn result.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\\n\\n    \\t},\\n\\n    \\tdistanceToPoint: function ( point ) {\\n\\n    \\t\\treturn Math.sqrt( this.distanceSqToPoint( point ) );\\n\\n    \\t},\\n\\n    \\tdistanceSqToPoint: function () {\\n\\n    \\t\\tvar v1 = new Vector3();\\n\\n    \\t\\treturn function distanceSqToPoint( point ) {\\n\\n    \\t\\t\\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\\n\\n    \\t\\t\\t// point behind the ray\\n\\n    \\t\\t\\tif ( directionDistance < 0 ) {\\n\\n    \\t\\t\\t\\treturn this.origin.distanceToSquared( point );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\\n\\n    \\t\\t\\treturn v1.distanceToSquared( point );\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\tdistanceSqToSegment: function () {\\n\\n    \\t\\tvar segCenter = new Vector3();\\n    \\t\\tvar segDir = new Vector3();\\n    \\t\\tvar diff = new Vector3();\\n\\n    \\t\\treturn function distanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\\n\\n    \\t\\t\\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\\n    \\t\\t\\t// It returns the min distance between the ray and the segment\\n    \\t\\t\\t// defined by v0 and v1\\n    \\t\\t\\t// It can also set two optional targets :\\n    \\t\\t\\t// - The closest point on the ray\\n    \\t\\t\\t// - The closest point on the segment\\n\\n    \\t\\t\\tsegCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\\n    \\t\\t\\tsegDir.copy( v1 ).sub( v0 ).normalize();\\n    \\t\\t\\tdiff.copy( this.origin ).sub( segCenter );\\n\\n    \\t\\t\\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\\n    \\t\\t\\tvar a01 = - this.direction.dot( segDir );\\n    \\t\\t\\tvar b0 = diff.dot( this.direction );\\n    \\t\\t\\tvar b1 = - diff.dot( segDir );\\n    \\t\\t\\tvar c = diff.lengthSq();\\n    \\t\\t\\tvar det = Math.abs( 1 - a01 * a01 );\\n    \\t\\t\\tvar s0, s1, sqrDist, extDet;\\n\\n    \\t\\t\\tif ( det > 0 ) {\\n\\n    \\t\\t\\t\\t// The ray and segment are not parallel.\\n\\n    \\t\\t\\t\\ts0 = a01 * b1 - b0;\\n    \\t\\t\\t\\ts1 = a01 * b0 - b1;\\n    \\t\\t\\t\\textDet = segExtent * det;\\n\\n    \\t\\t\\t\\tif ( s0 >= 0 ) {\\n\\n    \\t\\t\\t\\t\\tif ( s1 >= - extDet ) {\\n\\n    \\t\\t\\t\\t\\t\\tif ( s1 <= extDet ) {\\n\\n    \\t\\t\\t\\t\\t\\t\\t// region 0\\n    \\t\\t\\t\\t\\t\\t\\t// Minimum at interior points of ray and segment.\\n\\n    \\t\\t\\t\\t\\t\\t\\tvar invDet = 1 / det;\\n    \\t\\t\\t\\t\\t\\t\\ts0 *= invDet;\\n    \\t\\t\\t\\t\\t\\t\\ts1 *= invDet;\\n    \\t\\t\\t\\t\\t\\t\\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\\n\\n    \\t\\t\\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\t\\t\\t// region 1\\n\\n    \\t\\t\\t\\t\\t\\t\\ts1 = segExtent;\\n    \\t\\t\\t\\t\\t\\t\\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\\n    \\t\\t\\t\\t\\t\\t\\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\\n\\n    \\t\\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\t\\t// region 5\\n\\n    \\t\\t\\t\\t\\t\\ts1 = - segExtent;\\n    \\t\\t\\t\\t\\t\\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\\n    \\t\\t\\t\\t\\t\\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\tif ( s1 <= - extDet ) {\\n\\n    \\t\\t\\t\\t\\t\\t// region 4\\n\\n    \\t\\t\\t\\t\\t\\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\\n    \\t\\t\\t\\t\\t\\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\\n    \\t\\t\\t\\t\\t\\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\\n\\n    \\t\\t\\t\\t\\t} else if ( s1 <= extDet ) {\\n\\n    \\t\\t\\t\\t\\t\\t// region 3\\n\\n    \\t\\t\\t\\t\\t\\ts0 = 0;\\n    \\t\\t\\t\\t\\t\\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\\n    \\t\\t\\t\\t\\t\\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\\n\\n    \\t\\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\t\\t// region 2\\n\\n    \\t\\t\\t\\t\\t\\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\\n    \\t\\t\\t\\t\\t\\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\\n    \\t\\t\\t\\t\\t\\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t// Ray and segment are parallel.\\n\\n    \\t\\t\\t\\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\\n    \\t\\t\\t\\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\\n    \\t\\t\\t\\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tif ( optionalPointOnRay ) {\\n\\n    \\t\\t\\t\\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tif ( optionalPointOnSegment ) {\\n\\n    \\t\\t\\t\\toptionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\treturn sqrDist;\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\tintersectSphere: function () {\\n\\n    \\t\\tvar v1 = new Vector3();\\n\\n    \\t\\treturn function intersectSphere( sphere, optionalTarget ) {\\n\\n    \\t\\t\\tv1.subVectors( sphere.center, this.origin );\\n    \\t\\t\\tvar tca = v1.dot( this.direction );\\n    \\t\\t\\tvar d2 = v1.dot( v1 ) - tca * tca;\\n    \\t\\t\\tvar radius2 = sphere.radius * sphere.radius;\\n\\n    \\t\\t\\tif ( d2 > radius2 ) return null;\\n\\n    \\t\\t\\tvar thc = Math.sqrt( radius2 - d2 );\\n\\n    \\t\\t\\t// t0 = first intersect point - entrance on front of sphere\\n    \\t\\t\\tvar t0 = tca - thc;\\n\\n    \\t\\t\\t// t1 = second intersect point - exit point on back of sphere\\n    \\t\\t\\tvar t1 = tca + thc;\\n\\n    \\t\\t\\t// test to see if both t0 and t1 are behind the ray - if so, return null\\n    \\t\\t\\tif ( t0 < 0 && t1 < 0 ) return null;\\n\\n    \\t\\t\\t// test to see if t0 is behind the ray:\\n    \\t\\t\\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\\n    \\t\\t\\t// in order to always return an intersect point that is in front of the ray.\\n    \\t\\t\\tif ( t0 < 0 ) return this.at( t1, optionalTarget );\\n\\n    \\t\\t\\t// else t0 is in front of the ray, so return the first collision point scaled by t0\\n    \\t\\t\\treturn this.at( t0, optionalTarget );\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\tintersectsSphere: function ( sphere ) {\\n\\n    \\t\\treturn this.distanceToPoint( sphere.center ) <= sphere.radius;\\n\\n    \\t},\\n\\n    \\tdistanceToPlane: function ( plane ) {\\n\\n    \\t\\tvar denominator = plane.normal.dot( this.direction );\\n\\n    \\t\\tif ( denominator === 0 ) {\\n\\n    \\t\\t\\t// line is coplanar, return origin\\n    \\t\\t\\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\\n\\n    \\t\\t\\t\\treturn 0;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\t// Null is preferable to undefined since undefined means.... it is undefined\\n\\n    \\t\\t\\treturn null;\\n\\n    \\t\\t}\\n\\n    \\t\\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\\n\\n    \\t\\t// Return if the ray never intersects the plane\\n\\n    \\t\\treturn t >= 0 ? t :  null;\\n\\n    \\t},\\n\\n    \\tintersectPlane: function ( plane, optionalTarget ) {\\n\\n    \\t\\tvar t = this.distanceToPlane( plane );\\n\\n    \\t\\tif ( t === null ) {\\n\\n    \\t\\t\\treturn null;\\n\\n    \\t\\t}\\n\\n    \\t\\treturn this.at( t, optionalTarget );\\n\\n    \\t},\\n\\n\\n\\n    \\tintersectsPlane: function ( plane ) {\\n\\n    \\t\\t// check if the ray lies on the plane first\\n\\n    \\t\\tvar distToPoint = plane.distanceToPoint( this.origin );\\n\\n    \\t\\tif ( distToPoint === 0 ) {\\n\\n    \\t\\t\\treturn true;\\n\\n    \\t\\t}\\n\\n    \\t\\tvar denominator = plane.normal.dot( this.direction );\\n\\n    \\t\\tif ( denominator * distToPoint < 0 ) {\\n\\n    \\t\\t\\treturn true;\\n\\n    \\t\\t}\\n\\n    \\t\\t// ray origin is behind the plane (and is pointing behind it)\\n\\n    \\t\\treturn false;\\n\\n    \\t},\\n\\n    \\tintersectBox: function ( box, optionalTarget ) {\\n\\n    \\t\\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\\n\\n    \\t\\tvar invdirx = 1 / this.direction.x,\\n    \\t\\t\\tinvdiry = 1 / this.direction.y,\\n    \\t\\t\\tinvdirz = 1 / this.direction.z;\\n\\n    \\t\\tvar origin = this.origin;\\n\\n    \\t\\tif ( invdirx >= 0 ) {\\n\\n    \\t\\t\\ttmin = ( box.min.x - origin.x ) * invdirx;\\n    \\t\\t\\ttmax = ( box.max.x - origin.x ) * invdirx;\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\ttmin = ( box.max.x - origin.x ) * invdirx;\\n    \\t\\t\\ttmax = ( box.min.x - origin.x ) * invdirx;\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( invdiry >= 0 ) {\\n\\n    \\t\\t\\ttymin = ( box.min.y - origin.y ) * invdiry;\\n    \\t\\t\\ttymax = ( box.max.y - origin.y ) * invdiry;\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\ttymin = ( box.max.y - origin.y ) * invdiry;\\n    \\t\\t\\ttymax = ( box.min.y - origin.y ) * invdiry;\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\\n\\n    \\t\\t// These lines also handle the case where tmin or tmax is NaN\\n    \\t\\t// (result of 0 * Infinity). x !== x returns true if x is NaN\\n\\n    \\t\\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\\n\\n    \\t\\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\\n\\n    \\t\\tif ( invdirz >= 0 ) {\\n\\n    \\t\\t\\ttzmin = ( box.min.z - origin.z ) * invdirz;\\n    \\t\\t\\ttzmax = ( box.max.z - origin.z ) * invdirz;\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\ttzmin = ( box.max.z - origin.z ) * invdirz;\\n    \\t\\t\\ttzmax = ( box.min.z - origin.z ) * invdirz;\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\\n\\n    \\t\\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\\n\\n    \\t\\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\\n\\n    \\t\\t//return point closest to the ray (positive side)\\n\\n    \\t\\tif ( tmax < 0 ) return null;\\n\\n    \\t\\treturn this.at( tmin >= 0 ? tmin : tmax, optionalTarget );\\n\\n    \\t},\\n\\n    \\tintersectsBox: ( function () {\\n\\n    \\t\\tvar v = new Vector3();\\n\\n    \\t\\treturn function intersectsBox( box ) {\\n\\n    \\t\\t\\treturn this.intersectBox( box, v ) !== null;\\n\\n    \\t\\t};\\n\\n    \\t} )(),\\n\\n    \\tintersectTriangle: function () {\\n\\n    \\t\\t// Compute the offset origin, edges, and normal.\\n    \\t\\tvar diff = new Vector3();\\n    \\t\\tvar edge1 = new Vector3();\\n    \\t\\tvar edge2 = new Vector3();\\n    \\t\\tvar normal = new Vector3();\\n\\n    \\t\\treturn function intersectTriangle( a, b, c, backfaceCulling, optionalTarget ) {\\n\\n    \\t\\t\\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\\n\\n    \\t\\t\\tedge1.subVectors( b, a );\\n    \\t\\t\\tedge2.subVectors( c, a );\\n    \\t\\t\\tnormal.crossVectors( edge1, edge2 );\\n\\n    \\t\\t\\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\\n    \\t\\t\\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\\n    \\t\\t\\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\\n    \\t\\t\\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\\n    \\t\\t\\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\\n    \\t\\t\\tvar DdN = this.direction.dot( normal );\\n    \\t\\t\\tvar sign;\\n\\n    \\t\\t\\tif ( DdN > 0 ) {\\n\\n    \\t\\t\\t\\tif ( backfaceCulling ) return null;\\n    \\t\\t\\t\\tsign = 1;\\n\\n    \\t\\t\\t} else if ( DdN < 0 ) {\\n\\n    \\t\\t\\t\\tsign = - 1;\\n    \\t\\t\\t\\tDdN = - DdN;\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\treturn null;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tdiff.subVectors( this.origin, a );\\n    \\t\\t\\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\\n\\n    \\t\\t\\t// b1 < 0, no intersection\\n    \\t\\t\\tif ( DdQxE2 < 0 ) {\\n\\n    \\t\\t\\t\\treturn null;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\\n\\n    \\t\\t\\t// b2 < 0, no intersection\\n    \\t\\t\\tif ( DdE1xQ < 0 ) {\\n\\n    \\t\\t\\t\\treturn null;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\t// b1+b2 > 1, no intersection\\n    \\t\\t\\tif ( DdQxE2 + DdE1xQ > DdN ) {\\n\\n    \\t\\t\\t\\treturn null;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\t// Line intersects triangle, check if ray does.\\n    \\t\\t\\tvar QdN = - sign * diff.dot( normal );\\n\\n    \\t\\t\\t// t < 0, no intersection\\n    \\t\\t\\tif ( QdN < 0 ) {\\n\\n    \\t\\t\\t\\treturn null;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\t// Ray intersects triangle.\\n    \\t\\t\\treturn this.at( QdN / DdN, optionalTarget );\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\tapplyMatrix4: function ( matrix4 ) {\\n\\n    \\t\\tthis.direction.add( this.origin ).applyMatrix4( matrix4 );\\n    \\t\\tthis.origin.applyMatrix4( matrix4 );\\n    \\t\\tthis.direction.sub( this.origin );\\n    \\t\\tthis.direction.normalize();\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tequals: function ( ray ) {\\n\\n    \\t\\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\\n\\n    \\t}\\n\\n    };\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     * @author WestLangley / http://github.com/WestLangley\\n     * @author bhouston / http://clara.io\\n     */\\n\\n    function Euler( x, y, z, order ) {\\n\\n    \\tthis._x = x || 0;\\n    \\tthis._y = y || 0;\\n    \\tthis._z = z || 0;\\n    \\tthis._order = order || Euler.DefaultOrder;\\n\\n    }\\n\\n    Euler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\\n\\n    Euler.DefaultOrder = 'XYZ';\\n\\n    Euler.prototype = {\\n\\n    \\tconstructor: Euler,\\n\\n    \\tisEuler: true,\\n\\n    \\tget x () {\\n\\n    \\t\\treturn this._x;\\n\\n    \\t},\\n\\n    \\tset x ( value ) {\\n\\n    \\t\\tthis._x = value;\\n    \\t\\tthis.onChangeCallback();\\n\\n    \\t},\\n\\n    \\tget y () {\\n\\n    \\t\\treturn this._y;\\n\\n    \\t},\\n\\n    \\tset y ( value ) {\\n\\n    \\t\\tthis._y = value;\\n    \\t\\tthis.onChangeCallback();\\n\\n    \\t},\\n\\n    \\tget z () {\\n\\n    \\t\\treturn this._z;\\n\\n    \\t},\\n\\n    \\tset z ( value ) {\\n\\n    \\t\\tthis._z = value;\\n    \\t\\tthis.onChangeCallback();\\n\\n    \\t},\\n\\n    \\tget order () {\\n\\n    \\t\\treturn this._order;\\n\\n    \\t},\\n\\n    \\tset order ( value ) {\\n\\n    \\t\\tthis._order = value;\\n    \\t\\tthis.onChangeCallback();\\n\\n    \\t},\\n\\n    \\tset: function ( x, y, z, order ) {\\n\\n    \\t\\tthis._x = x;\\n    \\t\\tthis._y = y;\\n    \\t\\tthis._z = z;\\n    \\t\\tthis._order = order || this._order;\\n\\n    \\t\\tthis.onChangeCallback();\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tclone: function () {\\n\\n    \\t\\treturn new this.constructor( this._x, this._y, this._z, this._order );\\n\\n    \\t},\\n\\n    \\tcopy: function ( euler ) {\\n\\n    \\t\\tthis._x = euler._x;\\n    \\t\\tthis._y = euler._y;\\n    \\t\\tthis._z = euler._z;\\n    \\t\\tthis._order = euler._order;\\n\\n    \\t\\tthis.onChangeCallback();\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsetFromRotationMatrix: function ( m, order, update ) {\\n\\n    \\t\\tvar clamp = exports.Math.clamp;\\n\\n    \\t\\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\\n\\n    \\t\\tvar te = m.elements;\\n    \\t\\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\\n    \\t\\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\\n    \\t\\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\\n\\n    \\t\\torder = order || this._order;\\n\\n    \\t\\tif ( order === 'XYZ' ) {\\n\\n    \\t\\t\\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\\n\\n    \\t\\t\\tif ( Math.abs( m13 ) < 0.99999 ) {\\n\\n    \\t\\t\\t\\tthis._x = Math.atan2( - m23, m33 );\\n    \\t\\t\\t\\tthis._z = Math.atan2( - m12, m11 );\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\tthis._x = Math.atan2( m32, m22 );\\n    \\t\\t\\t\\tthis._z = 0;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t} else if ( order === 'YXZ' ) {\\n\\n    \\t\\t\\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\\n\\n    \\t\\t\\tif ( Math.abs( m23 ) < 0.99999 ) {\\n\\n    \\t\\t\\t\\tthis._y = Math.atan2( m13, m33 );\\n    \\t\\t\\t\\tthis._z = Math.atan2( m21, m22 );\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\tthis._y = Math.atan2( - m31, m11 );\\n    \\t\\t\\t\\tthis._z = 0;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t} else if ( order === 'ZXY' ) {\\n\\n    \\t\\t\\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\\n\\n    \\t\\t\\tif ( Math.abs( m32 ) < 0.99999 ) {\\n\\n    \\t\\t\\t\\tthis._y = Math.atan2( - m31, m33 );\\n    \\t\\t\\t\\tthis._z = Math.atan2( - m12, m22 );\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\tthis._y = 0;\\n    \\t\\t\\t\\tthis._z = Math.atan2( m21, m11 );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t} else if ( order === 'ZYX' ) {\\n\\n    \\t\\t\\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\\n\\n    \\t\\t\\tif ( Math.abs( m31 ) < 0.99999 ) {\\n\\n    \\t\\t\\t\\tthis._x = Math.atan2( m32, m33 );\\n    \\t\\t\\t\\tthis._z = Math.atan2( m21, m11 );\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\tthis._x = 0;\\n    \\t\\t\\t\\tthis._z = Math.atan2( - m12, m22 );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t} else if ( order === 'YZX' ) {\\n\\n    \\t\\t\\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\\n\\n    \\t\\t\\tif ( Math.abs( m21 ) < 0.99999 ) {\\n\\n    \\t\\t\\t\\tthis._x = Math.atan2( - m23, m22 );\\n    \\t\\t\\t\\tthis._y = Math.atan2( - m31, m11 );\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\tthis._x = 0;\\n    \\t\\t\\t\\tthis._y = Math.atan2( m13, m33 );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t} else if ( order === 'XZY' ) {\\n\\n    \\t\\t\\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\\n\\n    \\t\\t\\tif ( Math.abs( m12 ) < 0.99999 ) {\\n\\n    \\t\\t\\t\\tthis._x = Math.atan2( m32, m22 );\\n    \\t\\t\\t\\tthis._y = Math.atan2( m13, m11 );\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\tthis._x = Math.atan2( - m23, m33 );\\n    \\t\\t\\t\\tthis._y = 0;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order );\\n\\n    \\t\\t}\\n\\n    \\t\\tthis._order = order;\\n\\n    \\t\\tif ( update !== false ) this.onChangeCallback();\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsetFromQuaternion: function () {\\n\\n    \\t\\tvar matrix;\\n\\n    \\t\\treturn function setFromQuaternion( q, order, update ) {\\n\\n    \\t\\t\\tif ( matrix === undefined ) matrix = new Matrix4();\\n\\n    \\t\\t\\tmatrix.makeRotationFromQuaternion( q );\\n\\n    \\t\\t\\treturn this.setFromRotationMatrix( matrix, order, update );\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\tsetFromVector3: function ( v, order ) {\\n\\n    \\t\\treturn this.set( v.x, v.y, v.z, order || this._order );\\n\\n    \\t},\\n\\n    \\treorder: function () {\\n\\n    \\t\\t// WARNING: this discards revolution information -bhouston\\n\\n    \\t\\tvar q = new Quaternion();\\n\\n    \\t\\treturn function reorder( newOrder ) {\\n\\n    \\t\\t\\tq.setFromEuler( this );\\n\\n    \\t\\t\\treturn this.setFromQuaternion( q, newOrder );\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\tequals: function ( euler ) {\\n\\n    \\t\\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\\n\\n    \\t},\\n\\n    \\tfromArray: function ( array ) {\\n\\n    \\t\\tthis._x = array[ 0 ];\\n    \\t\\tthis._y = array[ 1 ];\\n    \\t\\tthis._z = array[ 2 ];\\n    \\t\\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\\n\\n    \\t\\tthis.onChangeCallback();\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\ttoArray: function ( array, offset ) {\\n\\n    \\t\\tif ( array === undefined ) array = [];\\n    \\t\\tif ( offset === undefined ) offset = 0;\\n\\n    \\t\\tarray[ offset ] = this._x;\\n    \\t\\tarray[ offset + 1 ] = this._y;\\n    \\t\\tarray[ offset + 2 ] = this._z;\\n    \\t\\tarray[ offset + 3 ] = this._order;\\n\\n    \\t\\treturn array;\\n\\n    \\t},\\n\\n    \\ttoVector3: function ( optionalResult ) {\\n\\n    \\t\\tif ( optionalResult ) {\\n\\n    \\t\\t\\treturn optionalResult.set( this._x, this._y, this._z );\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\treturn new Vector3( this._x, this._y, this._z );\\n\\n    \\t\\t}\\n\\n    \\t},\\n\\n    \\tonChange: function ( callback ) {\\n\\n    \\t\\tthis.onChangeCallback = callback;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tonChangeCallback: function () {}\\n\\n    };\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     */\\n\\n    function Layers() {\\n\\n    \\tthis.mask = 1;\\n\\n    }\\n\\n    Layers.prototype = {\\n\\n    \\tconstructor: Layers,\\n\\n    \\tset: function ( channel ) {\\n\\n    \\t\\tthis.mask = 1 << channel;\\n\\n    \\t},\\n\\n    \\tenable: function ( channel ) {\\n\\n    \\t\\tthis.mask |= 1 << channel;\\n\\n    \\t},\\n\\n    \\ttoggle: function ( channel ) {\\n\\n    \\t\\tthis.mask ^= 1 << channel;\\n\\n    \\t},\\n\\n    \\tdisable: function ( channel ) {\\n\\n    \\t\\tthis.mask &= ~ ( 1 << channel );\\n\\n    \\t},\\n\\n    \\ttest: function ( layers ) {\\n\\n    \\t\\treturn ( this.mask & layers.mask ) !== 0;\\n\\n    \\t}\\n\\n    };\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     * @author mikael emtinger / http://gomo.se/\\n     * @author alteredq / http://alteredqualia.com/\\n     * @author WestLangley / http://github.com/WestLangley\\n     * @author elephantatwork / www.elephantatwork.ch\\n     */\\n\\n    function Object3D() {\\n\\n    \\tObject.defineProperty( this, 'id', { value: Object3DIdCount() } );\\n\\n    \\tthis.uuid = exports.Math.generateUUID();\\n\\n    \\tthis.name = '';\\n    \\tthis.type = 'Object3D';\\n\\n    \\tthis.parent = null;\\n    \\tthis.children = [];\\n\\n    \\tthis.up = Object3D.DefaultUp.clone();\\n\\n    \\tvar position = new Vector3();\\n    \\tvar rotation = new Euler();\\n    \\tvar quaternion = new Quaternion();\\n    \\tvar scale = new Vector3( 1, 1, 1 );\\n\\n    \\tfunction onRotationChange() {\\n\\n    \\t\\tquaternion.setFromEuler( rotation, false );\\n\\n    \\t}\\n\\n    \\tfunction onQuaternionChange() {\\n\\n    \\t\\trotation.setFromQuaternion( quaternion, undefined, false );\\n\\n    \\t}\\n\\n    \\trotation.onChange( onRotationChange );\\n    \\tquaternion.onChange( onQuaternionChange );\\n\\n    \\tObject.defineProperties( this, {\\n    \\t\\tposition: {\\n    \\t\\t\\tenumerable: true,\\n    \\t\\t\\tvalue: position\\n    \\t\\t},\\n    \\t\\trotation: {\\n    \\t\\t\\tenumerable: true,\\n    \\t\\t\\tvalue: rotation\\n    \\t\\t},\\n    \\t\\tquaternion: {\\n    \\t\\t\\tenumerable: true,\\n    \\t\\t\\tvalue: quaternion\\n    \\t\\t},\\n    \\t\\tscale: {\\n    \\t\\t\\tenumerable: true,\\n    \\t\\t\\tvalue: scale\\n    \\t\\t},\\n    \\t\\tmodelViewMatrix: {\\n    \\t\\t\\tvalue: new Matrix4()\\n    \\t\\t},\\n    \\t\\tnormalMatrix: {\\n    \\t\\t\\tvalue: new Matrix3()\\n    \\t\\t}\\n    \\t} );\\n\\n    \\tthis.matrix = new Matrix4();\\n    \\tthis.matrixWorld = new Matrix4();\\n\\n    \\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\\n    \\tthis.matrixWorldNeedsUpdate = false;\\n\\n    \\tthis.layers = new Layers();\\n    \\tthis.visible = true;\\n\\n    \\tthis.castShadow = false;\\n    \\tthis.receiveShadow = false;\\n\\n    \\tthis.frustumCulled = true;\\n    \\tthis.renderOrder = 0;\\n\\n    \\tthis.userData = {};\\n\\n    \\tthis.onBeforeRender = null;\\n\\n    }\\n\\n    Object3D.DefaultUp = new Vector3( 0, 1, 0 );\\n    Object3D.DefaultMatrixAutoUpdate = true;\\n\\n    Object.assign( Object3D.prototype, EventDispatcher.prototype, {\\n\\n    \\tisObject3D: true,\\n\\n    \\tapplyMatrix: function ( matrix ) {\\n\\n    \\t\\tthis.matrix.multiplyMatrices( matrix, this.matrix );\\n\\n    \\t\\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\\n\\n    \\t},\\n\\n    \\tsetRotationFromAxisAngle: function ( axis, angle ) {\\n\\n    \\t\\t// assumes axis is normalized\\n\\n    \\t\\tthis.quaternion.setFromAxisAngle( axis, angle );\\n\\n    \\t},\\n\\n    \\tsetRotationFromEuler: function ( euler ) {\\n\\n    \\t\\tthis.quaternion.setFromEuler( euler, true );\\n\\n    \\t},\\n\\n    \\tsetRotationFromMatrix: function ( m ) {\\n\\n    \\t\\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\\n\\n    \\t\\tthis.quaternion.setFromRotationMatrix( m );\\n\\n    \\t},\\n\\n    \\tsetRotationFromQuaternion: function ( q ) {\\n\\n    \\t\\t// assumes q is normalized\\n\\n    \\t\\tthis.quaternion.copy( q );\\n\\n    \\t},\\n\\n    \\trotateOnAxis: function () {\\n\\n    \\t\\t// rotate object on axis in object space\\n    \\t\\t// axis is assumed to be normalized\\n\\n    \\t\\tvar q1 = new Quaternion();\\n\\n    \\t\\treturn function rotateOnAxis( axis, angle ) {\\n\\n    \\t\\t\\tq1.setFromAxisAngle( axis, angle );\\n\\n    \\t\\t\\tthis.quaternion.multiply( q1 );\\n\\n    \\t\\t\\treturn this;\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\trotateX: function () {\\n\\n    \\t\\tvar v1 = new Vector3( 1, 0, 0 );\\n\\n    \\t\\treturn function rotateX( angle ) {\\n\\n    \\t\\t\\treturn this.rotateOnAxis( v1, angle );\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\trotateY: function () {\\n\\n    \\t\\tvar v1 = new Vector3( 0, 1, 0 );\\n\\n    \\t\\treturn function rotateY( angle ) {\\n\\n    \\t\\t\\treturn this.rotateOnAxis( v1, angle );\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\trotateZ: function () {\\n\\n    \\t\\tvar v1 = new Vector3( 0, 0, 1 );\\n\\n    \\t\\treturn function rotateZ( angle ) {\\n\\n    \\t\\t\\treturn this.rotateOnAxis( v1, angle );\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\ttranslateOnAxis: function () {\\n\\n    \\t\\t// translate object by distance along axis in object space\\n    \\t\\t// axis is assumed to be normalized\\n\\n    \\t\\tvar v1 = new Vector3();\\n\\n    \\t\\treturn function translateOnAxis( axis, distance ) {\\n\\n    \\t\\t\\tv1.copy( axis ).applyQuaternion( this.quaternion );\\n\\n    \\t\\t\\tthis.position.add( v1.multiplyScalar( distance ) );\\n\\n    \\t\\t\\treturn this;\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\ttranslateX: function () {\\n\\n    \\t\\tvar v1 = new Vector3( 1, 0, 0 );\\n\\n    \\t\\treturn function translateX( distance ) {\\n\\n    \\t\\t\\treturn this.translateOnAxis( v1, distance );\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\ttranslateY: function () {\\n\\n    \\t\\tvar v1 = new Vector3( 0, 1, 0 );\\n\\n    \\t\\treturn function translateY( distance ) {\\n\\n    \\t\\t\\treturn this.translateOnAxis( v1, distance );\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\ttranslateZ: function () {\\n\\n    \\t\\tvar v1 = new Vector3( 0, 0, 1 );\\n\\n    \\t\\treturn function translateZ( distance ) {\\n\\n    \\t\\t\\treturn this.translateOnAxis( v1, distance );\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\tlocalToWorld: function ( vector ) {\\n\\n    \\t\\treturn vector.applyMatrix4( this.matrixWorld );\\n\\n    \\t},\\n\\n    \\tworldToLocal: function () {\\n\\n    \\t\\tvar m1 = new Matrix4();\\n\\n    \\t\\treturn function worldToLocal( vector ) {\\n\\n    \\t\\t\\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\tlookAt: function () {\\n\\n    \\t\\t// This routine does not support objects with rotated and/or translated parent(s)\\n\\n    \\t\\tvar m1 = new Matrix4();\\n\\n    \\t\\treturn function lookAt( vector ) {\\n\\n    \\t\\t\\tm1.lookAt( vector, this.position, this.up );\\n\\n    \\t\\t\\tthis.quaternion.setFromRotationMatrix( m1 );\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\tadd: function ( object ) {\\n\\n    \\t\\tif ( arguments.length > 1 ) {\\n\\n    \\t\\t\\tfor ( var i = 0; i < arguments.length; i ++ ) {\\n\\n    \\t\\t\\t\\tthis.add( arguments[ i ] );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\treturn this;\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( object === this ) {\\n\\n    \\t\\t\\tconsole.error( \\\"THREE.Object3D.add: object can't be added as a child of itself.\\\", object );\\n    \\t\\t\\treturn this;\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( (object && object.isObject3D) ) {\\n\\n    \\t\\t\\tif ( object.parent !== null ) {\\n\\n    \\t\\t\\t\\tobject.parent.remove( object );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tobject.parent = this;\\n    \\t\\t\\tobject.dispatchEvent( { type: 'added' } );\\n\\n    \\t\\t\\tthis.children.push( object );\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\tconsole.error( \\\"THREE.Object3D.add: object not an instance of THREE.Object3D.\\\", object );\\n\\n    \\t\\t}\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tremove: function ( object ) {\\n\\n    \\t\\tif ( arguments.length > 1 ) {\\n\\n    \\t\\t\\tfor ( var i = 0; i < arguments.length; i ++ ) {\\n\\n    \\t\\t\\t\\tthis.remove( arguments[ i ] );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\tvar index = this.children.indexOf( object );\\n\\n    \\t\\tif ( index !== - 1 ) {\\n\\n    \\t\\t\\tobject.parent = null;\\n\\n    \\t\\t\\tobject.dispatchEvent( { type: 'removed' } );\\n\\n    \\t\\t\\tthis.children.splice( index, 1 );\\n\\n    \\t\\t}\\n\\n    \\t},\\n\\n    \\tgetObjectById: function ( id ) {\\n\\n    \\t\\treturn this.getObjectByProperty( 'id', id );\\n\\n    \\t},\\n\\n    \\tgetObjectByName: function ( name ) {\\n\\n    \\t\\treturn this.getObjectByProperty( 'name', name );\\n\\n    \\t},\\n\\n    \\tgetObjectByProperty: function ( name, value ) {\\n\\n    \\t\\tif ( this[ name ] === value ) return this;\\n\\n    \\t\\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\\n\\n    \\t\\t\\tvar child = this.children[ i ];\\n    \\t\\t\\tvar object = child.getObjectByProperty( name, value );\\n\\n    \\t\\t\\tif ( object !== undefined ) {\\n\\n    \\t\\t\\t\\treturn object;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\treturn undefined;\\n\\n    \\t},\\n\\n    \\tgetWorldPosition: function ( optionalTarget ) {\\n\\n    \\t\\tvar result = optionalTarget || new Vector3();\\n\\n    \\t\\tthis.updateMatrixWorld( true );\\n\\n    \\t\\treturn result.setFromMatrixPosition( this.matrixWorld );\\n\\n    \\t},\\n\\n    \\tgetWorldQuaternion: function () {\\n\\n    \\t\\tvar position = new Vector3();\\n    \\t\\tvar scale = new Vector3();\\n\\n    \\t\\treturn function getWorldQuaternion( optionalTarget ) {\\n\\n    \\t\\t\\tvar result = optionalTarget || new Quaternion();\\n\\n    \\t\\t\\tthis.updateMatrixWorld( true );\\n\\n    \\t\\t\\tthis.matrixWorld.decompose( position, result, scale );\\n\\n    \\t\\t\\treturn result;\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\tgetWorldRotation: function () {\\n\\n    \\t\\tvar quaternion = new Quaternion();\\n\\n    \\t\\treturn function getWorldRotation( optionalTarget ) {\\n\\n    \\t\\t\\tvar result = optionalTarget || new Euler();\\n\\n    \\t\\t\\tthis.getWorldQuaternion( quaternion );\\n\\n    \\t\\t\\treturn result.setFromQuaternion( quaternion, this.rotation.order, false );\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\tgetWorldScale: function () {\\n\\n    \\t\\tvar position = new Vector3();\\n    \\t\\tvar quaternion = new Quaternion();\\n\\n    \\t\\treturn function getWorldScale( optionalTarget ) {\\n\\n    \\t\\t\\tvar result = optionalTarget || new Vector3();\\n\\n    \\t\\t\\tthis.updateMatrixWorld( true );\\n\\n    \\t\\t\\tthis.matrixWorld.decompose( position, quaternion, result );\\n\\n    \\t\\t\\treturn result;\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\tgetWorldDirection: function () {\\n\\n    \\t\\tvar quaternion = new Quaternion();\\n\\n    \\t\\treturn function getWorldDirection( optionalTarget ) {\\n\\n    \\t\\t\\tvar result = optionalTarget || new Vector3();\\n\\n    \\t\\t\\tthis.getWorldQuaternion( quaternion );\\n\\n    \\t\\t\\treturn result.set( 0, 0, 1 ).applyQuaternion( quaternion );\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\traycast: function () {},\\n\\n    \\ttraverse: function ( callback ) {\\n\\n    \\t\\tcallback( this );\\n\\n    \\t\\tvar children = this.children;\\n\\n    \\t\\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\\n\\n    \\t\\t\\tchildren[ i ].traverse( callback );\\n\\n    \\t\\t}\\n\\n    \\t},\\n\\n    \\ttraverseVisible: function ( callback ) {\\n\\n    \\t\\tif ( this.visible === false ) return;\\n\\n    \\t\\tcallback( this );\\n\\n    \\t\\tvar children = this.children;\\n\\n    \\t\\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\\n\\n    \\t\\t\\tchildren[ i ].traverseVisible( callback );\\n\\n    \\t\\t}\\n\\n    \\t},\\n\\n    \\ttraverseAncestors: function ( callback ) {\\n\\n    \\t\\tvar parent = this.parent;\\n\\n    \\t\\tif ( parent !== null ) {\\n\\n    \\t\\t\\tcallback( parent );\\n\\n    \\t\\t\\tparent.traverseAncestors( callback );\\n\\n    \\t\\t}\\n\\n    \\t},\\n\\n    \\tupdateMatrix: function () {\\n\\n    \\t\\tthis.matrix.compose( this.position, this.quaternion, this.scale );\\n\\n    \\t\\tthis.matrixWorldNeedsUpdate = true;\\n\\n    \\t},\\n\\n    \\tupdateMatrixWorld: function ( force ) {\\n\\n    \\t\\tif ( this.matrixAutoUpdate === true ) this.updateMatrix();\\n\\n    \\t\\tif ( this.matrixWorldNeedsUpdate === true || force === true ) {\\n\\n    \\t\\t\\tif ( this.parent === null ) {\\n\\n    \\t\\t\\t\\tthis.matrixWorld.copy( this.matrix );\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tthis.matrixWorldNeedsUpdate = false;\\n\\n    \\t\\t\\tforce = true;\\n\\n    \\t\\t}\\n\\n    \\t\\t// update children\\n\\n    \\t\\tvar children = this.children;\\n\\n    \\t\\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\\n\\n    \\t\\t\\tchildren[ i ].updateMatrixWorld( force );\\n\\n    \\t\\t}\\n\\n    \\t},\\n\\n    \\ttoJSON: function ( meta ) {\\n\\n    \\t\\t// meta is '' when called from JSON.stringify\\n    \\t\\tvar isRootObject = ( meta === undefined || meta === '' );\\n\\n    \\t\\tvar output = {};\\n\\n    \\t\\t// meta is a hash used to collect geometries, materials.\\n    \\t\\t// not providing it implies that this is the root object\\n    \\t\\t// being serialized.\\n    \\t\\tif ( isRootObject ) {\\n\\n    \\t\\t\\t// initialize meta obj\\n    \\t\\t\\tmeta = {\\n    \\t\\t\\t\\tgeometries: {},\\n    \\t\\t\\t\\tmaterials: {},\\n    \\t\\t\\t\\ttextures: {},\\n    \\t\\t\\t\\timages: {}\\n    \\t\\t\\t};\\n\\n    \\t\\t\\toutput.metadata = {\\n    \\t\\t\\t\\tversion: 4.4,\\n    \\t\\t\\t\\ttype: 'Object',\\n    \\t\\t\\t\\tgenerator: 'Object3D.toJSON'\\n    \\t\\t\\t};\\n\\n    \\t\\t}\\n\\n    \\t\\t// standard Object3D serialization\\n\\n    \\t\\tvar object = {};\\n\\n    \\t\\tobject.uuid = this.uuid;\\n    \\t\\tobject.type = this.type;\\n\\n    \\t\\tif ( this.name !== '' ) object.name = this.name;\\n    \\t\\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\\n    \\t\\tif ( this.castShadow === true ) object.castShadow = true;\\n    \\t\\tif ( this.receiveShadow === true ) object.receiveShadow = true;\\n    \\t\\tif ( this.visible === false ) object.visible = false;\\n\\n    \\t\\tobject.matrix = this.matrix.toArray();\\n\\n    \\t\\t//\\n\\n    \\t\\tif ( this.geometry !== undefined ) {\\n\\n    \\t\\t\\tif ( meta.geometries[ this.geometry.uuid ] === undefined ) {\\n\\n    \\t\\t\\t\\tmeta.geometries[ this.geometry.uuid ] = this.geometry.toJSON( meta );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tobject.geometry = this.geometry.uuid;\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( this.material !== undefined ) {\\n\\n    \\t\\t\\tif ( meta.materials[ this.material.uuid ] === undefined ) {\\n\\n    \\t\\t\\t\\tmeta.materials[ this.material.uuid ] = this.material.toJSON( meta );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tobject.material = this.material.uuid;\\n\\n    \\t\\t}\\n\\n    \\t\\t//\\n\\n    \\t\\tif ( this.children.length > 0 ) {\\n\\n    \\t\\t\\tobject.children = [];\\n\\n    \\t\\t\\tfor ( var i = 0; i < this.children.length; i ++ ) {\\n\\n    \\t\\t\\t\\tobject.children.push( this.children[ i ].toJSON( meta ).object );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( isRootObject ) {\\n\\n    \\t\\t\\tvar geometries = extractFromCache( meta.geometries );\\n    \\t\\t\\tvar materials = extractFromCache( meta.materials );\\n    \\t\\t\\tvar textures = extractFromCache( meta.textures );\\n    \\t\\t\\tvar images = extractFromCache( meta.images );\\n\\n    \\t\\t\\tif ( geometries.length > 0 ) output.geometries = geometries;\\n    \\t\\t\\tif ( materials.length > 0 ) output.materials = materials;\\n    \\t\\t\\tif ( textures.length > 0 ) output.textures = textures;\\n    \\t\\t\\tif ( images.length > 0 ) output.images = images;\\n\\n    \\t\\t}\\n\\n    \\t\\toutput.object = object;\\n\\n    \\t\\treturn output;\\n\\n    \\t\\t// extract data from the cache hash\\n    \\t\\t// remove metadata on each item\\n    \\t\\t// and return as array\\n    \\t\\tfunction extractFromCache( cache ) {\\n\\n    \\t\\t\\tvar values = [];\\n    \\t\\t\\tfor ( var key in cache ) {\\n\\n    \\t\\t\\t\\tvar data = cache[ key ];\\n    \\t\\t\\t\\tdelete data.metadata;\\n    \\t\\t\\t\\tvalues.push( data );\\n\\n    \\t\\t\\t}\\n    \\t\\t\\treturn values;\\n\\n    \\t\\t}\\n\\n    \\t},\\n\\n    \\tclone: function ( recursive ) {\\n\\n    \\t\\treturn new this.constructor().copy( this, recursive );\\n\\n    \\t},\\n\\n    \\tcopy: function ( source, recursive ) {\\n\\n    \\t\\tif ( recursive === undefined ) recursive = true;\\n\\n    \\t\\tthis.name = source.name;\\n\\n    \\t\\tthis.up.copy( source.up );\\n\\n    \\t\\tthis.position.copy( source.position );\\n    \\t\\tthis.quaternion.copy( source.quaternion );\\n    \\t\\tthis.scale.copy( source.scale );\\n\\n    \\t\\tthis.matrix.copy( source.matrix );\\n    \\t\\tthis.matrixWorld.copy( source.matrixWorld );\\n\\n    \\t\\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\\n    \\t\\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\\n\\n    \\t\\tthis.visible = source.visible;\\n\\n    \\t\\tthis.castShadow = source.castShadow;\\n    \\t\\tthis.receiveShadow = source.receiveShadow;\\n\\n    \\t\\tthis.frustumCulled = source.frustumCulled;\\n    \\t\\tthis.renderOrder = source.renderOrder;\\n\\n    \\t\\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\\n\\n    \\t\\tif ( recursive === true ) {\\n\\n    \\t\\t\\tfor ( var i = 0; i < source.children.length; i ++ ) {\\n\\n    \\t\\t\\t\\tvar child = source.children[ i ];\\n    \\t\\t\\t\\tthis.add( child.clone() );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\treturn this;\\n\\n    \\t}\\n\\n    } );\\n\\n    var count$2 = 0;\\n    function Object3DIdCount() { return count$2++; };\\n\\n    /**\\n     * @author bhouston / http://clara.io\\n     */\\n\\n    function Line3( start, end ) {\\n\\n    \\tthis.start = ( start !== undefined ) ? start : new Vector3();\\n    \\tthis.end = ( end !== undefined ) ? end : new Vector3();\\n\\n    }\\n\\n    Line3.prototype = {\\n\\n    \\tconstructor: Line3,\\n\\n    \\tset: function ( start, end ) {\\n\\n    \\t\\tthis.start.copy( start );\\n    \\t\\tthis.end.copy( end );\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tclone: function () {\\n\\n    \\t\\treturn new this.constructor().copy( this );\\n\\n    \\t},\\n\\n    \\tcopy: function ( line ) {\\n\\n    \\t\\tthis.start.copy( line.start );\\n    \\t\\tthis.end.copy( line.end );\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tgetCenter: function ( optionalTarget ) {\\n\\n    \\t\\tvar result = optionalTarget || new Vector3();\\n    \\t\\treturn result.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\\n\\n    \\t},\\n\\n    \\tdelta: function ( optionalTarget ) {\\n\\n    \\t\\tvar result = optionalTarget || new Vector3();\\n    \\t\\treturn result.subVectors( this.end, this.start );\\n\\n    \\t},\\n\\n    \\tdistanceSq: function () {\\n\\n    \\t\\treturn this.start.distanceToSquared( this.end );\\n\\n    \\t},\\n\\n    \\tdistance: function () {\\n\\n    \\t\\treturn this.start.distanceTo( this.end );\\n\\n    \\t},\\n\\n    \\tat: function ( t, optionalTarget ) {\\n\\n    \\t\\tvar result = optionalTarget || new Vector3();\\n\\n    \\t\\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\\n\\n    \\t},\\n\\n    \\tclosestPointToPointParameter: function () {\\n\\n    \\t\\tvar startP = new Vector3();\\n    \\t\\tvar startEnd = new Vector3();\\n\\n    \\t\\treturn function closestPointToPointParameter( point, clampToLine ) {\\n\\n    \\t\\t\\tstartP.subVectors( point, this.start );\\n    \\t\\t\\tstartEnd.subVectors( this.end, this.start );\\n\\n    \\t\\t\\tvar startEnd2 = startEnd.dot( startEnd );\\n    \\t\\t\\tvar startEnd_startP = startEnd.dot( startP );\\n\\n    \\t\\t\\tvar t = startEnd_startP / startEnd2;\\n\\n    \\t\\t\\tif ( clampToLine ) {\\n\\n    \\t\\t\\t\\tt = exports.Math.clamp( t, 0, 1 );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\treturn t;\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\tclosestPointToPoint: function ( point, clampToLine, optionalTarget ) {\\n\\n    \\t\\tvar t = this.closestPointToPointParameter( point, clampToLine );\\n\\n    \\t\\tvar result = optionalTarget || new Vector3();\\n\\n    \\t\\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\\n\\n    \\t},\\n\\n    \\tapplyMatrix4: function ( matrix ) {\\n\\n    \\t\\tthis.start.applyMatrix4( matrix );\\n    \\t\\tthis.end.applyMatrix4( matrix );\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tequals: function ( line ) {\\n\\n    \\t\\treturn line.start.equals( this.start ) && line.end.equals( this.end );\\n\\n    \\t}\\n\\n    };\\n\\n    /**\\n     * @author bhouston / http://clara.io\\n     * @author mrdoob / http://mrdoob.com/\\n     */\\n\\n    function Triangle( a, b, c ) {\\n\\n    \\tthis.a = ( a !== undefined ) ? a : new Vector3();\\n    \\tthis.b = ( b !== undefined ) ? b : new Vector3();\\n    \\tthis.c = ( c !== undefined ) ? c : new Vector3();\\n\\n    }\\n\\n    Triangle.normal = function () {\\n\\n    \\tvar v0 = new Vector3();\\n\\n    \\treturn function normal( a, b, c, optionalTarget ) {\\n\\n    \\t\\tvar result = optionalTarget || new Vector3();\\n\\n    \\t\\tresult.subVectors( c, b );\\n    \\t\\tv0.subVectors( a, b );\\n    \\t\\tresult.cross( v0 );\\n\\n    \\t\\tvar resultLengthSq = result.lengthSq();\\n    \\t\\tif ( resultLengthSq > 0 ) {\\n\\n    \\t\\t\\treturn result.multiplyScalar( 1 / Math.sqrt( resultLengthSq ) );\\n\\n    \\t\\t}\\n\\n    \\t\\treturn result.set( 0, 0, 0 );\\n\\n    \\t};\\n\\n    }();\\n\\n    // static/instance method to calculate barycentric coordinates\\n    // based on: http://www.blackpawn.com/texts/pointinpoly/default.html\\n    Triangle.barycoordFromPoint = function () {\\n\\n    \\tvar v0 = new Vector3();\\n    \\tvar v1 = new Vector3();\\n    \\tvar v2 = new Vector3();\\n\\n    \\treturn function barycoordFromPoint( point, a, b, c, optionalTarget ) {\\n\\n    \\t\\tv0.subVectors( c, a );\\n    \\t\\tv1.subVectors( b, a );\\n    \\t\\tv2.subVectors( point, a );\\n\\n    \\t\\tvar dot00 = v0.dot( v0 );\\n    \\t\\tvar dot01 = v0.dot( v1 );\\n    \\t\\tvar dot02 = v0.dot( v2 );\\n    \\t\\tvar dot11 = v1.dot( v1 );\\n    \\t\\tvar dot12 = v1.dot( v2 );\\n\\n    \\t\\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\\n\\n    \\t\\tvar result = optionalTarget || new Vector3();\\n\\n    \\t\\t// collinear or singular triangle\\n    \\t\\tif ( denom === 0 ) {\\n\\n    \\t\\t\\t// arbitrary location outside of triangle?\\n    \\t\\t\\t// not sure if this is the best idea, maybe should be returning undefined\\n    \\t\\t\\treturn result.set( - 2, - 1, - 1 );\\n\\n    \\t\\t}\\n\\n    \\t\\tvar invDenom = 1 / denom;\\n    \\t\\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\\n    \\t\\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\\n\\n    \\t\\t// barycentric coordinates must always sum to 1\\n    \\t\\treturn result.set( 1 - u - v, v, u );\\n\\n    \\t};\\n\\n    }();\\n\\n    Triangle.containsPoint = function () {\\n\\n    \\tvar v1 = new Vector3();\\n\\n    \\treturn function containsPoint( point, a, b, c ) {\\n\\n    \\t\\tvar result = Triangle.barycoordFromPoint( point, a, b, c, v1 );\\n\\n    \\t\\treturn ( result.x >= 0 ) && ( result.y >= 0 ) && ( ( result.x + result.y ) <= 1 );\\n\\n    \\t};\\n\\n    }();\\n\\n    Triangle.prototype = {\\n\\n    \\tconstructor: Triangle,\\n\\n    \\tset: function ( a, b, c ) {\\n\\n    \\t\\tthis.a.copy( a );\\n    \\t\\tthis.b.copy( b );\\n    \\t\\tthis.c.copy( c );\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\\n\\n    \\t\\tthis.a.copy( points[ i0 ] );\\n    \\t\\tthis.b.copy( points[ i1 ] );\\n    \\t\\tthis.c.copy( points[ i2 ] );\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tclone: function () {\\n\\n    \\t\\treturn new this.constructor().copy( this );\\n\\n    \\t},\\n\\n    \\tcopy: function ( triangle ) {\\n\\n    \\t\\tthis.a.copy( triangle.a );\\n    \\t\\tthis.b.copy( triangle.b );\\n    \\t\\tthis.c.copy( triangle.c );\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tarea: function () {\\n\\n    \\t\\tvar v0 = new Vector3();\\n    \\t\\tvar v1 = new Vector3();\\n\\n    \\t\\treturn function area() {\\n\\n    \\t\\t\\tv0.subVectors( this.c, this.b );\\n    \\t\\t\\tv1.subVectors( this.a, this.b );\\n\\n    \\t\\t\\treturn v0.cross( v1 ).length() * 0.5;\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\tmidpoint: function ( optionalTarget ) {\\n\\n    \\t\\tvar result = optionalTarget || new Vector3();\\n    \\t\\treturn result.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\\n\\n    \\t},\\n\\n    \\tnormal: function ( optionalTarget ) {\\n\\n    \\t\\treturn Triangle.normal( this.a, this.b, this.c, optionalTarget );\\n\\n    \\t},\\n\\n    \\tplane: function ( optionalTarget ) {\\n\\n    \\t\\tvar result = optionalTarget || new Plane();\\n\\n    \\t\\treturn result.setFromCoplanarPoints( this.a, this.b, this.c );\\n\\n    \\t},\\n\\n    \\tbarycoordFromPoint: function ( point, optionalTarget ) {\\n\\n    \\t\\treturn Triangle.barycoordFromPoint( point, this.a, this.b, this.c, optionalTarget );\\n\\n    \\t},\\n\\n    \\tcontainsPoint: function ( point ) {\\n\\n    \\t\\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\\n\\n    \\t},\\n\\n    \\tclosestPointToPoint: function () {\\n\\n    \\t\\tvar plane, edgeList, projectedPoint, closestPoint;\\n\\n    \\t\\treturn function closestPointToPoint( point, optionalTarget ) {\\n\\n    \\t\\t\\tif ( plane === undefined ) {\\n\\n    \\t\\t\\t\\tplane = new Plane();\\n    \\t\\t\\t\\tedgeList = [ new Line3(), new Line3(), new Line3() ];\\n    \\t\\t\\t\\tprojectedPoint = new Vector3();\\n    \\t\\t\\t\\tclosestPoint = new Vector3();\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tvar result = optionalTarget || new Vector3();\\n    \\t\\t\\tvar minDistance = Infinity;\\n\\n    \\t\\t\\t// project the point onto the plane of the triangle\\n\\n    \\t\\t\\tplane.setFromCoplanarPoints( this.a, this.b, this.c );\\n    \\t\\t\\tplane.projectPoint( point, projectedPoint );\\n\\n    \\t\\t\\t// check if the projection lies within the triangle\\n\\n    \\t\\t\\tif( this.containsPoint( projectedPoint ) === true ) {\\n\\n    \\t\\t\\t\\t// if so, this is the closest point\\n\\n    \\t\\t\\t\\tresult.copy( projectedPoint );\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t// if not, the point falls outside the triangle. the result is the closest point to the triangle's edges or vertices\\n\\n    \\t\\t\\t\\tedgeList[ 0 ].set( this.a, this.b );\\n    \\t\\t\\t\\tedgeList[ 1 ].set( this.b, this.c );\\n    \\t\\t\\t\\tedgeList[ 2 ].set( this.c, this.a );\\n\\n    \\t\\t\\t\\tfor( var i = 0; i < edgeList.length; i ++ ) {\\n\\n    \\t\\t\\t\\t\\tedgeList[ i ].closestPointToPoint( projectedPoint, true, closestPoint );\\n\\n    \\t\\t\\t\\t\\tvar distance = projectedPoint.distanceToSquared( closestPoint );\\n\\n    \\t\\t\\t\\t\\tif( distance < minDistance ) {\\n\\n    \\t\\t\\t\\t\\t\\tminDistance = distance;\\n\\n    \\t\\t\\t\\t\\t\\tresult.copy( closestPoint );\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\treturn result;\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\tequals: function ( triangle ) {\\n\\n    \\t\\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\\n\\n    \\t}\\n\\n    };\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     * @author alteredq / http://alteredqualia.com/\\n     */\\n\\n    function Face3( a, b, c, normal, color, materialIndex ) {\\n\\n    \\tthis.a = a;\\n    \\tthis.b = b;\\n    \\tthis.c = c;\\n\\n    \\tthis.normal = (normal && normal.isVector3) ? normal : new Vector3();\\n    \\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\\n\\n    \\tthis.color = (color && color.isColor) ? color : new Color();\\n    \\tthis.vertexColors = Array.isArray( color ) ? color : [];\\n\\n    \\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\\n\\n    }\\n\\n    Face3.prototype = {\\n\\n    \\tconstructor: Face3,\\n\\n    \\tclone: function () {\\n\\n    \\t\\treturn new this.constructor().copy( this );\\n\\n    \\t},\\n\\n    \\tcopy: function ( source ) {\\n\\n    \\t\\tthis.a = source.a;\\n    \\t\\tthis.b = source.b;\\n    \\t\\tthis.c = source.c;\\n\\n    \\t\\tthis.normal.copy( source.normal );\\n    \\t\\tthis.color.copy( source.color );\\n\\n    \\t\\tthis.materialIndex = source.materialIndex;\\n\\n    \\t\\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\\n\\n    \\t\\t\\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\\n\\n    \\t\\t}\\n\\n    \\t\\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\\n\\n    \\t\\t\\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\\n\\n    \\t\\t}\\n\\n    \\t\\treturn this;\\n\\n    \\t}\\n\\n    };\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     * @author alteredq / http://alteredqualia.com/\\n     *\\n     * parameters = {\\n     *  color: <hex>,\\n     *  opacity: <float>,\\n     *  map: new THREE.Texture( <Image> ),\\n     *\\n     *  aoMap: new THREE.Texture( <Image> ),\\n     *  aoMapIntensity: <float>\\n     *\\n     *  specularMap: new THREE.Texture( <Image> ),\\n     *\\n     *  alphaMap: new THREE.Texture( <Image> ),\\n     *\\n     *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\\n     *  combine: THREE.Multiply,\\n     *  reflectivity: <float>,\\n     *  refractionRatio: <float>,\\n     *\\n     *  shading: THREE.SmoothShading,\\n     *  depthTest: <bool>,\\n     *  depthWrite: <bool>,\\n     *\\n     *  wireframe: <boolean>,\\n     *  wireframeLinewidth: <float>,\\n     *\\n     *  skinning: <bool>,\\n     *  morphTargets: <bool>\\n     * }\\n     */\\n\\n    function MeshBasicMaterial( parameters ) {\\n\\n    \\tMaterial.call( this );\\n\\n    \\tthis.type = 'MeshBasicMaterial';\\n\\n    \\tthis.color = new Color( 0xffffff ); // emissive\\n\\n    \\tthis.map = null;\\n\\n    \\tthis.aoMap = null;\\n    \\tthis.aoMapIntensity = 1.0;\\n\\n    \\tthis.specularMap = null;\\n\\n    \\tthis.alphaMap = null;\\n\\n    \\tthis.envMap = null;\\n    \\tthis.combine = MultiplyOperation;\\n    \\tthis.reflectivity = 1;\\n    \\tthis.refractionRatio = 0.98;\\n\\n    \\tthis.wireframe = false;\\n    \\tthis.wireframeLinewidth = 1;\\n    \\tthis.wireframeLinecap = 'round';\\n    \\tthis.wireframeLinejoin = 'round';\\n\\n    \\tthis.skinning = false;\\n    \\tthis.morphTargets = false;\\n\\n    \\tthis.lights = false;\\n\\n    \\tthis.setValues( parameters );\\n\\n    }\\n\\n    MeshBasicMaterial.prototype = Object.create( Material.prototype );\\n    MeshBasicMaterial.prototype.constructor = MeshBasicMaterial;\\n\\n    MeshBasicMaterial.prototype.isMeshBasicMaterial = true;\\n\\n    MeshBasicMaterial.prototype.copy = function ( source ) {\\n\\n    \\tMaterial.prototype.copy.call( this, source );\\n\\n    \\tthis.color.copy( source.color );\\n\\n    \\tthis.map = source.map;\\n\\n    \\tthis.aoMap = source.aoMap;\\n    \\tthis.aoMapIntensity = source.aoMapIntensity;\\n\\n    \\tthis.specularMap = source.specularMap;\\n\\n    \\tthis.alphaMap = source.alphaMap;\\n\\n    \\tthis.envMap = source.envMap;\\n    \\tthis.combine = source.combine;\\n    \\tthis.reflectivity = source.reflectivity;\\n    \\tthis.refractionRatio = source.refractionRatio;\\n\\n    \\tthis.wireframe = source.wireframe;\\n    \\tthis.wireframeLinewidth = source.wireframeLinewidth;\\n    \\tthis.wireframeLinecap = source.wireframeLinecap;\\n    \\tthis.wireframeLinejoin = source.wireframeLinejoin;\\n\\n    \\tthis.skinning = source.skinning;\\n    \\tthis.morphTargets = source.morphTargets;\\n\\n    \\treturn this;\\n\\n    };\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     */\\n\\n    function BufferAttribute( array, itemSize, normalized ) {\\n\\n    \\tif ( Array.isArray( array ) ) {\\n\\n    \\t\\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\\n\\n    \\t}\\n\\n    \\tthis.uuid = exports.Math.generateUUID();\\n\\n    \\tthis.array = array;\\n    \\tthis.itemSize = itemSize;\\n    \\tthis.count = array !== undefined ? array.length / itemSize : 0;\\n    \\tthis.normalized = normalized === true;\\n\\n    \\tthis.dynamic = false;\\n    \\tthis.updateRange = { offset: 0, count: - 1 };\\n\\n    \\tthis.version = 0;\\n\\n    }\\n\\n    BufferAttribute.prototype = {\\n\\n    \\tconstructor: BufferAttribute,\\n\\n    \\tisBufferAttribute: true,\\n\\n    \\tset needsUpdate( value ) {\\n\\n    \\t\\tif ( value === true ) this.version ++;\\n\\n    \\t},\\n\\n    \\tsetDynamic: function ( value ) {\\n\\n    \\t\\tthis.dynamic = value;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tcopy: function ( source ) {\\n\\n    \\t\\tthis.array = new source.array.constructor( source.array );\\n    \\t\\tthis.itemSize = source.itemSize;\\n    \\t\\tthis.count = source.count;\\n    \\t\\tthis.normalized = source.normalized;\\n\\n    \\t\\tthis.dynamic = source.dynamic;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tcopyAt: function ( index1, attribute, index2 ) {\\n\\n    \\t\\tindex1 *= this.itemSize;\\n    \\t\\tindex2 *= attribute.itemSize;\\n\\n    \\t\\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\\n\\n    \\t\\t\\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\\n\\n    \\t\\t}\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tcopyArray: function ( array ) {\\n\\n    \\t\\tthis.array.set( array );\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tcopyColorsArray: function ( colors ) {\\n\\n    \\t\\tvar array = this.array, offset = 0;\\n\\n    \\t\\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\\n\\n    \\t\\t\\tvar color = colors[ i ];\\n\\n    \\t\\t\\tif ( color === undefined ) {\\n\\n    \\t\\t\\t\\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\\n    \\t\\t\\t\\tcolor = new Color();\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tarray[ offset ++ ] = color.r;\\n    \\t\\t\\tarray[ offset ++ ] = color.g;\\n    \\t\\t\\tarray[ offset ++ ] = color.b;\\n\\n    \\t\\t}\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tcopyIndicesArray: function ( indices ) {\\n\\n    \\t\\tvar array = this.array, offset = 0;\\n\\n    \\t\\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\\n\\n    \\t\\t\\tvar index = indices[ i ];\\n\\n    \\t\\t\\tarray[ offset ++ ] = index.a;\\n    \\t\\t\\tarray[ offset ++ ] = index.b;\\n    \\t\\t\\tarray[ offset ++ ] = index.c;\\n\\n    \\t\\t}\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tcopyVector2sArray: function ( vectors ) {\\n\\n    \\t\\tvar array = this.array, offset = 0;\\n\\n    \\t\\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\\n\\n    \\t\\t\\tvar vector = vectors[ i ];\\n\\n    \\t\\t\\tif ( vector === undefined ) {\\n\\n    \\t\\t\\t\\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\\n    \\t\\t\\t\\tvector = new Vector2();\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tarray[ offset ++ ] = vector.x;\\n    \\t\\t\\tarray[ offset ++ ] = vector.y;\\n\\n    \\t\\t}\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tcopyVector3sArray: function ( vectors ) {\\n\\n    \\t\\tvar array = this.array, offset = 0;\\n\\n    \\t\\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\\n\\n    \\t\\t\\tvar vector = vectors[ i ];\\n\\n    \\t\\t\\tif ( vector === undefined ) {\\n\\n    \\t\\t\\t\\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\\n    \\t\\t\\t\\tvector = new Vector3();\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tarray[ offset ++ ] = vector.x;\\n    \\t\\t\\tarray[ offset ++ ] = vector.y;\\n    \\t\\t\\tarray[ offset ++ ] = vector.z;\\n\\n    \\t\\t}\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tcopyVector4sArray: function ( vectors ) {\\n\\n    \\t\\tvar array = this.array, offset = 0;\\n\\n    \\t\\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\\n\\n    \\t\\t\\tvar vector = vectors[ i ];\\n\\n    \\t\\t\\tif ( vector === undefined ) {\\n\\n    \\t\\t\\t\\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\\n    \\t\\t\\t\\tvector = new Vector4();\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tarray[ offset ++ ] = vector.x;\\n    \\t\\t\\tarray[ offset ++ ] = vector.y;\\n    \\t\\t\\tarray[ offset ++ ] = vector.z;\\n    \\t\\t\\tarray[ offset ++ ] = vector.w;\\n\\n    \\t\\t}\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tset: function ( value, offset ) {\\n\\n    \\t\\tif ( offset === undefined ) offset = 0;\\n\\n    \\t\\tthis.array.set( value, offset );\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tgetX: function ( index ) {\\n\\n    \\t\\treturn this.array[ index * this.itemSize ];\\n\\n    \\t},\\n\\n    \\tsetX: function ( index, x ) {\\n\\n    \\t\\tthis.array[ index * this.itemSize ] = x;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tgetY: function ( index ) {\\n\\n    \\t\\treturn this.array[ index * this.itemSize + 1 ];\\n\\n    \\t},\\n\\n    \\tsetY: function ( index, y ) {\\n\\n    \\t\\tthis.array[ index * this.itemSize + 1 ] = y;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tgetZ: function ( index ) {\\n\\n    \\t\\treturn this.array[ index * this.itemSize + 2 ];\\n\\n    \\t},\\n\\n    \\tsetZ: function ( index, z ) {\\n\\n    \\t\\tthis.array[ index * this.itemSize + 2 ] = z;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tgetW: function ( index ) {\\n\\n    \\t\\treturn this.array[ index * this.itemSize + 3 ];\\n\\n    \\t},\\n\\n    \\tsetW: function ( index, w ) {\\n\\n    \\t\\tthis.array[ index * this.itemSize + 3 ] = w;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsetXY: function ( index, x, y ) {\\n\\n    \\t\\tindex *= this.itemSize;\\n\\n    \\t\\tthis.array[ index + 0 ] = x;\\n    \\t\\tthis.array[ index + 1 ] = y;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsetXYZ: function ( index, x, y, z ) {\\n\\n    \\t\\tindex *= this.itemSize;\\n\\n    \\t\\tthis.array[ index + 0 ] = x;\\n    \\t\\tthis.array[ index + 1 ] = y;\\n    \\t\\tthis.array[ index + 2 ] = z;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsetXYZW: function ( index, x, y, z, w ) {\\n\\n    \\t\\tindex *= this.itemSize;\\n\\n    \\t\\tthis.array[ index + 0 ] = x;\\n    \\t\\tthis.array[ index + 1 ] = y;\\n    \\t\\tthis.array[ index + 2 ] = z;\\n    \\t\\tthis.array[ index + 3 ] = w;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tclone: function () {\\n\\n    \\t\\treturn new this.constructor().copy( this );\\n\\n    \\t}\\n\\n    };\\n\\n    //\\n\\n    function Int8Attribute( array, itemSize ) {\\n\\n    \\treturn new BufferAttribute( new Int8Array( array ), itemSize );\\n\\n    }\\n\\n    function Uint8Attribute( array, itemSize ) {\\n\\n    \\treturn new BufferAttribute( new Uint8Array( array ), itemSize );\\n\\n    }\\n\\n    function Uint8ClampedAttribute( array, itemSize ) {\\n\\n    \\treturn new BufferAttribute( new Uint8ClampedArray( array ), itemSize );\\n\\n    }\\n\\n    function Int16Attribute( array, itemSize ) {\\n\\n    \\treturn new BufferAttribute( new Int16Array( array ), itemSize );\\n\\n    }\\n\\n    function Uint16Attribute( array, itemSize ) {\\n\\n    \\treturn new BufferAttribute( new Uint16Array( array ), itemSize );\\n\\n    }\\n\\n    function Int32Attribute( array, itemSize ) {\\n\\n    \\treturn new BufferAttribute( new Int32Array( array ), itemSize );\\n\\n    }\\n\\n    function Uint32Attribute( array, itemSize ) {\\n\\n    \\treturn new BufferAttribute( new Uint32Array( array ), itemSize );\\n\\n    }\\n\\n    function Float32Attribute( array, itemSize ) {\\n\\n    \\treturn new BufferAttribute( new Float32Array( array ), itemSize );\\n\\n    }\\n\\n    function Float64Attribute( array, itemSize ) {\\n\\n    \\treturn new BufferAttribute( new Float64Array( array ), itemSize );\\n\\n    }\\n\\n    // Deprecated\\n\\n    function DynamicBufferAttribute( array, itemSize ) {\\n\\n    \\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );\\n    \\treturn new BufferAttribute( array, itemSize ).setDynamic( true );\\n\\n    }\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     * @author kile / http://kile.stravaganza.org/\\n     * @author alteredq / http://alteredqualia.com/\\n     * @author mikael emtinger / http://gomo.se/\\n     * @author zz85 / http://www.lab4games.net/zz85/blog\\n     * @author bhouston / http://clara.io\\n     */\\n\\n    function Geometry() {\\n\\n    \\tObject.defineProperty( this, 'id', { value: GeometryIdCount() } );\\n\\n    \\tthis.uuid = exports.Math.generateUUID();\\n\\n    \\tthis.name = '';\\n    \\tthis.type = 'Geometry';\\n\\n    \\tthis.vertices = [];\\n    \\tthis.colors = [];\\n    \\tthis.faces = [];\\n    \\tthis.faceVertexUvs = [ [] ];\\n\\n    \\tthis.morphTargets = [];\\n    \\tthis.morphNormals = [];\\n\\n    \\tthis.skinWeights = [];\\n    \\tthis.skinIndices = [];\\n\\n    \\tthis.lineDistances = [];\\n\\n    \\tthis.boundingBox = null;\\n    \\tthis.boundingSphere = null;\\n\\n    \\t// update flags\\n\\n    \\tthis.elementsNeedUpdate = false;\\n    \\tthis.verticesNeedUpdate = false;\\n    \\tthis.uvsNeedUpdate = false;\\n    \\tthis.normalsNeedUpdate = false;\\n    \\tthis.colorsNeedUpdate = false;\\n    \\tthis.lineDistancesNeedUpdate = false;\\n    \\tthis.groupsNeedUpdate = false;\\n\\n    }\\n\\n    Object.assign( Geometry.prototype, EventDispatcher.prototype, {\\n\\n    \\tisGeometry: true,\\n\\n    \\tapplyMatrix: function ( matrix ) {\\n\\n    \\t\\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\\n\\n    \\t\\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\\n\\n    \\t\\t\\tvar vertex = this.vertices[ i ];\\n    \\t\\t\\tvertex.applyMatrix4( matrix );\\n\\n    \\t\\t}\\n\\n    \\t\\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\\n\\n    \\t\\t\\tvar face = this.faces[ i ];\\n    \\t\\t\\tface.normal.applyMatrix3( normalMatrix ).normalize();\\n\\n    \\t\\t\\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\\n\\n    \\t\\t\\t\\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( this.boundingBox !== null ) {\\n\\n    \\t\\t\\tthis.computeBoundingBox();\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( this.boundingSphere !== null ) {\\n\\n    \\t\\t\\tthis.computeBoundingSphere();\\n\\n    \\t\\t}\\n\\n    \\t\\tthis.verticesNeedUpdate = true;\\n    \\t\\tthis.normalsNeedUpdate = true;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\trotateX: function () {\\n\\n    \\t\\t// rotate geometry around world x-axis\\n\\n    \\t\\tvar m1;\\n\\n    \\t\\treturn function rotateX( angle ) {\\n\\n    \\t\\t\\tif ( m1 === undefined ) m1 = new Matrix4();\\n\\n    \\t\\t\\tm1.makeRotationX( angle );\\n\\n    \\t\\t\\tthis.applyMatrix( m1 );\\n\\n    \\t\\t\\treturn this;\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\trotateY: function () {\\n\\n    \\t\\t// rotate geometry around world y-axis\\n\\n    \\t\\tvar m1;\\n\\n    \\t\\treturn function rotateY( angle ) {\\n\\n    \\t\\t\\tif ( m1 === undefined ) m1 = new Matrix4();\\n\\n    \\t\\t\\tm1.makeRotationY( angle );\\n\\n    \\t\\t\\tthis.applyMatrix( m1 );\\n\\n    \\t\\t\\treturn this;\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\trotateZ: function () {\\n\\n    \\t\\t// rotate geometry around world z-axis\\n\\n    \\t\\tvar m1;\\n\\n    \\t\\treturn function rotateZ( angle ) {\\n\\n    \\t\\t\\tif ( m1 === undefined ) m1 = new Matrix4();\\n\\n    \\t\\t\\tm1.makeRotationZ( angle );\\n\\n    \\t\\t\\tthis.applyMatrix( m1 );\\n\\n    \\t\\t\\treturn this;\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\ttranslate: function () {\\n\\n    \\t\\t// translate geometry\\n\\n    \\t\\tvar m1;\\n\\n    \\t\\treturn function translate( x, y, z ) {\\n\\n    \\t\\t\\tif ( m1 === undefined ) m1 = new Matrix4();\\n\\n    \\t\\t\\tm1.makeTranslation( x, y, z );\\n\\n    \\t\\t\\tthis.applyMatrix( m1 );\\n\\n    \\t\\t\\treturn this;\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\tscale: function () {\\n\\n    \\t\\t// scale geometry\\n\\n    \\t\\tvar m1;\\n\\n    \\t\\treturn function scale( x, y, z ) {\\n\\n    \\t\\t\\tif ( m1 === undefined ) m1 = new Matrix4();\\n\\n    \\t\\t\\tm1.makeScale( x, y, z );\\n\\n    \\t\\t\\tthis.applyMatrix( m1 );\\n\\n    \\t\\t\\treturn this;\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\tlookAt: function () {\\n\\n    \\t\\tvar obj;\\n\\n    \\t\\treturn function lookAt( vector ) {\\n\\n    \\t\\t\\tif ( obj === undefined ) obj = new Object3D();\\n\\n    \\t\\t\\tobj.lookAt( vector );\\n\\n    \\t\\t\\tobj.updateMatrix();\\n\\n    \\t\\t\\tthis.applyMatrix( obj.matrix );\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\tfromBufferGeometry: function ( geometry ) {\\n\\n    \\t\\tvar scope = this;\\n\\n    \\t\\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\\n    \\t\\tvar attributes = geometry.attributes;\\n\\n    \\t\\tvar positions = attributes.position.array;\\n    \\t\\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\\n    \\t\\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\\n    \\t\\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\\n    \\t\\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\\n\\n    \\t\\tif ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\\n\\n    \\t\\tvar tempNormals = [];\\n    \\t\\tvar tempUVs = [];\\n    \\t\\tvar tempUVs2 = [];\\n\\n    \\t\\tfor ( var i = 0, j = 0; i < positions.length; i += 3, j += 2 ) {\\n\\n    \\t\\t\\tscope.vertices.push( new Vector3( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] ) );\\n\\n    \\t\\t\\tif ( normals !== undefined ) {\\n\\n    \\t\\t\\t\\ttempNormals.push( new Vector3( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] ) );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tif ( colors !== undefined ) {\\n\\n    \\t\\t\\t\\tscope.colors.push( new Color( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] ) );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tif ( uvs !== undefined ) {\\n\\n    \\t\\t\\t\\ttempUVs.push( new Vector2( uvs[ j ], uvs[ j + 1 ] ) );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tif ( uvs2 !== undefined ) {\\n\\n    \\t\\t\\t\\ttempUVs2.push( new Vector2( uvs2[ j ], uvs2[ j + 1 ] ) );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\tfunction addFace( a, b, c, materialIndex ) {\\n\\n    \\t\\t\\tvar vertexNormals = normals !== undefined ? [ tempNormals[ a ].clone(), tempNormals[ b ].clone(), tempNormals[ c ].clone() ] : [];\\n    \\t\\t\\tvar vertexColors = colors !== undefined ? [ scope.colors[ a ].clone(), scope.colors[ b ].clone(), scope.colors[ c ].clone() ] : [];\\n\\n    \\t\\t\\tvar face = new Face3( a, b, c, vertexNormals, vertexColors, materialIndex );\\n\\n    \\t\\t\\tscope.faces.push( face );\\n\\n    \\t\\t\\tif ( uvs !== undefined ) {\\n\\n    \\t\\t\\t\\tscope.faceVertexUvs[ 0 ].push( [ tempUVs[ a ].clone(), tempUVs[ b ].clone(), tempUVs[ c ].clone() ] );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tif ( uvs2 !== undefined ) {\\n\\n    \\t\\t\\t\\tscope.faceVertexUvs[ 1 ].push( [ tempUVs2[ a ].clone(), tempUVs2[ b ].clone(), tempUVs2[ c ].clone() ] );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( indices !== undefined ) {\\n\\n    \\t\\t\\tvar groups = geometry.groups;\\n\\n    \\t\\t\\tif ( groups.length > 0 ) {\\n\\n    \\t\\t\\t\\tfor ( var i = 0; i < groups.length; i ++ ) {\\n\\n    \\t\\t\\t\\t\\tvar group = groups[ i ];\\n\\n    \\t\\t\\t\\t\\tvar start = group.start;\\n    \\t\\t\\t\\t\\tvar count = group.count;\\n\\n    \\t\\t\\t\\t\\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\\n\\n    \\t\\t\\t\\t\\t\\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ], group.materialIndex  );\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\tfor ( var i = 0; i < indices.length; i += 3 ) {\\n\\n    \\t\\t\\t\\t\\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\tfor ( var i = 0; i < positions.length / 3; i += 3 ) {\\n\\n    \\t\\t\\t\\taddFace( i, i + 1, i + 2 );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\tthis.computeFaceNormals();\\n\\n    \\t\\tif ( geometry.boundingBox !== null ) {\\n\\n    \\t\\t\\tthis.boundingBox = geometry.boundingBox.clone();\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( geometry.boundingSphere !== null ) {\\n\\n    \\t\\t\\tthis.boundingSphere = geometry.boundingSphere.clone();\\n\\n    \\t\\t}\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tcenter: function () {\\n\\n    \\t\\tthis.computeBoundingBox();\\n\\n    \\t\\tvar offset = this.boundingBox.getCenter().negate();\\n\\n    \\t\\tthis.translate( offset.x, offset.y, offset.z );\\n\\n    \\t\\treturn offset;\\n\\n    \\t},\\n\\n    \\tnormalize: function () {\\n\\n    \\t\\tthis.computeBoundingSphere();\\n\\n    \\t\\tvar center = this.boundingSphere.center;\\n    \\t\\tvar radius = this.boundingSphere.radius;\\n\\n    \\t\\tvar s = radius === 0 ? 1 : 1.0 / radius;\\n\\n    \\t\\tvar matrix = new Matrix4();\\n    \\t\\tmatrix.set(\\n    \\t\\t\\ts, 0, 0, - s * center.x,\\n    \\t\\t\\t0, s, 0, - s * center.y,\\n    \\t\\t\\t0, 0, s, - s * center.z,\\n    \\t\\t\\t0, 0, 0, 1\\n    \\t\\t);\\n\\n    \\t\\tthis.applyMatrix( matrix );\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tcomputeFaceNormals: function () {\\n\\n    \\t\\tvar cb = new Vector3(), ab = new Vector3();\\n\\n    \\t\\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\\n\\n    \\t\\t\\tvar face = this.faces[ f ];\\n\\n    \\t\\t\\tvar vA = this.vertices[ face.a ];\\n    \\t\\t\\tvar vB = this.vertices[ face.b ];\\n    \\t\\t\\tvar vC = this.vertices[ face.c ];\\n\\n    \\t\\t\\tcb.subVectors( vC, vB );\\n    \\t\\t\\tab.subVectors( vA, vB );\\n    \\t\\t\\tcb.cross( ab );\\n\\n    \\t\\t\\tcb.normalize();\\n\\n    \\t\\t\\tface.normal.copy( cb );\\n\\n    \\t\\t}\\n\\n    \\t},\\n\\n    \\tcomputeVertexNormals: function ( areaWeighted ) {\\n\\n    \\t\\tif ( areaWeighted === undefined ) areaWeighted = true;\\n\\n    \\t\\tvar v, vl, f, fl, face, vertices;\\n\\n    \\t\\tvertices = new Array( this.vertices.length );\\n\\n    \\t\\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\\n\\n    \\t\\t\\tvertices[ v ] = new Vector3();\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( areaWeighted ) {\\n\\n    \\t\\t\\t// vertex normals weighted by triangle areas\\n    \\t\\t\\t// http://www.iquilezles.org/www/articles/normals/normals.htm\\n\\n    \\t\\t\\tvar vA, vB, vC;\\n    \\t\\t\\tvar cb = new Vector3(), ab = new Vector3();\\n\\n    \\t\\t\\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\\n\\n    \\t\\t\\t\\tface = this.faces[ f ];\\n\\n    \\t\\t\\t\\tvA = this.vertices[ face.a ];\\n    \\t\\t\\t\\tvB = this.vertices[ face.b ];\\n    \\t\\t\\t\\tvC = this.vertices[ face.c ];\\n\\n    \\t\\t\\t\\tcb.subVectors( vC, vB );\\n    \\t\\t\\t\\tab.subVectors( vA, vB );\\n    \\t\\t\\t\\tcb.cross( ab );\\n\\n    \\t\\t\\t\\tvertices[ face.a ].add( cb );\\n    \\t\\t\\t\\tvertices[ face.b ].add( cb );\\n    \\t\\t\\t\\tvertices[ face.c ].add( cb );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\\n\\n    \\t\\t\\t\\tface = this.faces[ f ];\\n\\n    \\t\\t\\t\\tvertices[ face.a ].add( face.normal );\\n    \\t\\t\\t\\tvertices[ face.b ].add( face.normal );\\n    \\t\\t\\t\\tvertices[ face.c ].add( face.normal );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\\n\\n    \\t\\t\\tvertices[ v ].normalize();\\n\\n    \\t\\t}\\n\\n    \\t\\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\\n\\n    \\t\\t\\tface = this.faces[ f ];\\n\\n    \\t\\t\\tvar vertexNormals = face.vertexNormals;\\n\\n    \\t\\t\\tif ( vertexNormals.length === 3 ) {\\n\\n    \\t\\t\\t\\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\\n    \\t\\t\\t\\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\\n    \\t\\t\\t\\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\\n    \\t\\t\\t\\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\\n    \\t\\t\\t\\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( this.faces.length > 0 ) {\\n\\n    \\t\\t\\tthis.normalsNeedUpdate = true;\\n\\n    \\t\\t}\\n\\n    \\t},\\n\\n    \\tcomputeMorphNormals: function () {\\n\\n    \\t\\tvar i, il, f, fl, face;\\n\\n    \\t\\t// save original normals\\n    \\t\\t// - create temp variables on first access\\n    \\t\\t//   otherwise just copy (for faster repeated calls)\\n\\n    \\t\\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\\n\\n    \\t\\t\\tface = this.faces[ f ];\\n\\n    \\t\\t\\tif ( ! face.__originalFaceNormal ) {\\n\\n    \\t\\t\\t\\tface.__originalFaceNormal = face.normal.clone();\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\tface.__originalFaceNormal.copy( face.normal );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\\n\\n    \\t\\t\\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\\n\\n    \\t\\t\\t\\tif ( ! face.__originalVertexNormals[ i ] ) {\\n\\n    \\t\\t\\t\\t\\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\\n\\n    \\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\t// use temp geometry to compute face and vertex normals for each morph\\n\\n    \\t\\tvar tmpGeo = new Geometry();\\n    \\t\\ttmpGeo.faces = this.faces;\\n\\n    \\t\\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\\n\\n    \\t\\t\\t// create on first access\\n\\n    \\t\\t\\tif ( ! this.morphNormals[ i ] ) {\\n\\n    \\t\\t\\t\\tthis.morphNormals[ i ] = {};\\n    \\t\\t\\t\\tthis.morphNormals[ i ].faceNormals = [];\\n    \\t\\t\\t\\tthis.morphNormals[ i ].vertexNormals = [];\\n\\n    \\t\\t\\t\\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\\n    \\t\\t\\t\\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\\n\\n    \\t\\t\\t\\tvar faceNormal, vertexNormals;\\n\\n    \\t\\t\\t\\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\\n\\n    \\t\\t\\t\\t\\tfaceNormal = new Vector3();\\n    \\t\\t\\t\\t\\tvertexNormals = { a: new Vector3(), b: new Vector3(), c: new Vector3() };\\n\\n    \\t\\t\\t\\t\\tdstNormalsFace.push( faceNormal );\\n    \\t\\t\\t\\t\\tdstNormalsVertex.push( vertexNormals );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tvar morphNormals = this.morphNormals[ i ];\\n\\n    \\t\\t\\t// set vertices to morph target\\n\\n    \\t\\t\\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\\n\\n    \\t\\t\\t// compute morph normals\\n\\n    \\t\\t\\ttmpGeo.computeFaceNormals();\\n    \\t\\t\\ttmpGeo.computeVertexNormals();\\n\\n    \\t\\t\\t// store morph normals\\n\\n    \\t\\t\\tvar faceNormal, vertexNormals;\\n\\n    \\t\\t\\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\\n\\n    \\t\\t\\t\\tface = this.faces[ f ];\\n\\n    \\t\\t\\t\\tfaceNormal = morphNormals.faceNormals[ f ];\\n    \\t\\t\\t\\tvertexNormals = morphNormals.vertexNormals[ f ];\\n\\n    \\t\\t\\t\\tfaceNormal.copy( face.normal );\\n\\n    \\t\\t\\t\\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\\n    \\t\\t\\t\\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\\n    \\t\\t\\t\\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\t// restore original normals\\n\\n    \\t\\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\\n\\n    \\t\\t\\tface = this.faces[ f ];\\n\\n    \\t\\t\\tface.normal = face.__originalFaceNormal;\\n    \\t\\t\\tface.vertexNormals = face.__originalVertexNormals;\\n\\n    \\t\\t}\\n\\n    \\t},\\n\\n    \\tcomputeTangents: function () {\\n\\n    \\t\\tconsole.warn( 'THREE.Geometry: .computeTangents() has been removed.' );\\n\\n    \\t},\\n\\n    \\tcomputeLineDistances: function () {\\n\\n    \\t\\tvar d = 0;\\n    \\t\\tvar vertices = this.vertices;\\n\\n    \\t\\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\\n\\n    \\t\\t\\tif ( i > 0 ) {\\n\\n    \\t\\t\\t\\td += vertices[ i ].distanceTo( vertices[ i - 1 ] );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tthis.lineDistances[ i ] = d;\\n\\n    \\t\\t}\\n\\n    \\t},\\n\\n    \\tcomputeBoundingBox: function () {\\n\\n    \\t\\tif ( this.boundingBox === null ) {\\n\\n    \\t\\t\\tthis.boundingBox = new Box3();\\n\\n    \\t\\t}\\n\\n    \\t\\tthis.boundingBox.setFromPoints( this.vertices );\\n\\n    \\t},\\n\\n    \\tcomputeBoundingSphere: function () {\\n\\n    \\t\\tif ( this.boundingSphere === null ) {\\n\\n    \\t\\t\\tthis.boundingSphere = new Sphere();\\n\\n    \\t\\t}\\n\\n    \\t\\tthis.boundingSphere.setFromPoints( this.vertices );\\n\\n    \\t},\\n\\n    \\tmerge: function ( geometry, matrix, materialIndexOffset ) {\\n\\n    \\t\\tif ( (geometry && geometry.isGeometry) === false ) {\\n\\n    \\t\\t\\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\\n    \\t\\t\\treturn;\\n\\n    \\t\\t}\\n\\n    \\t\\tvar normalMatrix,\\n    \\t\\tvertexOffset = this.vertices.length,\\n    \\t\\tvertices1 = this.vertices,\\n    \\t\\tvertices2 = geometry.vertices,\\n    \\t\\tfaces1 = this.faces,\\n    \\t\\tfaces2 = geometry.faces,\\n    \\t\\tuvs1 = this.faceVertexUvs[ 0 ],\\n    \\t\\tuvs2 = geometry.faceVertexUvs[ 0 ],\\n    \\t\\tcolors1 = this.colors,\\n    \\t\\tcolors2 = geometry.colors;\\n\\n    \\t\\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\\n\\n    \\t\\tif ( matrix !== undefined ) {\\n\\n    \\t\\t\\tnormalMatrix = new Matrix3().getNormalMatrix( matrix );\\n\\n    \\t\\t}\\n\\n    \\t\\t// vertices\\n\\n    \\t\\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\\n\\n    \\t\\t\\tvar vertex = vertices2[ i ];\\n\\n    \\t\\t\\tvar vertexCopy = vertex.clone();\\n\\n    \\t\\t\\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\\n\\n    \\t\\t\\tvertices1.push( vertexCopy );\\n\\n    \\t\\t}\\n\\n    \\t\\t// colors\\n\\n    \\t\\tfor ( var i = 0, il = colors2.length; i < il; i ++ ) {\\n\\n    \\t\\t\\tcolors1.push( colors2[ i ].clone() );\\n\\n    \\t\\t}\\n\\n    \\t\\t// faces\\n\\n    \\t\\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\\n\\n    \\t\\t\\tvar face = faces2[ i ], faceCopy, normal, color,\\n    \\t\\t\\tfaceVertexNormals = face.vertexNormals,\\n    \\t\\t\\tfaceVertexColors = face.vertexColors;\\n\\n    \\t\\t\\tfaceCopy = new Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\\n    \\t\\t\\tfaceCopy.normal.copy( face.normal );\\n\\n    \\t\\t\\tif ( normalMatrix !== undefined ) {\\n\\n    \\t\\t\\t\\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\\n\\n    \\t\\t\\t\\tnormal = faceVertexNormals[ j ].clone();\\n\\n    \\t\\t\\t\\tif ( normalMatrix !== undefined ) {\\n\\n    \\t\\t\\t\\t\\tnormal.applyMatrix3( normalMatrix ).normalize();\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\tfaceCopy.vertexNormals.push( normal );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tfaceCopy.color.copy( face.color );\\n\\n    \\t\\t\\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\\n\\n    \\t\\t\\t\\tcolor = faceVertexColors[ j ];\\n    \\t\\t\\t\\tfaceCopy.vertexColors.push( color.clone() );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\\n\\n    \\t\\t\\tfaces1.push( faceCopy );\\n\\n    \\t\\t}\\n\\n    \\t\\t// uvs\\n\\n    \\t\\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\\n\\n    \\t\\t\\tvar uv = uvs2[ i ], uvCopy = [];\\n\\n    \\t\\t\\tif ( uv === undefined ) {\\n\\n    \\t\\t\\t\\tcontinue;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\\n\\n    \\t\\t\\t\\tuvCopy.push( uv[ j ].clone() );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tuvs1.push( uvCopy );\\n\\n    \\t\\t}\\n\\n    \\t},\\n\\n    \\tmergeMesh: function ( mesh ) {\\n\\n    \\t\\tif ( (mesh && mesh.isMesh) === false ) {\\n\\n    \\t\\t\\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\\n    \\t\\t\\treturn;\\n\\n    \\t\\t}\\n\\n    \\t\\tmesh.matrixAutoUpdate && mesh.updateMatrix();\\n\\n    \\t\\tthis.merge( mesh.geometry, mesh.matrix );\\n\\n    \\t},\\n\\n    \\t/*\\n    \\t * Checks for duplicate vertices with hashmap.\\n    \\t * Duplicated vertices are removed\\n    \\t * and faces' vertices are updated.\\n    \\t */\\n\\n    \\tmergeVertices: function () {\\n\\n    \\t\\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\\n    \\t\\tvar unique = [], changes = [];\\n\\n    \\t\\tvar v, key;\\n    \\t\\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\\n    \\t\\tvar precision = Math.pow( 10, precisionPoints );\\n    \\t\\tvar i, il, face;\\n    \\t\\tvar indices, j, jl;\\n\\n    \\t\\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\\n\\n    \\t\\t\\tv = this.vertices[ i ];\\n    \\t\\t\\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\\n\\n    \\t\\t\\tif ( verticesMap[ key ] === undefined ) {\\n\\n    \\t\\t\\t\\tverticesMap[ key ] = i;\\n    \\t\\t\\t\\tunique.push( this.vertices[ i ] );\\n    \\t\\t\\t\\tchanges[ i ] = unique.length - 1;\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\\n    \\t\\t\\t\\tchanges[ i ] = changes[ verticesMap[ key ] ];\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n\\n    \\t\\t// if faces are completely degenerate after merging vertices, we\\n    \\t\\t// have to remove them from the geometry.\\n    \\t\\tvar faceIndicesToRemove = [];\\n\\n    \\t\\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\\n\\n    \\t\\t\\tface = this.faces[ i ];\\n\\n    \\t\\t\\tface.a = changes[ face.a ];\\n    \\t\\t\\tface.b = changes[ face.b ];\\n    \\t\\t\\tface.c = changes[ face.c ];\\n\\n    \\t\\t\\tindices = [ face.a, face.b, face.c ];\\n\\n    \\t\\t\\tvar dupIndex = - 1;\\n\\n    \\t\\t\\t// if any duplicate vertices are found in a Face3\\n    \\t\\t\\t// we have to remove the face as nothing can be saved\\n    \\t\\t\\tfor ( var n = 0; n < 3; n ++ ) {\\n\\n    \\t\\t\\t\\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\\n\\n    \\t\\t\\t\\t\\tdupIndex = n;\\n    \\t\\t\\t\\t\\tfaceIndicesToRemove.push( i );\\n    \\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\\n\\n    \\t\\t\\tvar idx = faceIndicesToRemove[ i ];\\n\\n    \\t\\t\\tthis.faces.splice( idx, 1 );\\n\\n    \\t\\t\\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\\n\\n    \\t\\t\\t\\tthis.faceVertexUvs[ j ].splice( idx, 1 );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\t// Use unique set of vertices\\n\\n    \\t\\tvar diff = this.vertices.length - unique.length;\\n    \\t\\tthis.vertices = unique;\\n    \\t\\treturn diff;\\n\\n    \\t},\\n\\n    \\tsortFacesByMaterialIndex: function () {\\n\\n    \\t\\tvar faces = this.faces;\\n    \\t\\tvar length = faces.length;\\n\\n    \\t\\t// tag faces\\n\\n    \\t\\tfor ( var i = 0; i < length; i ++ ) {\\n\\n    \\t\\t\\tfaces[ i ]._id = i;\\n\\n    \\t\\t}\\n\\n    \\t\\t// sort faces\\n\\n    \\t\\tfunction materialIndexSort( a, b ) {\\n\\n    \\t\\t\\treturn a.materialIndex - b.materialIndex;\\n\\n    \\t\\t}\\n\\n    \\t\\tfaces.sort( materialIndexSort );\\n\\n    \\t\\t// sort uvs\\n\\n    \\t\\tvar uvs1 = this.faceVertexUvs[ 0 ];\\n    \\t\\tvar uvs2 = this.faceVertexUvs[ 1 ];\\n\\n    \\t\\tvar newUvs1, newUvs2;\\n\\n    \\t\\tif ( uvs1 && uvs1.length === length ) newUvs1 = [];\\n    \\t\\tif ( uvs2 && uvs2.length === length ) newUvs2 = [];\\n\\n    \\t\\tfor ( var i = 0; i < length; i ++ ) {\\n\\n    \\t\\t\\tvar id = faces[ i ]._id;\\n\\n    \\t\\t\\tif ( newUvs1 ) newUvs1.push( uvs1[ id ] );\\n    \\t\\t\\tif ( newUvs2 ) newUvs2.push( uvs2[ id ] );\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( newUvs1 ) this.faceVertexUvs[ 0 ] = newUvs1;\\n    \\t\\tif ( newUvs2 ) this.faceVertexUvs[ 1 ] = newUvs2;\\n\\n    \\t},\\n\\n    \\ttoJSON: function () {\\n\\n    \\t\\tvar data = {\\n    \\t\\t\\tmetadata: {\\n    \\t\\t\\t\\tversion: 4.4,\\n    \\t\\t\\t\\ttype: 'Geometry',\\n    \\t\\t\\t\\tgenerator: 'Geometry.toJSON'\\n    \\t\\t\\t}\\n    \\t\\t};\\n\\n    \\t\\t// standard Geometry serialization\\n\\n    \\t\\tdata.uuid = this.uuid;\\n    \\t\\tdata.type = this.type;\\n    \\t\\tif ( this.name !== '' ) data.name = this.name;\\n\\n    \\t\\tif ( this.parameters !== undefined ) {\\n\\n    \\t\\t\\tvar parameters = this.parameters;\\n\\n    \\t\\t\\tfor ( var key in parameters ) {\\n\\n    \\t\\t\\t\\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\treturn data;\\n\\n    \\t\\t}\\n\\n    \\t\\tvar vertices = [];\\n\\n    \\t\\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\\n\\n    \\t\\t\\tvar vertex = this.vertices[ i ];\\n    \\t\\t\\tvertices.push( vertex.x, vertex.y, vertex.z );\\n\\n    \\t\\t}\\n\\n    \\t\\tvar faces = [];\\n    \\t\\tvar normals = [];\\n    \\t\\tvar normalsHash = {};\\n    \\t\\tvar colors = [];\\n    \\t\\tvar colorsHash = {};\\n    \\t\\tvar uvs = [];\\n    \\t\\tvar uvsHash = {};\\n\\n    \\t\\tfor ( var i = 0; i < this.faces.length; i ++ ) {\\n\\n    \\t\\t\\tvar face = this.faces[ i ];\\n\\n    \\t\\t\\tvar hasMaterial = true;\\n    \\t\\t\\tvar hasFaceUv = false; // deprecated\\n    \\t\\t\\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\\n    \\t\\t\\tvar hasFaceNormal = face.normal.length() > 0;\\n    \\t\\t\\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\\n    \\t\\t\\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\\n    \\t\\t\\tvar hasFaceVertexColor = face.vertexColors.length > 0;\\n\\n    \\t\\t\\tvar faceType = 0;\\n\\n    \\t\\t\\tfaceType = setBit( faceType, 0, 0 ); // isQuad\\n    \\t\\t\\tfaceType = setBit( faceType, 1, hasMaterial );\\n    \\t\\t\\tfaceType = setBit( faceType, 2, hasFaceUv );\\n    \\t\\t\\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\\n    \\t\\t\\tfaceType = setBit( faceType, 4, hasFaceNormal );\\n    \\t\\t\\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\\n    \\t\\t\\tfaceType = setBit( faceType, 6, hasFaceColor );\\n    \\t\\t\\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\\n\\n    \\t\\t\\tfaces.push( faceType );\\n    \\t\\t\\tfaces.push( face.a, face.b, face.c );\\n    \\t\\t\\tfaces.push( face.materialIndex );\\n\\n    \\t\\t\\tif ( hasFaceVertexUv ) {\\n\\n    \\t\\t\\t\\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\\n\\n    \\t\\t\\t\\tfaces.push(\\n    \\t\\t\\t\\t\\tgetUvIndex( faceVertexUvs[ 0 ] ),\\n    \\t\\t\\t\\t\\tgetUvIndex( faceVertexUvs[ 1 ] ),\\n    \\t\\t\\t\\t\\tgetUvIndex( faceVertexUvs[ 2 ] )\\n    \\t\\t\\t\\t);\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tif ( hasFaceNormal ) {\\n\\n    \\t\\t\\t\\tfaces.push( getNormalIndex( face.normal ) );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tif ( hasFaceVertexNormal ) {\\n\\n    \\t\\t\\t\\tvar vertexNormals = face.vertexNormals;\\n\\n    \\t\\t\\t\\tfaces.push(\\n    \\t\\t\\t\\t\\tgetNormalIndex( vertexNormals[ 0 ] ),\\n    \\t\\t\\t\\t\\tgetNormalIndex( vertexNormals[ 1 ] ),\\n    \\t\\t\\t\\t\\tgetNormalIndex( vertexNormals[ 2 ] )\\n    \\t\\t\\t\\t);\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tif ( hasFaceColor ) {\\n\\n    \\t\\t\\t\\tfaces.push( getColorIndex( face.color ) );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tif ( hasFaceVertexColor ) {\\n\\n    \\t\\t\\t\\tvar vertexColors = face.vertexColors;\\n\\n    \\t\\t\\t\\tfaces.push(\\n    \\t\\t\\t\\t\\tgetColorIndex( vertexColors[ 0 ] ),\\n    \\t\\t\\t\\t\\tgetColorIndex( vertexColors[ 1 ] ),\\n    \\t\\t\\t\\t\\tgetColorIndex( vertexColors[ 2 ] )\\n    \\t\\t\\t\\t);\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\tfunction setBit( value, position, enabled ) {\\n\\n    \\t\\t\\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\\n\\n    \\t\\t}\\n\\n    \\t\\tfunction getNormalIndex( normal ) {\\n\\n    \\t\\t\\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\\n\\n    \\t\\t\\tif ( normalsHash[ hash ] !== undefined ) {\\n\\n    \\t\\t\\t\\treturn normalsHash[ hash ];\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tnormalsHash[ hash ] = normals.length / 3;\\n    \\t\\t\\tnormals.push( normal.x, normal.y, normal.z );\\n\\n    \\t\\t\\treturn normalsHash[ hash ];\\n\\n    \\t\\t}\\n\\n    \\t\\tfunction getColorIndex( color ) {\\n\\n    \\t\\t\\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\\n\\n    \\t\\t\\tif ( colorsHash[ hash ] !== undefined ) {\\n\\n    \\t\\t\\t\\treturn colorsHash[ hash ];\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tcolorsHash[ hash ] = colors.length;\\n    \\t\\t\\tcolors.push( color.getHex() );\\n\\n    \\t\\t\\treturn colorsHash[ hash ];\\n\\n    \\t\\t}\\n\\n    \\t\\tfunction getUvIndex( uv ) {\\n\\n    \\t\\t\\tvar hash = uv.x.toString() + uv.y.toString();\\n\\n    \\t\\t\\tif ( uvsHash[ hash ] !== undefined ) {\\n\\n    \\t\\t\\t\\treturn uvsHash[ hash ];\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tuvsHash[ hash ] = uvs.length / 2;\\n    \\t\\t\\tuvs.push( uv.x, uv.y );\\n\\n    \\t\\t\\treturn uvsHash[ hash ];\\n\\n    \\t\\t}\\n\\n    \\t\\tdata.data = {};\\n\\n    \\t\\tdata.data.vertices = vertices;\\n    \\t\\tdata.data.normals = normals;\\n    \\t\\tif ( colors.length > 0 ) data.data.colors = colors;\\n    \\t\\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\\n    \\t\\tdata.data.faces = faces;\\n\\n    \\t\\treturn data;\\n\\n    \\t},\\n\\n    \\tclone: function () {\\n\\n    \\t\\t/*\\n    \\t\\t// Handle primitives\\n\\n    \\t\\tvar parameters = this.parameters;\\n\\n    \\t\\tif ( parameters !== undefined ) {\\n\\n    \\t\\t\\tvar values = [];\\n\\n    \\t\\t\\tfor ( var key in parameters ) {\\n\\n    \\t\\t\\t\\tvalues.push( parameters[ key ] );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tvar geometry = Object.create( this.constructor.prototype );\\n    \\t\\t\\tthis.constructor.apply( geometry, values );\\n    \\t\\t\\treturn geometry;\\n\\n    \\t\\t}\\n\\n    \\t\\treturn new this.constructor().copy( this );\\n    \\t\\t*/\\n\\n    \\t\\treturn new Geometry().copy( this );\\n\\n    \\t},\\n\\n    \\tcopy: function ( source ) {\\n\\n    \\t\\tthis.vertices = [];\\n    \\t\\tthis.faces = [];\\n    \\t\\tthis.faceVertexUvs = [ [] ];\\n    \\t\\tthis.colors = [];\\n\\n    \\t\\tvar vertices = source.vertices;\\n\\n    \\t\\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\\n\\n    \\t\\t\\tthis.vertices.push( vertices[ i ].clone() );\\n\\n    \\t\\t}\\n\\n    \\t\\tvar colors = source.colors;\\n\\n    \\t\\tfor ( var i = 0, il = colors.length; i < il; i ++ ) {\\n\\n    \\t\\t\\tthis.colors.push( colors[ i ].clone() );\\n\\n    \\t\\t}\\n\\n    \\t\\tvar faces = source.faces;\\n\\n    \\t\\tfor ( var i = 0, il = faces.length; i < il; i ++ ) {\\n\\n    \\t\\t\\tthis.faces.push( faces[ i ].clone() );\\n\\n    \\t\\t}\\n\\n    \\t\\tfor ( var i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\\n\\n    \\t\\t\\tvar faceVertexUvs = source.faceVertexUvs[ i ];\\n\\n    \\t\\t\\tif ( this.faceVertexUvs[ i ] === undefined ) {\\n\\n    \\t\\t\\t\\tthis.faceVertexUvs[ i ] = [];\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tfor ( var j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\\n\\n    \\t\\t\\t\\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\\n\\n    \\t\\t\\t\\tfor ( var k = 0, kl = uvs.length; k < kl; k ++ ) {\\n\\n    \\t\\t\\t\\t\\tvar uv = uvs[ k ];\\n\\n    \\t\\t\\t\\t\\tuvsCopy.push( uv.clone() );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\tthis.faceVertexUvs[ i ].push( uvsCopy );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tdispose: function () {\\n\\n    \\t\\tthis.dispatchEvent( { type: 'dispose' } );\\n\\n    \\t}\\n\\n    } );\\n\\n    var count$3 = 0;\\n    function GeometryIdCount() { return count$3++; };\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     */\\n\\n    function DirectGeometry() {\\n\\n    \\tObject.defineProperty( this, 'id', { value: GeometryIdCount() } );\\n\\n    \\tthis.uuid = exports.Math.generateUUID();\\n\\n    \\tthis.name = '';\\n    \\tthis.type = 'DirectGeometry';\\n\\n    \\tthis.indices = [];\\n    \\tthis.vertices = [];\\n    \\tthis.normals = [];\\n    \\tthis.colors = [];\\n    \\tthis.uvs = [];\\n    \\tthis.uvs2 = [];\\n\\n    \\tthis.groups = [];\\n\\n    \\tthis.morphTargets = {};\\n\\n    \\tthis.skinWeights = [];\\n    \\tthis.skinIndices = [];\\n\\n    \\t// this.lineDistances = [];\\n\\n    \\tthis.boundingBox = null;\\n    \\tthis.boundingSphere = null;\\n\\n    \\t// update flags\\n\\n    \\tthis.verticesNeedUpdate = false;\\n    \\tthis.normalsNeedUpdate = false;\\n    \\tthis.colorsNeedUpdate = false;\\n    \\tthis.uvsNeedUpdate = false;\\n    \\tthis.groupsNeedUpdate = false;\\n\\n    }\\n\\n    Object.assign( DirectGeometry.prototype, EventDispatcher.prototype, {\\n\\n    \\tcomputeBoundingBox: Geometry.prototype.computeBoundingBox,\\n    \\tcomputeBoundingSphere: Geometry.prototype.computeBoundingSphere,\\n\\n    \\tcomputeFaceNormals: function () {\\n\\n    \\t\\tconsole.warn( 'THREE.DirectGeometry: computeFaceNormals() is not a method of this type of geometry.' );\\n\\n    \\t},\\n\\n    \\tcomputeVertexNormals: function () {\\n\\n    \\t\\tconsole.warn( 'THREE.DirectGeometry: computeVertexNormals() is not a method of this type of geometry.' );\\n\\n    \\t},\\n\\n    \\tcomputeGroups: function ( geometry ) {\\n\\n    \\t\\tvar group;\\n    \\t\\tvar groups = [];\\n    \\t\\tvar materialIndex;\\n\\n    \\t\\tvar faces = geometry.faces;\\n\\n    \\t\\tfor ( var i = 0; i < faces.length; i ++ ) {\\n\\n    \\t\\t\\tvar face = faces[ i ];\\n\\n    \\t\\t\\t// materials\\n\\n    \\t\\t\\tif ( face.materialIndex !== materialIndex ) {\\n\\n    \\t\\t\\t\\tmaterialIndex = face.materialIndex;\\n\\n    \\t\\t\\t\\tif ( group !== undefined ) {\\n\\n    \\t\\t\\t\\t\\tgroup.count = ( i * 3 ) - group.start;\\n    \\t\\t\\t\\t\\tgroups.push( group );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\tgroup = {\\n    \\t\\t\\t\\t\\tstart: i * 3,\\n    \\t\\t\\t\\t\\tmaterialIndex: materialIndex\\n    \\t\\t\\t\\t};\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( group !== undefined ) {\\n\\n    \\t\\t\\tgroup.count = ( i * 3 ) - group.start;\\n    \\t\\t\\tgroups.push( group );\\n\\n    \\t\\t}\\n\\n    \\t\\tthis.groups = groups;\\n\\n    \\t},\\n\\n    \\tfromGeometry: function ( geometry ) {\\n\\n    \\t\\tvar faces = geometry.faces;\\n    \\t\\tvar vertices = geometry.vertices;\\n    \\t\\tvar faceVertexUvs = geometry.faceVertexUvs;\\n\\n    \\t\\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\\n    \\t\\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\\n\\n    \\t\\t// morphs\\n\\n    \\t\\tvar morphTargets = geometry.morphTargets;\\n    \\t\\tvar morphTargetsLength = morphTargets.length;\\n\\n    \\t\\tvar morphTargetsPosition;\\n\\n    \\t\\tif ( morphTargetsLength > 0 ) {\\n\\n    \\t\\t\\tmorphTargetsPosition = [];\\n\\n    \\t\\t\\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\\n\\n    \\t\\t\\t\\tmorphTargetsPosition[ i ] = [];\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tthis.morphTargets.position = morphTargetsPosition;\\n\\n    \\t\\t}\\n\\n    \\t\\tvar morphNormals = geometry.morphNormals;\\n    \\t\\tvar morphNormalsLength = morphNormals.length;\\n\\n    \\t\\tvar morphTargetsNormal;\\n\\n    \\t\\tif ( morphNormalsLength > 0 ) {\\n\\n    \\t\\t\\tmorphTargetsNormal = [];\\n\\n    \\t\\t\\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\\n\\n    \\t\\t\\t\\tmorphTargetsNormal[ i ] = [];\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tthis.morphTargets.normal = morphTargetsNormal;\\n\\n    \\t\\t}\\n\\n    \\t\\t// skins\\n\\n    \\t\\tvar skinIndices = geometry.skinIndices;\\n    \\t\\tvar skinWeights = geometry.skinWeights;\\n\\n    \\t\\tvar hasSkinIndices = skinIndices.length === vertices.length;\\n    \\t\\tvar hasSkinWeights = skinWeights.length === vertices.length;\\n\\n    \\t\\t//\\n\\n    \\t\\tfor ( var i = 0; i < faces.length; i ++ ) {\\n\\n    \\t\\t\\tvar face = faces[ i ];\\n\\n    \\t\\t\\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\\n\\n    \\t\\t\\tvar vertexNormals = face.vertexNormals;\\n\\n    \\t\\t\\tif ( vertexNormals.length === 3 ) {\\n\\n    \\t\\t\\t\\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\tvar normal = face.normal;\\n\\n    \\t\\t\\t\\tthis.normals.push( normal, normal, normal );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tvar vertexColors = face.vertexColors;\\n\\n    \\t\\t\\tif ( vertexColors.length === 3 ) {\\n\\n    \\t\\t\\t\\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\tvar color = face.color;\\n\\n    \\t\\t\\t\\tthis.colors.push( color, color, color );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tif ( hasFaceVertexUv === true ) {\\n\\n    \\t\\t\\t\\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\\n\\n    \\t\\t\\t\\tif ( vertexUvs !== undefined ) {\\n\\n    \\t\\t\\t\\t\\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\\n\\n    \\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\\n\\n    \\t\\t\\t\\t\\tthis.uvs.push( new Vector2(), new Vector2(), new Vector2() );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tif ( hasFaceVertexUv2 === true ) {\\n\\n    \\t\\t\\t\\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\\n\\n    \\t\\t\\t\\tif ( vertexUvs !== undefined ) {\\n\\n    \\t\\t\\t\\t\\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\\n\\n    \\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\\n\\n    \\t\\t\\t\\t\\tthis.uvs2.push( new Vector2(), new Vector2(), new Vector2() );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\t// morphs\\n\\n    \\t\\t\\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\\n\\n    \\t\\t\\t\\tvar morphTarget = morphTargets[ j ].vertices;\\n\\n    \\t\\t\\t\\tmorphTargetsPosition[ j ].push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\\n\\n    \\t\\t\\t\\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\\n\\n    \\t\\t\\t\\tmorphTargetsNormal[ j ].push( morphNormal.a, morphNormal.b, morphNormal.c );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\t// skins\\n\\n    \\t\\t\\tif ( hasSkinIndices ) {\\n\\n    \\t\\t\\t\\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tif ( hasSkinWeights ) {\\n\\n    \\t\\t\\t\\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\tthis.computeGroups( geometry );\\n\\n    \\t\\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\\n    \\t\\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\\n    \\t\\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\\n    \\t\\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\\n    \\t\\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tdispose: function () {\\n\\n    \\t\\tthis.dispatchEvent( { type: 'dispose' } );\\n\\n    \\t}\\n\\n    } );\\n\\n    /**\\n     * @author alteredq / http://alteredqualia.com/\\n     * @author mrdoob / http://mrdoob.com/\\n     */\\n\\n    function BufferGeometry() {\\n\\n    \\tObject.defineProperty( this, 'id', { value: GeometryIdCount() } );\\n\\n    \\tthis.uuid = exports.Math.generateUUID();\\n\\n    \\tthis.name = '';\\n    \\tthis.type = 'BufferGeometry';\\n\\n    \\tthis.index = null;\\n    \\tthis.attributes = {};\\n\\n    \\tthis.morphAttributes = {};\\n\\n    \\tthis.groups = [];\\n\\n    \\tthis.boundingBox = null;\\n    \\tthis.boundingSphere = null;\\n\\n    \\tthis.drawRange = { start: 0, count: Infinity };\\n\\n    }\\n\\n    Object.assign( BufferGeometry.prototype, EventDispatcher.prototype, {\\n\\n    \\tisBufferGeometry: true,\\n\\n    \\tgetIndex: function () {\\n\\n    \\t\\treturn this.index;\\n\\n    \\t},\\n\\n    \\tsetIndex: function ( index ) {\\n\\n    \\t\\tthis.index = index;\\n\\n    \\t},\\n\\n    \\taddAttribute: function ( name, attribute ) {\\n\\n    \\t\\tif ( (attribute && attribute.isBufferAttribute) === false && (attribute && attribute.isInterleavedBufferAttribute) === false ) {\\n\\n    \\t\\t\\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\\n\\n    \\t\\t\\tthis.addAttribute( name, new BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\\n\\n    \\t\\t\\treturn;\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( name === 'index' ) {\\n\\n    \\t\\t\\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\\n    \\t\\t\\tthis.setIndex( attribute );\\n\\n    \\t\\t\\treturn;\\n\\n    \\t\\t}\\n\\n    \\t\\tthis.attributes[ name ] = attribute;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tgetAttribute: function ( name ) {\\n\\n    \\t\\treturn this.attributes[ name ];\\n\\n    \\t},\\n\\n    \\tremoveAttribute: function ( name ) {\\n\\n    \\t\\tdelete this.attributes[ name ];\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\taddGroup: function ( start, count, materialIndex ) {\\n\\n    \\t\\tthis.groups.push( {\\n\\n    \\t\\t\\tstart: start,\\n    \\t\\t\\tcount: count,\\n    \\t\\t\\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\\n\\n    \\t\\t} );\\n\\n    \\t},\\n\\n    \\tclearGroups: function () {\\n\\n    \\t\\tthis.groups = [];\\n\\n    \\t},\\n\\n    \\tsetDrawRange: function ( start, count ) {\\n\\n    \\t\\tthis.drawRange.start = start;\\n    \\t\\tthis.drawRange.count = count;\\n\\n    \\t},\\n\\n    \\tapplyMatrix: function ( matrix ) {\\n\\n    \\t\\tvar position = this.attributes.position;\\n\\n    \\t\\tif ( position !== undefined ) {\\n\\n    \\t\\t\\tmatrix.applyToVector3Array( position.array );\\n    \\t\\t\\tposition.needsUpdate = true;\\n\\n    \\t\\t}\\n\\n    \\t\\tvar normal = this.attributes.normal;\\n\\n    \\t\\tif ( normal !== undefined ) {\\n\\n    \\t\\t\\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\\n\\n    \\t\\t\\tnormalMatrix.applyToVector3Array( normal.array );\\n    \\t\\t\\tnormal.needsUpdate = true;\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( this.boundingBox !== null ) {\\n\\n    \\t\\t\\tthis.computeBoundingBox();\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( this.boundingSphere !== null ) {\\n\\n    \\t\\t\\tthis.computeBoundingSphere();\\n\\n    \\t\\t}\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\trotateX: function () {\\n\\n    \\t\\t// rotate geometry around world x-axis\\n\\n    \\t\\tvar m1;\\n\\n    \\t\\treturn function rotateX( angle ) {\\n\\n    \\t\\t\\tif ( m1 === undefined ) m1 = new Matrix4();\\n\\n    \\t\\t\\tm1.makeRotationX( angle );\\n\\n    \\t\\t\\tthis.applyMatrix( m1 );\\n\\n    \\t\\t\\treturn this;\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\trotateY: function () {\\n\\n    \\t\\t// rotate geometry around world y-axis\\n\\n    \\t\\tvar m1;\\n\\n    \\t\\treturn function rotateY( angle ) {\\n\\n    \\t\\t\\tif ( m1 === undefined ) m1 = new Matrix4();\\n\\n    \\t\\t\\tm1.makeRotationY( angle );\\n\\n    \\t\\t\\tthis.applyMatrix( m1 );\\n\\n    \\t\\t\\treturn this;\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\trotateZ: function () {\\n\\n    \\t\\t// rotate geometry around world z-axis\\n\\n    \\t\\tvar m1;\\n\\n    \\t\\treturn function rotateZ( angle ) {\\n\\n    \\t\\t\\tif ( m1 === undefined ) m1 = new Matrix4();\\n\\n    \\t\\t\\tm1.makeRotationZ( angle );\\n\\n    \\t\\t\\tthis.applyMatrix( m1 );\\n\\n    \\t\\t\\treturn this;\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\ttranslate: function () {\\n\\n    \\t\\t// translate geometry\\n\\n    \\t\\tvar m1;\\n\\n    \\t\\treturn function translate( x, y, z ) {\\n\\n    \\t\\t\\tif ( m1 === undefined ) m1 = new Matrix4();\\n\\n    \\t\\t\\tm1.makeTranslation( x, y, z );\\n\\n    \\t\\t\\tthis.applyMatrix( m1 );\\n\\n    \\t\\t\\treturn this;\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\tscale: function () {\\n\\n    \\t\\t// scale geometry\\n\\n    \\t\\tvar m1;\\n\\n    \\t\\treturn function scale( x, y, z ) {\\n\\n    \\t\\t\\tif ( m1 === undefined ) m1 = new Matrix4();\\n\\n    \\t\\t\\tm1.makeScale( x, y, z );\\n\\n    \\t\\t\\tthis.applyMatrix( m1 );\\n\\n    \\t\\t\\treturn this;\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\tlookAt: function () {\\n\\n    \\t\\tvar obj;\\n\\n    \\t\\treturn function lookAt( vector ) {\\n\\n    \\t\\t\\tif ( obj === undefined ) obj = new Object3D();\\n\\n    \\t\\t\\tobj.lookAt( vector );\\n\\n    \\t\\t\\tobj.updateMatrix();\\n\\n    \\t\\t\\tthis.applyMatrix( obj.matrix );\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\tcenter: function () {\\n\\n    \\t\\tthis.computeBoundingBox();\\n\\n    \\t\\tvar offset = this.boundingBox.getCenter().negate();\\n\\n    \\t\\tthis.translate( offset.x, offset.y, offset.z );\\n\\n    \\t\\treturn offset;\\n\\n    \\t},\\n\\n    \\tsetFromObject: function ( object ) {\\n\\n    \\t\\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\\n\\n    \\t\\tvar geometry = object.geometry;\\n\\n    \\t\\tif ( (object && object.isPoints) || (object && object.isLine) ) {\\n\\n    \\t\\t\\tvar positions = new Float32Attribute( geometry.vertices.length * 3, 3 );\\n    \\t\\t\\tvar colors = new Float32Attribute( geometry.colors.length * 3, 3 );\\n\\n    \\t\\t\\tthis.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\\n    \\t\\t\\tthis.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\\n\\n    \\t\\t\\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\\n\\n    \\t\\t\\t\\tvar lineDistances = new Float32Attribute( geometry.lineDistances.length, 1 );\\n\\n    \\t\\t\\t\\tthis.addAttribute( 'lineDistance', lineDistances.copyArray( geometry.lineDistances ) );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tif ( geometry.boundingSphere !== null ) {\\n\\n    \\t\\t\\t\\tthis.boundingSphere = geometry.boundingSphere.clone();\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tif ( geometry.boundingBox !== null ) {\\n\\n    \\t\\t\\t\\tthis.boundingBox = geometry.boundingBox.clone();\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t} else if ( (object && object.isMesh) ) {\\n\\n    \\t\\t\\tif ( (geometry && geometry.isGeometry) ) {\\n\\n    \\t\\t\\t\\tthis.fromGeometry( geometry );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tupdateFromObject: function ( object ) {\\n\\n    \\t\\tvar geometry = object.geometry;\\n\\n    \\t\\tif ( (object && object.isMesh) ) {\\n\\n    \\t\\t\\tvar direct = geometry.__directGeometry;\\n\\n    \\t\\t\\tif ( geometry.elementsNeedUpdate === true ) {\\n\\n    \\t\\t\\t\\tdirect = undefined;\\n    \\t\\t\\t\\tgeometry.elementsNeedUpdate = false;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tif ( direct === undefined ) {\\n\\n    \\t\\t\\t\\treturn this.fromGeometry( geometry );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\\n    \\t\\t\\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\\n    \\t\\t\\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\\n    \\t\\t\\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\\n    \\t\\t\\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\\n\\n    \\t\\t\\tgeometry.verticesNeedUpdate = false;\\n    \\t\\t\\tgeometry.normalsNeedUpdate = false;\\n    \\t\\t\\tgeometry.colorsNeedUpdate = false;\\n    \\t\\t\\tgeometry.uvsNeedUpdate = false;\\n    \\t\\t\\tgeometry.groupsNeedUpdate = false;\\n\\n    \\t\\t\\tgeometry = direct;\\n\\n    \\t\\t}\\n\\n    \\t\\tvar attribute;\\n\\n    \\t\\tif ( geometry.verticesNeedUpdate === true ) {\\n\\n    \\t\\t\\tattribute = this.attributes.position;\\n\\n    \\t\\t\\tif ( attribute !== undefined ) {\\n\\n    \\t\\t\\t\\tattribute.copyVector3sArray( geometry.vertices );\\n    \\t\\t\\t\\tattribute.needsUpdate = true;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tgeometry.verticesNeedUpdate = false;\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( geometry.normalsNeedUpdate === true ) {\\n\\n    \\t\\t\\tattribute = this.attributes.normal;\\n\\n    \\t\\t\\tif ( attribute !== undefined ) {\\n\\n    \\t\\t\\t\\tattribute.copyVector3sArray( geometry.normals );\\n    \\t\\t\\t\\tattribute.needsUpdate = true;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tgeometry.normalsNeedUpdate = false;\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( geometry.colorsNeedUpdate === true ) {\\n\\n    \\t\\t\\tattribute = this.attributes.color;\\n\\n    \\t\\t\\tif ( attribute !== undefined ) {\\n\\n    \\t\\t\\t\\tattribute.copyColorsArray( geometry.colors );\\n    \\t\\t\\t\\tattribute.needsUpdate = true;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tgeometry.colorsNeedUpdate = false;\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( geometry.uvsNeedUpdate ) {\\n\\n    \\t\\t\\tattribute = this.attributes.uv;\\n\\n    \\t\\t\\tif ( attribute !== undefined ) {\\n\\n    \\t\\t\\t\\tattribute.copyVector2sArray( geometry.uvs );\\n    \\t\\t\\t\\tattribute.needsUpdate = true;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tgeometry.uvsNeedUpdate = false;\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( geometry.lineDistancesNeedUpdate ) {\\n\\n    \\t\\t\\tattribute = this.attributes.lineDistance;\\n\\n    \\t\\t\\tif ( attribute !== undefined ) {\\n\\n    \\t\\t\\t\\tattribute.copyArray( geometry.lineDistances );\\n    \\t\\t\\t\\tattribute.needsUpdate = true;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tgeometry.lineDistancesNeedUpdate = false;\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( geometry.groupsNeedUpdate ) {\\n\\n    \\t\\t\\tgeometry.computeGroups( object.geometry );\\n    \\t\\t\\tthis.groups = geometry.groups;\\n\\n    \\t\\t\\tgeometry.groupsNeedUpdate = false;\\n\\n    \\t\\t}\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tfromGeometry: function ( geometry ) {\\n\\n    \\t\\tgeometry.__directGeometry = new DirectGeometry().fromGeometry( geometry );\\n\\n    \\t\\treturn this.fromDirectGeometry( geometry.__directGeometry );\\n\\n    \\t},\\n\\n    \\tfromDirectGeometry: function ( geometry ) {\\n\\n    \\t\\tvar positions = new Float32Array( geometry.vertices.length * 3 );\\n    \\t\\tthis.addAttribute( 'position', new BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\\n\\n    \\t\\tif ( geometry.normals.length > 0 ) {\\n\\n    \\t\\t\\tvar normals = new Float32Array( geometry.normals.length * 3 );\\n    \\t\\t\\tthis.addAttribute( 'normal', new BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( geometry.colors.length > 0 ) {\\n\\n    \\t\\t\\tvar colors = new Float32Array( geometry.colors.length * 3 );\\n    \\t\\t\\tthis.addAttribute( 'color', new BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( geometry.uvs.length > 0 ) {\\n\\n    \\t\\t\\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\\n    \\t\\t\\tthis.addAttribute( 'uv', new BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( geometry.uvs2.length > 0 ) {\\n\\n    \\t\\t\\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\\n    \\t\\t\\tthis.addAttribute( 'uv2', new BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( geometry.indices.length > 0 ) {\\n\\n    \\t\\t\\tvar TypeArray = geometry.vertices.length > 65535 ? Uint32Array : Uint16Array;\\n    \\t\\t\\tvar indices = new TypeArray( geometry.indices.length * 3 );\\n    \\t\\t\\tthis.setIndex( new BufferAttribute( indices, 1 ).copyIndicesArray( geometry.indices ) );\\n\\n    \\t\\t}\\n\\n    \\t\\t// groups\\n\\n    \\t\\tthis.groups = geometry.groups;\\n\\n    \\t\\t// morphs\\n\\n    \\t\\tfor ( var name in geometry.morphTargets ) {\\n\\n    \\t\\t\\tvar array = [];\\n    \\t\\t\\tvar morphTargets = geometry.morphTargets[ name ];\\n\\n    \\t\\t\\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\\n\\n    \\t\\t\\t\\tvar morphTarget = morphTargets[ i ];\\n\\n    \\t\\t\\t\\tvar attribute = new Float32Attribute( morphTarget.length * 3, 3 );\\n\\n    \\t\\t\\t\\tarray.push( attribute.copyVector3sArray( morphTarget ) );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tthis.morphAttributes[ name ] = array;\\n\\n    \\t\\t}\\n\\n    \\t\\t// skinning\\n\\n    \\t\\tif ( geometry.skinIndices.length > 0 ) {\\n\\n    \\t\\t\\tvar skinIndices = new Float32Attribute( geometry.skinIndices.length * 4, 4 );\\n    \\t\\t\\tthis.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( geometry.skinWeights.length > 0 ) {\\n\\n    \\t\\t\\tvar skinWeights = new Float32Attribute( geometry.skinWeights.length * 4, 4 );\\n    \\t\\t\\tthis.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\\n\\n    \\t\\t}\\n\\n    \\t\\t//\\n\\n    \\t\\tif ( geometry.boundingSphere !== null ) {\\n\\n    \\t\\t\\tthis.boundingSphere = geometry.boundingSphere.clone();\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( geometry.boundingBox !== null ) {\\n\\n    \\t\\t\\tthis.boundingBox = geometry.boundingBox.clone();\\n\\n    \\t\\t}\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tcomputeBoundingBox: function () {\\n\\n    \\t\\tif ( this.boundingBox === null ) {\\n\\n    \\t\\t\\tthis.boundingBox = new Box3();\\n\\n    \\t\\t}\\n\\n    \\t\\tvar positions = this.attributes.position.array;\\n\\n    \\t\\tif ( positions !== undefined ) {\\n\\n    \\t\\t\\tthis.boundingBox.setFromArray( positions );\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\tthis.boundingBox.makeEmpty();\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\\n\\n    \\t\\t\\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \\\"position\\\" attribute is likely to have NaN values.', this );\\n\\n    \\t\\t}\\n\\n    \\t},\\n\\n    \\tcomputeBoundingSphere: function () {\\n\\n    \\t\\tvar box = new Box3();\\n    \\t\\tvar vector = new Vector3();\\n\\n    \\t\\treturn function computeBoundingSphere() {\\n\\n    \\t\\t\\tif ( this.boundingSphere === null ) {\\n\\n    \\t\\t\\t\\tthis.boundingSphere = new Sphere();\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tvar positions = this.attributes.position;\\n\\n    \\t\\t\\tif ( positions ) {\\n\\n    \\t\\t\\t\\tvar array = positions.array;\\n    \\t\\t\\t\\tvar center = this.boundingSphere.center;\\n\\n    \\t\\t\\t\\tbox.setFromArray( array );\\n    \\t\\t\\t\\tbox.getCenter( center );\\n\\n    \\t\\t\\t\\t// hoping to find a boundingSphere with a radius smaller than the\\n    \\t\\t\\t\\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\\n\\n    \\t\\t\\t\\tvar maxRadiusSq = 0;\\n\\n    \\t\\t\\t\\tfor ( var i = 0, il = array.length; i < il; i += 3 ) {\\n\\n    \\t\\t\\t\\t\\tvector.fromArray( array, i );\\n    \\t\\t\\t\\t\\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\\n\\n    \\t\\t\\t\\tif ( isNaN( this.boundingSphere.radius ) ) {\\n\\n    \\t\\t\\t\\t\\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \\\"position\\\" attribute is likely to have NaN values.', this );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\tcomputeFaceNormals: function () {\\n\\n    \\t\\t// backwards compatibility\\n\\n    \\t},\\n\\n    \\tcomputeVertexNormals: function () {\\n\\n    \\t\\tvar index = this.index;\\n    \\t\\tvar attributes = this.attributes;\\n    \\t\\tvar groups = this.groups;\\n\\n    \\t\\tif ( attributes.position ) {\\n\\n    \\t\\t\\tvar positions = attributes.position.array;\\n\\n    \\t\\t\\tif ( attributes.normal === undefined ) {\\n\\n    \\t\\t\\t\\tthis.addAttribute( 'normal', new BufferAttribute( new Float32Array( positions.length ), 3 ) );\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t// reset existing normals to zero\\n\\n    \\t\\t\\t\\tvar array = attributes.normal.array;\\n\\n    \\t\\t\\t\\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\\n\\n    \\t\\t\\t\\t\\tarray[ i ] = 0;\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tvar normals = attributes.normal.array;\\n\\n    \\t\\t\\tvar vA, vB, vC,\\n\\n    \\t\\t\\tpA = new Vector3(),\\n    \\t\\t\\tpB = new Vector3(),\\n    \\t\\t\\tpC = new Vector3(),\\n\\n    \\t\\t\\tcb = new Vector3(),\\n    \\t\\t\\tab = new Vector3();\\n\\n    \\t\\t\\t// indexed elements\\n\\n    \\t\\t\\tif ( index ) {\\n\\n    \\t\\t\\t\\tvar indices = index.array;\\n\\n    \\t\\t\\t\\tif ( groups.length === 0 ) {\\n\\n    \\t\\t\\t\\t\\tthis.addGroup( 0, indices.length );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\tfor ( var j = 0, jl = groups.length; j < jl; ++ j ) {\\n\\n    \\t\\t\\t\\t\\tvar group = groups[ j ];\\n\\n    \\t\\t\\t\\t\\tvar start = group.start;\\n    \\t\\t\\t\\t\\tvar count = group.count;\\n\\n    \\t\\t\\t\\t\\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\\n\\n    \\t\\t\\t\\t\\t\\tvA = indices[ i + 0 ] * 3;\\n    \\t\\t\\t\\t\\t\\tvB = indices[ i + 1 ] * 3;\\n    \\t\\t\\t\\t\\t\\tvC = indices[ i + 2 ] * 3;\\n\\n    \\t\\t\\t\\t\\t\\tpA.fromArray( positions, vA );\\n    \\t\\t\\t\\t\\t\\tpB.fromArray( positions, vB );\\n    \\t\\t\\t\\t\\t\\tpC.fromArray( positions, vC );\\n\\n    \\t\\t\\t\\t\\t\\tcb.subVectors( pC, pB );\\n    \\t\\t\\t\\t\\t\\tab.subVectors( pA, pB );\\n    \\t\\t\\t\\t\\t\\tcb.cross( ab );\\n\\n    \\t\\t\\t\\t\\t\\tnormals[ vA ] += cb.x;\\n    \\t\\t\\t\\t\\t\\tnormals[ vA + 1 ] += cb.y;\\n    \\t\\t\\t\\t\\t\\tnormals[ vA + 2 ] += cb.z;\\n\\n    \\t\\t\\t\\t\\t\\tnormals[ vB ] += cb.x;\\n    \\t\\t\\t\\t\\t\\tnormals[ vB + 1 ] += cb.y;\\n    \\t\\t\\t\\t\\t\\tnormals[ vB + 2 ] += cb.z;\\n\\n    \\t\\t\\t\\t\\t\\tnormals[ vC ] += cb.x;\\n    \\t\\t\\t\\t\\t\\tnormals[ vC + 1 ] += cb.y;\\n    \\t\\t\\t\\t\\t\\tnormals[ vC + 2 ] += cb.z;\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t// non-indexed elements (unconnected triangle soup)\\n\\n    \\t\\t\\t\\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\\n\\n    \\t\\t\\t\\t\\tpA.fromArray( positions, i );\\n    \\t\\t\\t\\t\\tpB.fromArray( positions, i + 3 );\\n    \\t\\t\\t\\t\\tpC.fromArray( positions, i + 6 );\\n\\n    \\t\\t\\t\\t\\tcb.subVectors( pC, pB );\\n    \\t\\t\\t\\t\\tab.subVectors( pA, pB );\\n    \\t\\t\\t\\t\\tcb.cross( ab );\\n\\n    \\t\\t\\t\\t\\tnormals[ i ] = cb.x;\\n    \\t\\t\\t\\t\\tnormals[ i + 1 ] = cb.y;\\n    \\t\\t\\t\\t\\tnormals[ i + 2 ] = cb.z;\\n\\n    \\t\\t\\t\\t\\tnormals[ i + 3 ] = cb.x;\\n    \\t\\t\\t\\t\\tnormals[ i + 4 ] = cb.y;\\n    \\t\\t\\t\\t\\tnormals[ i + 5 ] = cb.z;\\n\\n    \\t\\t\\t\\t\\tnormals[ i + 6 ] = cb.x;\\n    \\t\\t\\t\\t\\tnormals[ i + 7 ] = cb.y;\\n    \\t\\t\\t\\t\\tnormals[ i + 8 ] = cb.z;\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tthis.normalizeNormals();\\n\\n    \\t\\t\\tattributes.normal.needsUpdate = true;\\n\\n    \\t\\t}\\n\\n    \\t},\\n\\n    \\tmerge: function ( geometry, offset ) {\\n\\n    \\t\\tif ( (geometry && geometry.isBufferGeometry) === false ) {\\n\\n    \\t\\t\\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\\n    \\t\\t\\treturn;\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( offset === undefined ) offset = 0;\\n\\n    \\t\\tvar attributes = this.attributes;\\n\\n    \\t\\tfor ( var key in attributes ) {\\n\\n    \\t\\t\\tif ( geometry.attributes[ key ] === undefined ) continue;\\n\\n    \\t\\t\\tvar attribute1 = attributes[ key ];\\n    \\t\\t\\tvar attributeArray1 = attribute1.array;\\n\\n    \\t\\t\\tvar attribute2 = geometry.attributes[ key ];\\n    \\t\\t\\tvar attributeArray2 = attribute2.array;\\n\\n    \\t\\t\\tvar attributeSize = attribute2.itemSize;\\n\\n    \\t\\t\\tfor ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {\\n\\n    \\t\\t\\t\\tattributeArray1[ j ] = attributeArray2[ i ];\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tnormalizeNormals: function () {\\n\\n    \\t\\tvar normals = this.attributes.normal.array;\\n\\n    \\t\\tvar x, y, z, n;\\n\\n    \\t\\tfor ( var i = 0, il = normals.length; i < il; i += 3 ) {\\n\\n    \\t\\t\\tx = normals[ i ];\\n    \\t\\t\\ty = normals[ i + 1 ];\\n    \\t\\t\\tz = normals[ i + 2 ];\\n\\n    \\t\\t\\tn = 1.0 / Math.sqrt( x * x + y * y + z * z );\\n\\n    \\t\\t\\tnormals[ i ] *= n;\\n    \\t\\t\\tnormals[ i + 1 ] *= n;\\n    \\t\\t\\tnormals[ i + 2 ] *= n;\\n\\n    \\t\\t}\\n\\n    \\t},\\n\\n    \\ttoNonIndexed: function () {\\n\\n    \\t\\tif ( this.index === null ) {\\n\\n    \\t\\t\\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.' );\\n    \\t\\t\\treturn this;\\n\\n    \\t\\t}\\n\\n    \\t\\tvar geometry2 = new BufferGeometry();\\n\\n    \\t\\tvar indices = this.index.array;\\n    \\t\\tvar attributes = this.attributes;\\n\\n    \\t\\tfor ( var name in attributes ) {\\n\\n    \\t\\t\\tvar attribute = attributes[ name ];\\n\\n    \\t\\t\\tvar array = attribute.array;\\n    \\t\\t\\tvar itemSize = attribute.itemSize;\\n\\n    \\t\\t\\tvar array2 = new array.constructor( indices.length * itemSize );\\n\\n    \\t\\t\\tvar index = 0, index2 = 0;\\n\\n    \\t\\t\\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\\n\\n    \\t\\t\\t\\tindex = indices[ i ] * itemSize;\\n\\n    \\t\\t\\t\\tfor ( var j = 0; j < itemSize; j ++ ) {\\n\\n    \\t\\t\\t\\t\\tarray2[ index2 ++ ] = array[ index ++ ];\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tgeometry2.addAttribute( name, new BufferAttribute( array2, itemSize ) );\\n\\n    \\t\\t}\\n\\n    \\t\\treturn geometry2;\\n\\n    \\t},\\n\\n    \\ttoJSON: function () {\\n\\n    \\t\\tvar data = {\\n    \\t\\t\\tmetadata: {\\n    \\t\\t\\t\\tversion: 4.4,\\n    \\t\\t\\t\\ttype: 'BufferGeometry',\\n    \\t\\t\\t\\tgenerator: 'BufferGeometry.toJSON'\\n    \\t\\t\\t}\\n    \\t\\t};\\n\\n    \\t\\t// standard BufferGeometry serialization\\n\\n    \\t\\tdata.uuid = this.uuid;\\n    \\t\\tdata.type = this.type;\\n    \\t\\tif ( this.name !== '' ) data.name = this.name;\\n\\n    \\t\\tif ( this.parameters !== undefined ) {\\n\\n    \\t\\t\\tvar parameters = this.parameters;\\n\\n    \\t\\t\\tfor ( var key in parameters ) {\\n\\n    \\t\\t\\t\\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\treturn data;\\n\\n    \\t\\t}\\n\\n    \\t\\tdata.data = { attributes: {} };\\n\\n    \\t\\tvar index = this.index;\\n\\n    \\t\\tif ( index !== null ) {\\n\\n    \\t\\t\\tvar array = Array.prototype.slice.call( index.array );\\n\\n    \\t\\t\\tdata.data.index = {\\n    \\t\\t\\t\\ttype: index.array.constructor.name,\\n    \\t\\t\\t\\tarray: array\\n    \\t\\t\\t};\\n\\n    \\t\\t}\\n\\n    \\t\\tvar attributes = this.attributes;\\n\\n    \\t\\tfor ( var key in attributes ) {\\n\\n    \\t\\t\\tvar attribute = attributes[ key ];\\n\\n    \\t\\t\\tvar array = Array.prototype.slice.call( attribute.array );\\n\\n    \\t\\t\\tdata.data.attributes[ key ] = {\\n    \\t\\t\\t\\titemSize: attribute.itemSize,\\n    \\t\\t\\t\\ttype: attribute.array.constructor.name,\\n    \\t\\t\\t\\tarray: array,\\n    \\t\\t\\t\\tnormalized: attribute.normalized\\n    \\t\\t\\t};\\n\\n    \\t\\t}\\n\\n    \\t\\tvar groups = this.groups;\\n\\n    \\t\\tif ( groups.length > 0 ) {\\n\\n    \\t\\t\\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\\n\\n    \\t\\t}\\n\\n    \\t\\tvar boundingSphere = this.boundingSphere;\\n\\n    \\t\\tif ( boundingSphere !== null ) {\\n\\n    \\t\\t\\tdata.data.boundingSphere = {\\n    \\t\\t\\t\\tcenter: boundingSphere.center.toArray(),\\n    \\t\\t\\t\\tradius: boundingSphere.radius\\n    \\t\\t\\t};\\n\\n    \\t\\t}\\n\\n    \\t\\treturn data;\\n\\n    \\t},\\n\\n    \\tclone: function () {\\n\\n    \\t\\t/*\\n    \\t\\t// Handle primitives\\n\\n    \\t\\tvar parameters = this.parameters;\\n\\n    \\t\\tif ( parameters !== undefined ) {\\n\\n    \\t\\t\\tvar values = [];\\n\\n    \\t\\t\\tfor ( var key in parameters ) {\\n\\n    \\t\\t\\t\\tvalues.push( parameters[ key ] );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tvar geometry = Object.create( this.constructor.prototype );\\n    \\t\\t\\tthis.constructor.apply( geometry, values );\\n    \\t\\t\\treturn geometry;\\n\\n    \\t\\t}\\n\\n    \\t\\treturn new this.constructor().copy( this );\\n    \\t\\t*/\\n\\n    \\t\\treturn new BufferGeometry().copy( this );\\n\\n    \\t},\\n\\n    \\tcopy: function ( source ) {\\n\\n    \\t\\tvar index = source.index;\\n\\n    \\t\\tif ( index !== null ) {\\n\\n    \\t\\t\\tthis.setIndex( index.clone() );\\n\\n    \\t\\t}\\n\\n    \\t\\tvar attributes = source.attributes;\\n\\n    \\t\\tfor ( var name in attributes ) {\\n\\n    \\t\\t\\tvar attribute = attributes[ name ];\\n    \\t\\t\\tthis.addAttribute( name, attribute.clone() );\\n\\n    \\t\\t}\\n\\n    \\t\\tvar groups = source.groups;\\n\\n    \\t\\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\\n\\n    \\t\\t\\tvar group = groups[ i ];\\n    \\t\\t\\tthis.addGroup( group.start, group.count, group.materialIndex );\\n\\n    \\t\\t}\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tdispose: function () {\\n\\n    \\t\\tthis.dispatchEvent( { type: 'dispose' } );\\n\\n    \\t}\\n\\n    } );\\n\\n    BufferGeometry.MaxIndex = 65535;\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     * @author alteredq / http://alteredqualia.com/\\n     * @author mikael emtinger / http://gomo.se/\\n     * @author jonobr1 / http://jonobr1.com/\\n     */\\n\\n    function Mesh( geometry, material ) {\\n\\n    \\tObject3D.call( this );\\n\\n    \\tthis.type = 'Mesh';\\n\\n    \\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\\n    \\tthis.material = material !== undefined ? material : new MeshBasicMaterial( { color: Math.random() * 0xffffff } );\\n\\n    \\tthis.drawMode = TrianglesDrawMode;\\n\\n    \\tthis.updateMorphTargets();\\n\\n    }\\n\\n    Mesh.prototype = Object.assign( Object.create( Object3D.prototype ), {\\n\\n    \\tconstructor: Mesh,\\n\\n    \\tisMesh: true,\\n\\n    \\tsetDrawMode: function ( value ) {\\n\\n    \\t\\tthis.drawMode = value;\\n\\n    \\t},\\n\\n    \\tcopy: function ( source ) {\\n\\n    \\t\\tObject3D.prototype.copy.call( this, source );\\n\\n    \\t\\tthis.drawMode = source.drawMode;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tupdateMorphTargets: function () {\\n\\n    \\t\\tvar morphTargets = this.geometry.morphTargets;\\n\\n    \\t\\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\\n\\n    \\t\\t\\tthis.morphTargetInfluences = [];\\n    \\t\\t\\tthis.morphTargetDictionary = {};\\n\\n    \\t\\t\\tfor ( var m = 0, ml = morphTargets.length; m < ml; m ++ ) {\\n\\n    \\t\\t\\t\\tthis.morphTargetInfluences.push( 0 );\\n    \\t\\t\\t\\tthis.morphTargetDictionary[ morphTargets[ m ].name ] = m;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t},\\n\\n    \\traycast: ( function () {\\n\\n    \\t\\tvar inverseMatrix = new Matrix4();\\n    \\t\\tvar ray = new Ray();\\n    \\t\\tvar sphere = new Sphere();\\n\\n    \\t\\tvar vA = new Vector3();\\n    \\t\\tvar vB = new Vector3();\\n    \\t\\tvar vC = new Vector3();\\n\\n    \\t\\tvar tempA = new Vector3();\\n    \\t\\tvar tempB = new Vector3();\\n    \\t\\tvar tempC = new Vector3();\\n\\n    \\t\\tvar uvA = new Vector2();\\n    \\t\\tvar uvB = new Vector2();\\n    \\t\\tvar uvC = new Vector2();\\n\\n    \\t\\tvar barycoord = new Vector3();\\n\\n    \\t\\tvar intersectionPoint = new Vector3();\\n    \\t\\tvar intersectionPointWorld = new Vector3();\\n\\n    \\t\\tfunction uvIntersection( point, p1, p2, p3, uv1, uv2, uv3 ) {\\n\\n    \\t\\t\\tTriangle.barycoordFromPoint( point, p1, p2, p3, barycoord );\\n\\n    \\t\\t\\tuv1.multiplyScalar( barycoord.x );\\n    \\t\\t\\tuv2.multiplyScalar( barycoord.y );\\n    \\t\\t\\tuv3.multiplyScalar( barycoord.z );\\n\\n    \\t\\t\\tuv1.add( uv2 ).add( uv3 );\\n\\n    \\t\\t\\treturn uv1.clone();\\n\\n    \\t\\t}\\n\\n    \\t\\tfunction checkIntersection( object, raycaster, ray, pA, pB, pC, point ) {\\n\\n    \\t\\t\\tvar intersect;\\n    \\t\\t\\tvar material = object.material;\\n\\n    \\t\\t\\tif ( material.side === BackSide ) {\\n\\n    \\t\\t\\t\\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tif ( intersect === null ) return null;\\n\\n    \\t\\t\\tintersectionPointWorld.copy( point );\\n    \\t\\t\\tintersectionPointWorld.applyMatrix4( object.matrixWorld );\\n\\n    \\t\\t\\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\\n\\n    \\t\\t\\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\\n\\n    \\t\\t\\treturn {\\n    \\t\\t\\t\\tdistance: distance,\\n    \\t\\t\\t\\tpoint: intersectionPointWorld.clone(),\\n    \\t\\t\\t\\tobject: object\\n    \\t\\t\\t};\\n\\n    \\t\\t}\\n\\n    \\t\\tfunction checkBufferGeometryIntersection( object, raycaster, ray, positions, uvs, a, b, c ) {\\n\\n    \\t\\t\\tvA.fromArray( positions, a * 3 );\\n    \\t\\t\\tvB.fromArray( positions, b * 3 );\\n    \\t\\t\\tvC.fromArray( positions, c * 3 );\\n\\n    \\t\\t\\tvar intersection = checkIntersection( object, raycaster, ray, vA, vB, vC, intersectionPoint );\\n\\n    \\t\\t\\tif ( intersection ) {\\n\\n    \\t\\t\\t\\tif ( uvs ) {\\n\\n    \\t\\t\\t\\t\\tuvA.fromArray( uvs, a * 2 );\\n    \\t\\t\\t\\t\\tuvB.fromArray( uvs, b * 2 );\\n    \\t\\t\\t\\t\\tuvC.fromArray( uvs, c * 2 );\\n\\n    \\t\\t\\t\\t\\tintersection.uv = uvIntersection( intersectionPoint,  vA, vB, vC,  uvA, uvB, uvC );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\tintersection.face = new Face3( a, b, c, Triangle.normal( vA, vB, vC ) );\\n    \\t\\t\\t\\tintersection.faceIndex = a;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\treturn intersection;\\n\\n    \\t\\t}\\n\\n    \\t\\treturn function raycast( raycaster, intersects ) {\\n\\n    \\t\\t\\tvar geometry = this.geometry;\\n    \\t\\t\\tvar material = this.material;\\n    \\t\\t\\tvar matrixWorld = this.matrixWorld;\\n\\n    \\t\\t\\tif ( material === undefined ) return;\\n\\n    \\t\\t\\t// Checking boundingSphere distance to ray\\n\\n    \\t\\t\\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\\n\\n    \\t\\t\\tsphere.copy( geometry.boundingSphere );\\n    \\t\\t\\tsphere.applyMatrix4( matrixWorld );\\n\\n    \\t\\t\\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\\n\\n    \\t\\t\\t//\\n\\n    \\t\\t\\tinverseMatrix.getInverse( matrixWorld );\\n    \\t\\t\\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\\n\\n    \\t\\t\\t// Check boundingBox before continuing\\n\\n    \\t\\t\\tif ( geometry.boundingBox !== null ) {\\n\\n    \\t\\t\\t\\tif ( ray.intersectsBox( geometry.boundingBox ) === false ) return;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tvar uvs, intersection;\\n\\n    \\t\\t\\tif ( (geometry && geometry.isBufferGeometry) ) {\\n\\n    \\t\\t\\t\\tvar a, b, c;\\n    \\t\\t\\t\\tvar index = geometry.index;\\n    \\t\\t\\t\\tvar attributes = geometry.attributes;\\n    \\t\\t\\t\\tvar positions = attributes.position.array;\\n\\n    \\t\\t\\t\\tif ( attributes.uv !== undefined ) {\\n\\n    \\t\\t\\t\\t\\tuvs = attributes.uv.array;\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\tif ( index !== null ) {\\n\\n    \\t\\t\\t\\t\\tvar indices = index.array;\\n\\n    \\t\\t\\t\\t\\tfor ( var i = 0, l = indices.length; i < l; i += 3 ) {\\n\\n    \\t\\t\\t\\t\\t\\ta = indices[ i ];\\n    \\t\\t\\t\\t\\t\\tb = indices[ i + 1 ];\\n    \\t\\t\\t\\t\\t\\tc = indices[ i + 2 ];\\n\\n    \\t\\t\\t\\t\\t\\tintersection = checkBufferGeometryIntersection( this, raycaster, ray, positions, uvs, a, b, c );\\n\\n    \\t\\t\\t\\t\\t\\tif ( intersection ) {\\n\\n    \\t\\t\\t\\t\\t\\t\\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indices buffer semantics\\n    \\t\\t\\t\\t\\t\\t\\tintersects.push( intersection );\\n\\n    \\t\\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t} else {\\n\\n\\n    \\t\\t\\t\\t\\tfor ( var i = 0, l = positions.length; i < l; i += 9 ) {\\n\\n    \\t\\t\\t\\t\\t\\ta = i / 3;\\n    \\t\\t\\t\\t\\t\\tb = a + 1;\\n    \\t\\t\\t\\t\\t\\tc = a + 2;\\n\\n    \\t\\t\\t\\t\\t\\tintersection = checkBufferGeometryIntersection( this, raycaster, ray, positions, uvs, a, b, c );\\n\\n    \\t\\t\\t\\t\\t\\tif ( intersection ) {\\n\\n    \\t\\t\\t\\t\\t\\t\\tintersection.index = a; // triangle number in positions buffer semantics\\n    \\t\\t\\t\\t\\t\\t\\tintersects.push( intersection );\\n\\n    \\t\\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t} else if ( (geometry && geometry.isGeometry) ) {\\n\\n    \\t\\t\\t\\tvar fvA, fvB, fvC;\\n    \\t\\t\\t\\tvar isFaceMaterial = (material && material.isMultiMaterial);\\n    \\t\\t\\t\\tvar materials = isFaceMaterial === true ? material.materials : null;\\n\\n    \\t\\t\\t\\tvar vertices = geometry.vertices;\\n    \\t\\t\\t\\tvar faces = geometry.faces;\\n    \\t\\t\\t\\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\\n    \\t\\t\\t\\tif ( faceVertexUvs.length > 0 ) uvs = faceVertexUvs;\\n\\n    \\t\\t\\t\\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\\n\\n    \\t\\t\\t\\t\\tvar face = faces[ f ];\\n    \\t\\t\\t\\t\\tvar faceMaterial = isFaceMaterial === true ? materials[ face.materialIndex ] : material;\\n\\n    \\t\\t\\t\\t\\tif ( faceMaterial === undefined ) continue;\\n\\n    \\t\\t\\t\\t\\tfvA = vertices[ face.a ];\\n    \\t\\t\\t\\t\\tfvB = vertices[ face.b ];\\n    \\t\\t\\t\\t\\tfvC = vertices[ face.c ];\\n\\n    \\t\\t\\t\\t\\tif ( faceMaterial.morphTargets === true ) {\\n\\n    \\t\\t\\t\\t\\t\\tvar morphTargets = geometry.morphTargets;\\n    \\t\\t\\t\\t\\t\\tvar morphInfluences = this.morphTargetInfluences;\\n\\n    \\t\\t\\t\\t\\t\\tvA.set( 0, 0, 0 );\\n    \\t\\t\\t\\t\\t\\tvB.set( 0, 0, 0 );\\n    \\t\\t\\t\\t\\t\\tvC.set( 0, 0, 0 );\\n\\n    \\t\\t\\t\\t\\t\\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\\n\\n    \\t\\t\\t\\t\\t\\t\\tvar influence = morphInfluences[ t ];\\n\\n    \\t\\t\\t\\t\\t\\t\\tif ( influence === 0 ) continue;\\n\\n    \\t\\t\\t\\t\\t\\t\\tvar targets = morphTargets[ t ].vertices;\\n\\n    \\t\\t\\t\\t\\t\\t\\tvA.addScaledVector( tempA.subVectors( targets[ face.a ], fvA ), influence );\\n    \\t\\t\\t\\t\\t\\t\\tvB.addScaledVector( tempB.subVectors( targets[ face.b ], fvB ), influence );\\n    \\t\\t\\t\\t\\t\\t\\tvC.addScaledVector( tempC.subVectors( targets[ face.c ], fvC ), influence );\\n\\n    \\t\\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\t\\tvA.add( fvA );\\n    \\t\\t\\t\\t\\t\\tvB.add( fvB );\\n    \\t\\t\\t\\t\\t\\tvC.add( fvC );\\n\\n    \\t\\t\\t\\t\\t\\tfvA = vA;\\n    \\t\\t\\t\\t\\t\\tfvB = vB;\\n    \\t\\t\\t\\t\\t\\tfvC = vC;\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\tintersection = checkIntersection( this, raycaster, ray, fvA, fvB, fvC, intersectionPoint );\\n\\n    \\t\\t\\t\\t\\tif ( intersection ) {\\n\\n    \\t\\t\\t\\t\\t\\tif ( uvs ) {\\n\\n    \\t\\t\\t\\t\\t\\t\\tvar uvs_f = uvs[ f ];\\n    \\t\\t\\t\\t\\t\\t\\tuvA.copy( uvs_f[ 0 ] );\\n    \\t\\t\\t\\t\\t\\t\\tuvB.copy( uvs_f[ 1 ] );\\n    \\t\\t\\t\\t\\t\\t\\tuvC.copy( uvs_f[ 2 ] );\\n\\n    \\t\\t\\t\\t\\t\\t\\tintersection.uv = uvIntersection( intersectionPoint, fvA, fvB, fvC, uvA, uvB, uvC );\\n\\n    \\t\\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\t\\tintersection.face = face;\\n    \\t\\t\\t\\t\\t\\tintersection.faceIndex = f;\\n    \\t\\t\\t\\t\\t\\tintersects.push( intersection );\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t};\\n\\n    \\t}() ),\\n\\n    \\tclone: function () {\\n\\n    \\t\\treturn new this.constructor( this.geometry, this.material ).copy( this );\\n\\n    \\t}\\n\\n    } );\\n\\n    /**\\n     * @author Mugen87 / https://github.com/Mugen87\\n     */\\n\\n    function BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\\n\\n    \\tBufferGeometry.call( this );\\n\\n    \\tthis.type = 'BoxBufferGeometry';\\n\\n    \\tthis.parameters = {\\n    \\t\\twidth: width,\\n    \\t\\theight: height,\\n    \\t\\tdepth: depth,\\n    \\t\\twidthSegments: widthSegments,\\n    \\t\\theightSegments: heightSegments,\\n    \\t\\tdepthSegments: depthSegments\\n    \\t};\\n\\n    \\tvar scope = this;\\n\\n    \\t// segments\\n    \\twidthSegments = Math.floor( widthSegments ) || 1;\\n    \\theightSegments = Math.floor( heightSegments ) || 1;\\n    \\tdepthSegments = Math.floor( depthSegments ) || 1;\\n\\n    \\t// these are used to calculate buffer length\\n    \\tvar vertexCount = calculateVertexCount( widthSegments, heightSegments, depthSegments );\\n    \\tvar indexCount = calculateIndexCount( widthSegments, heightSegments, depthSegments );\\n\\n    \\t// buffers\\n    \\tvar indices = new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount );\\n    \\tvar vertices = new Float32Array( vertexCount * 3 );\\n    \\tvar normals = new Float32Array( vertexCount * 3 );\\n    \\tvar uvs = new Float32Array( vertexCount * 2 );\\n\\n    \\t// offset variables\\n    \\tvar vertexBufferOffset = 0;\\n    \\tvar uvBufferOffset = 0;\\n    \\tvar indexBufferOffset = 0;\\n    \\tvar numberOfVertices = 0;\\n\\n    \\t// group variables\\n    \\tvar groupStart = 0;\\n\\n    \\t// build each side of the box geometry\\n    \\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height,   width,  depthSegments, heightSegments, 0 ); // px\\n    \\tbuildPlane( 'z', 'y', 'x',   1, - 1, depth, height, - width,  depthSegments, heightSegments, 1 ); // nx\\n    \\tbuildPlane( 'x', 'z', 'y',   1,   1, width, depth,    height, widthSegments, depthSegments,  2 ); // py\\n    \\tbuildPlane( 'x', 'z', 'y',   1, - 1, width, depth,  - height, widthSegments, depthSegments,  3 ); // ny\\n    \\tbuildPlane( 'x', 'y', 'z',   1, - 1, width, height,   depth,  widthSegments, heightSegments, 4 ); // pz\\n    \\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth,  widthSegments, heightSegments, 5 ); // nz\\n\\n    \\t// build geometry\\n    \\tthis.setIndex( new BufferAttribute( indices, 1 ) );\\n    \\tthis.addAttribute( 'position', new BufferAttribute( vertices, 3 ) );\\n    \\tthis.addAttribute( 'normal', new BufferAttribute( normals, 3 ) );\\n    \\tthis.addAttribute( 'uv', new BufferAttribute( uvs, 2 ) );\\n\\n    \\t// helper functions\\n\\n    \\tfunction calculateVertexCount( w, h, d ) {\\n\\n    \\t\\tvar vertices = 0;\\n\\n    \\t\\t// calculate the amount of vertices for each side (plane)\\n    \\t\\tvertices += (w + 1) * (h + 1) * 2; // xy\\n    \\t\\tvertices += (w + 1) * (d + 1) * 2; // xz\\n    \\t\\tvertices += (d + 1) * (h + 1) * 2; // zy\\n\\n    \\t\\treturn vertices;\\n\\n    \\t}\\n\\n    \\tfunction calculateIndexCount( w, h, d ) {\\n\\n    \\t\\tvar index = 0;\\n\\n    \\t\\t// calculate the amount of squares for each side\\n    \\t\\tindex += w * h * 2; // xy\\n    \\t\\tindex += w * d * 2; // xz\\n    \\t\\tindex += d * h * 2; // zy\\n\\n    \\t\\treturn index * 6; // two triangles per square => six vertices per square\\n\\n    \\t}\\n\\n    \\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\\n\\n    \\t\\tvar segmentWidth\\t= width / gridX;\\n    \\t\\tvar segmentHeight = height / gridY;\\n\\n    \\t\\tvar widthHalf = width / 2;\\n    \\t\\tvar heightHalf = height / 2;\\n    \\t\\tvar depthHalf = depth / 2;\\n\\n    \\t\\tvar gridX1 = gridX + 1;\\n    \\t\\tvar gridY1 = gridY + 1;\\n\\n    \\t\\tvar vertexCounter = 0;\\n    \\t\\tvar groupCount = 0;\\n\\n    \\t\\tvar vector = new Vector3();\\n\\n    \\t\\t// generate vertices, normals and uvs\\n\\n    \\t\\tfor ( var iy = 0; iy < gridY1; iy ++ ) {\\n\\n    \\t\\t\\tvar y = iy * segmentHeight - heightHalf;\\n\\n    \\t\\t\\tfor ( var ix = 0; ix < gridX1; ix ++ ) {\\n\\n    \\t\\t\\t\\tvar x = ix * segmentWidth - widthHalf;\\n\\n    \\t\\t\\t\\t// set values to correct vector component\\n    \\t\\t\\t\\tvector[ u ] = x * udir;\\n    \\t\\t\\t\\tvector[ v ] = y * vdir;\\n    \\t\\t\\t\\tvector[ w ] = depthHalf;\\n\\n    \\t\\t\\t\\t// now apply vector to vertex buffer\\n    \\t\\t\\t\\tvertices[ vertexBufferOffset ] = vector.x;\\n    \\t\\t\\t\\tvertices[ vertexBufferOffset + 1 ] = vector.y;\\n    \\t\\t\\t\\tvertices[ vertexBufferOffset + 2 ] = vector.z;\\n\\n    \\t\\t\\t\\t// set values to correct vector component\\n    \\t\\t\\t\\tvector[ u ] = 0;\\n    \\t\\t\\t\\tvector[ v ] = 0;\\n    \\t\\t\\t\\tvector[ w ] = depth > 0 ? 1 : - 1;\\n\\n    \\t\\t\\t\\t// now apply vector to normal buffer\\n    \\t\\t\\t\\tnormals[ vertexBufferOffset ] = vector.x;\\n    \\t\\t\\t\\tnormals[ vertexBufferOffset + 1 ] = vector.y;\\n    \\t\\t\\t\\tnormals[ vertexBufferOffset + 2 ] = vector.z;\\n\\n    \\t\\t\\t\\t// uvs\\n    \\t\\t\\t\\tuvs[ uvBufferOffset ] = ix / gridX;\\n    \\t\\t\\t\\tuvs[ uvBufferOffset + 1 ] = 1 - ( iy / gridY );\\n\\n    \\t\\t\\t\\t// update offsets and counters\\n    \\t\\t\\t\\tvertexBufferOffset += 3;\\n    \\t\\t\\t\\tuvBufferOffset += 2;\\n    \\t\\t\\t\\tvertexCounter += 1;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\t// 1. you need three indices to draw a single face\\n    \\t\\t// 2. a single segment consists of two faces\\n    \\t\\t// 3. so we need to generate six (2*3) indices per segment\\n\\n    \\t\\tfor ( iy = 0; iy < gridY; iy ++ ) {\\n\\n    \\t\\t\\tfor ( ix = 0; ix < gridX; ix ++ ) {\\n\\n    \\t\\t\\t\\t// indices\\n    \\t\\t\\t\\tvar a = numberOfVertices + ix + gridX1 * iy;\\n    \\t\\t\\t\\tvar b = numberOfVertices + ix + gridX1 * ( iy + 1 );\\n    \\t\\t\\t\\tvar c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\\n    \\t\\t\\t\\tvar d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\\n\\n    \\t\\t\\t\\t// face one\\n    \\t\\t\\t\\tindices[ indexBufferOffset ] = a;\\n    \\t\\t\\t\\tindices[ indexBufferOffset + 1 ] = b;\\n    \\t\\t\\t\\tindices[ indexBufferOffset + 2 ] = d;\\n\\n    \\t\\t\\t\\t// face two\\n    \\t\\t\\t\\tindices[ indexBufferOffset + 3 ] = b;\\n    \\t\\t\\t\\tindices[ indexBufferOffset + 4 ] = c;\\n    \\t\\t\\t\\tindices[ indexBufferOffset + 5 ] = d;\\n\\n    \\t\\t\\t\\t// update offsets and counters\\n    \\t\\t\\t\\tindexBufferOffset += 6;\\n    \\t\\t\\t\\tgroupCount += 6;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\t// add a group to the geometry. this will ensure multi material support\\n    \\t\\tscope.addGroup( groupStart, groupCount, materialIndex );\\n\\n    \\t\\t// calculate new start value for groups\\n    \\t\\tgroupStart += groupCount;\\n\\n    \\t\\t// update total number of vertices\\n    \\t\\tnumberOfVertices += vertexCounter;\\n\\n    \\t}\\n\\n    }\\n\\n    BoxBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\\n    BoxBufferGeometry.prototype.constructor = BoxBufferGeometry;\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\\n     */\\n\\n    function PlaneBufferGeometry( width, height, widthSegments, heightSegments ) {\\n\\n    \\tBufferGeometry.call( this );\\n\\n    \\tthis.type = 'PlaneBufferGeometry';\\n\\n    \\tthis.parameters = {\\n    \\t\\twidth: width,\\n    \\t\\theight: height,\\n    \\t\\twidthSegments: widthSegments,\\n    \\t\\theightSegments: heightSegments\\n    \\t};\\n\\n    \\tvar width_half = width / 2;\\n    \\tvar height_half = height / 2;\\n\\n    \\tvar gridX = Math.floor( widthSegments ) || 1;\\n    \\tvar gridY = Math.floor( heightSegments ) || 1;\\n\\n    \\tvar gridX1 = gridX + 1;\\n    \\tvar gridY1 = gridY + 1;\\n\\n    \\tvar segment_width = width / gridX;\\n    \\tvar segment_height = height / gridY;\\n\\n    \\tvar vertices = new Float32Array( gridX1 * gridY1 * 3 );\\n    \\tvar normals = new Float32Array( gridX1 * gridY1 * 3 );\\n    \\tvar uvs = new Float32Array( gridX1 * gridY1 * 2 );\\n\\n    \\tvar offset = 0;\\n    \\tvar offset2 = 0;\\n\\n    \\tfor ( var iy = 0; iy < gridY1; iy ++ ) {\\n\\n    \\t\\tvar y = iy * segment_height - height_half;\\n\\n    \\t\\tfor ( var ix = 0; ix < gridX1; ix ++ ) {\\n\\n    \\t\\t\\tvar x = ix * segment_width - width_half;\\n\\n    \\t\\t\\tvertices[ offset ] = x;\\n    \\t\\t\\tvertices[ offset + 1 ] = - y;\\n\\n    \\t\\t\\tnormals[ offset + 2 ] = 1;\\n\\n    \\t\\t\\tuvs[ offset2 ] = ix / gridX;\\n    \\t\\t\\tuvs[ offset2 + 1 ] = 1 - ( iy / gridY );\\n\\n    \\t\\t\\toffset += 3;\\n    \\t\\t\\toffset2 += 2;\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\toffset = 0;\\n\\n    \\tvar indices = new ( ( vertices.length / 3 ) > 65535 ? Uint32Array : Uint16Array )( gridX * gridY * 6 );\\n\\n    \\tfor ( var iy = 0; iy < gridY; iy ++ ) {\\n\\n    \\t\\tfor ( var ix = 0; ix < gridX; ix ++ ) {\\n\\n    \\t\\t\\tvar a = ix + gridX1 * iy;\\n    \\t\\t\\tvar b = ix + gridX1 * ( iy + 1 );\\n    \\t\\t\\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\\n    \\t\\t\\tvar d = ( ix + 1 ) + gridX1 * iy;\\n\\n    \\t\\t\\tindices[ offset ] = a;\\n    \\t\\t\\tindices[ offset + 1 ] = b;\\n    \\t\\t\\tindices[ offset + 2 ] = d;\\n\\n    \\t\\t\\tindices[ offset + 3 ] = b;\\n    \\t\\t\\tindices[ offset + 4 ] = c;\\n    \\t\\t\\tindices[ offset + 5 ] = d;\\n\\n    \\t\\t\\toffset += 6;\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\tthis.setIndex( new BufferAttribute( indices, 1 ) );\\n    \\tthis.addAttribute( 'position', new BufferAttribute( vertices, 3 ) );\\n    \\tthis.addAttribute( 'normal', new BufferAttribute( normals, 3 ) );\\n    \\tthis.addAttribute( 'uv', new BufferAttribute( uvs, 2 ) );\\n\\n    }\\n\\n    PlaneBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\\n    PlaneBufferGeometry.prototype.constructor = PlaneBufferGeometry;\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     * @author mikael emtinger / http://gomo.se/\\n     * @author WestLangley / http://github.com/WestLangley\\n    */\\n\\n    function Camera() {\\n\\n    \\tObject3D.call( this );\\n\\n    \\tthis.type = 'Camera';\\n\\n    \\tthis.matrixWorldInverse = new Matrix4();\\n    \\tthis.projectionMatrix = new Matrix4();\\n\\n    }\\n\\n    Camera.prototype = Object.create( Object3D.prototype );\\n    Camera.prototype.constructor = Camera;\\n\\n    Camera.prototype.isCamera = true;\\n\\n    Camera.prototype.getWorldDirection = function () {\\n\\n    \\tvar quaternion = new Quaternion();\\n\\n    \\treturn function getWorldDirection( optionalTarget ) {\\n\\n    \\t\\tvar result = optionalTarget || new Vector3();\\n\\n    \\t\\tthis.getWorldQuaternion( quaternion );\\n\\n    \\t\\treturn result.set( 0, 0, - 1 ).applyQuaternion( quaternion );\\n\\n    \\t};\\n\\n    }();\\n\\n    Camera.prototype.lookAt = function () {\\n\\n    \\t// This routine does not support cameras with rotated and/or translated parent(s)\\n\\n    \\tvar m1 = new Matrix4();\\n\\n    \\treturn function lookAt( vector ) {\\n\\n    \\t\\tm1.lookAt( this.position, vector, this.up );\\n\\n    \\t\\tthis.quaternion.setFromRotationMatrix( m1 );\\n\\n    \\t};\\n\\n    }();\\n\\n    Camera.prototype.clone = function () {\\n\\n    \\treturn new this.constructor().copy( this );\\n\\n    };\\n\\n    Camera.prototype.copy = function ( source ) {\\n\\n    \\tObject3D.prototype.copy.call( this, source );\\n\\n    \\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\\n    \\tthis.projectionMatrix.copy( source.projectionMatrix );\\n\\n    \\treturn this;\\n\\n    };\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     * @author greggman / http://games.greggman.com/\\n     * @author zz85 / http://www.lab4games.net/zz85/blog\\n     * @author tschw\\n     */\\n\\n    function PerspectiveCamera( fov, aspect, near, far ) {\\n\\n    \\tCamera.call( this );\\n\\n    \\tthis.type = 'PerspectiveCamera';\\n\\n    \\tthis.fov = fov !== undefined ? fov : 50;\\n    \\tthis.zoom = 1;\\n\\n    \\tthis.near = near !== undefined ? near : 0.1;\\n    \\tthis.far = far !== undefined ? far : 2000;\\n    \\tthis.focus = 10;\\n\\n    \\tthis.aspect = aspect !== undefined ? aspect : 1;\\n    \\tthis.view = null;\\n\\n    \\tthis.filmGauge = 35;\\t// width of the film (default in millimeters)\\n    \\tthis.filmOffset = 0;\\t// horizontal film offset (same unit as gauge)\\n\\n    \\tthis.updateProjectionMatrix();\\n\\n    }\\n\\n    PerspectiveCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\\n\\n    \\tconstructor: PerspectiveCamera,\\n\\n    \\tisPerspectiveCamera: true,\\n\\n    \\tcopy: function ( source ) {\\n\\n    \\t\\tCamera.prototype.copy.call( this, source );\\n\\n    \\t\\tthis.fov = source.fov;\\n    \\t\\tthis.zoom = source.zoom;\\n\\n    \\t\\tthis.near = source.near;\\n    \\t\\tthis.far = source.far;\\n    \\t\\tthis.focus = source.focus;\\n\\n    \\t\\tthis.aspect = source.aspect;\\n    \\t\\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\\n\\n    \\t\\tthis.filmGauge = source.filmGauge;\\n    \\t\\tthis.filmOffset = source.filmOffset;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\t/**\\n    \\t * Sets the FOV by focal length in respect to the current .filmGauge.\\n    \\t *\\n    \\t * The default film gauge is 35, so that the focal length can be specified for\\n    \\t * a 35mm (full frame) camera.\\n    \\t *\\n    \\t * Values for focal length and film gauge must have the same unit.\\n    \\t */\\n    \\tsetFocalLength: function ( focalLength ) {\\n\\n    \\t\\t// see http://www.bobatkins.com/photography/technical/field_of_view.html\\n    \\t\\tvar vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\\n\\n    \\t\\tthis.fov = exports.Math.RAD2DEG * 2 * Math.atan( vExtentSlope );\\n    \\t\\tthis.updateProjectionMatrix();\\n\\n    \\t},\\n\\n    \\t/**\\n    \\t * Calculates the focal length from the current .fov and .filmGauge.\\n    \\t */\\n    \\tgetFocalLength: function () {\\n\\n    \\t\\tvar vExtentSlope = Math.tan( exports.Math.DEG2RAD * 0.5 * this.fov );\\n\\n    \\t\\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\\n\\n    \\t},\\n\\n    \\tgetEffectiveFOV: function () {\\n\\n    \\t\\treturn exports.Math.RAD2DEG * 2 * Math.atan(\\n    \\t\\t\\t\\tMath.tan( exports.Math.DEG2RAD * 0.5 * this.fov ) / this.zoom );\\n\\n    \\t},\\n\\n    \\tgetFilmWidth: function () {\\n\\n    \\t\\t// film not completely covered in portrait format (aspect < 1)\\n    \\t\\treturn this.filmGauge * Math.min( this.aspect, 1 );\\n\\n    \\t},\\n\\n    \\tgetFilmHeight: function () {\\n\\n    \\t\\t// film not completely covered in landscape format (aspect > 1)\\n    \\t\\treturn this.filmGauge / Math.max( this.aspect, 1 );\\n\\n    \\t},\\n\\n    \\t/**\\n    \\t * Sets an offset in a larger frustum. This is useful for multi-window or\\n    \\t * multi-monitor/multi-machine setups.\\n    \\t *\\n    \\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\\n    \\t * the monitors are in grid like this\\n    \\t *\\n    \\t *   +---+---+---+\\n    \\t *   | A | B | C |\\n    \\t *   +---+---+---+\\n    \\t *   | D | E | F |\\n    \\t *   +---+---+---+\\n    \\t *\\n    \\t * then for each monitor you would call it like this\\n    \\t *\\n    \\t *   var w = 1920;\\n    \\t *   var h = 1080;\\n    \\t *   var fullWidth = w * 3;\\n    \\t *   var fullHeight = h * 2;\\n    \\t *\\n    \\t *   --A--\\n    \\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\\n    \\t *   --B--\\n    \\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\\n    \\t *   --C--\\n    \\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\\n    \\t *   --D--\\n    \\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\\n    \\t *   --E--\\n    \\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\\n    \\t *   --F--\\n    \\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\\n    \\t *\\n    \\t *   Note there is no reason monitors have to be the same size or in a grid.\\n    \\t */\\n    \\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\\n\\n    \\t\\tthis.aspect = fullWidth / fullHeight;\\n\\n    \\t\\tthis.view = {\\n    \\t\\t\\tfullWidth: fullWidth,\\n    \\t\\t\\tfullHeight: fullHeight,\\n    \\t\\t\\toffsetX: x,\\n    \\t\\t\\toffsetY: y,\\n    \\t\\t\\twidth: width,\\n    \\t\\t\\theight: height\\n    \\t\\t};\\n\\n    \\t\\tthis.updateProjectionMatrix();\\n\\n    \\t},\\n\\n    \\tclearViewOffset: function() {\\n\\n    \\t\\tthis.view = null;\\n    \\t\\tthis.updateProjectionMatrix();\\n\\n    \\t},\\n\\n    \\tupdateProjectionMatrix: function () {\\n\\n    \\t\\tvar near = this.near,\\n    \\t\\t\\ttop = near * Math.tan(\\n    \\t\\t\\t\\t\\texports.Math.DEG2RAD * 0.5 * this.fov ) / this.zoom,\\n    \\t\\t\\theight = 2 * top,\\n    \\t\\t\\twidth = this.aspect * height,\\n    \\t\\t\\tleft = - 0.5 * width,\\n    \\t\\t\\tview = this.view;\\n\\n    \\t\\tif ( view !== null ) {\\n\\n    \\t\\t\\tvar fullWidth = view.fullWidth,\\n    \\t\\t\\t\\tfullHeight = view.fullHeight;\\n\\n    \\t\\t\\tleft += view.offsetX * width / fullWidth;\\n    \\t\\t\\ttop -= view.offsetY * height / fullHeight;\\n    \\t\\t\\twidth *= view.width / fullWidth;\\n    \\t\\t\\theight *= view.height / fullHeight;\\n\\n    \\t\\t}\\n\\n    \\t\\tvar skew = this.filmOffset;\\n    \\t\\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\\n\\n    \\t\\tthis.projectionMatrix.makeFrustum(\\n    \\t\\t\\t\\tleft, left + width, top - height, top, near, this.far );\\n\\n    \\t},\\n\\n    \\ttoJSON: function ( meta ) {\\n\\n    \\t\\tvar data = Object3D.prototype.toJSON.call( this, meta );\\n\\n    \\t\\tdata.object.fov = this.fov;\\n    \\t\\tdata.object.zoom = this.zoom;\\n\\n    \\t\\tdata.object.near = this.near;\\n    \\t\\tdata.object.far = this.far;\\n    \\t\\tdata.object.focus = this.focus;\\n\\n    \\t\\tdata.object.aspect = this.aspect;\\n\\n    \\t\\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\\n\\n    \\t\\tdata.object.filmGauge = this.filmGauge;\\n    \\t\\tdata.object.filmOffset = this.filmOffset;\\n\\n    \\t\\treturn data;\\n\\n    \\t}\\n\\n    } );\\n\\n    /**\\n     * @author alteredq / http://alteredqualia.com/\\n     * @author arose / http://github.com/arose\\n     */\\n\\n    function OrthographicCamera( left, right, top, bottom, near, far ) {\\n\\n    \\tCamera.call( this );\\n\\n    \\tthis.type = 'OrthographicCamera';\\n\\n    \\tthis.zoom = 1;\\n    \\tthis.view = null;\\n\\n    \\tthis.left = left;\\n    \\tthis.right = right;\\n    \\tthis.top = top;\\n    \\tthis.bottom = bottom;\\n\\n    \\tthis.near = ( near !== undefined ) ? near : 0.1;\\n    \\tthis.far = ( far !== undefined ) ? far : 2000;\\n\\n    \\tthis.updateProjectionMatrix();\\n\\n    }\\n\\n    OrthographicCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\\n\\n    \\tconstructor: OrthographicCamera,\\n\\n    \\tisOrthographicCamera: true,\\n\\n    \\tcopy: function ( source ) {\\n\\n    \\t\\tCamera.prototype.copy.call( this, source );\\n\\n    \\t\\tthis.left = source.left;\\n    \\t\\tthis.right = source.right;\\n    \\t\\tthis.top = source.top;\\n    \\t\\tthis.bottom = source.bottom;\\n    \\t\\tthis.near = source.near;\\n    \\t\\tthis.far = source.far;\\n\\n    \\t\\tthis.zoom = source.zoom;\\n    \\t\\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsetViewOffset: function( fullWidth, fullHeight, x, y, width, height ) {\\n\\n    \\t\\tthis.view = {\\n    \\t\\t\\tfullWidth: fullWidth,\\n    \\t\\t\\tfullHeight: fullHeight,\\n    \\t\\t\\toffsetX: x,\\n    \\t\\t\\toffsetY: y,\\n    \\t\\t\\twidth: width,\\n    \\t\\t\\theight: height\\n    \\t\\t};\\n\\n    \\t\\tthis.updateProjectionMatrix();\\n\\n    \\t},\\n\\n    \\tclearViewOffset: function() {\\n\\n    \\t\\tthis.view = null;\\n    \\t\\tthis.updateProjectionMatrix();\\n\\n    \\t},\\n\\n    \\tupdateProjectionMatrix: function () {\\n\\n    \\t\\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\\n    \\t\\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\\n    \\t\\tvar cx = ( this.right + this.left ) / 2;\\n    \\t\\tvar cy = ( this.top + this.bottom ) / 2;\\n\\n    \\t\\tvar left = cx - dx;\\n    \\t\\tvar right = cx + dx;\\n    \\t\\tvar top = cy + dy;\\n    \\t\\tvar bottom = cy - dy;\\n\\n    \\t\\tif ( this.view !== null ) {\\n\\n    \\t\\t\\tvar zoomW = this.zoom / ( this.view.width / this.view.fullWidth );\\n    \\t\\t\\tvar zoomH = this.zoom / ( this.view.height / this.view.fullHeight );\\n    \\t\\t\\tvar scaleW = ( this.right - this.left ) / this.view.width;\\n    \\t\\t\\tvar scaleH = ( this.top - this.bottom ) / this.view.height;\\n\\n    \\t\\t\\tleft += scaleW * ( this.view.offsetX / zoomW );\\n    \\t\\t\\tright = left + scaleW * ( this.view.width / zoomW );\\n    \\t\\t\\ttop -= scaleH * ( this.view.offsetY / zoomH );\\n    \\t\\t\\tbottom = top - scaleH * ( this.view.height / zoomH );\\n\\n    \\t\\t}\\n\\n    \\t\\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\\n\\n    \\t},\\n\\n    \\ttoJSON: function ( meta ) {\\n\\n    \\t\\tvar data = Object3D.prototype.toJSON.call( this, meta );\\n\\n    \\t\\tdata.object.zoom = this.zoom;\\n    \\t\\tdata.object.left = this.left;\\n    \\t\\tdata.object.right = this.right;\\n    \\t\\tdata.object.top = this.top;\\n    \\t\\tdata.object.bottom = this.bottom;\\n    \\t\\tdata.object.near = this.near;\\n    \\t\\tdata.object.far = this.far;\\n\\n    \\t\\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\\n\\n    \\t\\treturn data;\\n\\n    \\t}\\n\\n    } );\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     */\\n\\n    function WebGLIndexedBufferRenderer( gl, extensions, infoRender ) {\\n\\n    \\tvar mode;\\n\\n    \\tfunction setMode( value ) {\\n\\n    \\t\\tmode = value;\\n\\n    \\t}\\n\\n    \\tvar type, size;\\n\\n    \\tfunction setIndex( index ) {\\n\\n    \\t\\tif ( index.array instanceof Uint32Array && extensions.get( 'OES_element_index_uint' ) ) {\\n\\n    \\t\\t\\ttype = gl.UNSIGNED_INT;\\n    \\t\\t\\tsize = 4;\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\ttype = gl.UNSIGNED_SHORT;\\n    \\t\\t\\tsize = 2;\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\tfunction render( start, count ) {\\n\\n    \\t\\tgl.drawElements( mode, count, type, start * size );\\n\\n    \\t\\tinfoRender.calls ++;\\n    \\t\\tinfoRender.vertices += count;\\n\\n    \\t\\tif ( mode === gl.TRIANGLES ) infoRender.faces += count / 3;\\n\\n    \\t}\\n\\n    \\tfunction renderInstances( geometry, start, count ) {\\n\\n    \\t\\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\\n\\n    \\t\\tif ( extension === null ) {\\n\\n    \\t\\t\\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\\n    \\t\\t\\treturn;\\n\\n    \\t\\t}\\n\\n    \\t\\textension.drawElementsInstancedANGLE( mode, count, type, start * size, geometry.maxInstancedCount );\\n\\n    \\t\\tinfoRender.calls ++;\\n    \\t\\tinfoRender.vertices += count * geometry.maxInstancedCount;\\n\\n    \\t\\tif ( mode === gl.TRIANGLES ) infoRender.faces += geometry.maxInstancedCount * count / 3;\\n\\n    \\t}\\n\\n    \\treturn {\\n\\n    \\t\\tsetMode: setMode,\\n    \\t\\tsetIndex: setIndex,\\n    \\t\\trender: render,\\n    \\t\\trenderInstances: renderInstances\\n\\n    \\t};\\n\\n    }\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     */\\n\\n    function WebGLBufferRenderer( gl, extensions, infoRender ) {\\n\\n    \\tvar mode;\\n\\n    \\tfunction setMode( value ) {\\n\\n    \\t\\tmode = value;\\n\\n    \\t}\\n\\n    \\tfunction render( start, count ) {\\n\\n    \\t\\tgl.drawArrays( mode, start, count );\\n\\n    \\t\\tinfoRender.calls ++;\\n    \\t\\tinfoRender.vertices += count;\\n\\n    \\t\\tif ( mode === gl.TRIANGLES ) infoRender.faces += count / 3;\\n\\n    \\t}\\n\\n    \\tfunction renderInstances( geometry ) {\\n\\n    \\t\\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\\n\\n    \\t\\tif ( extension === null ) {\\n\\n    \\t\\t\\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\\n    \\t\\t\\treturn;\\n\\n    \\t\\t}\\n\\n    \\t\\tvar position = geometry.attributes.position;\\n\\n    \\t\\tvar count = 0;\\n\\n    \\t\\tif ( (position && position.isInterleavedBufferAttribute) ) {\\n\\n    \\t\\t\\tcount = position.data.count;\\n\\n    \\t\\t\\textension.drawArraysInstancedANGLE( mode, 0, count, geometry.maxInstancedCount );\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\tcount = position.count;\\n\\n    \\t\\t\\textension.drawArraysInstancedANGLE( mode, 0, count, geometry.maxInstancedCount );\\n\\n    \\t\\t}\\n\\n    \\t\\tinfoRender.calls ++;\\n    \\t\\tinfoRender.vertices += count * geometry.maxInstancedCount;\\n\\n    \\t\\tif ( mode === gl.TRIANGLES ) infoRender.faces += geometry.maxInstancedCount * count / 3;\\n\\n    \\t}\\n\\n    \\treturn {\\n    \\t\\tsetMode: setMode,\\n    \\t\\trender: render,\\n    \\t\\trenderInstances: renderInstances\\n    \\t};\\n\\n    }\\n\\n    function WebGLLights() {\\n\\n    \\tvar lights = {};\\n\\n    \\treturn {\\n\\n    \\t\\tget: function ( light ) {\\n\\n    \\t\\t\\tif ( lights[ light.id ] !== undefined ) {\\n\\n    \\t\\t\\t\\treturn lights[ light.id ];\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tvar uniforms;\\n\\n    \\t\\t\\tswitch ( light.type ) {\\n\\n    \\t\\t\\t\\tcase 'DirectionalLight':\\n    \\t\\t\\t\\t\\tuniforms = {\\n    \\t\\t\\t\\t\\t\\tdirection: new Vector3(),\\n    \\t\\t\\t\\t\\t\\tcolor: new Color(),\\n\\n    \\t\\t\\t\\t\\t\\tshadow: false,\\n    \\t\\t\\t\\t\\t\\tshadowBias: 0,\\n    \\t\\t\\t\\t\\t\\tshadowRadius: 1,\\n    \\t\\t\\t\\t\\t\\tshadowMapSize: new Vector2()\\n    \\t\\t\\t\\t\\t};\\n    \\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\tcase 'SpotLight':\\n    \\t\\t\\t\\t\\tuniforms = {\\n    \\t\\t\\t\\t\\t\\tposition: new Vector3(),\\n    \\t\\t\\t\\t\\t\\tdirection: new Vector3(),\\n    \\t\\t\\t\\t\\t\\tcolor: new Color(),\\n    \\t\\t\\t\\t\\t\\tdistance: 0,\\n    \\t\\t\\t\\t\\t\\tconeCos: 0,\\n    \\t\\t\\t\\t\\t\\tpenumbraCos: 0,\\n    \\t\\t\\t\\t\\t\\tdecay: 0,\\n\\n    \\t\\t\\t\\t\\t\\tshadow: false,\\n    \\t\\t\\t\\t\\t\\tshadowBias: 0,\\n    \\t\\t\\t\\t\\t\\tshadowRadius: 1,\\n    \\t\\t\\t\\t\\t\\tshadowMapSize: new Vector2()\\n    \\t\\t\\t\\t\\t};\\n    \\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\tcase 'PointLight':\\n    \\t\\t\\t\\t\\tuniforms = {\\n    \\t\\t\\t\\t\\t\\tposition: new Vector3(),\\n    \\t\\t\\t\\t\\t\\tcolor: new Color(),\\n    \\t\\t\\t\\t\\t\\tdistance: 0,\\n    \\t\\t\\t\\t\\t\\tdecay: 0,\\n\\n    \\t\\t\\t\\t\\t\\tshadow: false,\\n    \\t\\t\\t\\t\\t\\tshadowBias: 0,\\n    \\t\\t\\t\\t\\t\\tshadowRadius: 1,\\n    \\t\\t\\t\\t\\t\\tshadowMapSize: new Vector2()\\n    \\t\\t\\t\\t\\t};\\n    \\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\tcase 'HemisphereLight':\\n    \\t\\t\\t\\t\\tuniforms = {\\n    \\t\\t\\t\\t\\t\\tdirection: new Vector3(),\\n    \\t\\t\\t\\t\\t\\tskyColor: new Color(),\\n    \\t\\t\\t\\t\\t\\tgroundColor: new Color()\\n    \\t\\t\\t\\t\\t};\\n    \\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tlights[ light.id ] = uniforms;\\n\\n    \\t\\t\\treturn uniforms;\\n\\n    \\t\\t}\\n\\n    \\t};\\n\\n    }\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     */\\n\\n    function addLineNumbers( string ) {\\n\\n    \\tvar lines = string.split( '\\\\n' );\\n\\n    \\tfor ( var i = 0; i < lines.length; i ++ ) {\\n\\n    \\t\\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\\n\\n    \\t}\\n\\n    \\treturn lines.join( '\\\\n' );\\n\\n    }\\n\\n    function WebGLShader( gl, type, string ) {\\n\\n    \\tvar shader = gl.createShader( type );\\n\\n    \\tgl.shaderSource( shader, string );\\n    \\tgl.compileShader( shader );\\n\\n    \\tif ( gl.getShaderParameter( shader, gl.COMPILE_STATUS ) === false ) {\\n\\n    \\t\\tconsole.error( 'THREE.WebGLShader: Shader couldn\\\\'t compile.' );\\n\\n    \\t}\\n\\n    \\tif ( gl.getShaderInfoLog( shader ) !== '' ) {\\n\\n    \\t\\tconsole.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', type === gl.VERTEX_SHADER ? 'vertex' : 'fragment', gl.getShaderInfoLog( shader ), addLineNumbers( string ) );\\n\\n    \\t}\\n\\n    \\t// --enable-privileged-webgl-extension\\n    \\t// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\\n\\n    \\treturn shader;\\n\\n    }\\n\\n    var programIdCount = 0;\\n\\n    function getEncodingComponents( encoding ) {\\n\\n    \\tswitch ( encoding ) {\\n\\n    \\t\\tcase LinearEncoding:\\n    \\t\\t\\treturn [ 'Linear','( value )' ];\\n    \\t\\tcase sRGBEncoding:\\n    \\t\\t\\treturn [ 'sRGB','( value )' ];\\n    \\t\\tcase RGBEEncoding:\\n    \\t\\t\\treturn [ 'RGBE','( value )' ];\\n    \\t\\tcase RGBM7Encoding:\\n    \\t\\t\\treturn [ 'RGBM','( value, 7.0 )' ];\\n    \\t\\tcase RGBM16Encoding:\\n    \\t\\t\\treturn [ 'RGBM','( value, 16.0 )' ];\\n    \\t\\tcase RGBDEncoding:\\n    \\t\\t\\treturn [ 'RGBD','( value, 256.0 )' ];\\n    \\t\\tcase GammaEncoding:\\n    \\t\\t\\treturn [ 'Gamma','( value, float( GAMMA_FACTOR ) )' ];\\n    \\t\\tdefault:\\n    \\t\\t\\tthrow new Error( 'unsupported encoding: ' + encoding );\\n\\n    \\t}\\n\\n    }\\n\\n    function getTexelDecodingFunction( functionName, encoding ) {\\n\\n    \\tvar components = getEncodingComponents( encoding );\\n    \\treturn \\\"vec4 \\\" + functionName + \\\"( vec4 value ) { return \\\" + components[ 0 ] + \\\"ToLinear\\\" + components[ 1 ] + \\\"; }\\\";\\n\\n    }\\n\\n    function getTexelEncodingFunction( functionName, encoding ) {\\n\\n    \\tvar components = getEncodingComponents( encoding );\\n    \\treturn \\\"vec4 \\\" + functionName + \\\"( vec4 value ) { return LinearTo\\\" + components[ 0 ] + components[ 1 ] + \\\"; }\\\";\\n\\n    }\\n\\n    function getToneMappingFunction( functionName, toneMapping ) {\\n\\n    \\tvar toneMappingName;\\n\\n    \\tswitch ( toneMapping ) {\\n\\n    \\t\\tcase LinearToneMapping:\\n    \\t\\t\\ttoneMappingName = \\\"Linear\\\";\\n    \\t\\t\\tbreak;\\n\\n    \\t\\tcase ReinhardToneMapping:\\n    \\t\\t\\ttoneMappingName = \\\"Reinhard\\\";\\n    \\t\\t\\tbreak;\\n\\n    \\t\\tcase Uncharted2ToneMapping:\\n    \\t\\t\\ttoneMappingName = \\\"Uncharted2\\\";\\n    \\t\\t\\tbreak;\\n\\n    \\t\\tcase CineonToneMapping:\\n    \\t\\t\\ttoneMappingName = \\\"OptimizedCineon\\\";\\n    \\t\\t\\tbreak;\\n\\n    \\t\\tdefault:\\n    \\t\\t\\tthrow new Error( 'unsupported toneMapping: ' + toneMapping );\\n\\n    \\t}\\n\\n    \\treturn \\\"vec3 \\\" + functionName + \\\"( vec3 color ) { return \\\" + toneMappingName + \\\"ToneMapping( color ); }\\\";\\n\\n    }\\n\\n    function generateExtensions( extensions, parameters, rendererExtensions ) {\\n\\n    \\textensions = extensions || {};\\n\\n    \\tvar chunks = [\\n    \\t\\t( extensions.derivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.normalMap || parameters.flatShading ) ? '#extension GL_OES_standard_derivatives : enable' : '',\\n    \\t\\t( extensions.fragDepth || parameters.logarithmicDepthBuffer ) && rendererExtensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',\\n    \\t\\t( extensions.drawBuffers ) && rendererExtensions.get( 'WEBGL_draw_buffers' ) ? '#extension GL_EXT_draw_buffers : require' : '',\\n    \\t\\t( extensions.shaderTextureLOD || parameters.envMap ) && rendererExtensions.get( 'EXT_shader_texture_lod' ) ? '#extension GL_EXT_shader_texture_lod : enable' : '',\\n    \\t];\\n\\n    \\treturn chunks.filter( filterEmptyLine ).join( '\\\\n' );\\n\\n    }\\n\\n    function generateDefines( defines ) {\\n\\n    \\tvar chunks = [];\\n\\n    \\tfor ( var name in defines ) {\\n\\n    \\t\\tvar value = defines[ name ];\\n\\n    \\t\\tif ( value === false ) continue;\\n\\n    \\t\\tchunks.push( '#define ' + name + ' ' + value );\\n\\n    \\t}\\n\\n    \\treturn chunks.join( '\\\\n' );\\n\\n    }\\n\\n    function fetchAttributeLocations( gl, program, identifiers ) {\\n\\n    \\tvar attributes = {};\\n\\n    \\tvar n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\\n\\n    \\tfor ( var i = 0; i < n; i ++ ) {\\n\\n    \\t\\tvar info = gl.getActiveAttrib( program, i );\\n    \\t\\tvar name = info.name;\\n\\n    \\t\\t// console.log(\\\"THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:\\\", name, i );\\n\\n    \\t\\tattributes[ name ] = gl.getAttribLocation( program, name );\\n\\n    \\t}\\n\\n    \\treturn attributes;\\n\\n    }\\n\\n    function filterEmptyLine( string ) {\\n\\n    \\treturn string !== '';\\n\\n    }\\n\\n    function replaceLightNums( string, parameters ) {\\n\\n    \\treturn string\\n    \\t\\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\\n    \\t\\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\\n    \\t\\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\\n    \\t\\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights );\\n\\n    }\\n\\n    function parseIncludes( string ) {\\n\\n    \\tvar pattern = /#include +<([\\\\w\\\\d.]+)>/g;\\n\\n    \\tfunction replace( match, include ) {\\n\\n    \\t\\tvar replace = ShaderChunk[ include ];\\n\\n    \\t\\tif ( replace === undefined ) {\\n\\n    \\t\\t\\tthrow new Error( 'Can not resolve #include <' + include + '>' );\\n\\n    \\t\\t}\\n\\n    \\t\\treturn parseIncludes( replace );\\n\\n    \\t}\\n\\n    \\treturn string.replace( pattern, replace );\\n\\n    }\\n\\n    function unrollLoops( string ) {\\n\\n    \\tvar pattern = /for \\\\( int i \\\\= (\\\\d+)\\\\; i < (\\\\d+)\\\\; i \\\\+\\\\+ \\\\) \\\\{([\\\\s\\\\S]+?)(?=\\\\})\\\\}/g;\\n\\n    \\tfunction replace( match, start, end, snippet ) {\\n\\n    \\t\\tvar unroll = '';\\n\\n    \\t\\tfor ( var i = parseInt( start ); i < parseInt( end ); i ++ ) {\\n\\n    \\t\\t\\tunroll += snippet.replace( /\\\\[ i \\\\]/g, '[ ' + i + ' ]' );\\n\\n    \\t\\t}\\n\\n    \\t\\treturn unroll;\\n\\n    \\t}\\n\\n    \\treturn string.replace( pattern, replace );\\n\\n    }\\n\\n    function WebGLProgram( renderer, code, material, parameters ) {\\n\\n    \\tvar gl = renderer.context;\\n\\n    \\tvar extensions = material.extensions;\\n    \\tvar defines = material.defines;\\n\\n    \\tvar vertexShader = material.__webglShader.vertexShader;\\n    \\tvar fragmentShader = material.__webglShader.fragmentShader;\\n\\n    \\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\\n\\n    \\tif ( parameters.shadowMapType === PCFShadowMap ) {\\n\\n    \\t\\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\\n\\n    \\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\\n\\n    \\t\\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\\n\\n    \\t}\\n\\n    \\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\\n    \\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\\n    \\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\\n\\n    \\tif ( parameters.envMap ) {\\n\\n    \\t\\tswitch ( material.envMap.mapping ) {\\n\\n    \\t\\t\\tcase CubeReflectionMapping:\\n    \\t\\t\\tcase CubeRefractionMapping:\\n    \\t\\t\\t\\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\\n    \\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\tcase CubeUVReflectionMapping:\\n    \\t\\t\\tcase CubeUVRefractionMapping:\\n    \\t\\t\\t\\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\\n    \\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\tcase EquirectangularReflectionMapping:\\n    \\t\\t\\tcase EquirectangularRefractionMapping:\\n    \\t\\t\\t\\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\\n    \\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\tcase SphericalReflectionMapping:\\n    \\t\\t\\t\\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\\n    \\t\\t\\t\\tbreak;\\n\\n    \\t\\t}\\n\\n    \\t\\tswitch ( material.envMap.mapping ) {\\n\\n    \\t\\t\\tcase CubeRefractionMapping:\\n    \\t\\t\\tcase EquirectangularRefractionMapping:\\n    \\t\\t\\t\\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\\n    \\t\\t\\t\\tbreak;\\n\\n    \\t\\t}\\n\\n    \\t\\tswitch ( material.combine ) {\\n\\n    \\t\\t\\tcase MultiplyOperation:\\n    \\t\\t\\t\\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\\n    \\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\tcase MixOperation:\\n    \\t\\t\\t\\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\\n    \\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\tcase AddOperation:\\n    \\t\\t\\t\\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\\n    \\t\\t\\t\\tbreak;\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\\n\\n    \\t// console.log( 'building new program ' );\\n\\n    \\t//\\n\\n    \\tvar customExtensions = generateExtensions( extensions, parameters, renderer.extensions );\\n\\n    \\tvar customDefines = generateDefines( defines );\\n\\n    \\t//\\n\\n    \\tvar program = gl.createProgram();\\n\\n    \\tvar prefixVertex, prefixFragment;\\n\\n    \\tif ( material.isRawShaderMaterial ) {\\n\\n    \\t\\tprefixVertex = [\\n\\n    \\t\\t\\tcustomDefines,\\n\\n    \\t\\t\\t'\\\\n'\\n\\n    \\t\\t].filter( filterEmptyLine ).join( '\\\\n' );\\n\\n    \\t\\tprefixFragment = [\\n\\n    \\t\\t\\tcustomExtensions,\\n    \\t\\t\\tcustomDefines,\\n\\n    \\t\\t\\t'\\\\n'\\n\\n    \\t\\t].filter( filterEmptyLine ).join( '\\\\n' );\\n\\n    \\t} else {\\n\\n    \\t\\tprefixVertex = [\\n\\n    \\t\\t\\t'precision ' + parameters.precision + ' float;',\\n    \\t\\t\\t'precision ' + parameters.precision + ' int;',\\n\\n    \\t\\t\\t'#define SHADER_NAME ' + material.__webglShader.name,\\n\\n    \\t\\t\\tcustomDefines,\\n\\n    \\t\\t\\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\\n\\n    \\t\\t\\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\\n\\n    \\t\\t\\t'#define MAX_BONES ' + parameters.maxBones,\\n\\n    \\t\\t\\tparameters.map ? '#define USE_MAP' : '',\\n    \\t\\t\\tparameters.envMap ? '#define USE_ENVMAP' : '',\\n    \\t\\t\\tparameters.envMap ? '#define ' + envMapModeDefine : '',\\n    \\t\\t\\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\\n    \\t\\t\\tparameters.aoMap ? '#define USE_AOMAP' : '',\\n    \\t\\t\\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\\n    \\t\\t\\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\\n    \\t\\t\\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\\n    \\t\\t\\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\\n    \\t\\t\\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\\n    \\t\\t\\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\\n    \\t\\t\\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\\n    \\t\\t\\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\\n    \\t\\t\\tparameters.vertexColors ? '#define USE_COLOR' : '',\\n\\n    \\t\\t\\tparameters.flatShading ? '#define FLAT_SHADED' : '',\\n\\n    \\t\\t\\tparameters.skinning ? '#define USE_SKINNING' : '',\\n    \\t\\t\\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\\n\\n    \\t\\t\\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\\n    \\t\\t\\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\\n    \\t\\t\\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\\n    \\t\\t\\tparameters.flipSided ? '#define FLIP_SIDED' : '',\\n\\n    \\t\\t\\t'#define NUM_CLIPPING_PLANES ' + parameters.numClippingPlanes,\\n\\n    \\t\\t\\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\\n    \\t\\t\\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\\n\\n    \\t\\t\\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\\n\\n    \\t\\t\\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\\n    \\t\\t\\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\\n\\n    \\t\\t\\t'uniform mat4 modelMatrix;',\\n    \\t\\t\\t'uniform mat4 modelViewMatrix;',\\n    \\t\\t\\t'uniform mat4 projectionMatrix;',\\n    \\t\\t\\t'uniform mat4 viewMatrix;',\\n    \\t\\t\\t'uniform mat3 normalMatrix;',\\n    \\t\\t\\t'uniform vec3 cameraPosition;',\\n\\n    \\t\\t\\t'attribute vec3 position;',\\n    \\t\\t\\t'attribute vec3 normal;',\\n    \\t\\t\\t'attribute vec2 uv;',\\n\\n    \\t\\t\\t'#ifdef USE_COLOR',\\n\\n    \\t\\t\\t'\\tattribute vec3 color;',\\n\\n    \\t\\t\\t'#endif',\\n\\n    \\t\\t\\t'#ifdef USE_MORPHTARGETS',\\n\\n    \\t\\t\\t'\\tattribute vec3 morphTarget0;',\\n    \\t\\t\\t'\\tattribute vec3 morphTarget1;',\\n    \\t\\t\\t'\\tattribute vec3 morphTarget2;',\\n    \\t\\t\\t'\\tattribute vec3 morphTarget3;',\\n\\n    \\t\\t\\t'\\t#ifdef USE_MORPHNORMALS',\\n\\n    \\t\\t\\t'\\t\\tattribute vec3 morphNormal0;',\\n    \\t\\t\\t'\\t\\tattribute vec3 morphNormal1;',\\n    \\t\\t\\t'\\t\\tattribute vec3 morphNormal2;',\\n    \\t\\t\\t'\\t\\tattribute vec3 morphNormal3;',\\n\\n    \\t\\t\\t'\\t#else',\\n\\n    \\t\\t\\t'\\t\\tattribute vec3 morphTarget4;',\\n    \\t\\t\\t'\\t\\tattribute vec3 morphTarget5;',\\n    \\t\\t\\t'\\t\\tattribute vec3 morphTarget6;',\\n    \\t\\t\\t'\\t\\tattribute vec3 morphTarget7;',\\n\\n    \\t\\t\\t'\\t#endif',\\n\\n    \\t\\t\\t'#endif',\\n\\n    \\t\\t\\t'#ifdef USE_SKINNING',\\n\\n    \\t\\t\\t'\\tattribute vec4 skinIndex;',\\n    \\t\\t\\t'\\tattribute vec4 skinWeight;',\\n\\n    \\t\\t\\t'#endif',\\n\\n    \\t\\t\\t'\\\\n'\\n\\n    \\t\\t].filter( filterEmptyLine ).join( '\\\\n' );\\n\\n    \\t\\tprefixFragment = [\\n\\n    \\t\\t\\tcustomExtensions,\\n\\n    \\t\\t\\t'precision ' + parameters.precision + ' float;',\\n    \\t\\t\\t'precision ' + parameters.precision + ' int;',\\n\\n    \\t\\t\\t'#define SHADER_NAME ' + material.__webglShader.name,\\n\\n    \\t\\t\\tcustomDefines,\\n\\n    \\t\\t\\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest : '',\\n\\n    \\t\\t\\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\\n\\n    \\t\\t\\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\\n    \\t\\t\\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\\n\\n    \\t\\t\\tparameters.map ? '#define USE_MAP' : '',\\n    \\t\\t\\tparameters.envMap ? '#define USE_ENVMAP' : '',\\n    \\t\\t\\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\\n    \\t\\t\\tparameters.envMap ? '#define ' + envMapModeDefine : '',\\n    \\t\\t\\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\\n    \\t\\t\\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\\n    \\t\\t\\tparameters.aoMap ? '#define USE_AOMAP' : '',\\n    \\t\\t\\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\\n    \\t\\t\\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\\n    \\t\\t\\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\\n    \\t\\t\\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\\n    \\t\\t\\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\\n    \\t\\t\\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\\n    \\t\\t\\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\\n    \\t\\t\\tparameters.vertexColors ? '#define USE_COLOR' : '',\\n\\n    \\t\\t\\tparameters.flatShading ? '#define FLAT_SHADED' : '',\\n\\n    \\t\\t\\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\\n    \\t\\t\\tparameters.flipSided ? '#define FLIP_SIDED' : '',\\n\\n    \\t\\t\\t'#define NUM_CLIPPING_PLANES ' + parameters.numClippingPlanes,\\n\\n    \\t\\t\\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\\n    \\t\\t\\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\\n\\n    \\t\\t\\tparameters.premultipliedAlpha ? \\\"#define PREMULTIPLIED_ALPHA\\\" : '',\\n\\n    \\t\\t\\tparameters.physicallyCorrectLights ? \\\"#define PHYSICALLY_CORRECT_LIGHTS\\\" : '',\\n\\n    \\t\\t\\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\\n    \\t\\t\\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\\n\\n    \\t\\t\\tparameters.envMap && renderer.extensions.get( 'EXT_shader_texture_lod' ) ? '#define TEXTURE_LOD_EXT' : '',\\n\\n    \\t\\t\\t'uniform mat4 viewMatrix;',\\n    \\t\\t\\t'uniform vec3 cameraPosition;',\\n\\n    \\t\\t\\t( parameters.toneMapping !== NoToneMapping ) ? \\\"#define TONE_MAPPING\\\" : '',\\n    \\t\\t\\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '',  // this code is required here because it is used by the toneMapping() function defined below\\n    \\t\\t\\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( \\\"toneMapping\\\", parameters.toneMapping ) : '',\\n\\n    \\t\\t\\t( parameters.outputEncoding || parameters.mapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding ) ? ShaderChunk[ 'encodings_pars_fragment' ] : '', // this code is required here because it is used by the various encoding/decoding function defined below\\n    \\t\\t\\tparameters.mapEncoding ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',\\n    \\t\\t\\tparameters.envMapEncoding ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',\\n    \\t\\t\\tparameters.emissiveMapEncoding ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',\\n    \\t\\t\\tparameters.outputEncoding ? getTexelEncodingFunction( \\\"linearToOutputTexel\\\", parameters.outputEncoding ) : '',\\n\\n    \\t\\t\\tparameters.depthPacking ? \\\"#define DEPTH_PACKING \\\" + material.depthPacking : '',\\n\\n    \\t\\t\\t'\\\\n'\\n\\n    \\t\\t].filter( filterEmptyLine ).join( '\\\\n' );\\n\\n    \\t}\\n\\n    \\tvertexShader = parseIncludes( vertexShader, parameters );\\n    \\tvertexShader = replaceLightNums( vertexShader, parameters );\\n\\n    \\tfragmentShader = parseIncludes( fragmentShader, parameters );\\n    \\tfragmentShader = replaceLightNums( fragmentShader, parameters );\\n\\n    \\tif ( ! material.isShaderMaterial ) {\\n\\n    \\t\\tvertexShader = unrollLoops( vertexShader );\\n    \\t\\tfragmentShader = unrollLoops( fragmentShader );\\n\\n    \\t}\\n\\n    \\tvar vertexGlsl = prefixVertex + vertexShader;\\n    \\tvar fragmentGlsl = prefixFragment + fragmentShader;\\n\\n    \\t// console.log( '*VERTEX*', vertexGlsl );\\n    \\t// console.log( '*FRAGMENT*', fragmentGlsl );\\n\\n    \\tvar glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\\n    \\tvar glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\\n\\n    \\tgl.attachShader( program, glVertexShader );\\n    \\tgl.attachShader( program, glFragmentShader );\\n\\n    \\t// Force a particular attribute to index 0.\\n\\n    \\tif ( material.index0AttributeName !== undefined ) {\\n\\n    \\t\\tgl.bindAttribLocation( program, 0, material.index0AttributeName );\\n\\n    \\t} else if ( parameters.morphTargets === true ) {\\n\\n    \\t\\t// programs with morphTargets displace position out of attribute 0\\n    \\t\\tgl.bindAttribLocation( program, 0, 'position' );\\n\\n    \\t}\\n\\n    \\tgl.linkProgram( program );\\n\\n    \\tvar programLog = gl.getProgramInfoLog( program );\\n    \\tvar vertexLog = gl.getShaderInfoLog( glVertexShader );\\n    \\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader );\\n\\n    \\tvar runnable = true;\\n    \\tvar haveDiagnostics = true;\\n\\n    \\t// console.log( '**VERTEX**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glVertexShader ) );\\n    \\t// console.log( '**FRAGMENT**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glFragmentShader ) );\\n\\n    \\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\\n\\n    \\t\\trunnable = false;\\n\\n    \\t\\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter( program, gl.VALIDATE_STATUS ), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog );\\n\\n    \\t} else if ( programLog !== '' ) {\\n\\n    \\t\\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\\n\\n    \\t} else if ( vertexLog === '' || fragmentLog === '' ) {\\n\\n    \\t\\thaveDiagnostics = false;\\n\\n    \\t}\\n\\n    \\tif ( haveDiagnostics ) {\\n\\n    \\t\\tthis.diagnostics = {\\n\\n    \\t\\t\\trunnable: runnable,\\n    \\t\\t\\tmaterial: material,\\n\\n    \\t\\t\\tprogramLog: programLog,\\n\\n    \\t\\t\\tvertexShader: {\\n\\n    \\t\\t\\t\\tlog: vertexLog,\\n    \\t\\t\\t\\tprefix: prefixVertex\\n\\n    \\t\\t\\t},\\n\\n    \\t\\t\\tfragmentShader: {\\n\\n    \\t\\t\\t\\tlog: fragmentLog,\\n    \\t\\t\\t\\tprefix: prefixFragment\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t};\\n\\n    \\t}\\n\\n    \\t// clean up\\n\\n    \\tgl.deleteShader( glVertexShader );\\n    \\tgl.deleteShader( glFragmentShader );\\n\\n    \\t// set up caching for uniform locations\\n\\n    \\tvar cachedUniforms;\\n\\n    \\tthis.getUniforms = function() {\\n\\n    \\t\\tif ( cachedUniforms === undefined ) {\\n\\n    \\t\\t\\tcachedUniforms =\\n    \\t\\t\\t\\t\\tnew WebGLUniforms( gl, program, renderer );\\n\\n    \\t\\t}\\n\\n    \\t\\treturn cachedUniforms;\\n\\n    \\t};\\n\\n    \\t// set up caching for attribute locations\\n\\n    \\tvar cachedAttributes;\\n\\n    \\tthis.getAttributes = function() {\\n\\n    \\t\\tif ( cachedAttributes === undefined ) {\\n\\n    \\t\\t\\tcachedAttributes = fetchAttributeLocations( gl, program );\\n\\n    \\t\\t}\\n\\n    \\t\\treturn cachedAttributes;\\n\\n    \\t};\\n\\n    \\t// free resource\\n\\n    \\tthis.destroy = function() {\\n\\n    \\t\\tgl.deleteProgram( program );\\n    \\t\\tthis.program = undefined;\\n\\n    \\t};\\n\\n    \\t// DEPRECATED\\n\\n    \\tObject.defineProperties( this, {\\n\\n    \\t\\tuniforms: {\\n    \\t\\t\\tget: function() {\\n\\n    \\t\\t\\t\\tconsole.warn( 'THREE.WebGLProgram: .uniforms is now .getUniforms().' );\\n    \\t\\t\\t\\treturn this.getUniforms();\\n\\n    \\t\\t\\t}\\n    \\t\\t},\\n\\n    \\t\\tattributes: {\\n    \\t\\t\\tget: function() {\\n\\n    \\t\\t\\t\\tconsole.warn( 'THREE.WebGLProgram: .attributes is now .getAttributes().' );\\n    \\t\\t\\t\\treturn this.getAttributes();\\n\\n    \\t\\t\\t}\\n    \\t\\t}\\n\\n    \\t} );\\n\\n\\n    \\t//\\n\\n    \\tthis.id = programIdCount ++;\\n    \\tthis.code = code;\\n    \\tthis.usedTimes = 1;\\n    \\tthis.program = program;\\n    \\tthis.vertexShader = glVertexShader;\\n    \\tthis.fragmentShader = glFragmentShader;\\n\\n    \\treturn this;\\n\\n    }\\n\\n    function WebGLPrograms( renderer, capabilities ) {\\n\\n    \\tvar programs = [];\\n\\n    \\tvar shaderIDs = {\\n    \\t\\tMeshDepthMaterial: 'depth',\\n    \\t\\tMeshNormalMaterial: 'normal',\\n    \\t\\tMeshBasicMaterial: 'basic',\\n    \\t\\tMeshLambertMaterial: 'lambert',\\n    \\t\\tMeshPhongMaterial: 'phong',\\n    \\t\\tMeshStandardMaterial: 'physical',\\n    \\t\\tMeshPhysicalMaterial: 'physical',\\n    \\t\\tLineBasicMaterial: 'basic',\\n    \\t\\tLineDashedMaterial: 'dashed',\\n    \\t\\tPointsMaterial: 'points'\\n    \\t};\\n\\n    \\tvar parameterNames = [\\n    \\t\\t\\\"precision\\\", \\\"supportsVertexTextures\\\", \\\"map\\\", \\\"mapEncoding\\\", \\\"envMap\\\", \\\"envMapMode\\\", \\\"envMapEncoding\\\",\\n    \\t\\t\\\"lightMap\\\", \\\"aoMap\\\", \\\"emissiveMap\\\", \\\"emissiveMapEncoding\\\", \\\"bumpMap\\\", \\\"normalMap\\\", \\\"displacementMap\\\", \\\"specularMap\\\",\\n    \\t\\t\\\"roughnessMap\\\", \\\"metalnessMap\\\",\\n    \\t\\t\\\"alphaMap\\\", \\\"combine\\\", \\\"vertexColors\\\", \\\"fog\\\", \\\"useFog\\\", \\\"fogExp\\\",\\n    \\t\\t\\\"flatShading\\\", \\\"sizeAttenuation\\\", \\\"logarithmicDepthBuffer\\\", \\\"skinning\\\",\\n    \\t\\t\\\"maxBones\\\", \\\"useVertexTexture\\\", \\\"morphTargets\\\", \\\"morphNormals\\\",\\n    \\t\\t\\\"maxMorphTargets\\\", \\\"maxMorphNormals\\\", \\\"premultipliedAlpha\\\",\\n    \\t\\t\\\"numDirLights\\\", \\\"numPointLights\\\", \\\"numSpotLights\\\", \\\"numHemiLights\\\",\\n    \\t\\t\\\"shadowMapEnabled\\\", \\\"shadowMapType\\\", \\\"toneMapping\\\", 'physicallyCorrectLights',\\n    \\t\\t\\\"alphaTest\\\", \\\"doubleSided\\\", \\\"flipSided\\\", \\\"numClippingPlanes\\\", \\\"depthPacking\\\"\\n    \\t];\\n\\n\\n    \\tfunction allocateBones( object ) {\\n\\n    \\t\\tif ( capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture ) {\\n\\n    \\t\\t\\treturn 1024;\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\t// default for when object is not specified\\n    \\t\\t\\t// ( for example when prebuilding shader to be used with multiple objects )\\n    \\t\\t\\t//\\n    \\t\\t\\t//  - leave some extra space for other uniforms\\n    \\t\\t\\t//  - limit here is ANGLE's 254 max uniform vectors\\n    \\t\\t\\t//    (up to 54 should be safe)\\n\\n    \\t\\t\\tvar nVertexUniforms = capabilities.maxVertexUniforms;\\n    \\t\\t\\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\\n\\n    \\t\\t\\tvar maxBones = nVertexMatrices;\\n\\n    \\t\\t\\tif ( object !== undefined && (object && object.isSkinnedMesh) ) {\\n\\n    \\t\\t\\t\\tmaxBones = Math.min( object.skeleton.bones.length, maxBones );\\n\\n    \\t\\t\\t\\tif ( maxBones < object.skeleton.bones.length ) {\\n\\n    \\t\\t\\t\\t\\tconsole.warn( 'WebGLRenderer: too many bones - ' + object.skeleton.bones.length + ', this GPU supports just ' + maxBones + ' (try OpenGL instead of ANGLE)' );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\treturn maxBones;\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\tfunction getTextureEncodingFromMap( map, gammaOverrideLinear ) {\\n\\n    \\t\\tvar encoding;\\n\\n    \\t\\tif ( ! map ) {\\n\\n    \\t\\t\\tencoding = LinearEncoding;\\n\\n    \\t\\t} else if ( (map && map.isTexture) ) {\\n\\n    \\t\\t\\tencoding = map.encoding;\\n\\n    \\t\\t} else if ( (map && map.isWebGLRenderTarget) ) {\\n\\n    \\t\\t\\tconsole.warn( \\\"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\\\" );\\n    \\t\\t\\tencoding = map.texture.encoding;\\n\\n    \\t\\t}\\n\\n    \\t\\t// add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.\\n    \\t\\tif ( encoding === LinearEncoding && gammaOverrideLinear ) {\\n\\n    \\t\\t\\tencoding = GammaEncoding;\\n\\n    \\t\\t}\\n\\n    \\t\\treturn encoding;\\n\\n    \\t}\\n\\n    \\tthis.getParameters = function ( material, lights, fog, nClipPlanes, object ) {\\n\\n    \\t\\tvar shaderID = shaderIDs[ material.type ];\\n\\n    \\t\\t// heuristics to create shader parameters according to lights in the scene\\n    \\t\\t// (not to blow over maxLights budget)\\n\\n    \\t\\tvar maxBones = allocateBones( object );\\n    \\t\\tvar precision = renderer.getPrecision();\\n\\n    \\t\\tif ( material.precision !== null ) {\\n\\n    \\t\\t\\tprecision = capabilities.getMaxPrecision( material.precision );\\n\\n    \\t\\t\\tif ( precision !== material.precision ) {\\n\\n    \\t\\t\\t\\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\tvar currentRenderTarget = renderer.getCurrentRenderTarget();\\n\\n    \\t\\tvar parameters = {\\n\\n    \\t\\t\\tshaderID: shaderID,\\n\\n    \\t\\t\\tprecision: precision,\\n    \\t\\t\\tsupportsVertexTextures: capabilities.vertexTextures,\\n    \\t\\t\\toutputEncoding: getTextureEncodingFromMap( ( ! currentRenderTarget ) ? null : currentRenderTarget.texture, renderer.gammaOutput ),\\n    \\t\\t\\tmap: !! material.map,\\n    \\t\\t\\tmapEncoding: getTextureEncodingFromMap( material.map, renderer.gammaInput ),\\n    \\t\\t\\tenvMap: !! material.envMap,\\n    \\t\\t\\tenvMapMode: material.envMap && material.envMap.mapping,\\n    \\t\\t\\tenvMapEncoding: getTextureEncodingFromMap( material.envMap, renderer.gammaInput ),\\n    \\t\\t\\tenvMapCubeUV: ( !! material.envMap ) && ( ( material.envMap.mapping === CubeUVReflectionMapping ) || ( material.envMap.mapping === CubeUVRefractionMapping ) ),\\n    \\t\\t\\tlightMap: !! material.lightMap,\\n    \\t\\t\\taoMap: !! material.aoMap,\\n    \\t\\t\\temissiveMap: !! material.emissiveMap,\\n    \\t\\t\\temissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap, renderer.gammaInput ),\\n    \\t\\t\\tbumpMap: !! material.bumpMap,\\n    \\t\\t\\tnormalMap: !! material.normalMap,\\n    \\t\\t\\tdisplacementMap: !! material.displacementMap,\\n    \\t\\t\\troughnessMap: !! material.roughnessMap,\\n    \\t\\t\\tmetalnessMap: !! material.metalnessMap,\\n    \\t\\t\\tspecularMap: !! material.specularMap,\\n    \\t\\t\\talphaMap: !! material.alphaMap,\\n\\n    \\t\\t\\tcombine: material.combine,\\n\\n    \\t\\t\\tvertexColors: material.vertexColors,\\n\\n    \\t\\t\\tfog: !! fog,\\n    \\t\\t\\tuseFog: material.fog,\\n    \\t\\t\\tfogExp: (fog && fog.isFogExp2),\\n\\n    \\t\\t\\tflatShading: material.shading === FlatShading,\\n\\n    \\t\\t\\tsizeAttenuation: material.sizeAttenuation,\\n    \\t\\t\\tlogarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\\n\\n    \\t\\t\\tskinning: material.skinning,\\n    \\t\\t\\tmaxBones: maxBones,\\n    \\t\\t\\tuseVertexTexture: capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture,\\n\\n    \\t\\t\\tmorphTargets: material.morphTargets,\\n    \\t\\t\\tmorphNormals: material.morphNormals,\\n    \\t\\t\\tmaxMorphTargets: renderer.maxMorphTargets,\\n    \\t\\t\\tmaxMorphNormals: renderer.maxMorphNormals,\\n\\n    \\t\\t\\tnumDirLights: lights.directional.length,\\n    \\t\\t\\tnumPointLights: lights.point.length,\\n    \\t\\t\\tnumSpotLights: lights.spot.length,\\n    \\t\\t\\tnumHemiLights: lights.hemi.length,\\n\\n    \\t\\t\\tnumClippingPlanes: nClipPlanes,\\n\\n    \\t\\t\\tshadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && lights.shadows.length > 0,\\n    \\t\\t\\tshadowMapType: renderer.shadowMap.type,\\n\\n    \\t\\t\\ttoneMapping: renderer.toneMapping,\\n    \\t\\t\\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\\n\\n    \\t\\t\\tpremultipliedAlpha: material.premultipliedAlpha,\\n\\n    \\t\\t\\talphaTest: material.alphaTest,\\n    \\t\\t\\tdoubleSided: material.side === DoubleSide,\\n    \\t\\t\\tflipSided: material.side === BackSide,\\n\\n    \\t\\t\\tdepthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false\\n\\n    \\t\\t};\\n\\n    \\t\\treturn parameters;\\n\\n    \\t};\\n\\n    \\tthis.getProgramCode = function ( material, parameters ) {\\n\\n    \\t\\tvar array = [];\\n\\n    \\t\\tif ( parameters.shaderID ) {\\n\\n    \\t\\t\\tarray.push( parameters.shaderID );\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\tarray.push( material.fragmentShader );\\n    \\t\\t\\tarray.push( material.vertexShader );\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( material.defines !== undefined ) {\\n\\n    \\t\\t\\tfor ( var name in material.defines ) {\\n\\n    \\t\\t\\t\\tarray.push( name );\\n    \\t\\t\\t\\tarray.push( material.defines[ name ] );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\\n\\n    \\t\\t\\tarray.push( parameters[ parameterNames[ i ] ] );\\n\\n    \\t\\t}\\n\\n    \\t\\treturn array.join();\\n\\n    \\t};\\n\\n    \\tthis.acquireProgram = function ( material, parameters, code ) {\\n\\n    \\t\\tvar program;\\n\\n    \\t\\t// Check if code has been already compiled\\n    \\t\\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\\n\\n    \\t\\t\\tvar programInfo = programs[ p ];\\n\\n    \\t\\t\\tif ( programInfo.code === code ) {\\n\\n    \\t\\t\\t\\tprogram = programInfo;\\n    \\t\\t\\t\\t++ program.usedTimes;\\n\\n    \\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( program === undefined ) {\\n\\n    \\t\\t\\tprogram = new WebGLProgram( renderer, code, material, parameters );\\n    \\t\\t\\tprograms.push( program );\\n\\n    \\t\\t}\\n\\n    \\t\\treturn program;\\n\\n    \\t};\\n\\n    \\tthis.releaseProgram = function( program ) {\\n\\n    \\t\\tif ( -- program.usedTimes === 0 ) {\\n\\n    \\t\\t\\t// Remove from unordered set\\n    \\t\\t\\tvar i = programs.indexOf( program );\\n    \\t\\t\\tprograms[ i ] = programs[ programs.length - 1 ];\\n    \\t\\t\\tprograms.pop();\\n\\n    \\t\\t\\t// Free WebGL resources\\n    \\t\\t\\tprogram.destroy();\\n\\n    \\t\\t}\\n\\n    \\t};\\n\\n    \\t// Exposed for resource monitoring & error feedback via renderer.info:\\n    \\tthis.programs = programs;\\n\\n    }\\n\\n    function WebGLGeometries( gl, properties, info ) {\\n\\n    \\tvar geometries = {};\\n\\n    \\tfunction onGeometryDispose( event ) {\\n\\n    \\t\\tvar geometry = event.target;\\n    \\t\\tvar buffergeometry = geometries[ geometry.id ];\\n\\n    \\t\\tif ( buffergeometry.index !== null ) {\\n\\n    \\t\\t\\tdeleteAttribute( buffergeometry.index );\\n\\n    \\t\\t}\\n\\n    \\t\\tdeleteAttributes( buffergeometry.attributes );\\n\\n    \\t\\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\\n\\n    \\t\\tdelete geometries[ geometry.id ];\\n\\n    \\t\\t// TODO\\n\\n    \\t\\tvar property = properties.get( geometry );\\n\\n    \\t\\tif ( property.wireframe ) {\\n\\n    \\t\\t\\tdeleteAttribute( property.wireframe );\\n\\n    \\t\\t}\\n\\n    \\t\\tproperties.delete( geometry );\\n\\n    \\t\\tvar bufferproperty = properties.get( buffergeometry );\\n\\n    \\t\\tif ( bufferproperty.wireframe ) {\\n\\n    \\t\\t\\tdeleteAttribute( bufferproperty.wireframe );\\n\\n    \\t\\t}\\n\\n    \\t\\tproperties.delete( buffergeometry );\\n\\n    \\t\\t//\\n\\n    \\t\\tinfo.memory.geometries --;\\n\\n    \\t}\\n\\n    \\tfunction getAttributeBuffer( attribute ) {\\n\\n    \\t\\tif ( attribute.isInterleavedBufferAttribute ) {\\n\\n    \\t\\t\\treturn properties.get( attribute.data ).__webglBuffer;\\n\\n    \\t\\t}\\n\\n    \\t\\treturn properties.get( attribute ).__webglBuffer;\\n\\n    \\t}\\n\\n    \\tfunction deleteAttribute( attribute ) {\\n\\n    \\t\\tvar buffer = getAttributeBuffer( attribute );\\n\\n    \\t\\tif ( buffer !== undefined ) {\\n\\n    \\t\\t\\tgl.deleteBuffer( buffer );\\n    \\t\\t\\tremoveAttributeBuffer( attribute );\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\tfunction deleteAttributes( attributes ) {\\n\\n    \\t\\tfor ( var name in attributes ) {\\n\\n    \\t\\t\\tdeleteAttribute( attributes[ name ] );\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\tfunction removeAttributeBuffer( attribute ) {\\n\\n    \\t\\tif ( attribute.isInterleavedBufferAttribute ) {\\n\\n    \\t\\t\\tproperties.delete( attribute.data );\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\tproperties.delete( attribute );\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\treturn {\\n\\n    \\t\\tget: function ( object ) {\\n\\n    \\t\\t\\tvar geometry = object.geometry;\\n\\n    \\t\\t\\tif ( geometries[ geometry.id ] !== undefined ) {\\n\\n    \\t\\t\\t\\treturn geometries[ geometry.id ];\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tgeometry.addEventListener( 'dispose', onGeometryDispose );\\n\\n    \\t\\t\\tvar buffergeometry;\\n\\n    \\t\\t\\tif ( geometry.isBufferGeometry ) {\\n\\n    \\t\\t\\t\\tbuffergeometry = geometry;\\n\\n    \\t\\t\\t} else if ( geometry.isGeometry ) {\\n\\n    \\t\\t\\t\\tif ( geometry._bufferGeometry === undefined ) {\\n\\n    \\t\\t\\t\\t\\tgeometry._bufferGeometry = new BufferGeometry().setFromObject( object );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\tbuffergeometry = geometry._bufferGeometry;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tgeometries[ geometry.id ] = buffergeometry;\\n\\n    \\t\\t\\tinfo.memory.geometries ++;\\n\\n    \\t\\t\\treturn buffergeometry;\\n\\n    \\t\\t}\\n\\n    \\t};\\n\\n    }\\n\\n    function WebGLObjects( gl, properties, info ) {\\n\\n    \\tvar geometries = new WebGLGeometries( gl, properties, info );\\n\\n    \\t//\\n\\n    \\tfunction update( object ) {\\n\\n    \\t\\t// TODO: Avoid updating twice (when using shadowMap). Maybe add frame counter.\\n\\n    \\t\\tvar geometry = geometries.get( object );\\n\\n    \\t\\tif ( object.geometry.isGeometry ) {\\n\\n    \\t\\t\\tgeometry.updateFromObject( object );\\n\\n    \\t\\t}\\n\\n    \\t\\tvar index = geometry.index;\\n    \\t\\tvar attributes = geometry.attributes;\\n\\n    \\t\\tif ( index !== null ) {\\n\\n    \\t\\t\\tupdateAttribute( index, gl.ELEMENT_ARRAY_BUFFER );\\n\\n    \\t\\t}\\n\\n    \\t\\tfor ( var name in attributes ) {\\n\\n    \\t\\t\\tupdateAttribute( attributes[ name ], gl.ARRAY_BUFFER );\\n\\n    \\t\\t}\\n\\n    \\t\\t// morph targets\\n\\n    \\t\\tvar morphAttributes = geometry.morphAttributes;\\n\\n    \\t\\tfor ( var name in morphAttributes ) {\\n\\n    \\t\\t\\tvar array = morphAttributes[ name ];\\n\\n    \\t\\t\\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\\n\\n    \\t\\t\\t\\tupdateAttribute( array[ i ], gl.ARRAY_BUFFER );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\treturn geometry;\\n\\n    \\t}\\n\\n    \\tfunction updateAttribute( attribute, bufferType ) {\\n\\n    \\t\\tvar data = ( attribute.isInterleavedBufferAttribute ) ? attribute.data : attribute;\\n\\n    \\t\\tvar attributeProperties = properties.get( data );\\n\\n    \\t\\tif ( attributeProperties.__webglBuffer === undefined ) {\\n\\n    \\t\\t\\tcreateBuffer( attributeProperties, data, bufferType );\\n\\n    \\t\\t} else if ( attributeProperties.version !== data.version ) {\\n\\n    \\t\\t\\tupdateBuffer( attributeProperties, data, bufferType );\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\tfunction createBuffer( attributeProperties, data, bufferType ) {\\n\\n    \\t\\tattributeProperties.__webglBuffer = gl.createBuffer();\\n    \\t\\tgl.bindBuffer( bufferType, attributeProperties.__webglBuffer );\\n\\n    \\t\\tvar usage = data.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\\n\\n    \\t\\tgl.bufferData( bufferType, data.array, usage );\\n\\n    \\t\\tattributeProperties.version = data.version;\\n\\n    \\t}\\n\\n    \\tfunction updateBuffer( attributeProperties, data, bufferType ) {\\n\\n    \\t\\tgl.bindBuffer( bufferType, attributeProperties.__webglBuffer );\\n\\n    \\t\\tif ( data.dynamic === false || data.updateRange.count === - 1 ) {\\n\\n    \\t\\t\\t// Not using update ranges\\n\\n    \\t\\t\\tgl.bufferSubData( bufferType, 0, data.array );\\n\\n    \\t\\t} else if ( data.updateRange.count === 0 ) {\\n\\n    \\t\\t\\tconsole.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' );\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\tgl.bufferSubData( bufferType, data.updateRange.offset * data.array.BYTES_PER_ELEMENT,\\n    \\t\\t\\t\\t\\t\\t\\t  data.array.subarray( data.updateRange.offset, data.updateRange.offset + data.updateRange.count ) );\\n\\n    \\t\\t\\tdata.updateRange.count = 0; // reset range\\n\\n    \\t\\t}\\n\\n    \\t\\tattributeProperties.version = data.version;\\n\\n    \\t}\\n\\n    \\tfunction getAttributeBuffer( attribute ) {\\n\\n    \\t\\tif ( attribute.isInterleavedBufferAttribute ) {\\n\\n    \\t\\t\\treturn properties.get( attribute.data ).__webglBuffer;\\n\\n    \\t\\t}\\n\\n    \\t\\treturn properties.get( attribute ).__webglBuffer;\\n\\n    \\t}\\n\\n    \\tfunction getWireframeAttribute( geometry ) {\\n\\n    \\t\\tvar property = properties.get( geometry );\\n\\n    \\t\\tif ( property.wireframe !== undefined ) {\\n\\n    \\t\\t\\treturn property.wireframe;\\n\\n    \\t\\t}\\n\\n    \\t\\tvar indices = [];\\n\\n    \\t\\tvar index = geometry.index;\\n    \\t\\tvar attributes = geometry.attributes;\\n    \\t\\tvar position = attributes.position;\\n\\n    \\t\\t// console.time( 'wireframe' );\\n\\n    \\t\\tif ( index !== null ) {\\n\\n    \\t\\t\\tvar edges = {};\\n    \\t\\t\\tvar array = index.array;\\n\\n    \\t\\t\\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\\n\\n    \\t\\t\\t\\tvar a = array[ i + 0 ];\\n    \\t\\t\\t\\tvar b = array[ i + 1 ];\\n    \\t\\t\\t\\tvar c = array[ i + 2 ];\\n\\n    \\t\\t\\t\\tindices.push( a, b, b, c, c, a );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\tvar array = attributes.position.array;\\n\\n    \\t\\t\\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\\n\\n    \\t\\t\\t\\tvar a = i + 0;\\n    \\t\\t\\t\\tvar b = i + 1;\\n    \\t\\t\\t\\tvar c = i + 2;\\n\\n    \\t\\t\\t\\tindices.push( a, b, b, c, c, a );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\t// console.timeEnd( 'wireframe' );\\n\\n    \\t\\tvar TypeArray = position.count > 65535 ? Uint32Array : Uint16Array;\\n    \\t\\tvar attribute = new BufferAttribute( new TypeArray( indices ), 1 );\\n\\n    \\t\\tupdateAttribute( attribute, gl.ELEMENT_ARRAY_BUFFER );\\n\\n    \\t\\tproperty.wireframe = attribute;\\n\\n    \\t\\treturn attribute;\\n\\n    \\t}\\n\\n    \\treturn {\\n\\n    \\t\\tgetAttributeBuffer: getAttributeBuffer,\\n    \\t\\tgetWireframeAttribute: getWireframeAttribute,\\n\\n    \\t\\tupdate: update\\n\\n    \\t};\\n\\n    }\\n\\n    function WebGLTextures( _gl, extensions, state, properties, capabilities, paramThreeToGL, info ) {\\n\\n    \\tvar _infoMemory = info.memory;\\n    \\tvar _isWebGL2 = ( typeof WebGL2RenderingContext !== 'undefined' && _gl instanceof WebGL2RenderingContext );\\n\\n    \\t//\\n\\n    \\tfunction clampToMaxSize( image, maxSize ) {\\n\\n    \\t\\tif ( image.width > maxSize || image.height > maxSize ) {\\n\\n    \\t\\t\\t// Warning: Scaling through the canvas will only work with images that use\\n    \\t\\t\\t// premultiplied alpha.\\n\\n    \\t\\t\\tvar scale = maxSize / Math.max( image.width, image.height );\\n\\n    \\t\\t\\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\\n    \\t\\t\\tcanvas.width = Math.floor( image.width * scale );\\n    \\t\\t\\tcanvas.height = Math.floor( image.height * scale );\\n\\n    \\t\\t\\tvar context = canvas.getContext( '2d' );\\n    \\t\\t\\tcontext.drawImage( image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height );\\n\\n    \\t\\t\\tconsole.warn( 'THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\\n\\n    \\t\\t\\treturn canvas;\\n\\n    \\t\\t}\\n\\n    \\t\\treturn image;\\n\\n    \\t}\\n\\n    \\tfunction isPowerOfTwo( image ) {\\n\\n    \\t\\treturn exports.Math.isPowerOfTwo( image.width ) && exports.Math.isPowerOfTwo( image.height );\\n\\n    \\t}\\n\\n    \\tfunction makePowerOfTwo( image ) {\\n\\n    \\t\\tif ( image instanceof HTMLImageElement || image instanceof HTMLCanvasElement ) {\\n\\n    \\t\\t\\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\\n    \\t\\t\\tcanvas.width = exports.Math.nearestPowerOfTwo( image.width );\\n    \\t\\t\\tcanvas.height = exports.Math.nearestPowerOfTwo( image.height );\\n\\n    \\t\\t\\tvar context = canvas.getContext( '2d' );\\n    \\t\\t\\tcontext.drawImage( image, 0, 0, canvas.width, canvas.height );\\n\\n    \\t\\t\\tconsole.warn( 'THREE.WebGLRenderer: image is not power of two (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\\n\\n    \\t\\t\\treturn canvas;\\n\\n    \\t\\t}\\n\\n    \\t\\treturn image;\\n\\n    \\t}\\n\\n    \\tfunction textureNeedsPowerOfTwo( texture ) {\\n\\n    \\t\\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) return true;\\n    \\t\\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) return true;\\n\\n    \\t\\treturn false;\\n\\n    \\t}\\n\\n    \\t// Fallback filters for non-power-of-2 textures\\n\\n    \\tfunction filterFallback( f ) {\\n\\n    \\t\\tif ( f === NearestFilter || f === NearestMipMapNearestFilter || f === NearestMipMapLinearFilter ) {\\n\\n    \\t\\t\\treturn _gl.NEAREST;\\n\\n    \\t\\t}\\n\\n    \\t\\treturn _gl.LINEAR;\\n\\n    \\t}\\n\\n    \\t//\\n\\n    \\tfunction onTextureDispose( event ) {\\n\\n    \\t\\tvar texture = event.target;\\n\\n    \\t\\ttexture.removeEventListener( 'dispose', onTextureDispose );\\n\\n    \\t\\tdeallocateTexture( texture );\\n\\n    \\t\\t_infoMemory.textures --;\\n\\n\\n    \\t}\\n\\n    \\tfunction onRenderTargetDispose( event ) {\\n\\n    \\t\\tvar renderTarget = event.target;\\n\\n    \\t\\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\\n\\n    \\t\\tdeallocateRenderTarget( renderTarget );\\n\\n    \\t\\t_infoMemory.textures --;\\n\\n    \\t}\\n\\n    \\t//\\n\\n    \\tfunction deallocateTexture( texture ) {\\n\\n    \\t\\tvar textureProperties = properties.get( texture );\\n\\n    \\t\\tif ( texture.image && textureProperties.__image__webglTextureCube ) {\\n\\n    \\t\\t\\t// cube texture\\n\\n    \\t\\t\\t_gl.deleteTexture( textureProperties.__image__webglTextureCube );\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\t// 2D texture\\n\\n    \\t\\t\\tif ( textureProperties.__webglInit === undefined ) return;\\n\\n    \\t\\t\\t_gl.deleteTexture( textureProperties.__webglTexture );\\n\\n    \\t\\t}\\n\\n    \\t\\t// remove all webgl properties\\n    \\t\\tproperties.delete( texture );\\n\\n    \\t}\\n\\n    \\tfunction deallocateRenderTarget( renderTarget ) {\\n\\n    \\t\\tvar renderTargetProperties = properties.get( renderTarget );\\n    \\t\\tvar textureProperties = properties.get( renderTarget.texture );\\n\\n    \\t\\tif ( ! renderTarget ) return;\\n\\n    \\t\\tif ( textureProperties.__webglTexture !== undefined ) {\\n\\n    \\t\\t\\t_gl.deleteTexture( textureProperties.__webglTexture );\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( renderTarget.depthTexture ) {\\n\\n    \\t\\t\\trenderTarget.depthTexture.dispose();\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( (renderTarget && renderTarget.isWebGLRenderTargetCube) ) {\\n\\n    \\t\\t\\tfor ( var i = 0; i < 6; i ++ ) {\\n\\n    \\t\\t\\t\\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\\n    \\t\\t\\t\\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\\n    \\t\\t\\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\\n\\n    \\t\\t}\\n\\n    \\t\\tproperties.delete( renderTarget.texture );\\n    \\t\\tproperties.delete( renderTarget );\\n\\n    \\t}\\n\\n    \\t//\\n\\n\\n\\n    \\tfunction setTexture2D( texture, slot ) {\\n\\n    \\t\\tvar textureProperties = properties.get( texture );\\n\\n    \\t\\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\\n\\n    \\t\\t\\tvar image = texture.image;\\n\\n    \\t\\t\\tif ( image === undefined ) {\\n\\n    \\t\\t\\t\\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined', texture );\\n\\n    \\t\\t\\t} else if ( image.complete === false ) {\\n\\n    \\t\\t\\t\\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete', texture );\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\tuploadTexture( textureProperties, texture, slot );\\n    \\t\\t\\t\\treturn;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\tstate.activeTexture( _gl.TEXTURE0 + slot );\\n    \\t\\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\\n\\n    \\t}\\n\\n    \\tfunction setTextureCube( texture, slot ) {\\n\\n    \\t\\tvar textureProperties = properties.get( texture );\\n\\n    \\t\\tif ( texture.image.length === 6 ) {\\n\\n    \\t\\t\\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\\n\\n    \\t\\t\\t\\tif ( ! textureProperties.__image__webglTextureCube ) {\\n\\n    \\t\\t\\t\\t\\ttexture.addEventListener( 'dispose', onTextureDispose );\\n\\n    \\t\\t\\t\\t\\ttextureProperties.__image__webglTextureCube = _gl.createTexture();\\n\\n    \\t\\t\\t\\t\\t_infoMemory.textures ++;\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\tstate.activeTexture( _gl.TEXTURE0 + slot );\\n    \\t\\t\\t\\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\\n\\n    \\t\\t\\t\\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\\n\\n    \\t\\t\\t\\tvar isCompressed = (texture && texture.isCompressedTexture);\\n    \\t\\t\\t\\tvar isDataTexture = (texture.image[ 0 ] && texture.image[ 0 ].isDataTexture);\\n\\n    \\t\\t\\t\\tvar cubeImage = [];\\n\\n    \\t\\t\\t\\tfor ( var i = 0; i < 6; i ++ ) {\\n\\n    \\t\\t\\t\\t\\tif ( ! isCompressed && ! isDataTexture ) {\\n\\n    \\t\\t\\t\\t\\t\\tcubeImage[ i ] = clampToMaxSize( texture.image[ i ], capabilities.maxCubemapSize );\\n\\n    \\t\\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\t\\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\tvar image = cubeImage[ 0 ],\\n    \\t\\t\\t\\tisPowerOfTwoImage = isPowerOfTwo( image ),\\n    \\t\\t\\t\\tglFormat = paramThreeToGL( texture.format ),\\n    \\t\\t\\t\\tglType = paramThreeToGL( texture.type );\\n\\n    \\t\\t\\t\\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, isPowerOfTwoImage );\\n\\n    \\t\\t\\t\\tfor ( var i = 0; i < 6; i ++ ) {\\n\\n    \\t\\t\\t\\t\\tif ( ! isCompressed ) {\\n\\n    \\t\\t\\t\\t\\t\\tif ( isDataTexture ) {\\n\\n    \\t\\t\\t\\t\\t\\t\\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\\n\\n    \\t\\t\\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\t\\t\\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[ i ] );\\n\\n    \\t\\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\t\\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\\n\\n    \\t\\t\\t\\t\\t\\tfor ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\\n\\n    \\t\\t\\t\\t\\t\\t\\tmipmap = mipmaps[ j ];\\n\\n    \\t\\t\\t\\t\\t\\t\\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\\n\\n    \\t\\t\\t\\t\\t\\t\\t\\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\\n\\n    \\t\\t\\t\\t\\t\\t\\t\\t\\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\\n\\n    \\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\t\\t\\t\\t\\tconsole.warn( \\\"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()\\\" );\\n\\n    \\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\t\\t\\t\\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\\n\\n    \\t\\t\\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\tif ( texture.generateMipmaps && isPowerOfTwoImage ) {\\n\\n    \\t\\t\\t\\t\\t_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\ttextureProperties.__version = texture.version;\\n\\n    \\t\\t\\t\\tif ( texture.onUpdate ) texture.onUpdate( texture );\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\tstate.activeTexture( _gl.TEXTURE0 + slot );\\n    \\t\\t\\t\\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\tfunction setTextureCubeDynamic( texture, slot ) {\\n\\n    \\t\\tstate.activeTexture( _gl.TEXTURE0 + slot );\\n    \\t\\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( texture ).__webglTexture );\\n\\n    \\t}\\n\\n    \\tfunction setTextureParameters( textureType, texture, isPowerOfTwoImage ) {\\n\\n    \\t\\tvar extension;\\n\\n    \\t\\tif ( isPowerOfTwoImage ) {\\n\\n    \\t\\t\\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, paramThreeToGL( texture.wrapS ) );\\n    \\t\\t\\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, paramThreeToGL( texture.wrapT ) );\\n\\n    \\t\\t\\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, paramThreeToGL( texture.magFilter ) );\\n    \\t\\t\\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, paramThreeToGL( texture.minFilter ) );\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\\n    \\t\\t\\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\\n\\n    \\t\\t\\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\\n\\n    \\t\\t\\t\\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.', texture );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\\n    \\t\\t\\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\\n\\n    \\t\\t\\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\\n\\n    \\t\\t\\t\\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.', texture );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\\n\\n    \\t\\tif ( extension ) {\\n\\n    \\t\\t\\tif ( texture.type === FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\\n    \\t\\t\\tif ( texture.type === HalfFloatType && extensions.get( 'OES_texture_half_float_linear' ) === null ) return;\\n\\n    \\t\\t\\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\\n\\n    \\t\\t\\t\\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\\n    \\t\\t\\t\\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\tfunction uploadTexture( textureProperties, texture, slot ) {\\n\\n    \\t\\tif ( textureProperties.__webglInit === undefined ) {\\n\\n    \\t\\t\\ttextureProperties.__webglInit = true;\\n\\n    \\t\\t\\ttexture.addEventListener( 'dispose', onTextureDispose );\\n\\n    \\t\\t\\ttextureProperties.__webglTexture = _gl.createTexture();\\n\\n    \\t\\t\\t_infoMemory.textures ++;\\n\\n    \\t\\t}\\n\\n    \\t\\tstate.activeTexture( _gl.TEXTURE0 + slot );\\n    \\t\\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\\n\\n    \\t\\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\\n    \\t\\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\\n    \\t\\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\\n\\n    \\t\\tvar image = clampToMaxSize( texture.image, capabilities.maxTextureSize );\\n\\n    \\t\\tif ( textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( image ) === false ) {\\n\\n    \\t\\t\\timage = makePowerOfTwo( image );\\n\\n    \\t\\t}\\n\\n    \\t\\tvar isPowerOfTwoImage = isPowerOfTwo( image ),\\n    \\t\\tglFormat = paramThreeToGL( texture.format ),\\n    \\t\\tglType = paramThreeToGL( texture.type );\\n\\n    \\t\\tsetTextureParameters( _gl.TEXTURE_2D, texture, isPowerOfTwoImage );\\n\\n    \\t\\tvar mipmap, mipmaps = texture.mipmaps;\\n\\n    \\t\\tif ( (texture && texture.isDepthTexture) ) {\\n\\n    \\t\\t\\t// populate depth texture with dummy data\\n\\n    \\t\\t\\tvar internalFormat = _gl.DEPTH_COMPONENT;\\n\\n    \\t\\t\\tif ( texture.type === FloatType ) {\\n\\n    \\t\\t\\t\\tif ( !_isWebGL2 ) throw new Error('Float Depth Texture only supported in WebGL2.0');\\n    \\t\\t\\t\\tinternalFormat = _gl.DEPTH_COMPONENT32F;\\n\\n    \\t\\t\\t} else if ( _isWebGL2 ) {\\n\\n    \\t\\t\\t\\t// WebGL 2.0 requires signed internalformat for glTexImage2D\\n    \\t\\t\\t\\tinternalFormat = _gl.DEPTH_COMPONENT16;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\t// Depth stencil textures need the DEPTH_STENCIL internal format\\n    \\t\\t\\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\\n    \\t\\t\\tif ( texture.format === DepthStencilFormat ) {\\n\\n    \\t\\t\\t\\tinternalFormat = _gl.DEPTH_STENCIL;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tstate.texImage2D( _gl.TEXTURE_2D, 0, internalFormat, image.width, image.height, 0, glFormat, glType, null );\\n\\n    \\t\\t} else if ( (texture && texture.isDataTexture) ) {\\n\\n    \\t\\t\\t// use manually created mipmaps if available\\n    \\t\\t\\t// if there are no manual mipmaps\\n    \\t\\t\\t// set 0 level mipmap and then use GL to generate other mipmap levels\\n\\n    \\t\\t\\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\\n\\n    \\t\\t\\t\\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\\n\\n    \\t\\t\\t\\t\\tmipmap = mipmaps[ i ];\\n    \\t\\t\\t\\t\\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\ttexture.generateMipmaps = false;\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t} else if ( (texture && texture.isCompressedTexture) ) {\\n\\n    \\t\\t\\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\\n\\n    \\t\\t\\t\\tmipmap = mipmaps[ i ];\\n\\n    \\t\\t\\t\\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\\n\\n    \\t\\t\\t\\t\\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\\n\\n    \\t\\t\\t\\t\\t\\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\\n\\n    \\t\\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\t\\tconsole.warn( \\\"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()\\\" );\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\t// regular Texture (image, video, canvas)\\n\\n    \\t\\t\\t// use manually created mipmaps if available\\n    \\t\\t\\t// if there are no manual mipmaps\\n    \\t\\t\\t// set 0 level mipmap and then use GL to generate other mipmap levels\\n\\n    \\t\\t\\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\\n\\n    \\t\\t\\t\\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\\n\\n    \\t\\t\\t\\t\\tmipmap = mipmaps[ i ];\\n    \\t\\t\\t\\t\\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\ttexture.generateMipmaps = false;\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, glFormat, glType, image );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( texture.generateMipmaps && isPowerOfTwoImage ) _gl.generateMipmap( _gl.TEXTURE_2D );\\n\\n    \\t\\ttextureProperties.__version = texture.version;\\n\\n    \\t\\tif ( texture.onUpdate ) texture.onUpdate( texture );\\n\\n    \\t}\\n\\n    \\t// Render targets\\n\\n    \\t// Setup storage for target texture and bind it to correct framebuffer\\n    \\tfunction setupFrameBufferTexture( framebuffer, renderTarget, attachment, textureTarget ) {\\n\\n    \\t\\tvar glFormat = paramThreeToGL( renderTarget.texture.format );\\n    \\t\\tvar glType = paramThreeToGL( renderTarget.texture.type );\\n    \\t\\tstate.texImage2D( textureTarget, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\\n    \\t\\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\\n    \\t\\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( renderTarget.texture ).__webglTexture, 0 );\\n    \\t\\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\\n\\n    \\t}\\n\\n    \\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\\n    \\tfunction setupRenderBufferStorage( renderbuffer, renderTarget ) {\\n\\n    \\t\\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\\n\\n    \\t\\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\\n\\n    \\t\\t\\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height );\\n    \\t\\t\\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\\n\\n    \\t\\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\\n\\n    \\t\\t\\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\\n    \\t\\t\\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\t// FIXME: We don't support !depth !stencil\\n    \\t\\t\\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height );\\n\\n    \\t\\t}\\n\\n    \\t\\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\\n\\n    \\t}\\n\\n    \\t// Setup resources for a Depth Texture for a FBO (needs an extension)\\n    \\tfunction setupDepthTexture( framebuffer, renderTarget ) {\\n\\n    \\t\\tvar isCube = ( (renderTarget && renderTarget.isWebGLRenderTargetCube) );\\n    \\t\\tif ( isCube ) throw new Error('Depth Texture with cube render targets is not supported!');\\n\\n    \\t\\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\\n\\n    \\t\\tif ( !( (renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture) ) ) {\\n\\n    \\t\\t\\tthrow new Error('renderTarget.depthTexture must be an instance of THREE.DepthTexture');\\n\\n    \\t\\t}\\n\\n    \\t\\t// upload an empty depth texture with framebuffer size\\n    \\t\\tif ( !properties.get( renderTarget.depthTexture ).__webglTexture ||\\n    \\t\\t\\t\\trenderTarget.depthTexture.image.width !== renderTarget.width ||\\n    \\t\\t\\t\\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\\n    \\t\\t\\trenderTarget.depthTexture.image.width = renderTarget.width;\\n    \\t\\t\\trenderTarget.depthTexture.image.height = renderTarget.height;\\n    \\t\\t\\trenderTarget.depthTexture.needsUpdate = true;\\n    \\t\\t}\\n\\n    \\t\\tsetTexture2D( renderTarget.depthTexture, 0 );\\n\\n    \\t\\tvar webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\\n\\n    \\t\\tif ( renderTarget.depthTexture.format === DepthFormat ) {\\n\\n    \\t\\t\\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\\n\\n    \\t\\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\\n\\n    \\t\\t\\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\tthrow new Error('Unknown depthTexture format')\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\t// Setup GL resources for a non-texture depth buffer\\n    \\tfunction setupDepthRenderbuffer( renderTarget ) {\\n\\n    \\t\\tvar renderTargetProperties = properties.get( renderTarget );\\n\\n    \\t\\tvar isCube = ( (renderTarget && renderTarget.isWebGLRenderTargetCube) );\\n\\n    \\t\\tif ( renderTarget.depthTexture ) {\\n\\n    \\t\\t\\tif ( isCube ) throw new Error('target.depthTexture not supported in Cube render targets');\\n\\n    \\t\\t\\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\tif ( isCube ) {\\n\\n    \\t\\t\\t\\trenderTargetProperties.__webglDepthbuffer = [];\\n\\n    \\t\\t\\t\\tfor ( var i = 0; i < 6; i ++ ) {\\n\\n    \\t\\t\\t\\t\\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\\n    \\t\\t\\t\\t\\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\\n    \\t\\t\\t\\t\\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\\n    \\t\\t\\t\\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\\n    \\t\\t\\t\\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\\n\\n    \\t}\\n\\n    \\t// Set up GL resources for the render target\\n    \\tfunction setupRenderTarget( renderTarget ) {\\n\\n    \\t\\tvar renderTargetProperties = properties.get( renderTarget );\\n    \\t\\tvar textureProperties = properties.get( renderTarget.texture );\\n\\n    \\t\\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\\n\\n    \\t\\ttextureProperties.__webglTexture = _gl.createTexture();\\n\\n    \\t\\t_infoMemory.textures ++;\\n\\n    \\t\\tvar isCube = ( (renderTarget && renderTarget.isWebGLRenderTargetCube) );\\n    \\t\\tvar isTargetPowerOfTwo = isPowerOfTwo( renderTarget );\\n\\n    \\t\\t// Setup framebuffer\\n\\n    \\t\\tif ( isCube ) {\\n\\n    \\t\\t\\trenderTargetProperties.__webglFramebuffer = [];\\n\\n    \\t\\t\\tfor ( var i = 0; i < 6; i ++ ) {\\n\\n    \\t\\t\\t\\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\\n\\n    \\t\\t}\\n\\n    \\t\\t// Setup color buffer\\n\\n    \\t\\tif ( isCube ) {\\n\\n    \\t\\t\\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\\n    \\t\\t\\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget.texture, isTargetPowerOfTwo );\\n\\n    \\t\\t\\tfor ( var i = 0; i < 6; i ++ ) {\\n\\n    \\t\\t\\t\\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tif ( renderTarget.texture.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\\n    \\t\\t\\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\\n    \\t\\t\\tsetTextureParameters( _gl.TEXTURE_2D, renderTarget.texture, isTargetPowerOfTwo );\\n    \\t\\t\\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D );\\n\\n    \\t\\t\\tif ( renderTarget.texture.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );\\n    \\t\\t\\tstate.bindTexture( _gl.TEXTURE_2D, null );\\n\\n    \\t\\t}\\n\\n    \\t\\t// Setup depth and stencil buffers\\n\\n    \\t\\tif ( renderTarget.depthBuffer ) {\\n\\n    \\t\\t\\tsetupDepthRenderbuffer( renderTarget );\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\tfunction updateRenderTargetMipmap( renderTarget ) {\\n\\n    \\t\\tvar texture = renderTarget.texture;\\n\\n    \\t\\tif ( texture.generateMipmaps && isPowerOfTwo( renderTarget ) &&\\n    \\t\\t\\t\\ttexture.minFilter !== NearestFilter &&\\n    \\t\\t\\t\\ttexture.minFilter !== LinearFilter ) {\\n\\n    \\t\\t\\tvar target = (renderTarget && renderTarget.isWebGLRenderTargetCube) ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\\n    \\t\\t\\tvar webglTexture = properties.get( texture ).__webglTexture;\\n\\n    \\t\\t\\tstate.bindTexture( target, webglTexture );\\n    \\t\\t\\t_gl.generateMipmap( target );\\n    \\t\\t\\tstate.bindTexture( target, null );\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\tthis.setTexture2D = setTexture2D;\\n    \\tthis.setTextureCube = setTextureCube;\\n    \\tthis.setTextureCubeDynamic = setTextureCubeDynamic;\\n    \\tthis.setupRenderTarget = setupRenderTarget;\\n    \\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\\n\\n    }\\n\\n    /**\\n     * @author fordacious / fordacious.github.io\\n     */\\n\\n    function WebGLProperties() {\\n\\n    \\tvar properties = {};\\n\\n    \\treturn {\\n\\n    \\t\\tget: function ( object ) {\\n\\n    \\t\\t\\tvar uuid = object.uuid;\\n    \\t\\t\\tvar map = properties[ uuid ];\\n\\n    \\t\\t\\tif ( map === undefined ) {\\n\\n    \\t\\t\\t\\tmap = {};\\n    \\t\\t\\t\\tproperties[ uuid ] = map;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\treturn map;\\n\\n    \\t\\t},\\n\\n    \\t\\tdelete: function ( object ) {\\n\\n    \\t\\t\\tdelete properties[ object.uuid ];\\n\\n    \\t\\t},\\n\\n    \\t\\tclear: function () {\\n\\n    \\t\\t\\tproperties = {};\\n\\n    \\t\\t}\\n\\n    \\t};\\n\\n    }\\n\\n    function WebGLState( gl, extensions, paramThreeToGL ) {\\n\\n    \\tfunction ColorBuffer() {\\n\\n    \\t\\tvar locked = false;\\n\\n    \\t\\tvar color = new Vector4();\\n    \\t\\tvar currentColorMask = null;\\n    \\t\\tvar currentColorClear = new Vector4();\\n\\n    \\t\\treturn {\\n\\n    \\t\\t\\tsetMask: function ( colorMask ) {\\n\\n    \\t\\t\\t\\tif ( currentColorMask !== colorMask && ! locked ) {\\n\\n    \\t\\t\\t\\t\\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\\n    \\t\\t\\t\\t\\tcurrentColorMask = colorMask;\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t},\\n\\n    \\t\\t\\tsetLocked: function ( lock ) {\\n\\n    \\t\\t\\t\\tlocked = lock;\\n\\n    \\t\\t\\t},\\n\\n    \\t\\t\\tsetClear: function ( r, g, b, a ) {\\n\\n    \\t\\t\\t\\tcolor.set( r, g, b, a );\\n\\n    \\t\\t\\t\\tif ( currentColorClear.equals( color ) === false ) {\\n\\n    \\t\\t\\t\\t\\tgl.clearColor( r, g, b, a );\\n    \\t\\t\\t\\t\\tcurrentColorClear.copy( color );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t},\\n\\n    \\t\\t\\treset: function () {\\n\\n    \\t\\t\\t\\tlocked = false;\\n\\n    \\t\\t\\t\\tcurrentColorMask = null;\\n    \\t\\t\\t\\tcurrentColorClear.set( 0, 0, 0, 1 );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t};\\n\\n    \\t}\\n\\n    \\tfunction DepthBuffer() {\\n\\n    \\t\\tvar locked = false;\\n\\n    \\t\\tvar currentDepthMask = null;\\n    \\t\\tvar currentDepthFunc = null;\\n    \\t\\tvar currentDepthClear = null;\\n\\n    \\t\\treturn {\\n\\n    \\t\\t\\tsetTest: function ( depthTest ) {\\n\\n    \\t\\t\\t\\tif ( depthTest ) {\\n\\n    \\t\\t\\t\\t\\tenable( gl.DEPTH_TEST );\\n\\n    \\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\tdisable( gl.DEPTH_TEST );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t},\\n\\n    \\t\\t\\tsetMask: function ( depthMask ) {\\n\\n    \\t\\t\\t\\tif ( currentDepthMask !== depthMask && ! locked ) {\\n\\n    \\t\\t\\t\\t\\tgl.depthMask( depthMask );\\n    \\t\\t\\t\\t\\tcurrentDepthMask = depthMask;\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t},\\n\\n    \\t\\t\\tsetFunc: function ( depthFunc ) {\\n\\n    \\t\\t\\t\\tif ( currentDepthFunc !== depthFunc ) {\\n\\n    \\t\\t\\t\\t\\tif ( depthFunc ) {\\n\\n    \\t\\t\\t\\t\\t\\tswitch ( depthFunc ) {\\n\\n    \\t\\t\\t\\t\\t\\t\\tcase NeverDepth:\\n\\n    \\t\\t\\t\\t\\t\\t\\t\\tgl.depthFunc( gl.NEVER );\\n    \\t\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\t\\t\\t\\tcase AlwaysDepth:\\n\\n    \\t\\t\\t\\t\\t\\t\\t\\tgl.depthFunc( gl.ALWAYS );\\n    \\t\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\t\\t\\t\\tcase LessDepth:\\n\\n    \\t\\t\\t\\t\\t\\t\\t\\tgl.depthFunc( gl.LESS );\\n    \\t\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\t\\t\\t\\tcase LessEqualDepth:\\n\\n    \\t\\t\\t\\t\\t\\t\\t\\tgl.depthFunc( gl.LEQUAL );\\n    \\t\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\t\\t\\t\\tcase EqualDepth:\\n\\n    \\t\\t\\t\\t\\t\\t\\t\\tgl.depthFunc( gl.EQUAL );\\n    \\t\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\t\\t\\t\\tcase GreaterEqualDepth:\\n\\n    \\t\\t\\t\\t\\t\\t\\t\\tgl.depthFunc( gl.GEQUAL );\\n    \\t\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\t\\t\\t\\tcase GreaterDepth:\\n\\n    \\t\\t\\t\\t\\t\\t\\t\\tgl.depthFunc( gl.GREATER );\\n    \\t\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\t\\t\\t\\tcase NotEqualDepth:\\n\\n    \\t\\t\\t\\t\\t\\t\\t\\tgl.depthFunc( gl.NOTEQUAL );\\n    \\t\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\t\\t\\t\\tdefault:\\n\\n    \\t\\t\\t\\t\\t\\t\\t\\tgl.depthFunc( gl.LEQUAL );\\n\\n    \\t\\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\t\\tgl.depthFunc( gl.LEQUAL );\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\tcurrentDepthFunc = depthFunc;\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t},\\n\\n    \\t\\t\\tsetLocked: function ( lock ) {\\n\\n    \\t\\t\\t\\tlocked = lock;\\n\\n    \\t\\t\\t},\\n\\n    \\t\\t\\tsetClear: function ( depth ) {\\n\\n    \\t\\t\\t\\tif ( currentDepthClear !== depth ) {\\n\\n    \\t\\t\\t\\t\\tgl.clearDepth( depth );\\n    \\t\\t\\t\\t\\tcurrentDepthClear = depth;\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t},\\n\\n    \\t\\t\\treset: function () {\\n\\n    \\t\\t\\t\\tlocked = false;\\n\\n    \\t\\t\\t\\tcurrentDepthMask = null;\\n    \\t\\t\\t\\tcurrentDepthFunc = null;\\n    \\t\\t\\t\\tcurrentDepthClear = null;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t};\\n\\n    \\t}\\n\\n    \\tfunction StencilBuffer() {\\n\\n    \\t\\tvar locked = false;\\n\\n    \\t\\tvar currentStencilMask = null;\\n    \\t\\tvar currentStencilFunc = null;\\n    \\t\\tvar currentStencilRef = null;\\n    \\t\\tvar currentStencilFuncMask = null;\\n    \\t\\tvar currentStencilFail  = null;\\n    \\t\\tvar currentStencilZFail = null;\\n    \\t\\tvar currentStencilZPass = null;\\n    \\t\\tvar currentStencilClear = null;\\n\\n    \\t\\treturn {\\n\\n    \\t\\t\\tsetTest: function ( stencilTest ) {\\n\\n    \\t\\t\\t\\tif ( stencilTest ) {\\n\\n    \\t\\t\\t\\t\\tenable( gl.STENCIL_TEST );\\n\\n    \\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\tdisable( gl.STENCIL_TEST );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t},\\n\\n    \\t\\t\\tsetMask: function ( stencilMask ) {\\n\\n    \\t\\t\\t\\tif ( currentStencilMask !== stencilMask && ! locked ) {\\n\\n    \\t\\t\\t\\t\\tgl.stencilMask( stencilMask );\\n    \\t\\t\\t\\t\\tcurrentStencilMask = stencilMask;\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t},\\n\\n    \\t\\t\\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\\n\\n    \\t\\t\\t\\tif ( currentStencilFunc !== stencilFunc ||\\n    \\t\\t\\t\\t     currentStencilRef \\t!== stencilRef \\t||\\n    \\t\\t\\t\\t     currentStencilFuncMask !== stencilMask ) {\\n\\n    \\t\\t\\t\\t\\tgl.stencilFunc( stencilFunc,  stencilRef, stencilMask );\\n\\n    \\t\\t\\t\\t\\tcurrentStencilFunc = stencilFunc;\\n    \\t\\t\\t\\t\\tcurrentStencilRef  = stencilRef;\\n    \\t\\t\\t\\t\\tcurrentStencilFuncMask = stencilMask;\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t},\\n\\n    \\t\\t\\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\\n\\n    \\t\\t\\t\\tif ( currentStencilFail\\t !== stencilFail \\t||\\n    \\t\\t\\t\\t     currentStencilZFail !== stencilZFail ||\\n    \\t\\t\\t\\t     currentStencilZPass !== stencilZPass ) {\\n\\n    \\t\\t\\t\\t\\tgl.stencilOp( stencilFail,  stencilZFail, stencilZPass );\\n\\n    \\t\\t\\t\\t\\tcurrentStencilFail  = stencilFail;\\n    \\t\\t\\t\\t\\tcurrentStencilZFail = stencilZFail;\\n    \\t\\t\\t\\t\\tcurrentStencilZPass = stencilZPass;\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t},\\n\\n    \\t\\t\\tsetLocked: function ( lock ) {\\n\\n    \\t\\t\\t\\tlocked = lock;\\n\\n    \\t\\t\\t},\\n\\n    \\t\\t\\tsetClear: function ( stencil ) {\\n\\n    \\t\\t\\t\\tif ( currentStencilClear !== stencil ) {\\n\\n    \\t\\t\\t\\t\\tgl.clearStencil( stencil );\\n    \\t\\t\\t\\t\\tcurrentStencilClear = stencil;\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t},\\n\\n    \\t\\t\\treset: function () {\\n\\n    \\t\\t\\t\\tlocked = false;\\n\\n    \\t\\t\\t\\tcurrentStencilMask = null;\\n    \\t\\t\\t\\tcurrentStencilFunc = null;\\n    \\t\\t\\t\\tcurrentStencilRef = null;\\n    \\t\\t\\t\\tcurrentStencilFuncMask = null;\\n    \\t\\t\\t\\tcurrentStencilFail = null;\\n    \\t\\t\\t\\tcurrentStencilZFail = null;\\n    \\t\\t\\t\\tcurrentStencilZPass = null;\\n    \\t\\t\\t\\tcurrentStencilClear = null;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t};\\n\\n    \\t}\\n\\n    \\t//\\n\\n    \\tvar colorBuffer = new ColorBuffer();\\n    \\tvar depthBuffer = new DepthBuffer();\\n    \\tvar stencilBuffer = new StencilBuffer();\\n\\n    \\tvar maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\\n    \\tvar newAttributes = new Uint8Array( maxVertexAttributes );\\n    \\tvar enabledAttributes = new Uint8Array( maxVertexAttributes );\\n    \\tvar attributeDivisors = new Uint8Array( maxVertexAttributes );\\n\\n    \\tvar capabilities = {};\\n\\n    \\tvar compressedTextureFormats = null;\\n\\n    \\tvar currentBlending = null;\\n    \\tvar currentBlendEquation = null;\\n    \\tvar currentBlendSrc = null;\\n    \\tvar currentBlendDst = null;\\n    \\tvar currentBlendEquationAlpha = null;\\n    \\tvar currentBlendSrcAlpha = null;\\n    \\tvar currentBlendDstAlpha = null;\\n    \\tvar currentPremultipledAlpha = false;\\n\\n    \\tvar currentFlipSided = null;\\n    \\tvar currentCullFace = null;\\n\\n    \\tvar currentLineWidth = null;\\n\\n    \\tvar currentPolygonOffsetFactor = null;\\n    \\tvar currentPolygonOffsetUnits = null;\\n\\n    \\tvar currentScissorTest = null;\\n\\n    \\tvar maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\\n\\n    \\tvar currentTextureSlot = null;\\n    \\tvar currentBoundTextures = {};\\n\\n    \\tvar currentScissor = new Vector4();\\n    \\tvar currentViewport = new Vector4();\\n\\n    \\tfunction createTexture( type, target, count ) {\\n\\n    \\t\\tvar data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\\n    \\t\\tvar texture = gl.createTexture();\\n\\n    \\t\\tgl.bindTexture( type, texture );\\n    \\t\\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\\n    \\t\\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\\n\\n    \\t\\tfor ( var i = 0; i < count; i ++ ) {\\n\\n    \\t\\t\\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\\n\\n    \\t\\t}\\n\\n    \\t\\treturn texture;\\n\\n    \\t}\\n\\n    \\tvar emptyTextures = {};\\n    \\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\\n    \\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\\n\\n    \\t//\\n\\n    \\tfunction init() {\\n\\n    \\t\\tclearColor( 0, 0, 0, 1 );\\n    \\t\\tclearDepth( 1 );\\n    \\t\\tclearStencil( 0 );\\n\\n    \\t\\tenable( gl.DEPTH_TEST );\\n    \\t\\tsetDepthFunc( LessEqualDepth );\\n\\n    \\t\\tsetFlipSided( false );\\n    \\t\\tsetCullFace( CullFaceBack );\\n    \\t\\tenable( gl.CULL_FACE );\\n\\n    \\t\\tenable( gl.BLEND );\\n    \\t\\tsetBlending( NormalBlending );\\n\\n    \\t}\\n\\n    \\tfunction initAttributes() {\\n\\n    \\t\\tfor ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\\n\\n    \\t\\t\\tnewAttributes[ i ] = 0;\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\tfunction enableAttribute( attribute ) {\\n\\n    \\t\\tnewAttributes[ attribute ] = 1;\\n\\n    \\t\\tif ( enabledAttributes[ attribute ] === 0 ) {\\n\\n    \\t\\t\\tgl.enableVertexAttribArray( attribute );\\n    \\t\\t\\tenabledAttributes[ attribute ] = 1;\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( attributeDivisors[ attribute ] !== 0 ) {\\n\\n    \\t\\t\\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\\n\\n    \\t\\t\\textension.vertexAttribDivisorANGLE( attribute, 0 );\\n    \\t\\t\\tattributeDivisors[ attribute ] = 0;\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute, extension ) {\\n\\n    \\t\\tnewAttributes[ attribute ] = 1;\\n\\n    \\t\\tif ( enabledAttributes[ attribute ] === 0 ) {\\n\\n    \\t\\t\\tgl.enableVertexAttribArray( attribute );\\n    \\t\\t\\tenabledAttributes[ attribute ] = 1;\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\\n\\n    \\t\\t\\textension.vertexAttribDivisorANGLE( attribute, meshPerAttribute );\\n    \\t\\t\\tattributeDivisors[ attribute ] = meshPerAttribute;\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\tfunction disableUnusedAttributes() {\\n\\n    \\t\\tfor ( var i = 0, l = enabledAttributes.length; i !== l; ++ i ) {\\n\\n    \\t\\t\\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\\n\\n    \\t\\t\\t\\tgl.disableVertexAttribArray( i );\\n    \\t\\t\\t\\tenabledAttributes[ i ] = 0;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\tfunction enable( id ) {\\n\\n    \\t\\tif ( capabilities[ id ] !== true ) {\\n\\n    \\t\\t\\tgl.enable( id );\\n    \\t\\t\\tcapabilities[ id ] = true;\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\tfunction disable( id ) {\\n\\n    \\t\\tif ( capabilities[ id ] !== false ) {\\n\\n    \\t\\t\\tgl.disable( id );\\n    \\t\\t\\tcapabilities[ id ] = false;\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\tfunction getCompressedTextureFormats() {\\n\\n    \\t\\tif ( compressedTextureFormats === null ) {\\n\\n    \\t\\t\\tcompressedTextureFormats = [];\\n\\n    \\t\\t\\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) ||\\n    \\t\\t\\t     extensions.get( 'WEBGL_compressed_texture_s3tc' ) ||\\n    \\t\\t\\t     extensions.get( 'WEBGL_compressed_texture_etc1' ) ) {\\n\\n    \\t\\t\\t\\tvar formats = gl.getParameter( gl.COMPRESSED_TEXTURE_FORMATS );\\n\\n    \\t\\t\\t\\tfor ( var i = 0; i < formats.length; i ++ ) {\\n\\n    \\t\\t\\t\\t\\tcompressedTextureFormats.push( formats[ i ] );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\treturn compressedTextureFormats;\\n\\n    \\t}\\n\\n    \\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\\n\\n    \\t\\tif ( blending !== NoBlending ) {\\n\\n    \\t\\t\\tenable( gl.BLEND );\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\tdisable( gl.BLEND );\\n    \\t\\t\\tcurrentBlending = blending; // no blending, that is\\n    \\t\\t\\treturn;\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\\n\\n    \\t\\t\\tif ( blending === AdditiveBlending ) {\\n\\n    \\t\\t\\t\\tif ( premultipliedAlpha ) {\\n\\n    \\t\\t\\t\\t\\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\\n    \\t\\t\\t\\t\\tgl.blendFuncSeparate( gl.ONE, gl.ONE, gl.ONE, gl.ONE );\\n\\n    \\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\tgl.blendEquation( gl.FUNC_ADD );\\n    \\t\\t\\t\\t\\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t} else if ( blending === SubtractiveBlending ) {\\n\\n    \\t\\t\\t\\tif ( premultipliedAlpha ) {\\n\\n    \\t\\t\\t\\t\\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\\n    \\t\\t\\t\\t\\tgl.blendFuncSeparate( gl.ZERO, gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA );\\n\\n    \\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\tgl.blendEquation( gl.FUNC_ADD );\\n    \\t\\t\\t\\t\\tgl.blendFunc( gl.ZERO, gl.ONE_MINUS_SRC_COLOR );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t} else if ( blending === MultiplyBlending ) {\\n\\n    \\t\\t\\t\\tif ( premultipliedAlpha ) {\\n\\n    \\t\\t\\t\\t\\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\\n    \\t\\t\\t\\t\\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\\n\\n    \\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\tgl.blendEquation( gl.FUNC_ADD );\\n    \\t\\t\\t\\t\\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\tif ( premultipliedAlpha ) {\\n\\n    \\t\\t\\t\\t\\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\\n    \\t\\t\\t\\t\\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\\n\\n    \\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\\n    \\t\\t\\t\\t\\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tcurrentBlending = blending;\\n    \\t\\t\\tcurrentPremultipledAlpha = premultipliedAlpha;\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( blending === CustomBlending ) {\\n\\n    \\t\\t\\tblendEquationAlpha = blendEquationAlpha || blendEquation;\\n    \\t\\t\\tblendSrcAlpha = blendSrcAlpha || blendSrc;\\n    \\t\\t\\tblendDstAlpha = blendDstAlpha || blendDst;\\n\\n    \\t\\t\\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\\n\\n    \\t\\t\\t\\tgl.blendEquationSeparate( paramThreeToGL( blendEquation ), paramThreeToGL( blendEquationAlpha ) );\\n\\n    \\t\\t\\t\\tcurrentBlendEquation = blendEquation;\\n    \\t\\t\\t\\tcurrentBlendEquationAlpha = blendEquationAlpha;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\\n\\n    \\t\\t\\t\\tgl.blendFuncSeparate( paramThreeToGL( blendSrc ), paramThreeToGL( blendDst ), paramThreeToGL( blendSrcAlpha ), paramThreeToGL( blendDstAlpha ) );\\n\\n    \\t\\t\\t\\tcurrentBlendSrc = blendSrc;\\n    \\t\\t\\t\\tcurrentBlendDst = blendDst;\\n    \\t\\t\\t\\tcurrentBlendSrcAlpha = blendSrcAlpha;\\n    \\t\\t\\t\\tcurrentBlendDstAlpha = blendDstAlpha;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\tcurrentBlendEquation = null;\\n    \\t\\t\\tcurrentBlendSrc = null;\\n    \\t\\t\\tcurrentBlendDst = null;\\n    \\t\\t\\tcurrentBlendEquationAlpha = null;\\n    \\t\\t\\tcurrentBlendSrcAlpha = null;\\n    \\t\\t\\tcurrentBlendDstAlpha = null;\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\t// TODO Deprecate\\n\\n    \\tfunction setColorWrite( colorWrite ) {\\n\\n    \\t\\tcolorBuffer.setMask( colorWrite );\\n\\n    \\t}\\n\\n    \\tfunction setDepthTest( depthTest ) {\\n\\n    \\t\\tdepthBuffer.setTest( depthTest );\\n\\n    \\t}\\n\\n    \\tfunction setDepthWrite( depthWrite ) {\\n\\n    \\t\\tdepthBuffer.setMask( depthWrite );\\n\\n    \\t}\\n\\n    \\tfunction setDepthFunc( depthFunc ) {\\n\\n    \\t\\tdepthBuffer.setFunc( depthFunc );\\n\\n    \\t}\\n\\n    \\tfunction setStencilTest( stencilTest ) {\\n\\n    \\t\\tstencilBuffer.setTest( stencilTest );\\n\\n    \\t}\\n\\n    \\tfunction setStencilWrite( stencilWrite ) {\\n\\n    \\t\\tstencilBuffer.setMask( stencilWrite );\\n\\n    \\t}\\n\\n    \\tfunction setStencilFunc( stencilFunc, stencilRef, stencilMask ) {\\n\\n    \\t\\tstencilBuffer.setFunc( stencilFunc, stencilRef, stencilMask );\\n\\n    \\t}\\n\\n    \\tfunction setStencilOp( stencilFail, stencilZFail, stencilZPass ) {\\n\\n    \\t\\tstencilBuffer.setOp( stencilFail, stencilZFail, stencilZPass );\\n\\n    \\t}\\n\\n    \\t//\\n\\n    \\tfunction setFlipSided( flipSided ) {\\n\\n    \\t\\tif ( currentFlipSided !== flipSided ) {\\n\\n    \\t\\t\\tif ( flipSided ) {\\n\\n    \\t\\t\\t\\tgl.frontFace( gl.CW );\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\tgl.frontFace( gl.CCW );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tcurrentFlipSided = flipSided;\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\tfunction setCullFace( cullFace ) {\\n\\n    \\t\\tif ( cullFace !== CullFaceNone ) {\\n\\n    \\t\\t\\tenable( gl.CULL_FACE );\\n\\n    \\t\\t\\tif ( cullFace !== currentCullFace ) {\\n\\n    \\t\\t\\t\\tif ( cullFace === CullFaceBack ) {\\n\\n    \\t\\t\\t\\t\\tgl.cullFace( gl.BACK );\\n\\n    \\t\\t\\t\\t} else if ( cullFace === CullFaceFront ) {\\n\\n    \\t\\t\\t\\t\\tgl.cullFace( gl.FRONT );\\n\\n    \\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\tgl.cullFace( gl.FRONT_AND_BACK );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\tdisable( gl.CULL_FACE );\\n\\n    \\t\\t}\\n\\n    \\t\\tcurrentCullFace = cullFace;\\n\\n    \\t}\\n\\n    \\tfunction setLineWidth( width ) {\\n\\n    \\t\\tif ( width !== currentLineWidth ) {\\n\\n    \\t\\t\\tgl.lineWidth( width );\\n\\n    \\t\\t\\tcurrentLineWidth = width;\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\tfunction setPolygonOffset( polygonOffset, factor, units ) {\\n\\n    \\t\\tif ( polygonOffset ) {\\n\\n    \\t\\t\\tenable( gl.POLYGON_OFFSET_FILL );\\n\\n    \\t\\t\\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\\n\\n    \\t\\t\\t\\tgl.polygonOffset( factor, units );\\n\\n    \\t\\t\\t\\tcurrentPolygonOffsetFactor = factor;\\n    \\t\\t\\t\\tcurrentPolygonOffsetUnits = units;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\tdisable( gl.POLYGON_OFFSET_FILL );\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\tfunction getScissorTest() {\\n\\n    \\t\\treturn currentScissorTest;\\n\\n    \\t}\\n\\n    \\tfunction setScissorTest( scissorTest ) {\\n\\n    \\t\\tcurrentScissorTest = scissorTest;\\n\\n    \\t\\tif ( scissorTest ) {\\n\\n    \\t\\t\\tenable( gl.SCISSOR_TEST );\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\tdisable( gl.SCISSOR_TEST );\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\t// texture\\n\\n    \\tfunction activeTexture( webglSlot ) {\\n\\n    \\t\\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\\n\\n    \\t\\tif ( currentTextureSlot !== webglSlot ) {\\n\\n    \\t\\t\\tgl.activeTexture( webglSlot );\\n    \\t\\t\\tcurrentTextureSlot = webglSlot;\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\tfunction bindTexture( webglType, webglTexture ) {\\n\\n    \\t\\tif ( currentTextureSlot === null ) {\\n\\n    \\t\\t\\tactiveTexture();\\n\\n    \\t\\t}\\n\\n    \\t\\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\\n\\n    \\t\\tif ( boundTexture === undefined ) {\\n\\n    \\t\\t\\tboundTexture = { type: undefined, texture: undefined };\\n    \\t\\t\\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\\n\\n    \\t\\t\\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\\n\\n    \\t\\t\\tboundTexture.type = webglType;\\n    \\t\\t\\tboundTexture.texture = webglTexture;\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\tfunction compressedTexImage2D() {\\n\\n    \\t\\ttry {\\n\\n    \\t\\t\\tgl.compressedTexImage2D.apply( gl, arguments );\\n\\n    \\t\\t} catch ( error ) {\\n\\n    \\t\\t\\tconsole.error( error );\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\tfunction texImage2D() {\\n\\n    \\t\\ttry {\\n\\n    \\t\\t\\tgl.texImage2D.apply( gl, arguments );\\n\\n    \\t\\t} catch ( error ) {\\n\\n    \\t\\t\\tconsole.error( error );\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\t// TODO Deprecate\\n\\n    \\tfunction clearColor( r, g, b, a ) {\\n\\n    \\t\\tcolorBuffer.setClear( r, g, b, a );\\n\\n    \\t}\\n\\n    \\tfunction clearDepth( depth ) {\\n\\n    \\t\\tdepthBuffer.setClear( depth );\\n\\n    \\t}\\n\\n    \\tfunction clearStencil( stencil ) {\\n\\n    \\t\\tstencilBuffer.setClear( stencil );\\n\\n    \\t}\\n\\n    \\t//\\n\\n    \\tfunction scissor( scissor ) {\\n\\n    \\t\\tif ( currentScissor.equals( scissor ) === false ) {\\n\\n    \\t\\t\\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\\n    \\t\\t\\tcurrentScissor.copy( scissor );\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\tfunction viewport( viewport ) {\\n\\n    \\t\\tif ( currentViewport.equals( viewport ) === false ) {\\n\\n    \\t\\t\\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\\n    \\t\\t\\tcurrentViewport.copy( viewport );\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\t//\\n\\n    \\tfunction reset() {\\n\\n    \\t\\tfor ( var i = 0; i < enabledAttributes.length; i ++ ) {\\n\\n    \\t\\t\\tif ( enabledAttributes[ i ] === 1 ) {\\n\\n    \\t\\t\\t\\tgl.disableVertexAttribArray( i );\\n    \\t\\t\\t\\tenabledAttributes[ i ] = 0;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\tcapabilities = {};\\n\\n    \\t\\tcompressedTextureFormats = null;\\n\\n    \\t\\tcurrentTextureSlot = null;\\n    \\t\\tcurrentBoundTextures = {};\\n\\n    \\t\\tcurrentBlending = null;\\n\\n    \\t\\tcurrentFlipSided = null;\\n    \\t\\tcurrentCullFace = null;\\n\\n    \\t\\tcolorBuffer.reset();\\n    \\t\\tdepthBuffer.reset();\\n    \\t\\tstencilBuffer.reset();\\n\\n    \\t}\\n\\n    \\treturn {\\n\\n    \\t\\tbuffers: {\\n    \\t\\t\\tcolor: colorBuffer,\\n    \\t\\t\\tdepth: depthBuffer,\\n    \\t\\t\\tstencil: stencilBuffer\\n    \\t\\t},\\n\\n    \\t\\tinit: init,\\n    \\t\\tinitAttributes: initAttributes,\\n    \\t\\tenableAttribute: enableAttribute,\\n    \\t\\tenableAttributeAndDivisor: enableAttributeAndDivisor,\\n    \\t\\tdisableUnusedAttributes: disableUnusedAttributes,\\n    \\t\\tenable: enable,\\n    \\t\\tdisable: disable,\\n    \\t\\tgetCompressedTextureFormats: getCompressedTextureFormats,\\n\\n    \\t\\tsetBlending: setBlending,\\n\\n    \\t\\tsetColorWrite: setColorWrite,\\n    \\t\\tsetDepthTest: setDepthTest,\\n    \\t\\tsetDepthWrite: setDepthWrite,\\n    \\t\\tsetDepthFunc: setDepthFunc,\\n    \\t\\tsetStencilTest: setStencilTest,\\n    \\t\\tsetStencilWrite: setStencilWrite,\\n    \\t\\tsetStencilFunc: setStencilFunc,\\n    \\t\\tsetStencilOp: setStencilOp,\\n\\n    \\t\\tsetFlipSided: setFlipSided,\\n    \\t\\tsetCullFace: setCullFace,\\n\\n    \\t\\tsetLineWidth: setLineWidth,\\n    \\t\\tsetPolygonOffset: setPolygonOffset,\\n\\n    \\t\\tgetScissorTest: getScissorTest,\\n    \\t\\tsetScissorTest: setScissorTest,\\n\\n    \\t\\tactiveTexture: activeTexture,\\n    \\t\\tbindTexture: bindTexture,\\n    \\t\\tcompressedTexImage2D: compressedTexImage2D,\\n    \\t\\ttexImage2D: texImage2D,\\n\\n    \\t\\tclearColor: clearColor,\\n    \\t\\tclearDepth: clearDepth,\\n    \\t\\tclearStencil: clearStencil,\\n\\n    \\t\\tscissor: scissor,\\n    \\t\\tviewport: viewport,\\n\\n    \\t\\treset: reset\\n\\n    \\t};\\n\\n    }\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     */\\n\\n    function WebGLCapabilities( gl, extensions, parameters ) {\\n\\n    \\tvar maxAnisotropy;\\n\\n    \\tfunction getMaxAnisotropy() {\\n\\n    \\t\\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\\n\\n    \\t\\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\\n\\n    \\t\\tif ( extension !== null ) {\\n\\n    \\t\\t\\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\tmaxAnisotropy = 0;\\n\\n    \\t\\t}\\n\\n    \\t\\treturn maxAnisotropy;\\n\\n    \\t}\\n\\n    \\tfunction getMaxPrecision( precision ) {\\n\\n    \\t\\tif ( precision === 'highp' ) {\\n\\n    \\t\\t\\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\\n    \\t\\t\\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\\n\\n    \\t\\t\\t\\treturn 'highp';\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tprecision = 'mediump';\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( precision === 'mediump' ) {\\n\\n    \\t\\t\\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\\n    \\t\\t\\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\\n\\n    \\t\\t\\t\\treturn 'mediump';\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\treturn 'lowp';\\n\\n    \\t}\\n\\n    \\tvar precision = parameters.precision !== undefined ? parameters.precision : 'highp';\\n    \\tvar maxPrecision = getMaxPrecision( precision );\\n\\n    \\tif ( maxPrecision !== precision ) {\\n\\n    \\t\\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\\n    \\t\\tprecision = maxPrecision;\\n\\n    \\t}\\n\\n    \\tvar logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true && !! extensions.get( 'EXT_frag_depth' );\\n\\n    \\tvar maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\\n    \\tvar maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\\n    \\tvar maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\\n    \\tvar maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\\n\\n    \\tvar maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\\n    \\tvar maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\\n    \\tvar maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\\n    \\tvar maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\\n\\n    \\tvar vertexTextures = maxVertexTextures > 0;\\n    \\tvar floatFragmentTextures = !! extensions.get( 'OES_texture_float' );\\n    \\tvar floatVertexTextures = vertexTextures && floatFragmentTextures;\\n\\n    \\treturn {\\n\\n    \\t\\tgetMaxAnisotropy: getMaxAnisotropy,\\n    \\t\\tgetMaxPrecision: getMaxPrecision,\\n\\n    \\t\\tprecision: precision,\\n    \\t\\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\\n\\n    \\t\\tmaxTextures: maxTextures,\\n    \\t\\tmaxVertexTextures: maxVertexTextures,\\n    \\t\\tmaxTextureSize: maxTextureSize,\\n    \\t\\tmaxCubemapSize: maxCubemapSize,\\n\\n    \\t\\tmaxAttributes: maxAttributes,\\n    \\t\\tmaxVertexUniforms: maxVertexUniforms,\\n    \\t\\tmaxVaryings: maxVaryings,\\n    \\t\\tmaxFragmentUniforms: maxFragmentUniforms,\\n\\n    \\t\\tvertexTextures: vertexTextures,\\n    \\t\\tfloatFragmentTextures: floatFragmentTextures,\\n    \\t\\tfloatVertexTextures: floatVertexTextures\\n\\n    \\t};\\n\\n    }\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     */\\n\\n    function WebGLExtensions( gl ) {\\n\\n    \\tvar extensions = {};\\n\\n    \\treturn {\\n\\n    \\t\\tget: function ( name ) {\\n\\n    \\t\\t\\tif ( extensions[ name ] !== undefined ) {\\n\\n    \\t\\t\\t\\treturn extensions[ name ];\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tvar extension;\\n\\n    \\t\\t\\tswitch ( name ) {\\n\\n    \\t\\t\\t\\tcase 'WEBGL_depth_texture':\\n    \\t\\t\\t\\t\\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\\n    \\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\tcase 'EXT_texture_filter_anisotropic':\\n    \\t\\t\\t\\t\\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\\n    \\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\tcase 'WEBGL_compressed_texture_s3tc':\\n    \\t\\t\\t\\t\\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\\n    \\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\tcase 'WEBGL_compressed_texture_pvrtc':\\n    \\t\\t\\t\\t\\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\\n    \\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\tcase 'WEBGL_compressed_texture_etc1':\\n    \\t\\t\\t\\t\\textension = gl.getExtension( 'WEBGL_compressed_texture_etc1' );\\n    \\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\tdefault:\\n    \\t\\t\\t\\t\\textension = gl.getExtension( name );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tif ( extension === null ) {\\n\\n    \\t\\t\\t\\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\textensions[ name ] = extension;\\n\\n    \\t\\t\\treturn extension;\\n\\n    \\t\\t}\\n\\n    \\t};\\n\\n    }\\n\\n    function WebGLClipping() {\\n\\n    \\tvar scope = this,\\n\\n    \\t\\tglobalState = null,\\n    \\t\\tnumGlobalPlanes = 0,\\n    \\t\\tlocalClippingEnabled = false,\\n    \\t\\trenderingShadows = false,\\n\\n    \\t\\tplane = new Plane(),\\n    \\t\\tviewNormalMatrix = new Matrix3(),\\n\\n    \\t\\tuniform = { value: null, needsUpdate: false };\\n\\n    \\tthis.uniform = uniform;\\n    \\tthis.numPlanes = 0;\\n\\n    \\tthis.init = function( planes, enableLocalClipping, camera ) {\\n\\n    \\t\\tvar enabled =\\n    \\t\\t\\tplanes.length !== 0 ||\\n    \\t\\t\\tenableLocalClipping ||\\n    \\t\\t\\t// enable state of previous frame - the clipping code has to\\n    \\t\\t\\t// run another frame in order to reset the state:\\n    \\t\\t\\tnumGlobalPlanes !== 0 ||\\n    \\t\\t\\tlocalClippingEnabled;\\n\\n    \\t\\tlocalClippingEnabled = enableLocalClipping;\\n\\n    \\t\\tglobalState = projectPlanes( planes, camera, 0 );\\n    \\t\\tnumGlobalPlanes = planes.length;\\n\\n    \\t\\treturn enabled;\\n\\n    \\t};\\n\\n    \\tthis.beginShadows = function() {\\n\\n    \\t\\trenderingShadows = true;\\n    \\t\\tprojectPlanes( null );\\n\\n    \\t};\\n\\n    \\tthis.endShadows = function() {\\n\\n    \\t\\trenderingShadows = false;\\n    \\t\\tresetGlobalState();\\n\\n    \\t};\\n\\n    \\tthis.setState = function( planes, clipShadows, camera, cache, fromCache ) {\\n\\n    \\t\\tif ( ! localClippingEnabled ||\\n    \\t\\t\\t\\tplanes === null || planes.length === 0 ||\\n    \\t\\t\\t\\trenderingShadows && ! clipShadows ) {\\n    \\t\\t\\t// there's no local clipping\\n\\n    \\t\\t\\tif ( renderingShadows ) {\\n    \\t\\t\\t\\t// there's no global clipping\\n\\n    \\t\\t\\t\\tprojectPlanes( null );\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\tresetGlobalState();\\n    \\t\\t\\t}\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\tvar nGlobal = renderingShadows ? 0 : numGlobalPlanes,\\n    \\t\\t\\t\\tlGlobal = nGlobal * 4,\\n\\n    \\t\\t\\t\\tdstArray = cache.clippingState || null;\\n\\n    \\t\\t\\tuniform.value = dstArray; // ensure unique state\\n\\n    \\t\\t\\tdstArray = projectPlanes( planes, camera, lGlobal, fromCache );\\n\\n    \\t\\t\\tfor ( var i = 0; i !== lGlobal; ++ i ) {\\n\\n    \\t\\t\\t\\tdstArray[ i ] = globalState[ i ];\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tcache.clippingState = dstArray;\\n    \\t\\t\\tthis.numPlanes += nGlobal;\\n\\n    \\t\\t}\\n\\n\\n    \\t};\\n\\n    \\tfunction resetGlobalState() {\\n\\n    \\t\\tif ( uniform.value !== globalState ) {\\n\\n    \\t\\t\\tuniform.value = globalState;\\n    \\t\\t\\tuniform.needsUpdate = numGlobalPlanes > 0;\\n\\n    \\t\\t}\\n\\n    \\t\\tscope.numPlanes = numGlobalPlanes;\\n\\n    \\t}\\n\\n    \\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\\n\\n    \\t\\tvar nPlanes = planes !== null ? planes.length : 0,\\n    \\t\\t\\tdstArray = null;\\n\\n    \\t\\tif ( nPlanes !== 0 ) {\\n\\n    \\t\\t\\tdstArray = uniform.value;\\n\\n    \\t\\t\\tif ( skipTransform !== true || dstArray === null ) {\\n\\n    \\t\\t\\t\\tvar flatSize = dstOffset + nPlanes * 4,\\n    \\t\\t\\t\\t\\tviewMatrix = camera.matrixWorldInverse;\\n\\n    \\t\\t\\t\\tviewNormalMatrix.getNormalMatrix( viewMatrix );\\n\\n    \\t\\t\\t\\tif ( dstArray === null || dstArray.length < flatSize ) {\\n\\n    \\t\\t\\t\\t\\tdstArray = new Float32Array( flatSize );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\tfor ( var i = 0, i4 = dstOffset;\\n    \\t\\t\\t\\t\\t\\t\\t\\t\\ti !== nPlanes; ++ i, i4 += 4 ) {\\n\\n    \\t\\t\\t\\t\\tplane.copy( planes[ i ] ).\\n    \\t\\t\\t\\t\\t\\t\\tapplyMatrix4( viewMatrix, viewNormalMatrix );\\n\\n    \\t\\t\\t\\t\\tplane.normal.toArray( dstArray, i4 );\\n    \\t\\t\\t\\t\\tdstArray[ i4 + 3 ] = plane.constant;\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tuniform.value = dstArray;\\n    \\t\\t\\tuniform.needsUpdate = true;\\n\\n    \\t\\t}\\n\\n    \\t\\tscope.numPlanes = nPlanes;\\n    \\t\\treturn dstArray;\\n\\n    \\t}\\n\\n    }\\n\\n    /**\\n     * @author supereggbert / http://www.paulbrunt.co.uk/\\n     * @author mrdoob / http://mrdoob.com/\\n     * @author alteredq / http://alteredqualia.com/\\n     * @author szimek / https://github.com/szimek/\\n     * @author tschw\\n     */\\n\\n    function WebGLRenderer( parameters ) {\\n\\n    \\tconsole.log( 'THREE.WebGLRenderer', REVISION );\\n\\n    \\tparameters = parameters || {};\\n\\n    \\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' ),\\n    \\t_context = parameters.context !== undefined ? parameters.context : null,\\n\\n    \\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\\n    \\t_depth = parameters.depth !== undefined ? parameters.depth : true,\\n    \\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\\n    \\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\\n    \\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\\n    \\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false;\\n\\n    \\tvar lights = [];\\n\\n    \\tvar opaqueObjects = [];\\n    \\tvar opaqueObjectsLastIndex = - 1;\\n    \\tvar transparentObjects = [];\\n    \\tvar transparentObjectsLastIndex = - 1;\\n\\n    \\tvar morphInfluences = new Float32Array( 8 );\\n\\n    \\tvar sprites = [];\\n    \\tvar lensFlares = [];\\n\\n    \\t// public properties\\n\\n    \\tthis.domElement = _canvas;\\n    \\tthis.context = null;\\n\\n    \\t// clearing\\n\\n    \\tthis.autoClear = true;\\n    \\tthis.autoClearColor = true;\\n    \\tthis.autoClearDepth = true;\\n    \\tthis.autoClearStencil = true;\\n\\n    \\t// scene graph\\n\\n    \\tthis.sortObjects = true;\\n\\n    \\t// user-defined clipping\\n\\n    \\tthis.clippingPlanes = [];\\n    \\tthis.localClippingEnabled = false;\\n\\n    \\t// physically based shading\\n\\n    \\tthis.gammaFactor = 2.0;\\t// for backwards compatibility\\n    \\tthis.gammaInput = false;\\n    \\tthis.gammaOutput = false;\\n\\n    \\t// physical lights\\n\\n    \\tthis.physicallyCorrectLights = false;\\n\\n    \\t// tone mapping\\n\\n    \\tthis.toneMapping = LinearToneMapping;\\n    \\tthis.toneMappingExposure = 1.0;\\n    \\tthis.toneMappingWhitePoint = 1.0;\\n\\n    \\t// morphs\\n\\n    \\tthis.maxMorphTargets = 8;\\n    \\tthis.maxMorphNormals = 4;\\n\\n    \\t// internal properties\\n\\n    \\tvar _this = this,\\n\\n    \\t// internal state cache\\n\\n    \\t_currentProgram = null,\\n    \\t_currentRenderTarget = null,\\n    \\t_currentFramebuffer = null,\\n    \\t_currentMaterialId = - 1,\\n    \\t_currentGeometryProgram = '',\\n    \\t_currentCamera = null,\\n\\n    \\t_currentScissor = new Vector4(),\\n    \\t_currentScissorTest = null,\\n\\n    \\t_currentViewport = new Vector4(),\\n\\n    \\t//\\n\\n    \\t_usedTextureUnits = 0,\\n\\n    \\t//\\n\\n    \\t_clearColor = new Color( 0x000000 ),\\n    \\t_clearAlpha = 0,\\n\\n    \\t_width = _canvas.width,\\n    \\t_height = _canvas.height,\\n\\n    \\t_pixelRatio = 1,\\n\\n    \\t_scissor = new Vector4( 0, 0, _width, _height ),\\n    \\t_scissorTest = false,\\n\\n    \\t_viewport = new Vector4( 0, 0, _width, _height ),\\n\\n    \\t// frustum\\n\\n    \\t_frustum = new Frustum(),\\n\\n    \\t// clipping\\n\\n    \\t_clipping = new WebGLClipping(),\\n    \\t_clippingEnabled = false,\\n    \\t_localClippingEnabled = false,\\n\\n    \\t_sphere = new Sphere(),\\n\\n    \\t// camera matrices cache\\n\\n    \\t_projScreenMatrix = new Matrix4(),\\n\\n    \\t_vector3 = new Vector3(),\\n\\n    \\t// light arrays cache\\n\\n    \\t_lights = {\\n\\n    \\t\\thash: '',\\n\\n    \\t\\tambient: [ 0, 0, 0 ],\\n    \\t\\tdirectional: [],\\n    \\t\\tdirectionalShadowMap: [],\\n    \\t\\tdirectionalShadowMatrix: [],\\n    \\t\\tspot: [],\\n    \\t\\tspotShadowMap: [],\\n    \\t\\tspotShadowMatrix: [],\\n    \\t\\tpoint: [],\\n    \\t\\tpointShadowMap: [],\\n    \\t\\tpointShadowMatrix: [],\\n    \\t\\themi: [],\\n\\n    \\t\\tshadows: []\\n\\n    \\t},\\n\\n    \\t// info\\n\\n    \\t_infoRender = {\\n\\n    \\t\\tcalls: 0,\\n    \\t\\tvertices: 0,\\n    \\t\\tfaces: 0,\\n    \\t\\tpoints: 0\\n\\n    \\t};\\n\\n    \\tthis.info = {\\n\\n    \\t\\trender: _infoRender,\\n    \\t\\tmemory: {\\n\\n    \\t\\t\\tgeometries: 0,\\n    \\t\\t\\ttextures: 0\\n\\n    \\t\\t},\\n    \\t\\tprograms: null\\n\\n    \\t};\\n\\n\\n    \\t// initialize\\n\\n    \\tvar _gl;\\n\\n    \\ttry {\\n\\n    \\t\\tvar attributes = {\\n    \\t\\t\\talpha: _alpha,\\n    \\t\\t\\tdepth: _depth,\\n    \\t\\t\\tstencil: _stencil,\\n    \\t\\t\\tantialias: _antialias,\\n    \\t\\t\\tpremultipliedAlpha: _premultipliedAlpha,\\n    \\t\\t\\tpreserveDrawingBuffer: _preserveDrawingBuffer\\n    \\t\\t};\\n\\n    \\t\\t_gl = _context || _canvas.getContext( 'webgl', attributes ) || _canvas.getContext( 'experimental-webgl', attributes );\\n\\n    \\t\\tif ( _gl === null ) {\\n\\n    \\t\\t\\tif ( _canvas.getContext( 'webgl' ) !== null ) {\\n\\n    \\t\\t\\t\\tthrow 'Error creating WebGL context with your selected attributes.';\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\tthrow 'Error creating WebGL context.';\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\\n\\n    \\t\\tif ( _gl.getShaderPrecisionFormat === undefined ) {\\n\\n    \\t\\t\\t_gl.getShaderPrecisionFormat = function () {\\n\\n    \\t\\t\\t\\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\\n\\n    \\t\\t\\t};\\n\\n    \\t\\t}\\n\\n    \\t\\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\\n\\n    \\t} catch ( error ) {\\n\\n    \\t\\tconsole.error( 'THREE.WebGLRenderer: ' + error );\\n\\n    \\t}\\n\\n    \\tvar extensions = new WebGLExtensions( _gl );\\n\\n    \\textensions.get( 'WEBGL_depth_texture' );\\n    \\textensions.get( 'OES_texture_float' );\\n    \\textensions.get( 'OES_texture_float_linear' );\\n    \\textensions.get( 'OES_texture_half_float' );\\n    \\textensions.get( 'OES_texture_half_float_linear' );\\n    \\textensions.get( 'OES_standard_derivatives' );\\n    \\textensions.get( 'ANGLE_instanced_arrays' );\\n\\n    \\tif ( extensions.get( 'OES_element_index_uint' ) ) {\\n\\n    \\t\\tBufferGeometry.MaxIndex = 4294967296;\\n\\n    \\t}\\n\\n    \\tvar capabilities = new WebGLCapabilities( _gl, extensions, parameters );\\n\\n    \\tvar state = new WebGLState( _gl, extensions, paramThreeToGL );\\n    \\tvar properties = new WebGLProperties();\\n    \\tvar textures = new WebGLTextures( _gl, extensions, state, properties, capabilities, paramThreeToGL, this.info );\\n    \\tvar objects = new WebGLObjects( _gl, properties, this.info );\\n    \\tvar programCache = new WebGLPrograms( this, capabilities );\\n    \\tvar lightCache = new WebGLLights();\\n\\n    \\tthis.info.programs = programCache.programs;\\n\\n    \\tvar bufferRenderer = new WebGLBufferRenderer( _gl, extensions, _infoRender );\\n    \\tvar indexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, _infoRender );\\n\\n    \\t//\\n\\n    \\tvar backgroundCamera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\\n    \\tvar backgroundCamera2 = new PerspectiveCamera();\\n    \\tvar backgroundPlaneMesh = new Mesh(\\n    \\t\\tnew PlaneBufferGeometry( 2, 2 ),\\n    \\t\\tnew MeshBasicMaterial( { depthTest: false, depthWrite: false, fog: false } )\\n    \\t);\\n    \\tvar backgroundBoxShader = ShaderLib[ 'cube' ];\\n    \\tvar backgroundBoxMesh = new Mesh(\\n    \\t\\tnew BoxBufferGeometry( 5, 5, 5 ),\\n    \\t\\tnew ShaderMaterial( {\\n    \\t\\t\\tuniforms: backgroundBoxShader.uniforms,\\n    \\t\\t\\tvertexShader: backgroundBoxShader.vertexShader,\\n    \\t\\t\\tfragmentShader: backgroundBoxShader.fragmentShader,\\n    \\t\\t\\tside: BackSide,\\n    \\t\\t\\tdepthTest: false,\\n    \\t\\t\\tdepthWrite: false,\\n    \\t\\t\\tfog: false\\n    \\t\\t} )\\n    \\t);\\n\\n    \\t//\\n\\n    \\tfunction getTargetPixelRatio() {\\n\\n    \\t\\treturn _currentRenderTarget === null ? _pixelRatio : 1;\\n\\n    \\t}\\n\\n    \\tfunction glClearColor( r, g, b, a ) {\\n\\n    \\t\\tif ( _premultipliedAlpha === true ) {\\n\\n    \\t\\t\\tr *= a; g *= a; b *= a;\\n\\n    \\t\\t}\\n\\n    \\t\\tstate.clearColor( r, g, b, a );\\n\\n    \\t}\\n\\n    \\tfunction setDefaultGLState() {\\n\\n    \\t\\tstate.init();\\n\\n    \\t\\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\\n    \\t\\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\\n\\n    \\t\\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\\n\\n    \\t}\\n\\n    \\tfunction resetGLState() {\\n\\n    \\t\\t_currentProgram = null;\\n    \\t\\t_currentCamera = null;\\n\\n    \\t\\t_currentGeometryProgram = '';\\n    \\t\\t_currentMaterialId = - 1;\\n\\n    \\t\\tstate.reset();\\n\\n    \\t}\\n\\n    \\tsetDefaultGLState();\\n\\n    \\tthis.context = _gl;\\n    \\tthis.capabilities = capabilities;\\n    \\tthis.extensions = extensions;\\n    \\tthis.properties = properties;\\n    \\tthis.state = state;\\n\\n    \\t// shadow map\\n\\n    \\tvar shadowMap = new WebGLShadowMap( this, _lights, objects, capabilities );\\n\\n    \\tthis.shadowMap = shadowMap;\\n\\n\\n    \\t// Plugins\\n\\n    \\tvar spritePlugin = new SpritePlugin( this, sprites );\\n    \\tvar lensFlarePlugin = new LensFlarePlugin( this, lensFlares );\\n\\n    \\t// API\\n\\n    \\tthis.getContext = function () {\\n\\n    \\t\\treturn _gl;\\n\\n    \\t};\\n\\n    \\tthis.getContextAttributes = function () {\\n\\n    \\t\\treturn _gl.getContextAttributes();\\n\\n    \\t};\\n\\n    \\tthis.forceContextLoss = function () {\\n\\n    \\t\\textensions.get( 'WEBGL_lose_context' ).loseContext();\\n\\n    \\t};\\n\\n    \\tthis.getMaxAnisotropy = function () {\\n\\n    \\t\\treturn capabilities.getMaxAnisotropy();\\n\\n    \\t};\\n\\n    \\tthis.getPrecision = function () {\\n\\n    \\t\\treturn capabilities.precision;\\n\\n    \\t};\\n\\n    \\tthis.getPixelRatio = function () {\\n\\n    \\t\\treturn _pixelRatio;\\n\\n    \\t};\\n\\n    \\tthis.setPixelRatio = function ( value ) {\\n\\n    \\t\\tif ( value === undefined ) return;\\n\\n    \\t\\t_pixelRatio = value;\\n\\n    \\t\\tthis.setSize( _viewport.z, _viewport.w, false );\\n\\n    \\t};\\n\\n    \\tthis.getSize = function () {\\n\\n    \\t\\treturn {\\n    \\t\\t\\twidth: _width,\\n    \\t\\t\\theight: _height\\n    \\t\\t};\\n\\n    \\t};\\n\\n    \\tthis.setSize = function ( width, height, updateStyle ) {\\n\\n    \\t\\t_width = width;\\n    \\t\\t_height = height;\\n\\n    \\t\\t_canvas.width = width * _pixelRatio;\\n    \\t\\t_canvas.height = height * _pixelRatio;\\n\\n    \\t\\tif ( updateStyle !== false ) {\\n\\n    \\t\\t\\t_canvas.style.width = width + 'px';\\n    \\t\\t\\t_canvas.style.height = height + 'px';\\n\\n    \\t\\t}\\n\\n    \\t\\tthis.setViewport( 0, 0, width, height );\\n\\n    \\t};\\n\\n    \\tthis.setViewport = function ( x, y, width, height ) {\\n\\n    \\t\\tstate.viewport( _viewport.set( x, y, width, height ) );\\n\\n    \\t};\\n\\n    \\tthis.setScissor = function ( x, y, width, height ) {\\n\\n    \\t\\tstate.scissor( _scissor.set( x, y, width, height ) );\\n\\n    \\t};\\n\\n    \\tthis.setScissorTest = function ( boolean ) {\\n\\n    \\t\\tstate.setScissorTest( _scissorTest = boolean );\\n\\n    \\t};\\n\\n    \\t// Clearing\\n\\n    \\tthis.getClearColor = function () {\\n\\n    \\t\\treturn _clearColor;\\n\\n    \\t};\\n\\n    \\tthis.setClearColor = function ( color, alpha ) {\\n\\n    \\t\\t_clearColor.set( color );\\n\\n    \\t\\t_clearAlpha = alpha !== undefined ? alpha : 1;\\n\\n    \\t\\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\\n\\n    \\t};\\n\\n    \\tthis.getClearAlpha = function () {\\n\\n    \\t\\treturn _clearAlpha;\\n\\n    \\t};\\n\\n    \\tthis.setClearAlpha = function ( alpha ) {\\n\\n    \\t\\t_clearAlpha = alpha;\\n\\n    \\t\\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\\n\\n    \\t};\\n\\n    \\tthis.clear = function ( color, depth, stencil ) {\\n\\n    \\t\\tvar bits = 0;\\n\\n    \\t\\tif ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\\n    \\t\\tif ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\\n    \\t\\tif ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\\n\\n    \\t\\t_gl.clear( bits );\\n\\n    \\t};\\n\\n    \\tthis.clearColor = function () {\\n\\n    \\t\\tthis.clear( true, false, false );\\n\\n    \\t};\\n\\n    \\tthis.clearDepth = function () {\\n\\n    \\t\\tthis.clear( false, true, false );\\n\\n    \\t};\\n\\n    \\tthis.clearStencil = function () {\\n\\n    \\t\\tthis.clear( false, false, true );\\n\\n    \\t};\\n\\n    \\tthis.clearTarget = function ( renderTarget, color, depth, stencil ) {\\n\\n    \\t\\tthis.setRenderTarget( renderTarget );\\n    \\t\\tthis.clear( color, depth, stencil );\\n\\n    \\t};\\n\\n    \\t// Reset\\n\\n    \\tthis.resetGLState = resetGLState;\\n\\n    \\tthis.dispose = function() {\\n\\n    \\t\\ttransparentObjects = [];\\n    \\t\\ttransparentObjectsLastIndex = -1;\\n    \\t\\topaqueObjects = [];\\n    \\t\\topaqueObjectsLastIndex = -1;\\n\\n    \\t\\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\\n\\n    \\t};\\n\\n    \\t// Events\\n\\n    \\tfunction onContextLost( event ) {\\n\\n    \\t\\tevent.preventDefault();\\n\\n    \\t\\tresetGLState();\\n    \\t\\tsetDefaultGLState();\\n\\n    \\t\\tproperties.clear();\\n\\n    \\t}\\n\\n    \\tfunction onMaterialDispose( event ) {\\n\\n    \\t\\tvar material = event.target;\\n\\n    \\t\\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\\n\\n    \\t\\tdeallocateMaterial( material );\\n\\n    \\t}\\n\\n    \\t// Buffer deallocation\\n\\n    \\tfunction deallocateMaterial( material ) {\\n\\n    \\t\\treleaseMaterialProgramReference( material );\\n\\n    \\t\\tproperties.delete( material );\\n\\n    \\t}\\n\\n\\n    \\tfunction releaseMaterialProgramReference( material ) {\\n\\n    \\t\\tvar programInfo = properties.get( material ).program;\\n\\n    \\t\\tmaterial.program = undefined;\\n\\n    \\t\\tif ( programInfo !== undefined ) {\\n\\n    \\t\\t\\tprogramCache.releaseProgram( programInfo );\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\t// Buffer rendering\\n\\n    \\tthis.renderBufferImmediate = function ( object, program, material ) {\\n\\n    \\t\\tstate.initAttributes();\\n\\n    \\t\\tvar buffers = properties.get( object );\\n\\n    \\t\\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\\n    \\t\\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\\n    \\t\\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\\n    \\t\\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\\n\\n    \\t\\tvar attributes = program.getAttributes();\\n\\n    \\t\\tif ( object.hasPositions ) {\\n\\n    \\t\\t\\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.position );\\n    \\t\\t\\t_gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );\\n\\n    \\t\\t\\tstate.enableAttribute( attributes.position );\\n    \\t\\t\\t_gl.vertexAttribPointer( attributes.position, 3, _gl.FLOAT, false, 0, 0 );\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( object.hasNormals ) {\\n\\n    \\t\\t\\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.normal );\\n\\n    \\t\\t\\tif ( ! material.isMeshPhongMaterial &&\\n    \\t\\t\\t     ! material.isMeshStandardMaterial &&\\n    \\t\\t\\t       material.shading === FlatShading ) {\\n\\n    \\t\\t\\t\\tfor ( var i = 0, l = object.count * 3; i < l; i += 9 ) {\\n\\n    \\t\\t\\t\\t\\tvar array = object.normalArray;\\n\\n    \\t\\t\\t\\t\\tvar nx = ( array[ i + 0 ] + array[ i + 3 ] + array[ i + 6 ] ) / 3;\\n    \\t\\t\\t\\t\\tvar ny = ( array[ i + 1 ] + array[ i + 4 ] + array[ i + 7 ] ) / 3;\\n    \\t\\t\\t\\t\\tvar nz = ( array[ i + 2 ] + array[ i + 5 ] + array[ i + 8 ] ) / 3;\\n\\n    \\t\\t\\t\\t\\tarray[ i + 0 ] = nx;\\n    \\t\\t\\t\\t\\tarray[ i + 1 ] = ny;\\n    \\t\\t\\t\\t\\tarray[ i + 2 ] = nz;\\n\\n    \\t\\t\\t\\t\\tarray[ i + 3 ] = nx;\\n    \\t\\t\\t\\t\\tarray[ i + 4 ] = ny;\\n    \\t\\t\\t\\t\\tarray[ i + 5 ] = nz;\\n\\n    \\t\\t\\t\\t\\tarray[ i + 6 ] = nx;\\n    \\t\\t\\t\\t\\tarray[ i + 7 ] = ny;\\n    \\t\\t\\t\\t\\tarray[ i + 8 ] = nz;\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\t_gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );\\n\\n    \\t\\t\\tstate.enableAttribute( attributes.normal );\\n\\n    \\t\\t\\t_gl.vertexAttribPointer( attributes.normal, 3, _gl.FLOAT, false, 0, 0 );\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( object.hasUvs && material.map ) {\\n\\n    \\t\\t\\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.uv );\\n    \\t\\t\\t_gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );\\n\\n    \\t\\t\\tstate.enableAttribute( attributes.uv );\\n\\n    \\t\\t\\t_gl.vertexAttribPointer( attributes.uv, 2, _gl.FLOAT, false, 0, 0 );\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( object.hasColors && material.vertexColors !== NoColors ) {\\n\\n    \\t\\t\\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.color );\\n    \\t\\t\\t_gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );\\n\\n    \\t\\t\\tstate.enableAttribute( attributes.color );\\n\\n    \\t\\t\\t_gl.vertexAttribPointer( attributes.color, 3, _gl.FLOAT, false, 0, 0 );\\n\\n    \\t\\t}\\n\\n    \\t\\tstate.disableUnusedAttributes();\\n\\n    \\t\\t_gl.drawArrays( _gl.TRIANGLES, 0, object.count );\\n\\n    \\t\\tobject.count = 0;\\n\\n    \\t};\\n\\n    \\tthis.renderBufferDirect = function ( camera, fog, geometry, material, object, group ) {\\n\\n    \\t\\tsetMaterial( material );\\n\\n    \\t\\tvar program = setProgram( camera, fog, material, object );\\n\\n    \\t\\tvar updateBuffers = false;\\n    \\t\\tvar geometryProgram = geometry.id + '_' + program.id + '_' + material.wireframe;\\n\\n    \\t\\tif ( geometryProgram !== _currentGeometryProgram ) {\\n\\n    \\t\\t\\t_currentGeometryProgram = geometryProgram;\\n    \\t\\t\\tupdateBuffers = true;\\n\\n    \\t\\t}\\n\\n    \\t\\t// morph targets\\n\\n    \\t\\tvar morphTargetInfluences = object.morphTargetInfluences;\\n\\n    \\t\\tif ( morphTargetInfluences !== undefined ) {\\n\\n    \\t\\t\\tvar activeInfluences = [];\\n\\n    \\t\\t\\tfor ( var i = 0, l = morphTargetInfluences.length; i < l; i ++ ) {\\n\\n    \\t\\t\\t\\tvar influence = morphTargetInfluences[ i ];\\n    \\t\\t\\t\\tactiveInfluences.push( [ influence, i ] );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tactiveInfluences.sort( absNumericalSort );\\n\\n    \\t\\t\\tif ( activeInfluences.length > 8 ) {\\n\\n    \\t\\t\\t\\tactiveInfluences.length = 8;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tvar morphAttributes = geometry.morphAttributes;\\n\\n    \\t\\t\\tfor ( var i = 0, l = activeInfluences.length; i < l; i ++ ) {\\n\\n    \\t\\t\\t\\tvar influence = activeInfluences[ i ];\\n    \\t\\t\\t\\tmorphInfluences[ i ] = influence[ 0 ];\\n\\n    \\t\\t\\t\\tif ( influence[ 0 ] !== 0 ) {\\n\\n    \\t\\t\\t\\t\\tvar index = influence[ 1 ];\\n\\n    \\t\\t\\t\\t\\tif ( material.morphTargets === true && morphAttributes.position ) geometry.addAttribute( 'morphTarget' + i, morphAttributes.position[ index ] );\\n    \\t\\t\\t\\t\\tif ( material.morphNormals === true && morphAttributes.normal ) geometry.addAttribute( 'morphNormal' + i, morphAttributes.normal[ index ] );\\n\\n    \\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\tif ( material.morphTargets === true ) geometry.removeAttribute( 'morphTarget' + i );\\n    \\t\\t\\t\\t\\tif ( material.morphNormals === true ) geometry.removeAttribute( 'morphNormal' + i );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tfor ( var i = activeInfluences.length, il = morphInfluences.length; i < il; i ++ ) {\\n\\n    \\t\\t\\t\\tmorphInfluences[ i ] = 0.0;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tprogram.getUniforms().setValue(\\n    \\t\\t\\t\\t\\t_gl, 'morphTargetInfluences', morphInfluences );\\n\\n    \\t\\t\\tupdateBuffers = true;\\n\\n    \\t\\t}\\n\\n    \\t\\t//\\n\\n    \\t\\tvar index = geometry.index;\\n    \\t\\tvar position = geometry.attributes.position;\\n    \\t\\tvar rangeFactor = 1;\\n\\n    \\t\\tif ( material.wireframe === true ) {\\n\\n    \\t\\t\\tindex = objects.getWireframeAttribute( geometry );\\n    \\t\\t\\trangeFactor = 2;\\n\\n    \\t\\t}\\n\\n    \\t\\tvar renderer;\\n\\n    \\t\\tif ( index !== null ) {\\n\\n    \\t\\t\\trenderer = indexedBufferRenderer;\\n    \\t\\t\\trenderer.setIndex( index );\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\trenderer = bufferRenderer;\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( updateBuffers ) {\\n\\n    \\t\\t\\tsetupVertexAttributes( material, program, geometry );\\n\\n    \\t\\t\\tif ( index !== null ) {\\n\\n    \\t\\t\\t\\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, objects.getAttributeBuffer( index ) );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\t//\\n\\n    \\t\\tvar dataCount = 0;\\n\\n    \\t\\tif ( index !== null ) {\\n\\n    \\t\\t\\tdataCount = index.count;\\n\\n    \\t\\t} else if ( position !== undefined ) {\\n\\n    \\t\\t\\tdataCount = position.count;\\n\\n    \\t\\t}\\n\\n    \\t\\tvar rangeStart = geometry.drawRange.start * rangeFactor;\\n    \\t\\tvar rangeCount = geometry.drawRange.count * rangeFactor;\\n\\n    \\t\\tvar groupStart = group !== null ? group.start * rangeFactor : 0;\\n    \\t\\tvar groupCount = group !== null ? group.count * rangeFactor : Infinity;\\n\\n    \\t\\tvar drawStart = Math.max( rangeStart, groupStart );\\n    \\t\\tvar drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\\n\\n    \\t\\tvar drawCount = Math.max( 0, drawEnd - drawStart + 1 );\\n\\n    \\t\\tif ( drawCount === 0 ) return;\\n\\n    \\t\\t//\\n\\n    \\t\\tif ( object.isMesh ) {\\n\\n    \\t\\t\\tif ( material.wireframe === true ) {\\n\\n    \\t\\t\\t\\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\\n    \\t\\t\\t\\trenderer.setMode( _gl.LINES );\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\tswitch ( object.drawMode ) {\\n\\n    \\t\\t\\t\\t\\tcase TrianglesDrawMode:\\n    \\t\\t\\t\\t\\t\\trenderer.setMode( _gl.TRIANGLES );\\n    \\t\\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\t\\tcase TriangleStripDrawMode:\\n    \\t\\t\\t\\t\\t\\trenderer.setMode( _gl.TRIANGLE_STRIP );\\n    \\t\\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\t\\tcase TriangleFanDrawMode:\\n    \\t\\t\\t\\t\\t\\trenderer.setMode( _gl.TRIANGLE_FAN );\\n    \\t\\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n\\n    \\t\\t} else if ( object.isLine ) {\\n\\n    \\t\\t\\tvar lineWidth = material.linewidth;\\n\\n    \\t\\t\\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\\n\\n    \\t\\t\\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\\n\\n    \\t\\t\\tif ( object.isLineSegments ) {\\n\\n    \\t\\t\\t\\trenderer.setMode( _gl.LINES );\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\trenderer.setMode( _gl.LINE_STRIP );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t} else if ( object.isPoints ) {\\n\\n    \\t\\t\\trenderer.setMode( _gl.POINTS );\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( geometry && geometry.isInstancedBufferGeometry ) {\\n\\n    \\t\\t\\tif ( geometry.maxInstancedCount > 0 ) {\\n\\n    \\t\\t\\t\\trenderer.renderInstances( geometry, drawStart, drawCount );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\trenderer.render( drawStart, drawCount );\\n\\n    \\t\\t}\\n\\n    \\t};\\n\\n    \\tfunction setupVertexAttributes( material, program, geometry, startIndex ) {\\n\\n    \\t\\tvar extension;\\n\\n    \\t\\tif ( geometry && geometry.isInstancedBufferGeometry ) {\\n\\n    \\t\\t\\textension = extensions.get( 'ANGLE_instanced_arrays' );\\n\\n    \\t\\t\\tif ( extension === null ) {\\n\\n    \\t\\t\\t\\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\\n    \\t\\t\\t\\treturn;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( startIndex === undefined ) startIndex = 0;\\n\\n    \\t\\tstate.initAttributes();\\n\\n    \\t\\tvar geometryAttributes = geometry.attributes;\\n\\n    \\t\\tvar programAttributes = program.getAttributes();\\n\\n    \\t\\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\\n\\n    \\t\\tfor ( var name in programAttributes ) {\\n\\n    \\t\\t\\tvar programAttribute = programAttributes[ name ];\\n\\n    \\t\\t\\tif ( programAttribute >= 0 ) {\\n\\n    \\t\\t\\t\\tvar geometryAttribute = geometryAttributes[ name ];\\n\\n    \\t\\t\\t\\tif ( geometryAttribute !== undefined ) {\\n\\n    \\t\\t\\t\\t\\tvar type = _gl.FLOAT;\\n    \\t\\t\\t\\t\\tvar array = geometryAttribute.array;\\n    \\t\\t\\t\\t\\tvar normalized = geometryAttribute.normalized;\\n\\n    \\t\\t\\t\\t\\tif ( array instanceof Float32Array ) {\\n\\n    \\t\\t\\t\\t\\t\\ttype = _gl.FLOAT;\\n\\n    \\t\\t\\t\\t\\t} else if ( array instanceof Float64Array ) {\\n\\n    \\t\\t\\t\\t\\t\\tconsole.warn( \\\"Unsupported data buffer format: Float64Array\\\" );\\n\\n    \\t\\t\\t\\t\\t} else if ( array instanceof Uint16Array ) {\\n\\n    \\t\\t\\t\\t\\t\\ttype = _gl.UNSIGNED_SHORT;\\n\\n    \\t\\t\\t\\t\\t} else if ( array instanceof Int16Array ) {\\n\\n    \\t\\t\\t\\t\\t\\ttype = _gl.SHORT;\\n\\n    \\t\\t\\t\\t\\t} else if ( array instanceof Uint32Array ) {\\n\\n    \\t\\t\\t\\t\\t\\ttype = _gl.UNSIGNED_INT;\\n\\n    \\t\\t\\t\\t\\t} else if ( array instanceof Int32Array ) {\\n\\n    \\t\\t\\t\\t\\t\\ttype = _gl.INT;\\n\\n    \\t\\t\\t\\t\\t} else if ( array instanceof Int8Array ) {\\n\\n    \\t\\t\\t\\t\\t\\ttype = _gl.BYTE;\\n\\n    \\t\\t\\t\\t\\t} else if ( array instanceof Uint8Array ) {\\n\\n    \\t\\t\\t\\t\\t\\ttype = _gl.UNSIGNED_BYTE;\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\tvar size = geometryAttribute.itemSize;\\n    \\t\\t\\t\\t\\tvar buffer = objects.getAttributeBuffer( geometryAttribute );\\n\\n    \\t\\t\\t\\t\\tif ( geometryAttribute && geometryAttribute.isInterleavedBufferAttribute ) {\\n\\n    \\t\\t\\t\\t\\t\\tvar data = geometryAttribute.data;\\n    \\t\\t\\t\\t\\t\\tvar stride = data.stride;\\n    \\t\\t\\t\\t\\t\\tvar offset = geometryAttribute.offset;\\n\\n    \\t\\t\\t\\t\\t\\tif ( data && data.isInstancedInterleavedBuffer ) {\\n\\n    \\t\\t\\t\\t\\t\\t\\tstate.enableAttributeAndDivisor( programAttribute, data.meshPerAttribute, extension );\\n\\n    \\t\\t\\t\\t\\t\\t\\tif ( geometry.maxInstancedCount === undefined ) {\\n\\n    \\t\\t\\t\\t\\t\\t\\t\\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\\n\\n    \\t\\t\\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\t\\t\\tstate.enableAttribute( programAttribute );\\n\\n    \\t\\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\t\\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\\n    \\t\\t\\t\\t\\t\\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, stride * data.array.BYTES_PER_ELEMENT, ( startIndex * stride + offset ) * data.array.BYTES_PER_ELEMENT );\\n\\n    \\t\\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\t\\tif ( geometryAttribute && geometryAttribute.isInstancedBufferAttribute ) {\\n\\n    \\t\\t\\t\\t\\t\\t\\tstate.enableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute, extension );\\n\\n    \\t\\t\\t\\t\\t\\t\\tif ( geometry.maxInstancedCount === undefined ) {\\n\\n    \\t\\t\\t\\t\\t\\t\\t\\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\\n\\n    \\t\\t\\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\t\\t\\tstate.enableAttribute( programAttribute );\\n\\n    \\t\\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\t\\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\\n    \\t\\t\\t\\t\\t\\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, 0, startIndex * size * geometryAttribute.array.BYTES_PER_ELEMENT );\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t} else if ( materialDefaultAttributeValues !== undefined ) {\\n\\n    \\t\\t\\t\\t\\tvar value = materialDefaultAttributeValues[ name ];\\n\\n    \\t\\t\\t\\t\\tif ( value !== undefined ) {\\n\\n    \\t\\t\\t\\t\\t\\tswitch ( value.length ) {\\n\\n    \\t\\t\\t\\t\\t\\t\\tcase 2:\\n    \\t\\t\\t\\t\\t\\t\\t\\t_gl.vertexAttrib2fv( programAttribute, value );\\n    \\t\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\t\\t\\t\\tcase 3:\\n    \\t\\t\\t\\t\\t\\t\\t\\t_gl.vertexAttrib3fv( programAttribute, value );\\n    \\t\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\t\\t\\t\\tcase 4:\\n    \\t\\t\\t\\t\\t\\t\\t\\t_gl.vertexAttrib4fv( programAttribute, value );\\n    \\t\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\t\\t\\t\\tdefault:\\n    \\t\\t\\t\\t\\t\\t\\t\\t_gl.vertexAttrib1fv( programAttribute, value );\\n\\n    \\t\\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\tstate.disableUnusedAttributes();\\n\\n    \\t}\\n\\n    \\t// Sorting\\n\\n    \\tfunction absNumericalSort( a, b ) {\\n\\n    \\t\\treturn Math.abs( b[ 0 ] ) - Math.abs( a[ 0 ] );\\n\\n    \\t}\\n\\n    \\tfunction painterSortStable( a, b ) {\\n\\n    \\t\\tif ( a.object.renderOrder !== b.object.renderOrder ) {\\n\\n    \\t\\t\\treturn a.object.renderOrder - b.object.renderOrder;\\n\\n    \\t\\t} else if ( a.material.program && b.material.program && a.material.program !== b.material.program ) {\\n\\n    \\t\\t\\treturn a.material.program.id - b.material.program.id;\\n\\n    \\t\\t} else if ( a.material.id !== b.material.id ) {\\n\\n    \\t\\t\\treturn a.material.id - b.material.id;\\n\\n    \\t\\t} else if ( a.z !== b.z ) {\\n\\n    \\t\\t\\treturn a.z - b.z;\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\treturn a.id - b.id;\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\tfunction reversePainterSortStable( a, b ) {\\n\\n    \\t\\tif ( a.object.renderOrder !== b.object.renderOrder ) {\\n\\n    \\t\\t\\treturn a.object.renderOrder - b.object.renderOrder;\\n\\n    \\t\\t} if ( a.z !== b.z ) {\\n\\n    \\t\\t\\treturn b.z - a.z;\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\treturn a.id - b.id;\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\t// Rendering\\n\\n    \\tthis.render = function ( scene, camera, renderTarget, forceClear ) {\\n\\n    \\t\\tif ( camera !== undefined && camera.isCamera !== true ) {\\n\\n    \\t\\t\\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\\n    \\t\\t\\treturn;\\n\\n    \\t\\t}\\n\\n    \\t\\tvar fog = scene.fog;\\n\\n    \\t\\t// reset caching for this frame\\n\\n    \\t\\t_currentGeometryProgram = '';\\n    \\t\\t_currentMaterialId = - 1;\\n    \\t\\t_currentCamera = null;\\n\\n    \\t\\t// update scene graph\\n\\n    \\t\\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\\n\\n    \\t\\t// update camera matrices and frustum\\n\\n    \\t\\tif ( camera.parent === null ) camera.updateMatrixWorld();\\n\\n    \\t\\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\\n\\n    \\t\\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\\n    \\t\\t_frustum.setFromMatrix( _projScreenMatrix );\\n\\n    \\t\\tlights.length = 0;\\n\\n    \\t\\topaqueObjectsLastIndex = - 1;\\n    \\t\\ttransparentObjectsLastIndex = - 1;\\n\\n    \\t\\tsprites.length = 0;\\n    \\t\\tlensFlares.length = 0;\\n\\n    \\t\\t_localClippingEnabled = this.localClippingEnabled;\\n    \\t\\t_clippingEnabled = _clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\\n\\n    \\t\\tprojectObject( scene, camera );\\n\\n    \\t\\topaqueObjects.length = opaqueObjectsLastIndex + 1;\\n    \\t\\ttransparentObjects.length = transparentObjectsLastIndex + 1;\\n\\n    \\t\\tif ( _this.sortObjects === true ) {\\n\\n    \\t\\t\\topaqueObjects.sort( painterSortStable );\\n    \\t\\t\\ttransparentObjects.sort( reversePainterSortStable );\\n\\n    \\t\\t}\\n\\n    \\t\\t//\\n\\n    \\t\\tif ( _clippingEnabled ) _clipping.beginShadows();\\n\\n    \\t\\tsetupShadows( lights );\\n\\n    \\t\\tshadowMap.render( scene, camera );\\n\\n    \\t\\tsetupLights( lights, camera );\\n\\n    \\t\\tif ( _clippingEnabled ) _clipping.endShadows();\\n\\n    \\t\\t//\\n\\n    \\t\\t_infoRender.calls = 0;\\n    \\t\\t_infoRender.vertices = 0;\\n    \\t\\t_infoRender.faces = 0;\\n    \\t\\t_infoRender.points = 0;\\n\\n    \\t\\tif ( renderTarget === undefined ) {\\n\\n    \\t\\t\\trenderTarget = null;\\n\\n    \\t\\t}\\n\\n    \\t\\tthis.setRenderTarget( renderTarget );\\n\\n    \\t\\t//\\n\\n    \\t\\tvar background = scene.background;\\n\\n    \\t\\tif ( background === null ) {\\n\\n    \\t\\t\\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\\n\\n    \\t\\t} else if ( background && background.isColor ) {\\n\\n    \\t\\t\\tglClearColor( background.r, background.g, background.b, 1 );\\n    \\t\\t\\tforceClear = true;\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( this.autoClear || forceClear ) {\\n\\n    \\t\\t\\tthis.clear( this.autoClearColor, this.autoClearDepth, this.autoClearStencil );\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( background && background.isCubeTexture ) {\\n\\n    \\t\\t\\tbackgroundCamera2.projectionMatrix.copy( camera.projectionMatrix );\\n\\n    \\t\\t\\tbackgroundCamera2.matrixWorld.extractRotation( camera.matrixWorld );\\n    \\t\\t\\tbackgroundCamera2.matrixWorldInverse.getInverse( backgroundCamera2.matrixWorld );\\n\\n    \\t\\t\\tbackgroundBoxMesh.material.uniforms[ \\\"tCube\\\" ].value = background;\\n    \\t\\t\\tbackgroundBoxMesh.modelViewMatrix.multiplyMatrices( backgroundCamera2.matrixWorldInverse, backgroundBoxMesh.matrixWorld );\\n\\n    \\t\\t\\tobjects.update( backgroundBoxMesh );\\n\\n    \\t\\t\\t_this.renderBufferDirect( backgroundCamera2, null, backgroundBoxMesh.geometry, backgroundBoxMesh.material, backgroundBoxMesh, null );\\n\\n    \\t\\t} else if ( background && background.isTexture ) {\\n\\n    \\t\\t\\tbackgroundPlaneMesh.material.map = background;\\n\\n    \\t\\t\\tobjects.update( backgroundPlaneMesh );\\n\\n    \\t\\t\\t_this.renderBufferDirect( backgroundCamera, null, backgroundPlaneMesh.geometry, backgroundPlaneMesh.material, backgroundPlaneMesh, null );\\n\\n    \\t\\t}\\n\\n    \\t\\t//\\n\\n    \\t\\tif ( scene.overrideMaterial ) {\\n\\n    \\t\\t\\tvar overrideMaterial = scene.overrideMaterial;\\n\\n    \\t\\t\\trenderObjects( opaqueObjects, camera, fog, overrideMaterial );\\n    \\t\\t\\trenderObjects( transparentObjects, camera, fog, overrideMaterial );\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\t// opaque pass (front-to-back order)\\n\\n    \\t\\t\\tstate.setBlending( NoBlending );\\n    \\t\\t\\trenderObjects( opaqueObjects, camera, fog );\\n\\n    \\t\\t\\t// transparent pass (back-to-front order)\\n\\n    \\t\\t\\trenderObjects( transparentObjects, camera, fog );\\n\\n    \\t\\t}\\n\\n    \\t\\t// custom render plugins (post pass)\\n\\n    \\t\\tspritePlugin.render( scene, camera );\\n    \\t\\tlensFlarePlugin.render( scene, camera, _currentViewport );\\n\\n    \\t\\t// Generate mipmap if we're using any kind of mipmap filtering\\n\\n    \\t\\tif ( renderTarget ) {\\n\\n    \\t\\t\\ttextures.updateRenderTargetMipmap( renderTarget );\\n\\n    \\t\\t}\\n\\n    \\t\\t// Ensure depth buffer writing is enabled so it can be cleared on next render\\n\\n    \\t\\tstate.setDepthTest( true );\\n    \\t\\tstate.setDepthWrite( true );\\n    \\t\\tstate.setColorWrite( true );\\n\\n    \\t\\t// _gl.finish();\\n\\n    \\t};\\n\\n    \\tfunction pushRenderItem( object, geometry, material, z, group ) {\\n\\n    \\t\\tvar array, index;\\n\\n    \\t\\t// allocate the next position in the appropriate array\\n\\n    \\t\\tif ( material.transparent ) {\\n\\n    \\t\\t\\tarray = transparentObjects;\\n    \\t\\t\\tindex = ++ transparentObjectsLastIndex;\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\tarray = opaqueObjects;\\n    \\t\\t\\tindex = ++ opaqueObjectsLastIndex;\\n\\n    \\t\\t}\\n\\n    \\t\\t// recycle existing render item or grow the array\\n\\n    \\t\\tvar renderItem = array[ index ];\\n\\n    \\t\\tif ( renderItem !== undefined ) {\\n\\n    \\t\\t\\trenderItem.id = object.id;\\n    \\t\\t\\trenderItem.object = object;\\n    \\t\\t\\trenderItem.geometry = geometry;\\n    \\t\\t\\trenderItem.material = material;\\n    \\t\\t\\trenderItem.z = _vector3.z;\\n    \\t\\t\\trenderItem.group = group;\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\trenderItem = {\\n    \\t\\t\\t\\tid: object.id,\\n    \\t\\t\\t\\tobject: object,\\n    \\t\\t\\t\\tgeometry: geometry,\\n    \\t\\t\\t\\tmaterial: material,\\n    \\t\\t\\t\\tz: _vector3.z,\\n    \\t\\t\\t\\tgroup: group\\n    \\t\\t\\t};\\n\\n    \\t\\t\\t// assert( index === array.length );\\n    \\t\\t\\tarray.push( renderItem );\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\t// TODO Duplicated code (Frustum)\\n\\n    \\tfunction isObjectViewable( object ) {\\n\\n    \\t\\tvar geometry = object.geometry;\\n\\n    \\t\\tif ( geometry.boundingSphere === null )\\n    \\t\\t\\tgeometry.computeBoundingSphere();\\n\\n    \\t\\t_sphere.copy( geometry.boundingSphere ).\\n    \\t\\t\\tapplyMatrix4( object.matrixWorld );\\n\\n    \\t\\treturn isSphereViewable( _sphere );\\n\\n    \\t}\\n\\n    \\tfunction isSpriteViewable( sprite ) {\\n\\n    \\t\\t_sphere.center.set( 0, 0, 0 );\\n    \\t\\t_sphere.radius = 0.7071067811865476;\\n    \\t\\t_sphere.applyMatrix4( sprite.matrixWorld );\\n\\n    \\t\\treturn isSphereViewable( _sphere );\\n\\n    \\t}\\n\\n    \\tfunction isSphereViewable( sphere ) {\\n\\n    \\t\\tif ( ! _frustum.intersectsSphere( sphere ) ) return false;\\n\\n    \\t\\tvar numPlanes = _clipping.numPlanes;\\n\\n    \\t\\tif ( numPlanes === 0 ) return true;\\n\\n    \\t\\tvar planes = _this.clippingPlanes,\\n\\n    \\t\\t\\tcenter = sphere.center,\\n    \\t\\t\\tnegRad = - sphere.radius,\\n    \\t\\t\\ti = 0;\\n\\n    \\t\\tdo {\\n\\n    \\t\\t\\t// out when deeper than radius in the negative halfspace\\n    \\t\\t\\tif ( planes[ i ].distanceToPoint( center ) < negRad ) return false;\\n\\n    \\t\\t} while ( ++ i !== numPlanes );\\n\\n    \\t\\treturn true;\\n\\n    \\t}\\n\\n    \\tfunction projectObject( object, camera ) {\\n\\n    \\t\\tif ( object.visible === false ) return;\\n\\n    \\t\\tvar visible = ( object.layers.mask & camera.layers.mask ) !== 0;\\n\\n    \\t\\tif ( visible ) {\\n\\n    \\t\\t\\tif ( object.isLight ) {\\n\\n    \\t\\t\\t\\tlights.push( object );\\n\\n    \\t\\t\\t} else if ( object.isSprite ) {\\n\\n    \\t\\t\\t\\tif ( object.frustumCulled === false || isSpriteViewable( object ) === true ) {\\n\\n    \\t\\t\\t\\t\\tsprites.push( object );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t} else if ( object.isLensFlare ) {\\n\\n    \\t\\t\\t\\tlensFlares.push( object );\\n\\n    \\t\\t\\t} else if ( object.isImmediateRenderObject ) {\\n\\n    \\t\\t\\t\\tif ( _this.sortObjects === true ) {\\n\\n    \\t\\t\\t\\t\\t_vector3.setFromMatrixPosition( object.matrixWorld );\\n    \\t\\t\\t\\t\\t_vector3.applyProjection( _projScreenMatrix );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\tpushRenderItem( object, null, object.material, _vector3.z, null );\\n\\n    \\t\\t\\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\\n\\n    \\t\\t\\t\\tif ( object.isSkinnedMesh ) {\\n\\n    \\t\\t\\t\\t\\tobject.skeleton.update();\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\tif ( object.frustumCulled === false || isObjectViewable( object ) === true ) {\\n\\n    \\t\\t\\t\\t\\tvar material = object.material;\\n\\n    \\t\\t\\t\\t\\tif ( material.visible === true ) {\\n\\n    \\t\\t\\t\\t\\t\\tif ( _this.sortObjects === true ) {\\n\\n    \\t\\t\\t\\t\\t\\t\\t_vector3.setFromMatrixPosition( object.matrixWorld );\\n    \\t\\t\\t\\t\\t\\t\\t_vector3.applyProjection( _projScreenMatrix );\\n\\n    \\t\\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\t\\tvar geometry = objects.update( object );\\n\\n    \\t\\t\\t\\t\\t\\tif ( material.isMultiMaterial ) {\\n\\n    \\t\\t\\t\\t\\t\\t\\tvar groups = geometry.groups;\\n    \\t\\t\\t\\t\\t\\t\\tvar materials = material.materials;\\n\\n    \\t\\t\\t\\t\\t\\t\\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\\n\\n    \\t\\t\\t\\t\\t\\t\\t\\tvar group = groups[ i ];\\n    \\t\\t\\t\\t\\t\\t\\t\\tvar groupMaterial = materials[ group.materialIndex ];\\n\\n    \\t\\t\\t\\t\\t\\t\\t\\tif ( groupMaterial.visible === true ) {\\n\\n    \\t\\t\\t\\t\\t\\t\\t\\t\\tpushRenderItem( object, geometry, groupMaterial, _vector3.z, group );\\n\\n    \\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\t\\t\\tpushRenderItem( object, geometry, material, _vector3.z, null );\\n\\n    \\t\\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\tvar children = object.children;\\n\\n    \\t\\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\\n\\n    \\t\\t\\tprojectObject( children[ i ], camera );\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\tfunction renderObjects( renderList, camera, fog, overrideMaterial ) {\\n\\n    \\t\\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\\n\\n    \\t\\t\\tvar renderItem = renderList[ i ];\\n\\n    \\t\\t\\tvar object = renderItem.object;\\n    \\t\\t\\tvar geometry = renderItem.geometry;\\n    \\t\\t\\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\\n    \\t\\t\\tvar group = renderItem.group;\\n\\n    \\t\\t\\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\\n    \\t\\t\\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\\n\\n    \\t\\t\\tif ( object.isImmediateRenderObject ) {\\n\\n    \\t\\t\\t\\tsetMaterial( material );\\n\\n    \\t\\t\\t\\tvar program = setProgram( camera, fog, material, object );\\n\\n    \\t\\t\\t\\t_currentGeometryProgram = '';\\n\\n    \\t\\t\\t\\tobject.render( function ( object ) {\\n\\n    \\t\\t\\t\\t\\t_this.renderBufferImmediate( object, program, material );\\n\\n    \\t\\t\\t\\t} );\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\tif ( object.onBeforeRender !== null ) object.onBeforeRender();\\n\\n    \\t\\t\\t\\t_this.renderBufferDirect( camera, fog, geometry, material, object, group );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\tfunction initMaterial( material, fog, object ) {\\n\\n    \\t\\tvar materialProperties = properties.get( material );\\n\\n    \\t\\tvar parameters = programCache.getParameters(\\n    \\t\\t\\t\\tmaterial, _lights, fog, _clipping.numPlanes, object );\\n\\n    \\t\\tvar code = programCache.getProgramCode( material, parameters );\\n\\n    \\t\\tvar program = materialProperties.program;\\n    \\t\\tvar programChange = true;\\n\\n    \\t\\tif ( program === undefined ) {\\n\\n    \\t\\t\\t// new material\\n    \\t\\t\\tmaterial.addEventListener( 'dispose', onMaterialDispose );\\n\\n    \\t\\t} else if ( program.code !== code ) {\\n\\n    \\t\\t\\t// changed glsl or parameters\\n    \\t\\t\\treleaseMaterialProgramReference( material );\\n\\n    \\t\\t} else if ( parameters.shaderID !== undefined ) {\\n\\n    \\t\\t\\t// same glsl and uniform list\\n    \\t\\t\\treturn;\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\t// only rebuild uniform list\\n    \\t\\t\\tprogramChange = false;\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( programChange ) {\\n\\n    \\t\\t\\tif ( parameters.shaderID ) {\\n\\n    \\t\\t\\t\\tvar shader = ShaderLib[ parameters.shaderID ];\\n\\n    \\t\\t\\t\\tmaterialProperties.__webglShader = {\\n    \\t\\t\\t\\t\\tname: material.type,\\n    \\t\\t\\t\\t\\tuniforms: exports.UniformsUtils.clone( shader.uniforms ),\\n    \\t\\t\\t\\t\\tvertexShader: shader.vertexShader,\\n    \\t\\t\\t\\t\\tfragmentShader: shader.fragmentShader\\n    \\t\\t\\t\\t};\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\tmaterialProperties.__webglShader = {\\n    \\t\\t\\t\\t\\tname: material.type,\\n    \\t\\t\\t\\t\\tuniforms: material.uniforms,\\n    \\t\\t\\t\\t\\tvertexShader: material.vertexShader,\\n    \\t\\t\\t\\t\\tfragmentShader: material.fragmentShader\\n    \\t\\t\\t\\t};\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tmaterial.__webglShader = materialProperties.__webglShader;\\n\\n    \\t\\t\\tprogram = programCache.acquireProgram( material, parameters, code );\\n\\n    \\t\\t\\tmaterialProperties.program = program;\\n    \\t\\t\\tmaterial.program = program;\\n\\n    \\t\\t}\\n\\n    \\t\\tvar attributes = program.getAttributes();\\n\\n    \\t\\tif ( material.morphTargets ) {\\n\\n    \\t\\t\\tmaterial.numSupportedMorphTargets = 0;\\n\\n    \\t\\t\\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\\n\\n    \\t\\t\\t\\tif ( attributes[ 'morphTarget' + i ] >= 0 ) {\\n\\n    \\t\\t\\t\\t\\tmaterial.numSupportedMorphTargets ++;\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( material.morphNormals ) {\\n\\n    \\t\\t\\tmaterial.numSupportedMorphNormals = 0;\\n\\n    \\t\\t\\tfor ( var i = 0; i < _this.maxMorphNormals; i ++ ) {\\n\\n    \\t\\t\\t\\tif ( attributes[ 'morphNormal' + i ] >= 0 ) {\\n\\n    \\t\\t\\t\\t\\tmaterial.numSupportedMorphNormals ++;\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\tvar uniforms = materialProperties.__webglShader.uniforms;\\n\\n    \\t\\tif ( ! material.isShaderMaterial &&\\n    \\t\\t     ! material.isRawShaderMaterial ||\\n    \\t\\t       material.clipping === true ) {\\n\\n    \\t\\t\\tmaterialProperties.numClippingPlanes = _clipping.numPlanes;\\n    \\t\\t\\tuniforms.clippingPlanes = _clipping.uniform;\\n\\n    \\t\\t}\\n\\n    \\t\\tmaterialProperties.fog = fog;\\n\\n    \\t\\t// store the light setup it was created for\\n\\n    \\t\\tmaterialProperties.lightsHash = _lights.hash;\\n\\n    \\t\\tif ( material.lights ) {\\n\\n    \\t\\t\\t// wire up the material to this renderer's lighting state\\n\\n    \\t\\t\\tuniforms.ambientLightColor.value = _lights.ambient;\\n    \\t\\t\\tuniforms.directionalLights.value = _lights.directional;\\n    \\t\\t\\tuniforms.spotLights.value = _lights.spot;\\n    \\t\\t\\tuniforms.pointLights.value = _lights.point;\\n    \\t\\t\\tuniforms.hemisphereLights.value = _lights.hemi;\\n\\n    \\t\\t\\tuniforms.directionalShadowMap.value = _lights.directionalShadowMap;\\n    \\t\\t\\tuniforms.directionalShadowMatrix.value = _lights.directionalShadowMatrix;\\n    \\t\\t\\tuniforms.spotShadowMap.value = _lights.spotShadowMap;\\n    \\t\\t\\tuniforms.spotShadowMatrix.value = _lights.spotShadowMatrix;\\n    \\t\\t\\tuniforms.pointShadowMap.value = _lights.pointShadowMap;\\n    \\t\\t\\tuniforms.pointShadowMatrix.value = _lights.pointShadowMatrix;\\n\\n    \\t\\t}\\n\\n    \\t\\tvar progUniforms = materialProperties.program.getUniforms(),\\n    \\t\\t\\tuniformsList =\\n    \\t\\t\\t\\t\\tWebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\\n\\n    \\t\\tmaterialProperties.uniformsList = uniformsList;\\n    \\t\\tmaterialProperties.dynamicUniforms =\\n    \\t\\t\\t\\tWebGLUniforms.splitDynamic( uniformsList, uniforms );\\n\\n    \\t}\\n\\n    \\tfunction setMaterial( material ) {\\n\\n    \\t\\tmaterial.side === DoubleSide\\n    \\t\\t\\t? state.disable( _gl.CULL_FACE )\\n    \\t\\t\\t: state.enable( _gl.CULL_FACE );\\n\\n    \\t\\tstate.setFlipSided( material.side === BackSide );\\n\\n    \\t\\tmaterial.transparent === true\\n    \\t\\t\\t? state.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha )\\n    \\t\\t\\t: state.setBlending( NoBlending );\\n\\n    \\t\\tstate.setDepthFunc( material.depthFunc );\\n    \\t\\tstate.setDepthTest( material.depthTest );\\n    \\t\\tstate.setDepthWrite( material.depthWrite );\\n    \\t\\tstate.setColorWrite( material.colorWrite );\\n    \\t\\tstate.setPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\\n\\n    \\t}\\n\\n    \\tfunction setProgram( camera, fog, material, object ) {\\n\\n    \\t\\t_usedTextureUnits = 0;\\n\\n    \\t\\tvar materialProperties = properties.get( material );\\n\\n    \\t\\tif ( _clippingEnabled ) {\\n\\n    \\t\\t\\tif ( _localClippingEnabled || camera !== _currentCamera ) {\\n\\n    \\t\\t\\t\\tvar useCache =\\n    \\t\\t\\t\\t\\t\\tcamera === _currentCamera &&\\n    \\t\\t\\t\\t\\t\\tmaterial.id === _currentMaterialId;\\n\\n    \\t\\t\\t\\t// we might want to call this function with some ClippingGroup\\n    \\t\\t\\t\\t// object instead of the material, once it becomes feasible\\n    \\t\\t\\t\\t// (#8465, #8379)\\n    \\t\\t\\t\\t_clipping.setState(\\n    \\t\\t\\t\\t\\t\\tmaterial.clippingPlanes, material.clipShadows,\\n    \\t\\t\\t\\t\\t\\tcamera, materialProperties, useCache );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( material.needsUpdate === false ) {\\n\\n    \\t\\t\\tif ( materialProperties.program === undefined ) {\\n\\n    \\t\\t\\t\\tmaterial.needsUpdate = true;\\n\\n    \\t\\t\\t} else if ( material.fog && materialProperties.fog !== fog ) {\\n\\n    \\t\\t\\t\\tmaterial.needsUpdate = true;\\n\\n    \\t\\t\\t} else if ( material.lights && materialProperties.lightsHash !== _lights.hash ) {\\n\\n    \\t\\t\\t\\tmaterial.needsUpdate = true;\\n\\n    \\t\\t\\t} else if ( materialProperties.numClippingPlanes !== undefined &&\\n    \\t\\t\\t\\tmaterialProperties.numClippingPlanes !== _clipping.numPlanes ) {\\n\\n    \\t\\t\\t\\tmaterial.needsUpdate = true;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( material.needsUpdate ) {\\n\\n    \\t\\t\\tinitMaterial( material, fog, object );\\n    \\t\\t\\tmaterial.needsUpdate = false;\\n\\n    \\t\\t}\\n\\n    \\t\\tvar refreshProgram = false;\\n    \\t\\tvar refreshMaterial = false;\\n    \\t\\tvar refreshLights = false;\\n\\n    \\t\\tvar program = materialProperties.program,\\n    \\t\\t\\tp_uniforms = program.getUniforms(),\\n    \\t\\t\\tm_uniforms = materialProperties.__webglShader.uniforms;\\n\\n    \\t\\tif ( program.id !== _currentProgram ) {\\n\\n    \\t\\t\\t_gl.useProgram( program.program );\\n    \\t\\t\\t_currentProgram = program.id;\\n\\n    \\t\\t\\trefreshProgram = true;\\n    \\t\\t\\trefreshMaterial = true;\\n    \\t\\t\\trefreshLights = true;\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( material.id !== _currentMaterialId ) {\\n\\n    \\t\\t\\t_currentMaterialId = material.id;\\n\\n    \\t\\t\\trefreshMaterial = true;\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( refreshProgram || camera !== _currentCamera ) {\\n\\n    \\t\\t\\tp_uniforms.set( _gl, camera, 'projectionMatrix' );\\n\\n    \\t\\t\\tif ( capabilities.logarithmicDepthBuffer ) {\\n\\n    \\t\\t\\t\\tp_uniforms.setValue( _gl, 'logDepthBufFC',\\n    \\t\\t\\t\\t\\t\\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\\n\\n    \\t\\t\\t}\\n\\n\\n    \\t\\t\\tif ( camera !== _currentCamera ) {\\n\\n    \\t\\t\\t\\t_currentCamera = camera;\\n\\n    \\t\\t\\t\\t// lighting uniforms depend on the camera so enforce an update\\n    \\t\\t\\t\\t// now, in case this material supports lights - or later, when\\n    \\t\\t\\t\\t// the next material that does gets activated:\\n\\n    \\t\\t\\t\\trefreshMaterial = true;\\t\\t// set to true on material change\\n    \\t\\t\\t\\trefreshLights = true;\\t\\t// remains set until update done\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\t// load material specific uniforms\\n    \\t\\t\\t// (shader material also gets them for the sake of genericity)\\n\\n    \\t\\t\\tif ( material.isShaderMaterial ||\\n    \\t\\t\\t     material.isMeshPhongMaterial ||\\n    \\t\\t\\t     material.isMeshStandardMaterial ||\\n    \\t\\t\\t     material.envMap ) {\\n\\n    \\t\\t\\t\\tvar uCamPos = p_uniforms.map.cameraPosition;\\n\\n    \\t\\t\\t\\tif ( uCamPos !== undefined ) {\\n\\n    \\t\\t\\t\\t\\tuCamPos.setValue( _gl,\\n    \\t\\t\\t\\t\\t\\t\\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tif ( material.isMeshPhongMaterial ||\\n    \\t\\t\\t     material.isMeshLambertMaterial ||\\n    \\t\\t\\t     material.isMeshBasicMaterial ||\\n    \\t\\t\\t     material.isMeshStandardMaterial ||\\n    \\t\\t\\t     material.isShaderMaterial ||\\n    \\t\\t\\t     material.skinning ) {\\n\\n    \\t\\t\\t\\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tp_uniforms.set( _gl, _this, 'toneMappingExposure' );\\n    \\t\\t\\tp_uniforms.set( _gl, _this, 'toneMappingWhitePoint' );\\n\\n    \\t\\t}\\n\\n    \\t\\t// skinning uniforms must be set even if material didn't change\\n    \\t\\t// auto-setting of texture unit for bone texture must go before other textures\\n    \\t\\t// not sure why, but otherwise weird things happen\\n\\n    \\t\\tif ( material.skinning ) {\\n\\n    \\t\\t\\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\\n    \\t\\t\\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\\n\\n    \\t\\t\\tvar skeleton = object.skeleton;\\n\\n    \\t\\t\\tif ( skeleton ) {\\n\\n    \\t\\t\\t\\tif ( capabilities.floatVertexTextures && skeleton.useVertexTexture ) {\\n\\n    \\t\\t\\t\\t\\tp_uniforms.set( _gl, skeleton, 'boneTexture' );\\n    \\t\\t\\t\\t\\tp_uniforms.set( _gl, skeleton, 'boneTextureWidth' );\\n    \\t\\t\\t\\t\\tp_uniforms.set( _gl, skeleton, 'boneTextureHeight' );\\n\\n    \\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\tp_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( refreshMaterial ) {\\n\\n    \\t\\t\\tif ( material.lights ) {\\n\\n    \\t\\t\\t\\t// the current material requires lighting info\\n\\n    \\t\\t\\t\\t// note: all lighting uniforms are always set correctly\\n    \\t\\t\\t\\t// they simply reference the renderer's state for their\\n    \\t\\t\\t\\t// values\\n    \\t\\t\\t\\t//\\n    \\t\\t\\t\\t// use the current material's .needsUpdate flags to set\\n    \\t\\t\\t\\t// the GL state when required\\n\\n    \\t\\t\\t\\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\t// refresh uniforms common to several materials\\n\\n    \\t\\t\\tif ( fog && material.fog ) {\\n\\n    \\t\\t\\t\\trefreshUniformsFog( m_uniforms, fog );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tif ( material.isMeshBasicMaterial ||\\n    \\t\\t\\t     material.isMeshLambertMaterial ||\\n    \\t\\t\\t     material.isMeshPhongMaterial ||\\n    \\t\\t\\t     material.isMeshStandardMaterial ||\\n    \\t\\t\\t     material.isMeshDepthMaterial ) {\\n\\n    \\t\\t\\t\\trefreshUniformsCommon( m_uniforms, material );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\t// refresh single material specific uniforms\\n\\n    \\t\\t\\tif ( material.isLineBasicMaterial ) {\\n\\n    \\t\\t\\t\\trefreshUniformsLine( m_uniforms, material );\\n\\n    \\t\\t\\t} else if ( material.isLineDashedMaterial ) {\\n\\n    \\t\\t\\t\\trefreshUniformsLine( m_uniforms, material );\\n    \\t\\t\\t\\trefreshUniformsDash( m_uniforms, material );\\n\\n    \\t\\t\\t} else if ( material.isPointsMaterial ) {\\n\\n    \\t\\t\\t\\trefreshUniformsPoints( m_uniforms, material );\\n\\n    \\t\\t\\t} else if ( material.isMeshLambertMaterial ) {\\n\\n    \\t\\t\\t\\trefreshUniformsLambert( m_uniforms, material );\\n\\n    \\t\\t\\t} else if ( material.isMeshPhongMaterial ) {\\n\\n    \\t\\t\\t\\trefreshUniformsPhong( m_uniforms, material );\\n\\n    \\t\\t\\t} else if ( material.isMeshPhysicalMaterial ) {\\n\\n    \\t\\t\\t\\trefreshUniformsPhysical( m_uniforms, material );\\n\\n    \\t\\t\\t} else if ( material.isMeshStandardMaterial ) {\\n\\n    \\t\\t\\t\\trefreshUniformsStandard( m_uniforms, material );\\n\\n    \\t\\t\\t} else if ( material.isMeshDepthMaterial ) {\\n\\n    \\t\\t\\t\\tif ( material.displacementMap ) {\\n\\n    \\t\\t\\t\\t\\tm_uniforms.displacementMap.value = material.displacementMap;\\n    \\t\\t\\t\\t\\tm_uniforms.displacementScale.value = material.displacementScale;\\n    \\t\\t\\t\\t\\tm_uniforms.displacementBias.value = material.displacementBias;\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t} else if ( material.isMeshNormalMaterial ) {\\n\\n    \\t\\t\\t\\tm_uniforms.opacity.value = material.opacity;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tWebGLUniforms.upload(\\n    \\t\\t\\t\\t\\t_gl, materialProperties.uniformsList, m_uniforms, _this );\\n\\n    \\t\\t}\\n\\n\\n    \\t\\t// common matrices\\n\\n    \\t\\tp_uniforms.set( _gl, object, 'modelViewMatrix' );\\n    \\t\\tp_uniforms.set( _gl, object, 'normalMatrix' );\\n    \\t\\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\\n\\n\\n    \\t\\t// dynamic uniforms\\n\\n    \\t\\tvar dynUniforms = materialProperties.dynamicUniforms;\\n\\n    \\t\\tif ( dynUniforms !== null ) {\\n\\n    \\t\\t\\tWebGLUniforms.evalDynamic( dynUniforms, m_uniforms, object, material, camera );\\n    \\t\\t\\tWebGLUniforms.upload( _gl, dynUniforms, m_uniforms, _this );\\n\\n    \\t\\t}\\n\\n    \\t\\treturn program;\\n\\n    \\t}\\n\\n    \\t// Uniforms (refresh uniforms objects)\\n\\n    \\tfunction refreshUniformsCommon( uniforms, material ) {\\n\\n    \\t\\tuniforms.opacity.value = material.opacity;\\n\\n    \\t\\tuniforms.diffuse.value = material.color;\\n\\n    \\t\\tif ( material.emissive ) {\\n\\n    \\t\\t\\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\\n\\n    \\t\\t}\\n\\n    \\t\\tuniforms.map.value = material.map;\\n    \\t\\tuniforms.specularMap.value = material.specularMap;\\n    \\t\\tuniforms.alphaMap.value = material.alphaMap;\\n\\n    \\t\\tif ( material.aoMap ) {\\n\\n    \\t\\t\\tuniforms.aoMap.value = material.aoMap;\\n    \\t\\t\\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\\n\\n    \\t\\t}\\n\\n    \\t\\t// uv repeat and offset setting priorities\\n    \\t\\t// 1. color map\\n    \\t\\t// 2. specular map\\n    \\t\\t// 3. normal map\\n    \\t\\t// 4. bump map\\n    \\t\\t// 5. alpha map\\n    \\t\\t// 6. emissive map\\n\\n    \\t\\tvar uvScaleMap;\\n\\n    \\t\\tif ( material.map ) {\\n\\n    \\t\\t\\tuvScaleMap = material.map;\\n\\n    \\t\\t} else if ( material.specularMap ) {\\n\\n    \\t\\t\\tuvScaleMap = material.specularMap;\\n\\n    \\t\\t} else if ( material.displacementMap ) {\\n\\n    \\t\\t\\tuvScaleMap = material.displacementMap;\\n\\n    \\t\\t} else if ( material.normalMap ) {\\n\\n    \\t\\t\\tuvScaleMap = material.normalMap;\\n\\n    \\t\\t} else if ( material.bumpMap ) {\\n\\n    \\t\\t\\tuvScaleMap = material.bumpMap;\\n\\n    \\t\\t} else if ( material.roughnessMap ) {\\n\\n    \\t\\t\\tuvScaleMap = material.roughnessMap;\\n\\n    \\t\\t} else if ( material.metalnessMap ) {\\n\\n    \\t\\t\\tuvScaleMap = material.metalnessMap;\\n\\n    \\t\\t} else if ( material.alphaMap ) {\\n\\n    \\t\\t\\tuvScaleMap = material.alphaMap;\\n\\n    \\t\\t} else if ( material.emissiveMap ) {\\n\\n    \\t\\t\\tuvScaleMap = material.emissiveMap;\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( uvScaleMap !== undefined ) {\\n\\n    \\t\\t\\t// backwards compatibility\\n    \\t\\t\\tif ( uvScaleMap.isWebGLRenderTarget ) {\\n\\n    \\t\\t\\t\\tuvScaleMap = uvScaleMap.texture;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tvar offset = uvScaleMap.offset;\\n    \\t\\t\\tvar repeat = uvScaleMap.repeat;\\n\\n    \\t\\t\\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\\n\\n    \\t\\t}\\n\\n    \\t\\tuniforms.envMap.value = material.envMap;\\n\\n    \\t\\t// don't flip CubeTexture envMaps, flip everything else:\\n    \\t\\t//  WebGLRenderTargetCube will be flipped for backwards compatibility\\n    \\t\\t//  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\\n    \\t\\t// this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\\n    \\t\\tuniforms.flipEnvMap.value = ( ! ( material.envMap && material.envMap.isCubeTexture ) ) ? 1 : - 1;\\n\\n    \\t\\tuniforms.reflectivity.value = material.reflectivity;\\n    \\t\\tuniforms.refractionRatio.value = material.refractionRatio;\\n\\n    \\t}\\n\\n    \\tfunction refreshUniformsLine( uniforms, material ) {\\n\\n    \\t\\tuniforms.diffuse.value = material.color;\\n    \\t\\tuniforms.opacity.value = material.opacity;\\n\\n    \\t}\\n\\n    \\tfunction refreshUniformsDash( uniforms, material ) {\\n\\n    \\t\\tuniforms.dashSize.value = material.dashSize;\\n    \\t\\tuniforms.totalSize.value = material.dashSize + material.gapSize;\\n    \\t\\tuniforms.scale.value = material.scale;\\n\\n    \\t}\\n\\n    \\tfunction refreshUniformsPoints( uniforms, material ) {\\n\\n    \\t\\tuniforms.diffuse.value = material.color;\\n    \\t\\tuniforms.opacity.value = material.opacity;\\n    \\t\\tuniforms.size.value = material.size * _pixelRatio;\\n    \\t\\tuniforms.scale.value = _canvas.clientHeight * 0.5;\\n\\n    \\t\\tuniforms.map.value = material.map;\\n\\n    \\t\\tif ( material.map !== null ) {\\n\\n    \\t\\t\\tvar offset = material.map.offset;\\n    \\t\\t\\tvar repeat = material.map.repeat;\\n\\n    \\t\\t\\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\tfunction refreshUniformsFog( uniforms, fog ) {\\n\\n    \\t\\tuniforms.fogColor.value = fog.color;\\n\\n    \\t\\tif ( fog.isFog ) {\\n\\n    \\t\\t\\tuniforms.fogNear.value = fog.near;\\n    \\t\\t\\tuniforms.fogFar.value = fog.far;\\n\\n    \\t\\t} else if ( fog.isFogExp2 ) {\\n\\n    \\t\\t\\tuniforms.fogDensity.value = fog.density;\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\tfunction refreshUniformsLambert( uniforms, material ) {\\n\\n    \\t\\tif ( material.lightMap ) {\\n\\n    \\t\\t\\tuniforms.lightMap.value = material.lightMap;\\n    \\t\\t\\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( material.emissiveMap ) {\\n\\n    \\t\\t\\tuniforms.emissiveMap.value = material.emissiveMap;\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\tfunction refreshUniformsPhong( uniforms, material ) {\\n\\n    \\t\\tuniforms.specular.value = material.specular;\\n    \\t\\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\\n\\n    \\t\\tif ( material.lightMap ) {\\n\\n    \\t\\t\\tuniforms.lightMap.value = material.lightMap;\\n    \\t\\t\\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( material.emissiveMap ) {\\n\\n    \\t\\t\\tuniforms.emissiveMap.value = material.emissiveMap;\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( material.bumpMap ) {\\n\\n    \\t\\t\\tuniforms.bumpMap.value = material.bumpMap;\\n    \\t\\t\\tuniforms.bumpScale.value = material.bumpScale;\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( material.normalMap ) {\\n\\n    \\t\\t\\tuniforms.normalMap.value = material.normalMap;\\n    \\t\\t\\tuniforms.normalScale.value.copy( material.normalScale );\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( material.displacementMap ) {\\n\\n    \\t\\t\\tuniforms.displacementMap.value = material.displacementMap;\\n    \\t\\t\\tuniforms.displacementScale.value = material.displacementScale;\\n    \\t\\t\\tuniforms.displacementBias.value = material.displacementBias;\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\tfunction refreshUniformsStandard( uniforms, material ) {\\n\\n    \\t\\tuniforms.roughness.value = material.roughness;\\n    \\t\\tuniforms.metalness.value = material.metalness;\\n\\n    \\t\\tif ( material.roughnessMap ) {\\n\\n    \\t\\t\\tuniforms.roughnessMap.value = material.roughnessMap;\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( material.metalnessMap ) {\\n\\n    \\t\\t\\tuniforms.metalnessMap.value = material.metalnessMap;\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( material.lightMap ) {\\n\\n    \\t\\t\\tuniforms.lightMap.value = material.lightMap;\\n    \\t\\t\\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( material.emissiveMap ) {\\n\\n    \\t\\t\\tuniforms.emissiveMap.value = material.emissiveMap;\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( material.bumpMap ) {\\n\\n    \\t\\t\\tuniforms.bumpMap.value = material.bumpMap;\\n    \\t\\t\\tuniforms.bumpScale.value = material.bumpScale;\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( material.normalMap ) {\\n\\n    \\t\\t\\tuniforms.normalMap.value = material.normalMap;\\n    \\t\\t\\tuniforms.normalScale.value.copy( material.normalScale );\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( material.displacementMap ) {\\n\\n    \\t\\t\\tuniforms.displacementMap.value = material.displacementMap;\\n    \\t\\t\\tuniforms.displacementScale.value = material.displacementScale;\\n    \\t\\t\\tuniforms.displacementBias.value = material.displacementBias;\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( material.envMap ) {\\n\\n    \\t\\t\\t//uniforms.envMap.value = material.envMap; // part of uniforms common\\n    \\t\\t\\tuniforms.envMapIntensity.value = material.envMapIntensity;\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\tfunction refreshUniformsPhysical( uniforms, material ) {\\n\\n    \\t\\tuniforms.clearCoat.value = material.clearCoat;\\n    \\t\\tuniforms.clearCoatRoughness.value = material.clearCoatRoughness;\\n\\n    \\t\\trefreshUniformsStandard( uniforms, material );\\n\\n    \\t}\\n\\n    \\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\\n\\n    \\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\\n\\n    \\t\\tuniforms.ambientLightColor.needsUpdate = value;\\n\\n    \\t\\tuniforms.directionalLights.needsUpdate = value;\\n    \\t\\tuniforms.pointLights.needsUpdate = value;\\n    \\t\\tuniforms.spotLights.needsUpdate = value;\\n    \\t\\tuniforms.hemisphereLights.needsUpdate = value;\\n\\n    \\t}\\n\\n    \\t// Lighting\\n\\n    \\tfunction setupShadows( lights ) {\\n\\n    \\t\\tvar lightShadowsLength = 0;\\n\\n    \\t\\tfor ( var i = 0, l = lights.length; i < l; i ++ ) {\\n\\n    \\t\\t\\tvar light = lights[ i ];\\n\\n    \\t\\t\\tif ( light.castShadow ) {\\n\\n    \\t\\t\\t\\t_lights.shadows[ lightShadowsLength ++ ] = light;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\t_lights.shadows.length = lightShadowsLength;\\n\\n    \\t}\\n\\n    \\tfunction setupLights( lights, camera ) {\\n\\n    \\t\\tvar l, ll, light,\\n    \\t\\tr = 0, g = 0, b = 0,\\n    \\t\\tcolor,\\n    \\t\\tintensity,\\n    \\t\\tdistance,\\n    \\t\\tshadowMap,\\n\\n    \\t\\tviewMatrix = camera.matrixWorldInverse,\\n\\n    \\t\\tdirectionalLength = 0,\\n    \\t\\tpointLength = 0,\\n    \\t\\tspotLength = 0,\\n    \\t\\themiLength = 0;\\n\\n    \\t\\tfor ( l = 0, ll = lights.length; l < ll; l ++ ) {\\n\\n    \\t\\t\\tlight = lights[ l ];\\n\\n    \\t\\t\\tcolor = light.color;\\n    \\t\\t\\tintensity = light.intensity;\\n    \\t\\t\\tdistance = light.distance;\\n\\n    \\t\\t\\tshadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\\n\\n    \\t\\t\\tif ( light.isAmbientLight ) {\\n\\n    \\t\\t\\t\\tr += color.r * intensity;\\n    \\t\\t\\t\\tg += color.g * intensity;\\n    \\t\\t\\t\\tb += color.b * intensity;\\n\\n    \\t\\t\\t} else if ( light.isDirectionalLight ) {\\n\\n    \\t\\t\\t\\tvar uniforms = lightCache.get( light );\\n\\n    \\t\\t\\t\\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\\n    \\t\\t\\t\\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\\n    \\t\\t\\t\\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\\n    \\t\\t\\t\\tuniforms.direction.sub( _vector3 );\\n    \\t\\t\\t\\tuniforms.direction.transformDirection( viewMatrix );\\n\\n    \\t\\t\\t\\tuniforms.shadow = light.castShadow;\\n\\n    \\t\\t\\t\\tif ( light.castShadow ) {\\n\\n    \\t\\t\\t\\t\\tuniforms.shadowBias = light.shadow.bias;\\n    \\t\\t\\t\\t\\tuniforms.shadowRadius = light.shadow.radius;\\n    \\t\\t\\t\\t\\tuniforms.shadowMapSize = light.shadow.mapSize;\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t_lights.directionalShadowMap[ directionalLength ] = shadowMap;\\n    \\t\\t\\t\\t_lights.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\\n    \\t\\t\\t\\t_lights.directional[ directionalLength ++ ] = uniforms;\\n\\n    \\t\\t\\t} else if ( light.isSpotLight ) {\\n\\n    \\t\\t\\t\\tvar uniforms = lightCache.get( light );\\n\\n    \\t\\t\\t\\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\\n    \\t\\t\\t\\tuniforms.position.applyMatrix4( viewMatrix );\\n\\n    \\t\\t\\t\\tuniforms.color.copy( color ).multiplyScalar( intensity );\\n    \\t\\t\\t\\tuniforms.distance = distance;\\n\\n    \\t\\t\\t\\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\\n    \\t\\t\\t\\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\\n    \\t\\t\\t\\tuniforms.direction.sub( _vector3 );\\n    \\t\\t\\t\\tuniforms.direction.transformDirection( viewMatrix );\\n\\n    \\t\\t\\t\\tuniforms.coneCos = Math.cos( light.angle );\\n    \\t\\t\\t\\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\\n    \\t\\t\\t\\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\\n\\n    \\t\\t\\t\\tuniforms.shadow = light.castShadow;\\n\\n    \\t\\t\\t\\tif ( light.castShadow ) {\\n\\n    \\t\\t\\t\\t\\tuniforms.shadowBias = light.shadow.bias;\\n    \\t\\t\\t\\t\\tuniforms.shadowRadius = light.shadow.radius;\\n    \\t\\t\\t\\t\\tuniforms.shadowMapSize = light.shadow.mapSize;\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t_lights.spotShadowMap[ spotLength ] = shadowMap;\\n    \\t\\t\\t\\t_lights.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\\n    \\t\\t\\t\\t_lights.spot[ spotLength ++ ] = uniforms;\\n\\n    \\t\\t\\t} else if ( light.isPointLight ) {\\n\\n    \\t\\t\\t\\tvar uniforms = lightCache.get( light );\\n\\n    \\t\\t\\t\\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\\n    \\t\\t\\t\\tuniforms.position.applyMatrix4( viewMatrix );\\n\\n    \\t\\t\\t\\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\\n    \\t\\t\\t\\tuniforms.distance = light.distance;\\n    \\t\\t\\t\\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\\n\\n    \\t\\t\\t\\tuniforms.shadow = light.castShadow;\\n\\n    \\t\\t\\t\\tif ( light.castShadow ) {\\n\\n    \\t\\t\\t\\t\\tuniforms.shadowBias = light.shadow.bias;\\n    \\t\\t\\t\\t\\tuniforms.shadowRadius = light.shadow.radius;\\n    \\t\\t\\t\\t\\tuniforms.shadowMapSize = light.shadow.mapSize;\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t_lights.pointShadowMap[ pointLength ] = shadowMap;\\n\\n    \\t\\t\\t\\tif ( _lights.pointShadowMatrix[ pointLength ] === undefined ) {\\n\\n    \\t\\t\\t\\t\\t_lights.pointShadowMatrix[ pointLength ] = new Matrix4();\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t// for point lights we set the shadow matrix to be a translation-only matrix\\n    \\t\\t\\t\\t// equal to inverse of the light's position\\n    \\t\\t\\t\\t_vector3.setFromMatrixPosition( light.matrixWorld ).negate();\\n    \\t\\t\\t\\t_lights.pointShadowMatrix[ pointLength ].identity().setPosition( _vector3 );\\n\\n    \\t\\t\\t\\t_lights.point[ pointLength ++ ] = uniforms;\\n\\n    \\t\\t\\t} else if ( light.isHemisphereLight ) {\\n\\n    \\t\\t\\t\\tvar uniforms = lightCache.get( light );\\n\\n    \\t\\t\\t\\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\\n    \\t\\t\\t\\tuniforms.direction.transformDirection( viewMatrix );\\n    \\t\\t\\t\\tuniforms.direction.normalize();\\n\\n    \\t\\t\\t\\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\\n    \\t\\t\\t\\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\\n\\n    \\t\\t\\t\\t_lights.hemi[ hemiLength ++ ] = uniforms;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\t_lights.ambient[ 0 ] = r;\\n    \\t\\t_lights.ambient[ 1 ] = g;\\n    \\t\\t_lights.ambient[ 2 ] = b;\\n\\n    \\t\\t_lights.directional.length = directionalLength;\\n    \\t\\t_lights.spot.length = spotLength;\\n    \\t\\t_lights.point.length = pointLength;\\n    \\t\\t_lights.hemi.length = hemiLength;\\n\\n    \\t\\t_lights.hash = directionalLength + ',' + pointLength + ',' + spotLength + ',' + hemiLength + ',' + _lights.shadows.length;\\n\\n    \\t}\\n\\n    \\t// GL state setting\\n\\n    \\tthis.setFaceCulling = function ( cullFace, frontFaceDirection ) {\\n\\n    \\t\\tstate.setCullFace( cullFace );\\n    \\t\\tstate.setFlipSided( frontFaceDirection === FrontFaceDirectionCW );\\n\\n    \\t};\\n\\n    \\t// Textures\\n\\n    \\tfunction allocTextureUnit() {\\n\\n    \\t\\tvar textureUnit = _usedTextureUnits;\\n\\n    \\t\\tif ( textureUnit >= capabilities.maxTextures ) {\\n\\n    \\t\\t\\tconsole.warn( 'WebGLRenderer: trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\\n\\n    \\t\\t}\\n\\n    \\t\\t_usedTextureUnits += 1;\\n\\n    \\t\\treturn textureUnit;\\n\\n    \\t}\\n\\n    \\tthis.allocTextureUnit = allocTextureUnit;\\n\\n    \\t// this.setTexture2D = setTexture2D;\\n    \\tthis.setTexture2D = ( function() {\\n\\n    \\t\\tvar warned = false;\\n\\n    \\t\\t// backwards compatibility: peel texture.texture\\n    \\t\\treturn function setTexture2D( texture, slot ) {\\n\\n    \\t\\t\\tif ( texture && texture.isWebGLRenderTarget ) {\\n\\n    \\t\\t\\t\\tif ( ! warned ) {\\n\\n    \\t\\t\\t\\t\\tconsole.warn( \\\"THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead.\\\" );\\n    \\t\\t\\t\\t\\twarned = true;\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\ttexture = texture.texture;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\ttextures.setTexture2D( texture, slot );\\n\\n    \\t\\t};\\n\\n    \\t}() );\\n\\n    \\tthis.setTexture = ( function() {\\n\\n    \\t\\tvar warned = false;\\n\\n    \\t\\treturn function setTexture( texture, slot ) {\\n\\n    \\t\\t\\tif ( ! warned ) {\\n\\n    \\t\\t\\t\\tconsole.warn( \\\"THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead.\\\" );\\n    \\t\\t\\t\\twarned = true;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\ttextures.setTexture2D( texture, slot );\\n\\n    \\t\\t};\\n\\n    \\t}() );\\n\\n    \\tthis.setTextureCube = ( function() {\\n\\n    \\t\\tvar warned = false;\\n\\n    \\t\\treturn function setTextureCube( texture, slot ) {\\n\\n    \\t\\t\\t// backwards compatibility: peel texture.texture\\n    \\t\\t\\tif ( texture && texture.isWebGLRenderTargetCube ) {\\n\\n    \\t\\t\\t\\tif ( ! warned ) {\\n\\n    \\t\\t\\t\\t\\tconsole.warn( \\\"THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead.\\\" );\\n    \\t\\t\\t\\t\\twarned = true;\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\ttexture = texture.texture;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\t// currently relying on the fact that WebGLRenderTargetCube.texture is a Texture and NOT a CubeTexture\\n    \\t\\t\\t// TODO: unify these code paths\\n    \\t\\t\\tif ( ( texture && texture.isCubeTexture ) ||\\n    \\t\\t\\t\\t ( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\\n\\n    \\t\\t\\t\\t// CompressedTexture can have Array in image :/\\n\\n    \\t\\t\\t\\t// this function alone should take care of cube textures\\n    \\t\\t\\t\\ttextures.setTextureCube( texture, slot );\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t// assumed: texture property of THREE.WebGLRenderTargetCube\\n\\n    \\t\\t\\t\\ttextures.setTextureCubeDynamic( texture, slot );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t};\\n\\n    \\t}() );\\n\\n    \\tthis.getCurrentRenderTarget = function() {\\n\\n    \\t\\treturn _currentRenderTarget;\\n\\n    \\t};\\n\\n    \\tthis.setRenderTarget = function ( renderTarget ) {\\n\\n    \\t\\t_currentRenderTarget = renderTarget;\\n\\n    \\t\\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\\n\\n    \\t\\t\\ttextures.setupRenderTarget( renderTarget );\\n\\n    \\t\\t}\\n\\n    \\t\\tvar isCube = ( renderTarget && renderTarget.isWebGLRenderTargetCube );\\n    \\t\\tvar framebuffer;\\n\\n    \\t\\tif ( renderTarget ) {\\n\\n    \\t\\t\\tvar renderTargetProperties = properties.get( renderTarget );\\n\\n    \\t\\t\\tif ( isCube ) {\\n\\n    \\t\\t\\t\\tframebuffer = renderTargetProperties.__webglFramebuffer[ renderTarget.activeCubeFace ];\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\tframebuffer = renderTargetProperties.__webglFramebuffer;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\t_currentScissor.copy( renderTarget.scissor );\\n    \\t\\t\\t_currentScissorTest = renderTarget.scissorTest;\\n\\n    \\t\\t\\t_currentViewport.copy( renderTarget.viewport );\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\tframebuffer = null;\\n\\n    \\t\\t\\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio );\\n    \\t\\t\\t_currentScissorTest = _scissorTest;\\n\\n    \\t\\t\\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio );\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( _currentFramebuffer !== framebuffer ) {\\n\\n    \\t\\t\\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\\n    \\t\\t\\t_currentFramebuffer = framebuffer;\\n\\n    \\t\\t}\\n\\n    \\t\\tstate.scissor( _currentScissor );\\n    \\t\\tstate.setScissorTest( _currentScissorTest );\\n\\n    \\t\\tstate.viewport( _currentViewport );\\n\\n    \\t\\tif ( isCube ) {\\n\\n    \\t\\t\\tvar textureProperties = properties.get( renderTarget.texture );\\n    \\t\\t\\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + renderTarget.activeCubeFace, textureProperties.__webglTexture, renderTarget.activeMipMapLevel );\\n\\n    \\t\\t}\\n\\n    \\t};\\n\\n    \\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer ) {\\n\\n    \\t\\tif ( ( renderTarget && renderTarget.isWebGLRenderTarget ) === false ) {\\n\\n    \\t\\t\\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\\n    \\t\\t\\treturn;\\n\\n    \\t\\t}\\n\\n    \\t\\tvar framebuffer = properties.get( renderTarget ).__webglFramebuffer;\\n\\n    \\t\\tif ( framebuffer ) {\\n\\n    \\t\\t\\tvar restore = false;\\n\\n    \\t\\t\\tif ( framebuffer !== _currentFramebuffer ) {\\n\\n    \\t\\t\\t\\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\\n\\n    \\t\\t\\t\\trestore = true;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\ttry {\\n\\n    \\t\\t\\t\\tvar texture = renderTarget.texture;\\n    \\t\\t\\t\\tvar textureFormat = texture.format;\\n    \\t\\t\\t\\tvar textureType = texture.type;\\n\\n    \\t\\t\\t\\tif ( textureFormat !== RGBAFormat && paramThreeToGL( textureFormat ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\\n\\n    \\t\\t\\t\\t\\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\\n    \\t\\t\\t\\t\\treturn;\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\tif ( textureType !== UnsignedByteType && paramThreeToGL( textureType ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // IE11, Edge and Chrome Mac < 52 (#9513)\\n    \\t\\t\\t\\t     ! ( textureType === FloatType && ( extensions.get( 'OES_texture_float' ) || extensions.get( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\\n    \\t\\t\\t\\t     ! ( textureType === HalfFloatType && extensions.get( 'EXT_color_buffer_half_float' ) ) ) {\\n\\n    \\t\\t\\t\\t\\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\\n    \\t\\t\\t\\t\\treturn;\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\tif ( _gl.checkFramebufferStatus( _gl.FRAMEBUFFER ) === _gl.FRAMEBUFFER_COMPLETE ) {\\n\\n    \\t\\t\\t\\t\\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\\n\\n    \\t\\t\\t\\t\\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\\n\\n    \\t\\t\\t\\t\\t\\t_gl.readPixels( x, y, width, height, paramThreeToGL( textureFormat ), paramThreeToGL( textureType ), buffer );\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t} finally {\\n\\n    \\t\\t\\t\\tif ( restore ) {\\n\\n    \\t\\t\\t\\t\\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, _currentFramebuffer );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t};\\n\\n    \\t// Map three.js constants to WebGL constants\\n\\n    \\tfunction paramThreeToGL( p ) {\\n\\n    \\t\\tvar extension;\\n\\n    \\t\\tif ( p === RepeatWrapping ) return _gl.REPEAT;\\n    \\t\\tif ( p === ClampToEdgeWrapping ) return _gl.CLAMP_TO_EDGE;\\n    \\t\\tif ( p === MirroredRepeatWrapping ) return _gl.MIRRORED_REPEAT;\\n\\n    \\t\\tif ( p === NearestFilter ) return _gl.NEAREST;\\n    \\t\\tif ( p === NearestMipMapNearestFilter ) return _gl.NEAREST_MIPMAP_NEAREST;\\n    \\t\\tif ( p === NearestMipMapLinearFilter ) return _gl.NEAREST_MIPMAP_LINEAR;\\n\\n    \\t\\tif ( p === LinearFilter ) return _gl.LINEAR;\\n    \\t\\tif ( p === LinearMipMapNearestFilter ) return _gl.LINEAR_MIPMAP_NEAREST;\\n    \\t\\tif ( p === LinearMipMapLinearFilter ) return _gl.LINEAR_MIPMAP_LINEAR;\\n\\n    \\t\\tif ( p === UnsignedByteType ) return _gl.UNSIGNED_BYTE;\\n    \\t\\tif ( p === UnsignedShort4444Type ) return _gl.UNSIGNED_SHORT_4_4_4_4;\\n    \\t\\tif ( p === UnsignedShort5551Type ) return _gl.UNSIGNED_SHORT_5_5_5_1;\\n    \\t\\tif ( p === UnsignedShort565Type ) return _gl.UNSIGNED_SHORT_5_6_5;\\n\\n    \\t\\tif ( p === ByteType ) return _gl.BYTE;\\n    \\t\\tif ( p === ShortType ) return _gl.SHORT;\\n    \\t\\tif ( p === UnsignedShortType ) return _gl.UNSIGNED_SHORT;\\n    \\t\\tif ( p === IntType ) return _gl.INT;\\n    \\t\\tif ( p === UnsignedIntType ) return _gl.UNSIGNED_INT;\\n    \\t\\tif ( p === FloatType ) return _gl.FLOAT;\\n\\n    \\t\\textension = extensions.get( 'OES_texture_half_float' );\\n\\n    \\t\\tif ( extension !== null ) {\\n\\n    \\t\\t\\tif ( p === HalfFloatType ) return extension.HALF_FLOAT_OES;\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( p === AlphaFormat ) return _gl.ALPHA;\\n    \\t\\tif ( p === RGBFormat ) return _gl.RGB;\\n    \\t\\tif ( p === RGBAFormat ) return _gl.RGBA;\\n    \\t\\tif ( p === LuminanceFormat ) return _gl.LUMINANCE;\\n    \\t\\tif ( p === LuminanceAlphaFormat ) return _gl.LUMINANCE_ALPHA;\\n    \\t\\tif ( p === DepthFormat ) return _gl.DEPTH_COMPONENT;\\n    \\t\\tif ( p === DepthStencilFormat ) return _gl.DEPTH_STENCIL;\\n\\n    \\t\\tif ( p === AddEquation ) return _gl.FUNC_ADD;\\n    \\t\\tif ( p === SubtractEquation ) return _gl.FUNC_SUBTRACT;\\n    \\t\\tif ( p === ReverseSubtractEquation ) return _gl.FUNC_REVERSE_SUBTRACT;\\n\\n    \\t\\tif ( p === ZeroFactor ) return _gl.ZERO;\\n    \\t\\tif ( p === OneFactor ) return _gl.ONE;\\n    \\t\\tif ( p === SrcColorFactor ) return _gl.SRC_COLOR;\\n    \\t\\tif ( p === OneMinusSrcColorFactor ) return _gl.ONE_MINUS_SRC_COLOR;\\n    \\t\\tif ( p === SrcAlphaFactor ) return _gl.SRC_ALPHA;\\n    \\t\\tif ( p === OneMinusSrcAlphaFactor ) return _gl.ONE_MINUS_SRC_ALPHA;\\n    \\t\\tif ( p === DstAlphaFactor ) return _gl.DST_ALPHA;\\n    \\t\\tif ( p === OneMinusDstAlphaFactor ) return _gl.ONE_MINUS_DST_ALPHA;\\n\\n    \\t\\tif ( p === DstColorFactor ) return _gl.DST_COLOR;\\n    \\t\\tif ( p === OneMinusDstColorFactor ) return _gl.ONE_MINUS_DST_COLOR;\\n    \\t\\tif ( p === SrcAlphaSaturateFactor ) return _gl.SRC_ALPHA_SATURATE;\\n\\n    \\t\\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\\n\\n    \\t\\tif ( extension !== null ) {\\n\\n    \\t\\t\\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\\n    \\t\\t\\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\\n    \\t\\t\\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\\n    \\t\\t\\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\\n\\n    \\t\\t}\\n\\n    \\t\\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\\n\\n    \\t\\tif ( extension !== null ) {\\n\\n    \\t\\t\\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\\n    \\t\\t\\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\\n    \\t\\t\\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\\n    \\t\\t\\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\\n\\n    \\t\\t}\\n\\n    \\t\\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\\n\\n    \\t\\tif ( extension !== null ) {\\n\\n    \\t\\t\\tif ( p === RGB_ETC1_Format ) return extension.COMPRESSED_RGB_ETC1_WEBGL;\\n\\n    \\t\\t}\\n\\n    \\t\\textension = extensions.get( 'EXT_blend_minmax' );\\n\\n    \\t\\tif ( extension !== null ) {\\n\\n    \\t\\t\\tif ( p === MinEquation ) return extension.MIN_EXT;\\n    \\t\\t\\tif ( p === MaxEquation ) return extension.MAX_EXT;\\n\\n    \\t\\t}\\n\\n    \\t\\textension = extensions.get( 'WEBGL_depth_texture' );\\n\\n    \\t\\tif ( extension !== null ){\\n\\n    \\t\\t\\tif ( p === UnsignedInt248Type ) return extension.UNSIGNED_INT_24_8_WEBGL;\\n\\n    \\t\\t}\\n\\n    \\t\\treturn 0;\\n\\n    \\t}\\n\\n    }\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     * @author alteredq / http://alteredqualia.com/\\n     */\\n\\n    function FogExp2 ( color, density ) {\\n\\n    \\tthis.name = '';\\n\\n    \\tthis.color = new Color( color );\\n    \\tthis.density = ( density !== undefined ) ? density : 0.00025;\\n\\n    }\\n\\n    FogExp2.prototype.isFogExp2 = true;\\n\\n    FogExp2.prototype.clone = function () {\\n\\n    \\treturn new FogExp2( this.color.getHex(), this.density );\\n\\n    };\\n\\n    FogExp2.prototype.toJSON = function ( meta ) {\\n\\n    \\treturn {\\n    \\t\\ttype: 'FogExp2',\\n    \\t\\tcolor: this.color.getHex(),\\n    \\t\\tdensity: this.density\\n    \\t};\\n\\n    };\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     * @author alteredq / http://alteredqualia.com/\\n     */\\n\\n    function Fog ( color, near, far ) {\\n\\n    \\tthis.name = '';\\n\\n    \\tthis.color = new Color( color );\\n\\n    \\tthis.near = ( near !== undefined ) ? near : 1;\\n    \\tthis.far = ( far !== undefined ) ? far : 1000;\\n\\n    }\\n\\n    Fog.prototype.isFog = true;\\n\\n    Fog.prototype.clone = function () {\\n\\n    \\treturn new Fog( this.color.getHex(), this.near, this.far );\\n\\n    };\\n\\n    Fog.prototype.toJSON = function ( meta ) {\\n\\n    \\treturn {\\n    \\t\\ttype: 'Fog',\\n    \\t\\tcolor: this.color.getHex(),\\n    \\t\\tnear: this.near,\\n    \\t\\tfar: this.far\\n    \\t};\\n\\n    };\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     */\\n\\n    function Scene () {\\n\\n    \\tObject3D.call( this );\\n\\n    \\tthis.type = 'Scene';\\n\\n    \\tthis.background = null;\\n    \\tthis.fog = null;\\n    \\tthis.overrideMaterial = null;\\n\\n    \\tthis.autoUpdate = true; // checked by the renderer\\n\\n    }\\n\\n    Scene.prototype = Object.create( Object3D.prototype );\\n\\n    Scene.prototype.constructor = Scene;\\n\\n    Scene.prototype.copy = function ( source, recursive ) {\\n\\n    \\tObject3D.prototype.copy.call( this, source, recursive );\\n\\n    \\tif ( source.background !== null ) this.background = source.background.clone();\\n    \\tif ( source.fog !== null ) this.fog = source.fog.clone();\\n    \\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\\n\\n    \\tthis.autoUpdate = source.autoUpdate;\\n    \\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\\n\\n    \\treturn this;\\n\\n    };\\n\\n    Scene.prototype.toJSON = function ( meta ) {\\n\\n    \\tvar data = Object3D.prototype.toJSON.call( this, meta );\\n\\n    \\tif ( this.background !== null ) data.object.background = this.background.toJSON( meta );\\n    \\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\\n\\n    \\treturn data;\\n\\n    };\\n\\n    /**\\n     * @author mikael emtinger / http://gomo.se/\\n     * @author alteredq / http://alteredqualia.com/\\n     */\\n\\n    function LensFlare( texture, size, distance, blending, color ) {\\n\\n    \\tObject3D.call( this );\\n\\n    \\tthis.lensFlares = [];\\n\\n    \\tthis.positionScreen = new Vector3();\\n    \\tthis.customUpdateCallback = undefined;\\n\\n    \\tif ( texture !== undefined ) {\\n\\n    \\t\\tthis.add( texture, size, distance, blending, color );\\n\\n    \\t}\\n\\n    }\\n\\n    LensFlare.prototype = Object.assign( Object.create( Object3D.prototype ), {\\n\\n    \\tconstructor: LensFlare,\\n\\n    \\tisLensFlare: true,\\n\\n    \\tcopy: function ( source ) {\\n\\n    \\t\\tObject3D.prototype.copy.call( this, source );\\n\\n    \\t\\tthis.positionScreen.copy( source.positionScreen );\\n    \\t\\tthis.customUpdateCallback = source.customUpdateCallback;\\n\\n    \\t\\tfor ( var i = 0, l = source.lensFlares.length; i < l; i ++ ) {\\n\\n    \\t\\t\\tthis.lensFlares.push( source.lensFlares[ i ] );\\n\\n    \\t\\t}\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tadd: function ( texture, size, distance, blending, color, opacity ) {\\n\\n    \\t\\tif ( size === undefined ) size = - 1;\\n    \\t\\tif ( distance === undefined ) distance = 0;\\n    \\t\\tif ( opacity === undefined ) opacity = 1;\\n    \\t\\tif ( color === undefined ) color = new Color( 0xffffff );\\n    \\t\\tif ( blending === undefined ) blending = NormalBlending;\\n\\n    \\t\\tdistance = Math.min( distance, Math.max( 0, distance ) );\\n\\n    \\t\\tthis.lensFlares.push( {\\n    \\t\\t\\ttexture: texture,\\t// THREE.Texture\\n    \\t\\t\\tsize: size, \\t\\t// size in pixels (-1 = use texture.width)\\n    \\t\\t\\tdistance: distance, \\t// distance (0-1) from light source (0=at light source)\\n    \\t\\t\\tx: 0, y: 0, z: 0,\\t// screen position (-1 => 1) z = 0 is in front z = 1 is back\\n    \\t\\t\\tscale: 1, \\t\\t// scale\\n    \\t\\t\\trotation: 0, \\t\\t// rotation\\n    \\t\\t\\topacity: opacity,\\t// opacity\\n    \\t\\t\\tcolor: color,\\t\\t// color\\n    \\t\\t\\tblending: blending\\t// blending\\n    \\t\\t} );\\n\\n    \\t},\\n\\n    \\t/*\\n    \\t * Update lens flares update positions on all flares based on the screen position\\n    \\t * Set myLensFlare.customUpdateCallback to alter the flares in your project specific way.\\n    \\t */\\n\\n    \\tupdateLensFlares: function () {\\n\\n    \\t\\tvar f, fl = this.lensFlares.length;\\n    \\t\\tvar flare;\\n    \\t\\tvar vecX = - this.positionScreen.x * 2;\\n    \\t\\tvar vecY = - this.positionScreen.y * 2;\\n\\n    \\t\\tfor ( f = 0; f < fl; f ++ ) {\\n\\n    \\t\\t\\tflare = this.lensFlares[ f ];\\n\\n    \\t\\t\\tflare.x = this.positionScreen.x + vecX * flare.distance;\\n    \\t\\t\\tflare.y = this.positionScreen.y + vecY * flare.distance;\\n\\n    \\t\\t\\tflare.wantedRotation = flare.x * Math.PI * 0.25;\\n    \\t\\t\\tflare.rotation += ( flare.wantedRotation - flare.rotation ) * 0.25;\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    } );\\n\\n    /**\\n     * @author alteredq / http://alteredqualia.com/\\n     *\\n     * parameters = {\\n     *  color: <hex>,\\n     *  opacity: <float>,\\n     *  map: new THREE.Texture( <Image> ),\\n     *\\n     *\\tuvOffset: new THREE.Vector2(),\\n     *\\tuvScale: new THREE.Vector2()\\n     * }\\n     */\\n\\n    function SpriteMaterial( parameters ) {\\n\\n    \\tMaterial.call( this );\\n\\n    \\tthis.type = 'SpriteMaterial';\\n\\n    \\tthis.color = new Color( 0xffffff );\\n    \\tthis.map = null;\\n\\n    \\tthis.rotation = 0;\\n\\n    \\tthis.fog = false;\\n    \\tthis.lights = false;\\n\\n    \\tthis.setValues( parameters );\\n\\n    }\\n\\n    SpriteMaterial.prototype = Object.create( Material.prototype );\\n    SpriteMaterial.prototype.constructor = SpriteMaterial;\\n\\n    SpriteMaterial.prototype.copy = function ( source ) {\\n\\n    \\tMaterial.prototype.copy.call( this, source );\\n\\n    \\tthis.color.copy( source.color );\\n    \\tthis.map = source.map;\\n\\n    \\tthis.rotation = source.rotation;\\n\\n    \\treturn this;\\n\\n    };\\n\\n    /**\\n     * @author mikael emtinger / http://gomo.se/\\n     * @author alteredq / http://alteredqualia.com/\\n     */\\n\\n    function Sprite( material ) {\\n\\n    \\tObject3D.call( this );\\n\\n    \\tthis.type = 'Sprite';\\n\\n    \\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\\n\\n    }\\n\\n    Sprite.prototype = Object.assign( Object.create( Object3D.prototype ), {\\n\\n    \\tconstructor: Sprite,\\n\\n    \\tisSprite: true,\\n\\n    \\traycast: ( function () {\\n\\n    \\t\\tvar matrixPosition = new Vector3();\\n\\n    \\t\\treturn function raycast( raycaster, intersects ) {\\n\\n    \\t\\t\\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\\n\\n    \\t\\t\\tvar distanceSq = raycaster.ray.distanceSqToPoint( matrixPosition );\\n    \\t\\t\\tvar guessSizeSq = this.scale.x * this.scale.y / 4;\\n\\n    \\t\\t\\tif ( distanceSq > guessSizeSq ) {\\n\\n    \\t\\t\\t\\treturn;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tintersects.push( {\\n\\n    \\t\\t\\t\\tdistance: Math.sqrt( distanceSq ),\\n    \\t\\t\\t\\tpoint: this.position,\\n    \\t\\t\\t\\tface: null,\\n    \\t\\t\\t\\tobject: this\\n\\n    \\t\\t\\t} );\\n\\n    \\t\\t};\\n\\n    \\t}() ),\\n\\n    \\tclone: function () {\\n\\n    \\t\\treturn new this.constructor( this.material ).copy( this );\\n\\n    \\t}\\n\\n    } );\\n\\n    /**\\n     * @author mikael emtinger / http://gomo.se/\\n     * @author alteredq / http://alteredqualia.com/\\n     * @author mrdoob / http://mrdoob.com/\\n     */\\n\\n    function LOD() {\\n\\n    \\tObject3D.call( this );\\n\\n    \\tthis.type = 'LOD';\\n\\n    \\tObject.defineProperties( this, {\\n    \\t\\tlevels: {\\n    \\t\\t\\tenumerable: true,\\n    \\t\\t\\tvalue: []\\n    \\t\\t}\\n    \\t} );\\n\\n    }\\n\\n\\n    LOD.prototype = Object.assign( Object.create( Object3D.prototype ), {\\n\\n    \\tconstructor: LOD,\\n\\n    \\tcopy: function ( source ) {\\n\\n    \\t\\tObject3D.prototype.copy.call( this, source, false );\\n\\n    \\t\\tvar levels = source.levels;\\n\\n    \\t\\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\\n\\n    \\t\\t\\tvar level = levels[ i ];\\n\\n    \\t\\t\\tthis.addLevel( level.object.clone(), level.distance );\\n\\n    \\t\\t}\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\taddLevel: function ( object, distance ) {\\n\\n    \\t\\tif ( distance === undefined ) distance = 0;\\n\\n    \\t\\tdistance = Math.abs( distance );\\n\\n    \\t\\tvar levels = this.levels;\\n\\n    \\t\\tfor ( var l = 0; l < levels.length; l ++ ) {\\n\\n    \\t\\t\\tif ( distance < levels[ l ].distance ) {\\n\\n    \\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\tlevels.splice( l, 0, { distance: distance, object: object } );\\n\\n    \\t\\tthis.add( object );\\n\\n    \\t},\\n\\n    \\tgetObjectForDistance: function ( distance ) {\\n\\n    \\t\\tvar levels = this.levels;\\n\\n    \\t\\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\\n\\n    \\t\\t\\tif ( distance < levels[ i ].distance ) {\\n\\n    \\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\treturn levels[ i - 1 ].object;\\n\\n    \\t},\\n\\n    \\traycast: ( function () {\\n\\n    \\t\\tvar matrixPosition = new Vector3();\\n\\n    \\t\\treturn function raycast( raycaster, intersects ) {\\n\\n    \\t\\t\\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\\n\\n    \\t\\t\\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\\n\\n    \\t\\t\\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\\n\\n    \\t\\t};\\n\\n    \\t}() ),\\n\\n    \\tupdate: function () {\\n\\n    \\t\\tvar v1 = new Vector3();\\n    \\t\\tvar v2 = new Vector3();\\n\\n    \\t\\treturn function update( camera ) {\\n\\n    \\t\\t\\tvar levels = this.levels;\\n\\n    \\t\\t\\tif ( levels.length > 1 ) {\\n\\n    \\t\\t\\t\\tv1.setFromMatrixPosition( camera.matrixWorld );\\n    \\t\\t\\t\\tv2.setFromMatrixPosition( this.matrixWorld );\\n\\n    \\t\\t\\t\\tvar distance = v1.distanceTo( v2 );\\n\\n    \\t\\t\\t\\tlevels[ 0 ].object.visible = true;\\n\\n    \\t\\t\\t\\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\\n\\n    \\t\\t\\t\\t\\tif ( distance >= levels[ i ].distance ) {\\n\\n    \\t\\t\\t\\t\\t\\tlevels[ i - 1 ].object.visible = false;\\n    \\t\\t\\t\\t\\t\\tlevels[ i ].object.visible = true;\\n\\n    \\t\\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\tfor ( ; i < l; i ++ ) {\\n\\n    \\t\\t\\t\\t\\tlevels[ i ].object.visible = false;\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t};\\n\\n    \\t}(),\\n\\n    \\ttoJSON: function ( meta ) {\\n\\n    \\t\\tvar data = Object3D.prototype.toJSON.call( this, meta );\\n\\n    \\t\\tdata.object.levels = [];\\n\\n    \\t\\tvar levels = this.levels;\\n\\n    \\t\\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\\n\\n    \\t\\t\\tvar level = levels[ i ];\\n\\n    \\t\\t\\tdata.object.levels.push( {\\n    \\t\\t\\t\\tobject: level.object.uuid,\\n    \\t\\t\\t\\tdistance: level.distance\\n    \\t\\t\\t} );\\n\\n    \\t\\t}\\n\\n    \\t\\treturn data;\\n\\n    \\t}\\n\\n    } );\\n\\n    /**\\n     * @author alteredq / http://alteredqualia.com/\\n     */\\n\\n    function DataTexture( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\\n\\n    \\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\\n\\n    \\tthis.image = { data: data, width: width, height: height };\\n\\n    \\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\\n    \\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\\n\\n    \\tthis.flipY = false;\\n    \\tthis.generateMipmaps  = false;\\n\\n    }\\n\\n    DataTexture.prototype = Object.create( Texture.prototype );\\n    DataTexture.prototype.constructor = DataTexture;\\n\\n    DataTexture.prototype.isDataTexture = true;\\n\\n    /**\\n     * @author mikael emtinger / http://gomo.se/\\n     * @author alteredq / http://alteredqualia.com/\\n     * @author michael guerrero / http://realitymeltdown.com\\n     * @author ikerr / http://verold.com\\n     */\\n\\n    function Skeleton( bones, boneInverses, useVertexTexture ) {\\n\\n    \\tthis.useVertexTexture = useVertexTexture !== undefined ? useVertexTexture : true;\\n\\n    \\tthis.identityMatrix = new Matrix4();\\n\\n    \\t// copy the bone array\\n\\n    \\tbones = bones || [];\\n\\n    \\tthis.bones = bones.slice( 0 );\\n\\n    \\t// create a bone texture or an array of floats\\n\\n    \\tif ( this.useVertexTexture ) {\\n\\n    \\t\\t// layout (1 matrix = 4 pixels)\\n    \\t\\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\\n    \\t\\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\\n    \\t\\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\\n    \\t\\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\\n    \\t\\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\\n\\n\\n    \\t\\tvar size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\\n    \\t\\tsize = exports.Math.nextPowerOfTwo( Math.ceil( size ) );\\n    \\t\\tsize = Math.max( size, 4 );\\n\\n    \\t\\tthis.boneTextureWidth = size;\\n    \\t\\tthis.boneTextureHeight = size;\\n\\n    \\t\\tthis.boneMatrices = new Float32Array( this.boneTextureWidth * this.boneTextureHeight * 4 ); // 4 floats per RGBA pixel\\n    \\t\\tthis.boneTexture = new DataTexture( this.boneMatrices, this.boneTextureWidth, this.boneTextureHeight, RGBAFormat, FloatType );\\n\\n    \\t} else {\\n\\n    \\t\\tthis.boneMatrices = new Float32Array( 16 * this.bones.length );\\n\\n    \\t}\\n\\n    \\t// use the supplied bone inverses or calculate the inverses\\n\\n    \\tif ( boneInverses === undefined ) {\\n\\n    \\t\\tthis.calculateInverses();\\n\\n    \\t} else {\\n\\n    \\t\\tif ( this.bones.length === boneInverses.length ) {\\n\\n    \\t\\t\\tthis.boneInverses = boneInverses.slice( 0 );\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\tconsole.warn( 'THREE.Skeleton bonInverses is the wrong length.' );\\n\\n    \\t\\t\\tthis.boneInverses = [];\\n\\n    \\t\\t\\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\\n\\n    \\t\\t\\t\\tthis.boneInverses.push( new Matrix4() );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    }\\n\\n    Object.assign( Skeleton.prototype, {\\n\\n    \\tcalculateInverses: function () {\\n\\n    \\t\\tthis.boneInverses = [];\\n\\n    \\t\\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\\n\\n    \\t\\t\\tvar inverse = new Matrix4();\\n\\n    \\t\\t\\tif ( this.bones[ b ] ) {\\n\\n    \\t\\t\\t\\tinverse.getInverse( this.bones[ b ].matrixWorld );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tthis.boneInverses.push( inverse );\\n\\n    \\t\\t}\\n\\n    \\t},\\n\\n    \\tpose: function () {\\n\\n    \\t\\tvar bone;\\n\\n    \\t\\t// recover the bind-time world matrices\\n\\n    \\t\\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\\n\\n    \\t\\t\\tbone = this.bones[ b ];\\n\\n    \\t\\t\\tif ( bone ) {\\n\\n    \\t\\t\\t\\tbone.matrixWorld.getInverse( this.boneInverses[ b ] );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\t// compute the local matrices, positions, rotations and scales\\n\\n    \\t\\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\\n\\n    \\t\\t\\tbone = this.bones[ b ];\\n\\n    \\t\\t\\tif ( bone ) {\\n\\n    \\t\\t\\t\\tif ( (bone.parent && bone.parent.isBone) ) {\\n\\n    \\t\\t\\t\\t\\tbone.matrix.getInverse( bone.parent.matrixWorld );\\n    \\t\\t\\t\\t\\tbone.matrix.multiply( bone.matrixWorld );\\n\\n    \\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\tbone.matrix.copy( bone.matrixWorld );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t},\\n\\n    \\tupdate: ( function () {\\n\\n    \\t\\tvar offsetMatrix = new Matrix4();\\n\\n    \\t\\treturn function update() {\\n\\n    \\t\\t\\t// flatten bone matrices to array\\n\\n    \\t\\t\\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\\n\\n    \\t\\t\\t\\t// compute the offset between the current and the original transform\\n\\n    \\t\\t\\t\\tvar matrix = this.bones[ b ] ? this.bones[ b ].matrixWorld : this.identityMatrix;\\n\\n    \\t\\t\\t\\toffsetMatrix.multiplyMatrices( matrix, this.boneInverses[ b ] );\\n    \\t\\t\\t\\toffsetMatrix.toArray( this.boneMatrices, b * 16 );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tif ( this.useVertexTexture ) {\\n\\n    \\t\\t\\t\\tthis.boneTexture.needsUpdate = true;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t};\\n\\n    \\t} )(),\\n\\n    \\tclone: function () {\\n\\n    \\t\\treturn new Skeleton( this.bones, this.boneInverses, this.useVertexTexture );\\n\\n    \\t}\\n\\n    } );\\n\\n    /**\\n     * @author mikael emtinger / http://gomo.se/\\n     * @author alteredq / http://alteredqualia.com/\\n     * @author ikerr / http://verold.com\\n     */\\n\\n    function Bone( skin ) {\\n\\n    \\tObject3D.call( this );\\n\\n    \\tthis.type = 'Bone';\\n\\n    \\tthis.skin = skin;\\n\\n    }\\n\\n    Bone.prototype = Object.assign( Object.create( Object3D.prototype ), {\\n\\n    \\tconstructor: Bone,\\n\\n    \\tisBone: true,\\n\\n    \\tcopy: function ( source ) {\\n\\n    \\t\\tObject3D.prototype.copy.call( this, source );\\n\\n    \\t\\tthis.skin = source.skin;\\n\\n    \\t\\treturn this;\\n\\n    \\t}\\n\\n    } );\\n\\n    /**\\n     * @author mikael emtinger / http://gomo.se/\\n     * @author alteredq / http://alteredqualia.com/\\n     * @author ikerr / http://verold.com\\n     */\\n\\n    function SkinnedMesh( geometry, material, useVertexTexture ) {\\n\\n    \\tMesh.call( this, geometry, material );\\n\\n    \\tthis.type = 'SkinnedMesh';\\n\\n    \\tthis.bindMode = \\\"attached\\\";\\n    \\tthis.bindMatrix = new Matrix4();\\n    \\tthis.bindMatrixInverse = new Matrix4();\\n\\n    \\t// init bones\\n\\n    \\t// TODO: remove bone creation as there is no reason (other than\\n    \\t// convenience) for THREE.SkinnedMesh to do this.\\n\\n    \\tvar bones = [];\\n\\n    \\tif ( this.geometry && this.geometry.bones !== undefined ) {\\n\\n    \\t\\tvar bone, gbone;\\n\\n    \\t\\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\\n\\n    \\t\\t\\tgbone = this.geometry.bones[ b ];\\n\\n    \\t\\t\\tbone = new Bone( this );\\n    \\t\\t\\tbones.push( bone );\\n\\n    \\t\\t\\tbone.name = gbone.name;\\n    \\t\\t\\tbone.position.fromArray( gbone.pos );\\n    \\t\\t\\tbone.quaternion.fromArray( gbone.rotq );\\n    \\t\\t\\tif ( gbone.scl !== undefined ) bone.scale.fromArray( gbone.scl );\\n\\n    \\t\\t}\\n\\n    \\t\\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\\n\\n    \\t\\t\\tgbone = this.geometry.bones[ b ];\\n\\n    \\t\\t\\tif ( gbone.parent !== - 1 && gbone.parent !== null &&\\n    \\t\\t\\t\\t\\tbones[ gbone.parent ] !== undefined ) {\\n\\n    \\t\\t\\t\\tbones[ gbone.parent ].add( bones[ b ] );\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\tthis.add( bones[ b ] );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\tthis.normalizeSkinWeights();\\n\\n    \\tthis.updateMatrixWorld( true );\\n    \\tthis.bind( new Skeleton( bones, undefined, useVertexTexture ), this.matrixWorld );\\n\\n    }\\n\\n\\n    SkinnedMesh.prototype = Object.assign( Object.create( Mesh.prototype ), {\\n\\n    \\tconstructor: SkinnedMesh,\\n\\n    \\tisSkinnedMesh: true,\\n\\n    \\tbind: function( skeleton, bindMatrix ) {\\n\\n    \\t\\tthis.skeleton = skeleton;\\n\\n    \\t\\tif ( bindMatrix === undefined ) {\\n\\n    \\t\\t\\tthis.updateMatrixWorld( true );\\n\\n    \\t\\t\\tthis.skeleton.calculateInverses();\\n\\n    \\t\\t\\tbindMatrix = this.matrixWorld;\\n\\n    \\t\\t}\\n\\n    \\t\\tthis.bindMatrix.copy( bindMatrix );\\n    \\t\\tthis.bindMatrixInverse.getInverse( bindMatrix );\\n\\n    \\t},\\n\\n    \\tpose: function () {\\n\\n    \\t\\tthis.skeleton.pose();\\n\\n    \\t},\\n\\n    \\tnormalizeSkinWeights: function () {\\n\\n    \\t\\tif ( (this.geometry && this.geometry.isGeometry) ) {\\n\\n    \\t\\t\\tfor ( var i = 0; i < this.geometry.skinWeights.length; i ++ ) {\\n\\n    \\t\\t\\t\\tvar sw = this.geometry.skinWeights[ i ];\\n\\n    \\t\\t\\t\\tvar scale = 1.0 / sw.lengthManhattan();\\n\\n    \\t\\t\\t\\tif ( scale !== Infinity ) {\\n\\n    \\t\\t\\t\\t\\tsw.multiplyScalar( scale );\\n\\n    \\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\tsw.set( 1, 0, 0, 0 ); // do something reasonable\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t} else if ( (this.geometry && this.geometry.isBufferGeometry) ) {\\n\\n    \\t\\t\\tvar vec = new Vector4();\\n\\n    \\t\\t\\tvar skinWeight = this.geometry.attributes.skinWeight;\\n\\n    \\t\\t\\tfor ( var i = 0; i < skinWeight.count; i ++ ) {\\n\\n    \\t\\t\\t\\tvec.x = skinWeight.getX( i );\\n    \\t\\t\\t\\tvec.y = skinWeight.getY( i );\\n    \\t\\t\\t\\tvec.z = skinWeight.getZ( i );\\n    \\t\\t\\t\\tvec.w = skinWeight.getW( i );\\n\\n    \\t\\t\\t\\tvar scale = 1.0 / vec.lengthManhattan();\\n\\n    \\t\\t\\t\\tif ( scale !== Infinity ) {\\n\\n    \\t\\t\\t\\t\\tvec.multiplyScalar( scale );\\n\\n    \\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\tvec.set( 1, 0, 0, 0 ); // do something reasonable\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\tskinWeight.setXYZW( i, vec.x, vec.y, vec.z, vec.w );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t},\\n\\n    \\tupdateMatrixWorld: function( force ) {\\n\\n    \\t\\tMesh.prototype.updateMatrixWorld.call( this, true );\\n\\n    \\t\\tif ( this.bindMode === \\\"attached\\\" ) {\\n\\n    \\t\\t\\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\\n\\n    \\t\\t} else if ( this.bindMode === \\\"detached\\\" ) {\\n\\n    \\t\\t\\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\tconsole.warn( 'THREE.SkinnedMesh unrecognized bindMode: ' + this.bindMode );\\n\\n    \\t\\t}\\n\\n    \\t},\\n\\n    \\tclone: function() {\\n\\n    \\t\\treturn new this.constructor( this.geometry, this.material, this.skeleton.useVertexTexture ).copy( this );\\n\\n    \\t}\\n\\n    } );\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     * @author alteredq / http://alteredqualia.com/\\n     *\\n     * parameters = {\\n     *  color: <hex>,\\n     *  opacity: <float>,\\n     *\\n     *  linewidth: <float>,\\n     *  linecap: \\\"round\\\",\\n     *  linejoin: \\\"round\\\"\\n     * }\\n     */\\n\\n    function LineBasicMaterial( parameters ) {\\n\\n    \\tMaterial.call( this );\\n\\n    \\tthis.type = 'LineBasicMaterial';\\n\\n    \\tthis.color = new Color( 0xffffff );\\n\\n    \\tthis.linewidth = 1;\\n    \\tthis.linecap = 'round';\\n    \\tthis.linejoin = 'round';\\n\\n    \\tthis.lights = false;\\n\\n    \\tthis.setValues( parameters );\\n\\n    }\\n\\n    LineBasicMaterial.prototype = Object.create( Material.prototype );\\n    LineBasicMaterial.prototype.constructor = LineBasicMaterial;\\n\\n    LineBasicMaterial.prototype.isLineBasicMaterial = true;\\n\\n    LineBasicMaterial.prototype.copy = function ( source ) {\\n\\n    \\tMaterial.prototype.copy.call( this, source );\\n\\n    \\tthis.color.copy( source.color );\\n\\n    \\tthis.linewidth = source.linewidth;\\n    \\tthis.linecap = source.linecap;\\n    \\tthis.linejoin = source.linejoin;\\n\\n    \\treturn this;\\n\\n    };\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     */\\n\\n    function Line( geometry, material, mode ) {\\n\\n    \\tif ( mode === 1 ) {\\n\\n    \\t\\tconsole.warn( 'THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.' );\\n    \\t\\treturn new LineSegments( geometry, material );\\n\\n    \\t}\\n\\n    \\tObject3D.call( this );\\n\\n    \\tthis.type = 'Line';\\n\\n    \\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\\n    \\tthis.material = material !== undefined ? material : new LineBasicMaterial( { color: Math.random() * 0xffffff } );\\n\\n    }\\n\\n    Line.prototype = Object.assign( Object.create( Object3D.prototype ), {\\n\\n    \\tconstructor: Line,\\n\\n    \\tisLine: true,\\n\\n    \\traycast: ( function () {\\n\\n    \\t\\tvar inverseMatrix = new Matrix4();\\n    \\t\\tvar ray = new Ray();\\n    \\t\\tvar sphere = new Sphere();\\n\\n    \\t\\treturn function raycast( raycaster, intersects ) {\\n\\n    \\t\\t\\tvar precision = raycaster.linePrecision;\\n    \\t\\t\\tvar precisionSq = precision * precision;\\n\\n    \\t\\t\\tvar geometry = this.geometry;\\n    \\t\\t\\tvar matrixWorld = this.matrixWorld;\\n\\n    \\t\\t\\t// Checking boundingSphere distance to ray\\n\\n    \\t\\t\\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\\n\\n    \\t\\t\\tsphere.copy( geometry.boundingSphere );\\n    \\t\\t\\tsphere.applyMatrix4( matrixWorld );\\n\\n    \\t\\t\\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\\n\\n    \\t\\t\\t//\\n\\n    \\t\\t\\tinverseMatrix.getInverse( matrixWorld );\\n    \\t\\t\\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\\n\\n    \\t\\t\\tvar vStart = new Vector3();\\n    \\t\\t\\tvar vEnd = new Vector3();\\n    \\t\\t\\tvar interSegment = new Vector3();\\n    \\t\\t\\tvar interRay = new Vector3();\\n    \\t\\t\\tvar step = (this && this.isLineSegments) ? 2 : 1;\\n\\n    \\t\\t\\tif ( (geometry && geometry.isBufferGeometry) ) {\\n\\n    \\t\\t\\t\\tvar index = geometry.index;\\n    \\t\\t\\t\\tvar attributes = geometry.attributes;\\n    \\t\\t\\t\\tvar positions = attributes.position.array;\\n\\n    \\t\\t\\t\\tif ( index !== null ) {\\n\\n    \\t\\t\\t\\t\\tvar indices = index.array;\\n\\n    \\t\\t\\t\\t\\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\\n\\n    \\t\\t\\t\\t\\t\\tvar a = indices[ i ];\\n    \\t\\t\\t\\t\\t\\tvar b = indices[ i + 1 ];\\n\\n    \\t\\t\\t\\t\\t\\tvStart.fromArray( positions, a * 3 );\\n    \\t\\t\\t\\t\\t\\tvEnd.fromArray( positions, b * 3 );\\n\\n    \\t\\t\\t\\t\\t\\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\\n\\n    \\t\\t\\t\\t\\t\\tif ( distSq > precisionSq ) continue;\\n\\n    \\t\\t\\t\\t\\t\\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\\n\\n    \\t\\t\\t\\t\\t\\tvar distance = raycaster.ray.origin.distanceTo( interRay );\\n\\n    \\t\\t\\t\\t\\t\\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\\n\\n    \\t\\t\\t\\t\\t\\tintersects.push( {\\n\\n    \\t\\t\\t\\t\\t\\t\\tdistance: distance,\\n    \\t\\t\\t\\t\\t\\t\\t// What do we want? intersection point on the ray or on the segment??\\n    \\t\\t\\t\\t\\t\\t\\t// point: raycaster.ray.at( distance ),\\n    \\t\\t\\t\\t\\t\\t\\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\\n    \\t\\t\\t\\t\\t\\t\\tindex: i,\\n    \\t\\t\\t\\t\\t\\t\\tface: null,\\n    \\t\\t\\t\\t\\t\\t\\tfaceIndex: null,\\n    \\t\\t\\t\\t\\t\\t\\tobject: this\\n\\n    \\t\\t\\t\\t\\t\\t} );\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\\n\\n    \\t\\t\\t\\t\\t\\tvStart.fromArray( positions, 3 * i );\\n    \\t\\t\\t\\t\\t\\tvEnd.fromArray( positions, 3 * i + 3 );\\n\\n    \\t\\t\\t\\t\\t\\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\\n\\n    \\t\\t\\t\\t\\t\\tif ( distSq > precisionSq ) continue;\\n\\n    \\t\\t\\t\\t\\t\\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\\n\\n    \\t\\t\\t\\t\\t\\tvar distance = raycaster.ray.origin.distanceTo( interRay );\\n\\n    \\t\\t\\t\\t\\t\\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\\n\\n    \\t\\t\\t\\t\\t\\tintersects.push( {\\n\\n    \\t\\t\\t\\t\\t\\t\\tdistance: distance,\\n    \\t\\t\\t\\t\\t\\t\\t// What do we want? intersection point on the ray or on the segment??\\n    \\t\\t\\t\\t\\t\\t\\t// point: raycaster.ray.at( distance ),\\n    \\t\\t\\t\\t\\t\\t\\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\\n    \\t\\t\\t\\t\\t\\t\\tindex: i,\\n    \\t\\t\\t\\t\\t\\t\\tface: null,\\n    \\t\\t\\t\\t\\t\\t\\tfaceIndex: null,\\n    \\t\\t\\t\\t\\t\\t\\tobject: this\\n\\n    \\t\\t\\t\\t\\t\\t} );\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t} else if ( (geometry && geometry.isGeometry) ) {\\n\\n    \\t\\t\\t\\tvar vertices = geometry.vertices;\\n    \\t\\t\\t\\tvar nbVertices = vertices.length;\\n\\n    \\t\\t\\t\\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\\n\\n    \\t\\t\\t\\t\\tvar distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\\n\\n    \\t\\t\\t\\t\\tif ( distSq > precisionSq ) continue;\\n\\n    \\t\\t\\t\\t\\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\\n\\n    \\t\\t\\t\\t\\tvar distance = raycaster.ray.origin.distanceTo( interRay );\\n\\n    \\t\\t\\t\\t\\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\\n\\n    \\t\\t\\t\\t\\tintersects.push( {\\n\\n    \\t\\t\\t\\t\\t\\tdistance: distance,\\n    \\t\\t\\t\\t\\t\\t// What do we want? intersection point on the ray or on the segment??\\n    \\t\\t\\t\\t\\t\\t// point: raycaster.ray.at( distance ),\\n    \\t\\t\\t\\t\\t\\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\\n    \\t\\t\\t\\t\\t\\tindex: i,\\n    \\t\\t\\t\\t\\t\\tface: null,\\n    \\t\\t\\t\\t\\t\\tfaceIndex: null,\\n    \\t\\t\\t\\t\\t\\tobject: this\\n\\n    \\t\\t\\t\\t\\t} );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t};\\n\\n    \\t}() ),\\n\\n    \\tclone: function () {\\n\\n    \\t\\treturn new this.constructor( this.geometry, this.material ).copy( this );\\n\\n    \\t}\\n\\n    } );\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     */\\n\\n    function LineSegments( geometry, material ) {\\n\\n    \\tLine.call( this, geometry, material );\\n\\n    \\tthis.type = 'LineSegments';\\n\\n    }\\n\\n    LineSegments.prototype = Object.assign( Object.create( Line.prototype ), {\\n\\n    \\tconstructor: LineSegments,\\n\\n    \\tisLineSegments: true\\n\\n    } );\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     * @author alteredq / http://alteredqualia.com/\\n     *\\n     * parameters = {\\n     *  color: <hex>,\\n     *  opacity: <float>,\\n     *  map: new THREE.Texture( <Image> ),\\n     *\\n     *  size: <float>,\\n     *  sizeAttenuation: <bool>\\n     * }\\n     */\\n\\n    function PointsMaterial( parameters ) {\\n\\n    \\tMaterial.call( this );\\n\\n    \\tthis.type = 'PointsMaterial';\\n\\n    \\tthis.color = new Color( 0xffffff );\\n\\n    \\tthis.map = null;\\n\\n    \\tthis.size = 1;\\n    \\tthis.sizeAttenuation = true;\\n\\n    \\tthis.lights = false;\\n\\n    \\tthis.setValues( parameters );\\n\\n    }\\n\\n    PointsMaterial.prototype = Object.create( Material.prototype );\\n    PointsMaterial.prototype.constructor = PointsMaterial;\\n\\n    PointsMaterial.prototype.isPointsMaterial = true;\\n\\n    PointsMaterial.prototype.copy = function ( source ) {\\n\\n    \\tMaterial.prototype.copy.call( this, source );\\n\\n    \\tthis.color.copy( source.color );\\n\\n    \\tthis.map = source.map;\\n\\n    \\tthis.size = source.size;\\n    \\tthis.sizeAttenuation = source.sizeAttenuation;\\n\\n    \\treturn this;\\n\\n    };\\n\\n    /**\\n     * @author alteredq / http://alteredqualia.com/\\n     */\\n\\n    function Points( geometry, material ) {\\n\\n    \\tObject3D.call( this );\\n\\n    \\tthis.type = 'Points';\\n\\n    \\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\\n    \\tthis.material = material !== undefined ? material : new PointsMaterial( { color: Math.random() * 0xffffff } );\\n\\n    }\\n\\n    Points.prototype = Object.assign( Object.create( Object3D.prototype ), {\\n\\n    \\tconstructor: Points,\\n\\n    \\tisPoints: true,\\n\\n    \\traycast: ( function () {\\n\\n    \\t\\tvar inverseMatrix = new Matrix4();\\n    \\t\\tvar ray = new Ray();\\n    \\t\\tvar sphere = new Sphere();\\n\\n    \\t\\treturn function raycast( raycaster, intersects ) {\\n\\n    \\t\\t\\tvar object = this;\\n    \\t\\t\\tvar geometry = this.geometry;\\n    \\t\\t\\tvar matrixWorld = this.matrixWorld;\\n    \\t\\t\\tvar threshold = raycaster.params.Points.threshold;\\n\\n    \\t\\t\\t// Checking boundingSphere distance to ray\\n\\n    \\t\\t\\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\\n\\n    \\t\\t\\tsphere.copy( geometry.boundingSphere );\\n    \\t\\t\\tsphere.applyMatrix4( matrixWorld );\\n\\n    \\t\\t\\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\\n\\n    \\t\\t\\t//\\n\\n    \\t\\t\\tinverseMatrix.getInverse( matrixWorld );\\n    \\t\\t\\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\\n\\n    \\t\\t\\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\\n    \\t\\t\\tvar localThresholdSq = localThreshold * localThreshold;\\n    \\t\\t\\tvar position = new Vector3();\\n\\n    \\t\\t\\tfunction testPoint( point, index ) {\\n\\n    \\t\\t\\t\\tvar rayPointDistanceSq = ray.distanceSqToPoint( point );\\n\\n    \\t\\t\\t\\tif ( rayPointDistanceSq < localThresholdSq ) {\\n\\n    \\t\\t\\t\\t\\tvar intersectPoint = ray.closestPointToPoint( point );\\n    \\t\\t\\t\\t\\tintersectPoint.applyMatrix4( matrixWorld );\\n\\n    \\t\\t\\t\\t\\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\\n\\n    \\t\\t\\t\\t\\tif ( distance < raycaster.near || distance > raycaster.far ) return;\\n\\n    \\t\\t\\t\\t\\tintersects.push( {\\n\\n    \\t\\t\\t\\t\\t\\tdistance: distance,\\n    \\t\\t\\t\\t\\t\\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\\n    \\t\\t\\t\\t\\t\\tpoint: intersectPoint.clone(),\\n    \\t\\t\\t\\t\\t\\tindex: index,\\n    \\t\\t\\t\\t\\t\\tface: null,\\n    \\t\\t\\t\\t\\t\\tobject: object\\n\\n    \\t\\t\\t\\t\\t} );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tif ( (geometry && geometry.isBufferGeometry) ) {\\n\\n    \\t\\t\\t\\tvar index = geometry.index;\\n    \\t\\t\\t\\tvar attributes = geometry.attributes;\\n    \\t\\t\\t\\tvar positions = attributes.position.array;\\n\\n    \\t\\t\\t\\tif ( index !== null ) {\\n\\n    \\t\\t\\t\\t\\tvar indices = index.array;\\n\\n    \\t\\t\\t\\t\\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\\n\\n    \\t\\t\\t\\t\\t\\tvar a = indices[ i ];\\n\\n    \\t\\t\\t\\t\\t\\tposition.fromArray( positions, a * 3 );\\n\\n    \\t\\t\\t\\t\\t\\ttestPoint( position, a );\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\tfor ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\\n\\n    \\t\\t\\t\\t\\t\\tposition.fromArray( positions, i * 3 );\\n\\n    \\t\\t\\t\\t\\t\\ttestPoint( position, i );\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\tvar vertices = geometry.vertices;\\n\\n    \\t\\t\\t\\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\\n\\n    \\t\\t\\t\\t\\ttestPoint( vertices[ i ], i );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t};\\n\\n    \\t}() ),\\n\\n    \\tclone: function () {\\n\\n    \\t\\treturn new this.constructor( this.geometry, this.material ).copy( this );\\n\\n    \\t}\\n\\n    } );\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     */\\n\\n    function Group() {\\n\\n    \\tObject3D.call( this );\\n\\n    \\tthis.type = 'Group';\\n\\n    }\\n\\n    Group.prototype = Object.assign( Object.create( Object3D.prototype ), {\\n\\n    \\tconstructor: Group\\n\\n    } );\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     */\\n\\n    function VideoTexture( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\\n\\n    \\tTexture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\\n\\n    \\tthis.generateMipmaps = false;\\n\\n    \\tvar scope = this;\\n\\n    \\tfunction update() {\\n\\n    \\t\\trequestAnimationFrame( update );\\n\\n    \\t\\tif ( video.readyState >= video.HAVE_CURRENT_DATA ) {\\n\\n    \\t\\t\\tscope.needsUpdate = true;\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\tupdate();\\n\\n    }\\n\\n    VideoTexture.prototype = Object.create( Texture.prototype );\\n    VideoTexture.prototype.constructor = VideoTexture;\\n\\n    /**\\n     * @author alteredq / http://alteredqualia.com/\\n     */\\n\\n    function CompressedTexture( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\\n\\n    \\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\\n\\n    \\tthis.image = { width: width, height: height };\\n    \\tthis.mipmaps = mipmaps;\\n\\n    \\t// no flipping for cube textures\\n    \\t// (also flipping doesn't work for compressed textures )\\n\\n    \\tthis.flipY = false;\\n\\n    \\t// can't generate mipmaps for compressed textures\\n    \\t// mips must be embedded in DDS files\\n\\n    \\tthis.generateMipmaps = false;\\n\\n    }\\n\\n    CompressedTexture.prototype = Object.create( Texture.prototype );\\n    CompressedTexture.prototype.constructor = CompressedTexture;\\n\\n    CompressedTexture.prototype.isCompressedTexture = true;\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     */\\n\\n    function CanvasTexture( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\\n\\n    \\tTexture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\\n\\n    \\tthis.needsUpdate = true;\\n\\n    }\\n\\n    CanvasTexture.prototype = Object.create( Texture.prototype );\\n    CanvasTexture.prototype.constructor = CanvasTexture;\\n\\n    /**\\n     * @author Matt DesLauriers / @mattdesl\\n     * @author atix / arthursilber.de\\n     */\\n\\n    function DepthTexture( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\\n\\n    \\tformat = format !== undefined ? format : DepthFormat;\\n\\n    \\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\\n\\n    \\t\\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' )\\n\\n    \\t}\\n\\n    \\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\\n\\n    \\tthis.image = { width: width, height: height };\\n\\n    \\tthis.type = type !== undefined ? type : UnsignedShortType;\\n\\n    \\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\\n    \\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\\n\\n    \\tthis.flipY = false;\\n    \\tthis.generateMipmaps\\t= false;\\n\\n    }\\n\\n    DepthTexture.prototype = Object.create( Texture.prototype );\\n    DepthTexture.prototype.constructor = DepthTexture;\\n    DepthTexture.prototype.isDepthTexture = true;\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     */\\n\\n    function WireframeGeometry( geometry ) {\\n\\n    \\tBufferGeometry.call( this );\\n\\n    \\tvar edge = [ 0, 0 ], hash = {};\\n\\n    \\tfunction sortFunction( a, b ) {\\n\\n    \\t\\treturn a - b;\\n\\n    \\t}\\n\\n    \\tvar keys = [ 'a', 'b', 'c' ];\\n\\n    \\tif ( (geometry && geometry.isGeometry) ) {\\n\\n    \\t\\tvar vertices = geometry.vertices;\\n    \\t\\tvar faces = geometry.faces;\\n    \\t\\tvar numEdges = 0;\\n\\n    \\t\\t// allocate maximal size\\n    \\t\\tvar edges = new Uint32Array( 6 * faces.length );\\n\\n    \\t\\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\\n\\n    \\t\\t\\tvar face = faces[ i ];\\n\\n    \\t\\t\\tfor ( var j = 0; j < 3; j ++ ) {\\n\\n    \\t\\t\\t\\tedge[ 0 ] = face[ keys[ j ] ];\\n    \\t\\t\\t\\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\\n    \\t\\t\\t\\tedge.sort( sortFunction );\\n\\n    \\t\\t\\t\\tvar key = edge.toString();\\n\\n    \\t\\t\\t\\tif ( hash[ key ] === undefined ) {\\n\\n    \\t\\t\\t\\t\\tedges[ 2 * numEdges ] = edge[ 0 ];\\n    \\t\\t\\t\\t\\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\\n    \\t\\t\\t\\t\\thash[ key ] = true;\\n    \\t\\t\\t\\t\\tnumEdges ++;\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\tvar coords = new Float32Array( numEdges * 2 * 3 );\\n\\n    \\t\\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\\n\\n    \\t\\t\\tfor ( var j = 0; j < 2; j ++ ) {\\n\\n    \\t\\t\\t\\tvar vertex = vertices[ edges [ 2 * i + j ] ];\\n\\n    \\t\\t\\t\\tvar index = 6 * i + 3 * j;\\n    \\t\\t\\t\\tcoords[ index + 0 ] = vertex.x;\\n    \\t\\t\\t\\tcoords[ index + 1 ] = vertex.y;\\n    \\t\\t\\t\\tcoords[ index + 2 ] = vertex.z;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\tthis.addAttribute( 'position', new BufferAttribute( coords, 3 ) );\\n\\n    \\t} else if ( (geometry && geometry.isBufferGeometry) ) {\\n\\n    \\t\\tif ( geometry.index !== null ) {\\n\\n    \\t\\t\\t// Indexed BufferGeometry\\n\\n    \\t\\t\\tvar indices = geometry.index.array;\\n    \\t\\t\\tvar vertices = geometry.attributes.position;\\n    \\t\\t\\tvar groups = geometry.groups;\\n    \\t\\t\\tvar numEdges = 0;\\n\\n    \\t\\t\\tif ( groups.length === 0 ) {\\n\\n    \\t\\t\\t\\tgeometry.addGroup( 0, indices.length );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\t// allocate maximal size\\n    \\t\\t\\tvar edges = new Uint32Array( 2 * indices.length );\\n\\n    \\t\\t\\tfor ( var o = 0, ol = groups.length; o < ol; ++ o ) {\\n\\n    \\t\\t\\t\\tvar group = groups[ o ];\\n\\n    \\t\\t\\t\\tvar start = group.start;\\n    \\t\\t\\t\\tvar count = group.count;\\n\\n    \\t\\t\\t\\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\\n\\n    \\t\\t\\t\\t\\tfor ( var j = 0; j < 3; j ++ ) {\\n\\n    \\t\\t\\t\\t\\t\\tedge[ 0 ] = indices[ i + j ];\\n    \\t\\t\\t\\t\\t\\tedge[ 1 ] = indices[ i + ( j + 1 ) % 3 ];\\n    \\t\\t\\t\\t\\t\\tedge.sort( sortFunction );\\n\\n    \\t\\t\\t\\t\\t\\tvar key = edge.toString();\\n\\n    \\t\\t\\t\\t\\t\\tif ( hash[ key ] === undefined ) {\\n\\n    \\t\\t\\t\\t\\t\\t\\tedges[ 2 * numEdges ] = edge[ 0 ];\\n    \\t\\t\\t\\t\\t\\t\\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\\n    \\t\\t\\t\\t\\t\\t\\thash[ key ] = true;\\n    \\t\\t\\t\\t\\t\\t\\tnumEdges ++;\\n\\n    \\t\\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tvar coords = new Float32Array( numEdges * 2 * 3 );\\n\\n    \\t\\t\\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\\n\\n    \\t\\t\\t\\tfor ( var j = 0; j < 2; j ++ ) {\\n\\n    \\t\\t\\t\\t\\tvar index = 6 * i + 3 * j;\\n    \\t\\t\\t\\t\\tvar index2 = edges[ 2 * i + j ];\\n\\n    \\t\\t\\t\\t\\tcoords[ index + 0 ] = vertices.getX( index2 );\\n    \\t\\t\\t\\t\\tcoords[ index + 1 ] = vertices.getY( index2 );\\n    \\t\\t\\t\\t\\tcoords[ index + 2 ] = vertices.getZ( index2 );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tthis.addAttribute( 'position', new BufferAttribute( coords, 3 ) );\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\t// non-indexed BufferGeometry\\n\\n    \\t\\t\\tvar vertices = geometry.attributes.position.array;\\n    \\t\\t\\tvar numEdges = vertices.length / 3;\\n    \\t\\t\\tvar numTris = numEdges / 3;\\n\\n    \\t\\t\\tvar coords = new Float32Array( numEdges * 2 * 3 );\\n\\n    \\t\\t\\tfor ( var i = 0, l = numTris; i < l; i ++ ) {\\n\\n    \\t\\t\\t\\tfor ( var j = 0; j < 3; j ++ ) {\\n\\n    \\t\\t\\t\\t\\tvar index = 18 * i + 6 * j;\\n\\n    \\t\\t\\t\\t\\tvar index1 = 9 * i + 3 * j;\\n    \\t\\t\\t\\t\\tcoords[ index + 0 ] = vertices[ index1 ];\\n    \\t\\t\\t\\t\\tcoords[ index + 1 ] = vertices[ index1 + 1 ];\\n    \\t\\t\\t\\t\\tcoords[ index + 2 ] = vertices[ index1 + 2 ];\\n\\n    \\t\\t\\t\\t\\tvar index2 = 9 * i + 3 * ( ( j + 1 ) % 3 );\\n    \\t\\t\\t\\t\\tcoords[ index + 3 ] = vertices[ index2 ];\\n    \\t\\t\\t\\t\\tcoords[ index + 4 ] = vertices[ index2 + 1 ];\\n    \\t\\t\\t\\t\\tcoords[ index + 5 ] = vertices[ index2 + 2 ];\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tthis.addAttribute( 'position', new BufferAttribute( coords, 3 ) );\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    }\\n\\n    WireframeGeometry.prototype = Object.create( BufferGeometry.prototype );\\n    WireframeGeometry.prototype.constructor = WireframeGeometry;\\n\\n    /**\\n     * @author zz85 / https://github.com/zz85\\n     * Parametric Surfaces Geometry\\n     * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\\n     *\\n     * new THREE.ParametricGeometry( parametricFunction, uSegments, ySegements );\\n     *\\n     */\\n\\n    function ParametricGeometry( func, slices, stacks ) {\\n\\n    \\tGeometry.call( this );\\n\\n    \\tthis.type = 'ParametricGeometry';\\n\\n    \\tthis.parameters = {\\n    \\t\\tfunc: func,\\n    \\t\\tslices: slices,\\n    \\t\\tstacks: stacks\\n    \\t};\\n\\n    \\tvar verts = this.vertices;\\n    \\tvar faces = this.faces;\\n    \\tvar uvs = this.faceVertexUvs[ 0 ];\\n\\n    \\tvar i, j, p;\\n    \\tvar u, v;\\n\\n    \\tvar sliceCount = slices + 1;\\n\\n    \\tfor ( i = 0; i <= stacks; i ++ ) {\\n\\n    \\t\\tv = i / stacks;\\n\\n    \\t\\tfor ( j = 0; j <= slices; j ++ ) {\\n\\n    \\t\\t\\tu = j / slices;\\n\\n    \\t\\t\\tp = func( u, v );\\n    \\t\\t\\tverts.push( p );\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\tvar a, b, c, d;\\n    \\tvar uva, uvb, uvc, uvd;\\n\\n    \\tfor ( i = 0; i < stacks; i ++ ) {\\n\\n    \\t\\tfor ( j = 0; j < slices; j ++ ) {\\n\\n    \\t\\t\\ta = i * sliceCount + j;\\n    \\t\\t\\tb = i * sliceCount + j + 1;\\n    \\t\\t\\tc = ( i + 1 ) * sliceCount + j + 1;\\n    \\t\\t\\td = ( i + 1 ) * sliceCount + j;\\n\\n    \\t\\t\\tuva = new Vector2( j / slices, i / stacks );\\n    \\t\\t\\tuvb = new Vector2( ( j + 1 ) / slices, i / stacks );\\n    \\t\\t\\tuvc = new Vector2( ( j + 1 ) / slices, ( i + 1 ) / stacks );\\n    \\t\\t\\tuvd = new Vector2( j / slices, ( i + 1 ) / stacks );\\n\\n    \\t\\t\\tfaces.push( new Face3( a, b, d ) );\\n    \\t\\t\\tuvs.push( [ uva, uvb, uvd ] );\\n\\n    \\t\\t\\tfaces.push( new Face3( b, c, d ) );\\n    \\t\\t\\tuvs.push( [ uvb.clone(), uvc, uvd.clone() ] );\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\t// console.log(this);\\n\\n    \\t// magic bullet\\n    \\t// var diff = this.mergeVertices();\\n    \\t// console.log('removed ', diff, ' vertices by merging');\\n\\n    \\tthis.computeFaceNormals();\\n    \\tthis.computeVertexNormals();\\n\\n    }\\n\\n    ParametricGeometry.prototype = Object.create( Geometry.prototype );\\n    ParametricGeometry.prototype.constructor = ParametricGeometry;\\n\\n    /**\\n     * @author clockworkgeek / https://github.com/clockworkgeek\\n     * @author timothypratley / https://github.com/timothypratley\\n     * @author WestLangley / http://github.com/WestLangley\\n    */\\n\\n    function PolyhedronGeometry( vertices, indices, radius, detail ) {\\n\\n    \\tGeometry.call( this );\\n\\n    \\tthis.type = 'PolyhedronGeometry';\\n\\n    \\tthis.parameters = {\\n    \\t\\tvertices: vertices,\\n    \\t\\tindices: indices,\\n    \\t\\tradius: radius,\\n    \\t\\tdetail: detail\\n    \\t};\\n\\n    \\tradius = radius || 1;\\n    \\tdetail = detail || 0;\\n\\n    \\tvar that = this;\\n\\n    \\tfor ( var i = 0, l = vertices.length; i < l; i += 3 ) {\\n\\n    \\t\\tprepare( new Vector3( vertices[ i ], vertices[ i + 1 ], vertices[ i + 2 ] ) );\\n\\n    \\t}\\n\\n    \\tvar p = this.vertices;\\n\\n    \\tvar faces = [];\\n\\n    \\tfor ( var i = 0, j = 0, l = indices.length; i < l; i += 3, j ++ ) {\\n\\n    \\t\\tvar v1 = p[ indices[ i ] ];\\n    \\t\\tvar v2 = p[ indices[ i + 1 ] ];\\n    \\t\\tvar v3 = p[ indices[ i + 2 ] ];\\n\\n    \\t\\tfaces[ j ] = new Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ] );\\n\\n    \\t}\\n\\n    \\tvar centroid = new Vector3();\\n\\n    \\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\\n\\n    \\t\\tsubdivide( faces[ i ], detail );\\n\\n    \\t}\\n\\n\\n    \\t// Handle case when face straddles the seam\\n\\n    \\tfor ( var i = 0, l = this.faceVertexUvs[ 0 ].length; i < l; i ++ ) {\\n\\n    \\t\\tvar uvs = this.faceVertexUvs[ 0 ][ i ];\\n\\n    \\t\\tvar x0 = uvs[ 0 ].x;\\n    \\t\\tvar x1 = uvs[ 1 ].x;\\n    \\t\\tvar x2 = uvs[ 2 ].x;\\n\\n    \\t\\tvar max = Math.max( x0, x1, x2 );\\n    \\t\\tvar min = Math.min( x0, x1, x2 );\\n\\n    \\t\\tif ( max > 0.9 && min < 0.1 ) {\\n\\n    \\t\\t\\t// 0.9 is somewhat arbitrary\\n\\n    \\t\\t\\tif ( x0 < 0.2 ) uvs[ 0 ].x += 1;\\n    \\t\\t\\tif ( x1 < 0.2 ) uvs[ 1 ].x += 1;\\n    \\t\\t\\tif ( x2 < 0.2 ) uvs[ 2 ].x += 1;\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n\\n    \\t// Apply radius\\n\\n    \\tfor ( var i = 0, l = this.vertices.length; i < l; i ++ ) {\\n\\n    \\t\\tthis.vertices[ i ].multiplyScalar( radius );\\n\\n    \\t}\\n\\n\\n    \\t// Merge vertices\\n\\n    \\tthis.mergeVertices();\\n\\n    \\tthis.computeFaceNormals();\\n\\n    \\tthis.boundingSphere = new Sphere( new Vector3(), radius );\\n\\n\\n    \\t// Project vector onto sphere's surface\\n\\n    \\tfunction prepare( vector ) {\\n\\n    \\t\\tvar vertex = vector.normalize().clone();\\n    \\t\\tvertex.index = that.vertices.push( vertex ) - 1;\\n\\n    \\t\\t// Texture coords are equivalent to map coords, calculate angle and convert to fraction of a circle.\\n\\n    \\t\\tvar u = azimuth( vector ) / 2 / Math.PI + 0.5;\\n    \\t\\tvar v = inclination( vector ) / Math.PI + 0.5;\\n    \\t\\tvertex.uv = new Vector2( u, 1 - v );\\n\\n    \\t\\treturn vertex;\\n\\n    \\t}\\n\\n\\n    \\t// Approximate a curved face with recursively sub-divided triangles.\\n\\n    \\tfunction make( v1, v2, v3 ) {\\n\\n    \\t\\tvar face = new Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ] );\\n    \\t\\tthat.faces.push( face );\\n\\n    \\t\\tcentroid.copy( v1 ).add( v2 ).add( v3 ).divideScalar( 3 );\\n\\n    \\t\\tvar azi = azimuth( centroid );\\n\\n    \\t\\tthat.faceVertexUvs[ 0 ].push( [\\n    \\t\\t\\tcorrectUV( v1.uv, v1, azi ),\\n    \\t\\t\\tcorrectUV( v2.uv, v2, azi ),\\n    \\t\\t\\tcorrectUV( v3.uv, v3, azi )\\n    \\t\\t] );\\n\\n    \\t}\\n\\n\\n    \\t// Analytically subdivide a face to the required detail level.\\n\\n    \\tfunction subdivide( face, detail ) {\\n\\n    \\t\\tvar cols = Math.pow( 2, detail );\\n    \\t\\tvar a = prepare( that.vertices[ face.a ] );\\n    \\t\\tvar b = prepare( that.vertices[ face.b ] );\\n    \\t\\tvar c = prepare( that.vertices[ face.c ] );\\n    \\t\\tvar v = [];\\n\\n    \\t\\t// Construct all of the vertices for this subdivision.\\n\\n    \\t\\tfor ( var i = 0 ; i <= cols; i ++ ) {\\n\\n    \\t\\t\\tv[ i ] = [];\\n\\n    \\t\\t\\tvar aj = prepare( a.clone().lerp( c, i / cols ) );\\n    \\t\\t\\tvar bj = prepare( b.clone().lerp( c, i / cols ) );\\n    \\t\\t\\tvar rows = cols - i;\\n\\n    \\t\\t\\tfor ( var j = 0; j <= rows; j ++ ) {\\n\\n    \\t\\t\\t\\tif ( j === 0 && i === cols ) {\\n\\n    \\t\\t\\t\\t\\tv[ i ][ j ] = aj;\\n\\n    \\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\tv[ i ][ j ] = prepare( aj.clone().lerp( bj, j / rows ) );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\t// Construct all of the faces.\\n\\n    \\t\\tfor ( var i = 0; i < cols ; i ++ ) {\\n\\n    \\t\\t\\tfor ( var j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\\n\\n    \\t\\t\\t\\tvar k = Math.floor( j / 2 );\\n\\n    \\t\\t\\t\\tif ( j % 2 === 0 ) {\\n\\n    \\t\\t\\t\\t\\tmake(\\n    \\t\\t\\t\\t\\t\\tv[ i ][ k + 1 ],\\n    \\t\\t\\t\\t\\t\\tv[ i + 1 ][ k ],\\n    \\t\\t\\t\\t\\t\\tv[ i ][ k ]\\n    \\t\\t\\t\\t\\t);\\n\\n    \\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\tmake(\\n    \\t\\t\\t\\t\\t\\tv[ i ][ k + 1 ],\\n    \\t\\t\\t\\t\\t\\tv[ i + 1 ][ k + 1 ],\\n    \\t\\t\\t\\t\\t\\tv[ i + 1 ][ k ]\\n    \\t\\t\\t\\t\\t);\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n\\n    \\t// Angle around the Y axis, counter-clockwise when looking from above.\\n\\n    \\tfunction azimuth( vector ) {\\n\\n    \\t\\treturn Math.atan2( vector.z, - vector.x );\\n\\n    \\t}\\n\\n\\n    \\t// Angle above the XZ plane.\\n\\n    \\tfunction inclination( vector ) {\\n\\n    \\t\\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\\n\\n    \\t}\\n\\n\\n    \\t// Texture fixing helper. Spheres have some odd behaviours.\\n\\n    \\tfunction correctUV( uv, vector, azimuth ) {\\n\\n    \\t\\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) uv = new Vector2( uv.x - 1, uv.y );\\n    \\t\\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) uv = new Vector2( azimuth / 2 / Math.PI + 0.5, uv.y );\\n    \\t\\treturn uv.clone();\\n\\n    \\t}\\n\\n    }\\n\\n    PolyhedronGeometry.prototype = Object.create( Geometry.prototype );\\n    PolyhedronGeometry.prototype.constructor = PolyhedronGeometry;\\n\\n    /**\\n     * @author timothypratley / https://github.com/timothypratley\\n     */\\n\\n    function TetrahedronGeometry( radius, detail ) {\\n\\n    \\tvar vertices = [\\n    \\t\\t 1,  1,  1,   - 1, - 1,  1,   - 1,  1, - 1,    1, - 1, - 1\\n    \\t];\\n\\n    \\tvar indices = [\\n    \\t\\t 2,  1,  0,    0,  3,  2,    1,  3,  0,    2,  3,  1\\n    \\t];\\n\\n    \\tPolyhedronGeometry.call( this, vertices, indices, radius, detail );\\n\\n    \\tthis.type = 'TetrahedronGeometry';\\n\\n    \\tthis.parameters = {\\n    \\t\\tradius: radius,\\n    \\t\\tdetail: detail\\n    \\t};\\n\\n    }\\n\\n    TetrahedronGeometry.prototype = Object.create( PolyhedronGeometry.prototype );\\n    TetrahedronGeometry.prototype.constructor = TetrahedronGeometry;\\n\\n    /**\\n     * @author timothypratley / https://github.com/timothypratley\\n     */\\n\\n    function OctahedronGeometry( radius, detail ) {\\n\\n    \\tvar vertices = [\\n    \\t\\t1, 0, 0,   - 1, 0, 0,    0, 1, 0,    0, - 1, 0,    0, 0, 1,    0, 0, - 1\\n    \\t];\\n\\n    \\tvar indices = [\\n    \\t\\t0, 2, 4,    0, 4, 3,    0, 3, 5,    0, 5, 2,    1, 2, 5,    1, 5, 3,    1, 3, 4,    1, 4, 2\\n    \\t];\\n\\n    \\tPolyhedronGeometry.call( this, vertices, indices, radius, detail );\\n\\n    \\tthis.type = 'OctahedronGeometry';\\n\\n    \\tthis.parameters = {\\n    \\t\\tradius: radius,\\n    \\t\\tdetail: detail\\n    \\t};\\n\\n    }\\n\\n    OctahedronGeometry.prototype = Object.create( PolyhedronGeometry.prototype );\\n    OctahedronGeometry.prototype.constructor = OctahedronGeometry;\\n\\n    /**\\n     * @author timothypratley / https://github.com/timothypratley\\n     */\\n\\n    function IcosahedronGeometry( radius, detail ) {\\n\\n    \\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\\n\\n    \\tvar vertices = [\\n    \\t\\t- 1,  t,  0,    1,  t,  0,   - 1, - t,  0,    1, - t,  0,\\n    \\t\\t 0, - 1,  t,    0,  1,  t,    0, - 1, - t,    0,  1, - t,\\n    \\t\\t t,  0, - 1,    t,  0,  1,   - t,  0, - 1,   - t,  0,  1\\n    \\t];\\n\\n    \\tvar indices = [\\n    \\t\\t 0, 11,  5,    0,  5,  1,    0,  1,  7,    0,  7, 10,    0, 10, 11,\\n    \\t\\t 1,  5,  9,    5, 11,  4,   11, 10,  2,   10,  7,  6,    7,  1,  8,\\n    \\t\\t 3,  9,  4,    3,  4,  2,    3,  2,  6,    3,  6,  8,    3,  8,  9,\\n    \\t\\t 4,  9,  5,    2,  4, 11,    6,  2, 10,    8,  6,  7,    9,  8,  1\\n    \\t];\\n\\n    \\tPolyhedronGeometry.call( this, vertices, indices, radius, detail );\\n\\n    \\tthis.type = 'IcosahedronGeometry';\\n\\n    \\tthis.parameters = {\\n    \\t\\tradius: radius,\\n    \\t\\tdetail: detail\\n    \\t};\\n\\n    }\\n\\n    IcosahedronGeometry.prototype = Object.create( PolyhedronGeometry.prototype );\\n    IcosahedronGeometry.prototype.constructor = IcosahedronGeometry;\\n\\n    /**\\n     * @author Abe Pazos / https://hamoid.com\\n     */\\n\\n    function DodecahedronGeometry( radius, detail ) {\\n\\n    \\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\\n    \\tvar r = 1 / t;\\n\\n    \\tvar vertices = [\\n\\n    \\t\\t// (±1, ±1, ±1)\\n    \\t\\t- 1, - 1, - 1,    - 1, - 1,  1,\\n    \\t\\t- 1,  1, - 1,    - 1,  1,  1,\\n    \\t\\t 1, - 1, - 1,     1, - 1,  1,\\n    \\t\\t 1,  1, - 1,     1,  1,  1,\\n\\n    \\t\\t// (0, ±1/φ, ±φ)\\n    \\t\\t 0, - r, - t,     0, - r,  t,\\n    \\t\\t 0,  r, - t,     0,  r,  t,\\n\\n    \\t\\t// (±1/φ, ±φ, 0)\\n    \\t\\t- r, - t,  0,    - r,  t,  0,\\n    \\t\\t r, - t,  0,     r,  t,  0,\\n\\n    \\t\\t// (±φ, 0, ±1/φ)\\n    \\t\\t- t,  0, - r,     t,  0, - r,\\n    \\t\\t- t,  0,  r,     t,  0,  r\\n    \\t];\\n\\n    \\tvar indices = [\\n    \\t\\t 3, 11,  7,      3,  7, 15,      3, 15, 13,\\n    \\t\\t 7, 19, 17,      7, 17,  6,      7,  6, 15,\\n    \\t\\t17,  4,  8,     17,  8, 10,     17, 10,  6,\\n    \\t\\t 8,  0, 16,      8, 16,  2,      8,  2, 10,\\n    \\t\\t 0, 12,  1,      0,  1, 18,      0, 18, 16,\\n    \\t\\t 6, 10,  2,      6,  2, 13,      6, 13, 15,\\n    \\t\\t 2, 16, 18,      2, 18,  3,      2,  3, 13,\\n    \\t\\t18,  1,  9,     18,  9, 11,     18, 11,  3,\\n    \\t\\t 4, 14, 12,      4, 12,  0,      4,  0,  8,\\n    \\t\\t11,  9,  5,     11,  5, 19,     11, 19,  7,\\n    \\t\\t19,  5, 14,     19, 14,  4,     19,  4, 17,\\n    \\t\\t 1, 12, 14,      1, 14,  5,      1,  5,  9\\n    \\t];\\n\\n    \\tPolyhedronGeometry.call( this, vertices, indices, radius, detail );\\n\\n    \\tthis.type = 'DodecahedronGeometry';\\n\\n    \\tthis.parameters = {\\n    \\t\\tradius: radius,\\n    \\t\\tdetail: detail\\n    \\t};\\n\\n    }\\n\\n    DodecahedronGeometry.prototype = Object.create( PolyhedronGeometry.prototype );\\n    DodecahedronGeometry.prototype.constructor = DodecahedronGeometry;\\n\\n    /**\\n     * @author WestLangley / https://github.com/WestLangley\\n     * @author zz85 / https://github.com/zz85\\n     * @author miningold / https://github.com/miningold\\n     * @author jonobr1 / https://github.com/jonobr1\\n     *\\n     * Modified from the TorusKnotGeometry by @oosmoxiecode\\n     *\\n     * Creates a tube which extrudes along a 3d spline\\n     *\\n     * Uses parallel transport frames as described in\\n     * http://www.cs.indiana.edu/pub/techreports/TR425.pdf\\n     */\\n\\n    function TubeGeometry( path, segments, radius, radialSegments, closed, taper ) {\\n\\n    \\tGeometry.call( this );\\n\\n    \\tthis.type = 'TubeGeometry';\\n\\n    \\tthis.parameters = {\\n    \\t\\tpath: path,\\n    \\t\\tsegments: segments,\\n    \\t\\tradius: radius,\\n    \\t\\tradialSegments: radialSegments,\\n    \\t\\tclosed: closed,\\n    \\t\\ttaper: taper\\n    \\t};\\n\\n    \\tsegments = segments || 64;\\n    \\tradius = radius || 1;\\n    \\tradialSegments = radialSegments || 8;\\n    \\tclosed = closed || false;\\n    \\ttaper = taper || TubeGeometry.NoTaper;\\n\\n    \\tvar grid = [];\\n\\n    \\tvar scope = this,\\n\\n    \\t\\ttangent,\\n    \\t\\tnormal,\\n    \\t\\tbinormal,\\n\\n    \\t\\tnumpoints = segments + 1,\\n\\n    \\t\\tu, v, r,\\n\\n    \\t\\tcx, cy,\\n    \\t\\tpos, pos2 = new Vector3(),\\n    \\t\\ti, j,\\n    \\t\\tip, jp,\\n    \\t\\ta, b, c, d,\\n    \\t\\tuva, uvb, uvc, uvd;\\n\\n    \\tvar frames = new TubeGeometry.FrenetFrames( path, segments, closed ),\\n    \\t\\ttangents = frames.tangents,\\n    \\t\\tnormals = frames.normals,\\n    \\t\\tbinormals = frames.binormals;\\n\\n    \\t// proxy internals\\n    \\tthis.tangents = tangents;\\n    \\tthis.normals = normals;\\n    \\tthis.binormals = binormals;\\n\\n    \\tfunction vert( x, y, z ) {\\n\\n    \\t\\treturn scope.vertices.push( new Vector3( x, y, z ) ) - 1;\\n\\n    \\t}\\n\\n    \\t// construct the grid\\n\\n    \\tfor ( i = 0; i < numpoints; i ++ ) {\\n\\n    \\t\\tgrid[ i ] = [];\\n\\n    \\t\\tu = i / ( numpoints - 1 );\\n\\n    \\t\\tpos = path.getPointAt( u );\\n\\n    \\t\\ttangent = tangents[ i ];\\n    \\t\\tnormal = normals[ i ];\\n    \\t\\tbinormal = binormals[ i ];\\n\\n    \\t\\tr = radius * taper( u );\\n\\n    \\t\\tfor ( j = 0; j < radialSegments; j ++ ) {\\n\\n    \\t\\t\\tv = j / radialSegments * 2 * Math.PI;\\n\\n    \\t\\t\\tcx = - r * Math.cos( v ); // TODO: Hack: Negating it so it faces outside.\\n    \\t\\t\\tcy = r * Math.sin( v );\\n\\n    \\t\\t\\tpos2.copy( pos );\\n    \\t\\t\\tpos2.x += cx * normal.x + cy * binormal.x;\\n    \\t\\t\\tpos2.y += cx * normal.y + cy * binormal.y;\\n    \\t\\t\\tpos2.z += cx * normal.z + cy * binormal.z;\\n\\n    \\t\\t\\tgrid[ i ][ j ] = vert( pos2.x, pos2.y, pos2.z );\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n\\n    \\t// construct the mesh\\n\\n    \\tfor ( i = 0; i < segments; i ++ ) {\\n\\n    \\t\\tfor ( j = 0; j < radialSegments; j ++ ) {\\n\\n    \\t\\t\\tip = ( closed ) ? ( i + 1 ) % segments : i + 1;\\n    \\t\\t\\tjp = ( j + 1 ) % radialSegments;\\n\\n    \\t\\t\\ta = grid[ i ][ j ];\\t\\t// *** NOT NECESSARILY PLANAR ! ***\\n    \\t\\t\\tb = grid[ ip ][ j ];\\n    \\t\\t\\tc = grid[ ip ][ jp ];\\n    \\t\\t\\td = grid[ i ][ jp ];\\n\\n    \\t\\t\\tuva = new Vector2( i / segments, j / radialSegments );\\n    \\t\\t\\tuvb = new Vector2( ( i + 1 ) / segments, j / radialSegments );\\n    \\t\\t\\tuvc = new Vector2( ( i + 1 ) / segments, ( j + 1 ) / radialSegments );\\n    \\t\\t\\tuvd = new Vector2( i / segments, ( j + 1 ) / radialSegments );\\n\\n    \\t\\t\\tthis.faces.push( new Face3( a, b, d ) );\\n    \\t\\t\\tthis.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\\n\\n    \\t\\t\\tthis.faces.push( new Face3( b, c, d ) );\\n    \\t\\t\\tthis.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\tthis.computeFaceNormals();\\n    \\tthis.computeVertexNormals();\\n\\n    }\\n\\n    TubeGeometry.prototype = Object.create( Geometry.prototype );\\n    TubeGeometry.prototype.constructor = TubeGeometry;\\n\\n    TubeGeometry.NoTaper = function ( u ) {\\n\\n    \\treturn 1;\\n\\n    };\\n\\n    TubeGeometry.SinusoidalTaper = function ( u ) {\\n\\n    \\treturn Math.sin( Math.PI * u );\\n\\n    };\\n\\n    // For computing of Frenet frames, exposing the tangents, normals and binormals the spline\\n    TubeGeometry.FrenetFrames = function ( path, segments, closed ) {\\n\\n    \\tvar\\tnormal = new Vector3(),\\n\\n    \\t\\ttangents = [],\\n    \\t\\tnormals = [],\\n    \\t\\tbinormals = [],\\n\\n    \\t\\tvec = new Vector3(),\\n    \\t\\tmat = new Matrix4(),\\n\\n    \\t\\tnumpoints = segments + 1,\\n    \\t\\ttheta,\\n    \\t\\tsmallest,\\n\\n    \\t\\ttx, ty, tz,\\n    \\t\\ti, u;\\n\\n\\n    \\t// expose internals\\n    \\tthis.tangents = tangents;\\n    \\tthis.normals = normals;\\n    \\tthis.binormals = binormals;\\n\\n    \\t// compute the tangent vectors for each segment on the path\\n\\n    \\tfor ( i = 0; i < numpoints; i ++ ) {\\n\\n    \\t\\tu = i / ( numpoints - 1 );\\n\\n    \\t\\ttangents[ i ] = path.getTangentAt( u );\\n    \\t\\ttangents[ i ].normalize();\\n\\n    \\t}\\n\\n    \\tinitialNormal3();\\n\\n    \\t/*\\n    \\tfunction initialNormal1(lastBinormal) {\\n    \\t\\t// fixed start binormal. Has dangers of 0 vectors\\n    \\t\\tnormals[ 0 ] = new THREE.Vector3();\\n    \\t\\tbinormals[ 0 ] = new THREE.Vector3();\\n    \\t\\tif (lastBinormal===undefined) lastBinormal = new THREE.Vector3( 0, 0, 1 );\\n    \\t\\tnormals[ 0 ].crossVectors( lastBinormal, tangents[ 0 ] ).normalize();\\n    \\t\\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\\n    \\t}\\n\\n    \\tfunction initialNormal2() {\\n\\n    \\t\\t// This uses the Frenet-Serret formula for deriving binormal\\n    \\t\\tvar t2 = path.getTangentAt( epsilon );\\n\\n    \\t\\tnormals[ 0 ] = new THREE.Vector3().subVectors( t2, tangents[ 0 ] ).normalize();\\n    \\t\\tbinormals[ 0 ] = new THREE.Vector3().crossVectors( tangents[ 0 ], normals[ 0 ] );\\n\\n    \\t\\tnormals[ 0 ].crossVectors( binormals[ 0 ], tangents[ 0 ] ).normalize(); // last binormal x tangent\\n    \\t\\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\\n\\n    \\t}\\n    \\t*/\\n\\n    \\tfunction initialNormal3() {\\n\\n    \\t\\t// select an initial normal vector perpendicular to the first tangent vector,\\n    \\t\\t// and in the direction of the smallest tangent xyz component\\n\\n    \\t\\tnormals[ 0 ] = new Vector3();\\n    \\t\\tbinormals[ 0 ] = new Vector3();\\n    \\t\\tsmallest = Number.MAX_VALUE;\\n    \\t\\ttx = Math.abs( tangents[ 0 ].x );\\n    \\t\\tty = Math.abs( tangents[ 0 ].y );\\n    \\t\\ttz = Math.abs( tangents[ 0 ].z );\\n\\n    \\t\\tif ( tx <= smallest ) {\\n\\n    \\t\\t\\tsmallest = tx;\\n    \\t\\t\\tnormal.set( 1, 0, 0 );\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( ty <= smallest ) {\\n\\n    \\t\\t\\tsmallest = ty;\\n    \\t\\t\\tnormal.set( 0, 1, 0 );\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( tz <= smallest ) {\\n\\n    \\t\\t\\tnormal.set( 0, 0, 1 );\\n\\n    \\t\\t}\\n\\n    \\t\\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\\n\\n    \\t\\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\\n    \\t\\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\\n\\n    \\t}\\n\\n\\n    \\t// compute the slowly-varying normal and binormal vectors for each segment on the path\\n\\n    \\tfor ( i = 1; i < numpoints; i ++ ) {\\n\\n    \\t\\tnormals[ i ] = normals[ i - 1 ].clone();\\n\\n    \\t\\tbinormals[ i ] = binormals[ i - 1 ].clone();\\n\\n    \\t\\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\\n\\n    \\t\\tif ( vec.length() > Number.EPSILON ) {\\n\\n    \\t\\t\\tvec.normalize();\\n\\n    \\t\\t\\ttheta = Math.acos( exports.Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\\n\\n    \\t\\t\\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\\n\\n    \\t\\t}\\n\\n    \\t\\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\\n\\n    \\t}\\n\\n\\n    \\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\\n\\n    \\tif ( closed ) {\\n\\n    \\t\\ttheta = Math.acos( exports.Math.clamp( normals[ 0 ].dot( normals[ numpoints - 1 ] ), - 1, 1 ) );\\n    \\t\\ttheta /= ( numpoints - 1 );\\n\\n    \\t\\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ numpoints - 1 ] ) ) > 0 ) {\\n\\n    \\t\\t\\ttheta = - theta;\\n\\n    \\t\\t}\\n\\n    \\t\\tfor ( i = 1; i < numpoints; i ++ ) {\\n\\n    \\t\\t\\t// twist a little...\\n    \\t\\t\\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\\n    \\t\\t\\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    };\\n\\n    /**\\n     * @author Mugen87 / https://github.com/Mugen87\\n     *\\n     * see: http://www.blackpawn.com/texts/pqtorus/\\n     */\\n    function TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) {\\n\\n    \\tBufferGeometry.call( this );\\n\\n    \\tthis.type = 'TorusKnotBufferGeometry';\\n\\n    \\tthis.parameters = {\\n    \\t\\tradius: radius,\\n    \\t\\ttube: tube,\\n    \\t\\ttubularSegments: tubularSegments,\\n    \\t\\tradialSegments: radialSegments,\\n    \\t\\tp: p,\\n    \\t\\tq: q\\n    \\t};\\n\\n    \\tradius = radius || 100;\\n    \\ttube = tube || 40;\\n    \\ttubularSegments = Math.floor( tubularSegments ) || 64;\\n    \\tradialSegments = Math.floor( radialSegments ) || 8;\\n    \\tp = p || 2;\\n    \\tq = q || 3;\\n\\n    \\t// used to calculate buffer length\\n    \\tvar vertexCount = ( ( radialSegments + 1 ) * ( tubularSegments + 1 ) );\\n    \\tvar indexCount = radialSegments * tubularSegments * 2 * 3;\\n\\n    \\t// buffers\\n    \\tvar indices = new BufferAttribute( new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount ) , 1 );\\n    \\tvar vertices = new BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\\n    \\tvar normals = new BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\\n    \\tvar uvs = new BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\\n\\n    \\t// helper variables\\n    \\tvar i, j, index = 0, indexOffset = 0;\\n\\n    \\tvar vertex = new Vector3();\\n    \\tvar normal = new Vector3();\\n    \\tvar uv = new Vector2();\\n\\n    \\tvar P1 = new Vector3();\\n    \\tvar P2 = new Vector3();\\n\\n    \\tvar B = new Vector3();\\n    \\tvar T = new Vector3();\\n    \\tvar N = new Vector3();\\n\\n    \\t// generate vertices, normals and uvs\\n\\n    \\tfor ( i = 0; i <= tubularSegments; ++ i ) {\\n\\n    \\t\\t// the radian \\\"u\\\" is used to calculate the position on the torus curve of the current tubular segement\\n\\n    \\t\\tvar u = i / tubularSegments * p * Math.PI * 2;\\n\\n    \\t\\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\\n    \\t\\t// these points are used to create a special \\\"coordinate space\\\", which is necessary to calculate the correct vertex positions\\n\\n    \\t\\tcalculatePositionOnCurve( u, p, q, radius, P1 );\\n    \\t\\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\\n\\n    \\t\\t// calculate orthonormal basis\\n\\n    \\t\\tT.subVectors( P2, P1 );\\n    \\t\\tN.addVectors( P2, P1 );\\n    \\t\\tB.crossVectors( T, N );\\n    \\t\\tN.crossVectors( B, T );\\n\\n    \\t\\t// normalize B, N. T can be ignored, we don't use it\\n\\n    \\t\\tB.normalize();\\n    \\t\\tN.normalize();\\n\\n    \\t\\tfor ( j = 0; j <= radialSegments; ++ j ) {\\n\\n    \\t\\t\\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\\n    \\t\\t\\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\\n\\n    \\t\\t\\tvar v = j / radialSegments * Math.PI * 2;\\n    \\t\\t\\tvar cx = - tube * Math.cos( v );\\n    \\t\\t\\tvar cy = tube * Math.sin( v );\\n\\n    \\t\\t\\t// now calculate the final vertex position.\\n    \\t\\t\\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\\n\\n    \\t\\t\\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\\n    \\t\\t\\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\\n    \\t\\t\\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\\n\\n    \\t\\t\\t// vertex\\n    \\t\\t\\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\\n\\n    \\t\\t\\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\\n    \\t\\t\\tnormal.subVectors( vertex, P1 ).normalize();\\n    \\t\\t\\tnormals.setXYZ( index, normal.x, normal.y, normal.z );\\n\\n    \\t\\t\\t// uv\\n    \\t\\t\\tuv.x = i / tubularSegments;\\n    \\t\\t\\tuv.y = j / radialSegments;\\n    \\t\\t\\tuvs.setXY( index, uv.x, uv.y );\\n\\n    \\t\\t\\t// increase index\\n    \\t\\t\\tindex ++;\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\t// generate indices\\n\\n    \\tfor ( j = 1; j <= tubularSegments; j ++ ) {\\n\\n    \\t\\tfor ( i = 1; i <= radialSegments; i ++ ) {\\n\\n    \\t\\t\\t// indices\\n    \\t\\t\\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\\n    \\t\\t\\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\\n    \\t\\t\\tvar c = ( radialSegments + 1 ) * j + i;\\n    \\t\\t\\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\\n\\n    \\t\\t\\t// face one\\n    \\t\\t\\tindices.setX( indexOffset, a ); indexOffset++;\\n    \\t\\t\\tindices.setX( indexOffset, b ); indexOffset++;\\n    \\t\\t\\tindices.setX( indexOffset, d ); indexOffset++;\\n\\n    \\t\\t\\t// face two\\n    \\t\\t\\tindices.setX( indexOffset, b ); indexOffset++;\\n    \\t\\t\\tindices.setX( indexOffset, c ); indexOffset++;\\n    \\t\\t\\tindices.setX( indexOffset, d ); indexOffset++;\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\t// build geometry\\n\\n    \\tthis.setIndex( indices );\\n    \\tthis.addAttribute( 'position', vertices );\\n    \\tthis.addAttribute( 'normal', normals );\\n    \\tthis.addAttribute( 'uv', uvs );\\n\\n    \\t// this function calculates the current position on the torus curve\\n\\n    \\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\\n\\n    \\t\\tvar cu = Math.cos( u );\\n    \\t\\tvar su = Math.sin( u );\\n    \\t\\tvar quOverP = q / p * u;\\n    \\t\\tvar cs = Math.cos( quOverP );\\n\\n    \\t\\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\\n    \\t\\tposition.y = radius * ( 2 + cs ) * su * 0.5;\\n    \\t\\tposition.z = radius * Math.sin( quOverP ) * 0.5;\\n\\n    \\t}\\n\\n    }\\n\\n    TorusKnotBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\\n    TorusKnotBufferGeometry.prototype.constructor = TorusKnotBufferGeometry;\\n\\n    /**\\n     * @author oosmoxiecode\\n     */\\n\\n    function TorusKnotGeometry( radius, tube, tubularSegments, radialSegments, p, q, heightScale ) {\\n\\n    \\tGeometry.call( this );\\n\\n    \\tthis.type = 'TorusKnotGeometry';\\n\\n    \\tthis.parameters = {\\n    \\t\\tradius: radius,\\n    \\t\\ttube: tube,\\n    \\t\\ttubularSegments: tubularSegments,\\n    \\t\\tradialSegments: radialSegments,\\n    \\t\\tp: p,\\n    \\t\\tq: q\\n    \\t};\\n\\n    \\tif( heightScale !== undefined ) console.warn( 'THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.' );\\n\\n    \\tthis.fromBufferGeometry( new TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) );\\n    \\tthis.mergeVertices();\\n\\n    }\\n\\n    TorusKnotGeometry.prototype = Object.create( Geometry.prototype );\\n    TorusKnotGeometry.prototype.constructor = TorusKnotGeometry;\\n\\n    /**\\n     * @author Mugen87 / https://github.com/Mugen87\\n     */\\n\\n    function TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\\n\\n    \\tBufferGeometry.call( this );\\n\\n    \\tthis.type = 'TorusBufferGeometry';\\n\\n    \\tthis.parameters = {\\n    \\t\\tradius: radius,\\n    \\t\\ttube: tube,\\n    \\t\\tradialSegments: radialSegments,\\n    \\t\\ttubularSegments: tubularSegments,\\n    \\t\\tarc: arc\\n    \\t};\\n\\n    \\tradius = radius || 100;\\n    \\ttube = tube || 40;\\n    \\tradialSegments = Math.floor( radialSegments ) || 8;\\n    \\ttubularSegments = Math.floor( tubularSegments ) || 6;\\n    \\tarc = arc || Math.PI * 2;\\n\\n    \\t// used to calculate buffer length\\n    \\tvar vertexCount = ( ( radialSegments + 1 ) * ( tubularSegments + 1 ) );\\n    \\tvar indexCount = radialSegments * tubularSegments * 2 * 3;\\n\\n    \\t// buffers\\n    \\tvar indices = new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount );\\n    \\tvar vertices = new Float32Array( vertexCount * 3 );\\n    \\tvar normals = new Float32Array( vertexCount * 3 );\\n    \\tvar uvs = new Float32Array( vertexCount * 2 );\\n\\n    \\t// offset variables\\n    \\tvar vertexBufferOffset = 0;\\n    \\tvar uvBufferOffset = 0;\\n    \\tvar indexBufferOffset = 0;\\n\\n    \\t// helper variables\\n    \\tvar center = new Vector3();\\n    \\tvar vertex = new Vector3();\\n    \\tvar normal = new Vector3();\\n\\n    \\tvar j, i;\\n\\n    \\t// generate vertices, normals and uvs\\n\\n    \\tfor ( j = 0; j <= radialSegments; j ++ ) {\\n\\n    \\t\\tfor ( i = 0; i <= tubularSegments; i ++ ) {\\n\\n    \\t\\t\\tvar u = i / tubularSegments * arc;\\n    \\t\\t\\tvar v = j / radialSegments * Math.PI * 2;\\n\\n    \\t\\t\\t// vertex\\n    \\t\\t\\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\\n    \\t\\t\\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\\n    \\t\\t\\tvertex.z = tube * Math.sin( v );\\n\\n    \\t\\t\\tvertices[ vertexBufferOffset ] = vertex.x;\\n    \\t\\t\\tvertices[ vertexBufferOffset + 1 ] = vertex.y;\\n    \\t\\t\\tvertices[ vertexBufferOffset + 2 ] = vertex.z;\\n\\n    \\t\\t\\t// this vector is used to calculate the normal\\n    \\t\\t\\tcenter.x = radius * Math.cos( u );\\n    \\t\\t\\tcenter.y = radius * Math.sin( u );\\n\\n    \\t\\t\\t// normal\\n    \\t\\t\\tnormal.subVectors( vertex, center ).normalize();\\n\\n    \\t\\t\\tnormals[ vertexBufferOffset ] = normal.x;\\n    \\t\\t\\tnormals[ vertexBufferOffset + 1 ] = normal.y;\\n    \\t\\t\\tnormals[ vertexBufferOffset + 2 ] = normal.z;\\n\\n    \\t\\t\\t// uv\\n    \\t\\t\\tuvs[ uvBufferOffset ] = i / tubularSegments;\\n    \\t\\t\\tuvs[ uvBufferOffset + 1 ] = j / radialSegments;\\n\\n    \\t\\t\\t// update offsets\\n    \\t\\t\\tvertexBufferOffset += 3;\\n    \\t\\t\\tuvBufferOffset += 2;\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\t// generate indices\\n\\n    \\tfor ( j = 1; j <= radialSegments; j ++ ) {\\n\\n    \\t\\tfor ( i = 1; i <= tubularSegments; i ++ ) {\\n\\n    \\t\\t\\t// indices\\n    \\t\\t\\tvar a = ( tubularSegments + 1 ) * j + i - 1;\\n    \\t\\t\\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\\n    \\t\\t\\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\\n    \\t\\t\\tvar d = ( tubularSegments + 1 ) * j + i;\\n\\n    \\t\\t\\t// face one\\n    \\t\\t\\tindices[ indexBufferOffset ] = a;\\n    \\t\\t\\tindices[ indexBufferOffset + 1 ] = b;\\n    \\t\\t\\tindices[ indexBufferOffset + 2 ] = d;\\n\\n    \\t\\t\\t// face two\\n    \\t\\t\\tindices[ indexBufferOffset + 3 ] = b;\\n    \\t\\t\\tindices[ indexBufferOffset + 4 ] = c;\\n    \\t\\t\\tindices[ indexBufferOffset + 5 ] = d;\\n\\n    \\t\\t\\t// update offset\\n    \\t\\t\\tindexBufferOffset += 6;\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\t// build geometry\\n    \\tthis.setIndex( new BufferAttribute( indices, 1 ) );\\n    \\tthis.addAttribute( 'position', new BufferAttribute( vertices, 3 ) );\\n    \\tthis.addAttribute( 'normal', new BufferAttribute( normals, 3 ) );\\n    \\tthis.addAttribute( 'uv', new BufferAttribute( uvs, 2 ) );\\n\\n    }\\n\\n    TorusBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\\n    TorusBufferGeometry.prototype.constructor = TorusBufferGeometry;\\n\\n    /**\\n     * @author oosmoxiecode\\n     * @author mrdoob / http://mrdoob.com/\\n     * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3DLite/src/away3dlite/primitives/Torus.as?r=2888\\n     */\\n\\n    function TorusGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\\n\\n    \\tGeometry.call( this );\\n\\n    \\tthis.type = 'TorusGeometry';\\n\\n    \\tthis.parameters = {\\n    \\t\\tradius: radius,\\n    \\t\\ttube: tube,\\n    \\t\\tradialSegments: radialSegments,\\n    \\t\\ttubularSegments: tubularSegments,\\n    \\t\\tarc: arc\\n    \\t};\\n\\n    \\tthis.fromBufferGeometry( new TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) );\\n\\n    }\\n\\n    TorusGeometry.prototype = Object.create( Geometry.prototype );\\n    TorusGeometry.prototype.constructor = TorusGeometry;\\n\\n    /**\\n     * @author zz85 / http://www.lab4games.net/zz85/blog\\n     */\\n\\n    exports.ShapeUtils = {\\n\\n    \\t// calculate area of the contour polygon\\n\\n    \\tarea: function ( contour ) {\\n\\n    \\t\\tvar n = contour.length;\\n    \\t\\tvar a = 0.0;\\n\\n    \\t\\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\\n\\n    \\t\\t\\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\\n\\n    \\t\\t}\\n\\n    \\t\\treturn a * 0.5;\\n\\n    \\t},\\n\\n    \\ttriangulate: ( function () {\\n\\n    \\t\\t/**\\n    \\t\\t * This code is a quick port of code written in C++ which was submitted to\\n    \\t\\t * flipcode.com by John W. Ratcliff  // July 22, 2000\\n    \\t\\t * See original code and more information here:\\n    \\t\\t * http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml\\n    \\t\\t *\\n    \\t\\t * ported to actionscript by Zevan Rosser\\n    \\t\\t * www.actionsnippet.com\\n    \\t\\t *\\n    \\t\\t * ported to javascript by Joshua Koo\\n    \\t\\t * http://www.lab4games.net/zz85/blog\\n    \\t\\t *\\n    \\t\\t */\\n\\n    \\t\\tfunction snip( contour, u, v, w, n, verts ) {\\n\\n    \\t\\t\\tvar p;\\n    \\t\\t\\tvar ax, ay, bx, by;\\n    \\t\\t\\tvar cx, cy, px, py;\\n\\n    \\t\\t\\tax = contour[ verts[ u ] ].x;\\n    \\t\\t\\tay = contour[ verts[ u ] ].y;\\n\\n    \\t\\t\\tbx = contour[ verts[ v ] ].x;\\n    \\t\\t\\tby = contour[ verts[ v ] ].y;\\n\\n    \\t\\t\\tcx = contour[ verts[ w ] ].x;\\n    \\t\\t\\tcy = contour[ verts[ w ] ].y;\\n\\n    \\t\\t\\tif ( Number.EPSILON > ( ( ( bx - ax ) * ( cy - ay ) ) - ( ( by - ay ) * ( cx - ax ) ) ) ) return false;\\n\\n    \\t\\t\\tvar aX, aY, bX, bY, cX, cY;\\n    \\t\\t\\tvar apx, apy, bpx, bpy, cpx, cpy;\\n    \\t\\t\\tvar cCROSSap, bCROSScp, aCROSSbp;\\n\\n    \\t\\t\\taX = cx - bx;  aY = cy - by;\\n    \\t\\t\\tbX = ax - cx;  bY = ay - cy;\\n    \\t\\t\\tcX = bx - ax;  cY = by - ay;\\n\\n    \\t\\t\\tfor ( p = 0; p < n; p ++ ) {\\n\\n    \\t\\t\\t\\tpx = contour[ verts[ p ] ].x;\\n    \\t\\t\\t\\tpy = contour[ verts[ p ] ].y;\\n\\n    \\t\\t\\t\\tif ( ( ( px === ax ) && ( py === ay ) ) ||\\n    \\t\\t\\t\\t\\t ( ( px === bx ) && ( py === by ) ) ||\\n    \\t\\t\\t\\t\\t ( ( px === cx ) && ( py === cy ) ) )\\tcontinue;\\n\\n    \\t\\t\\t\\tapx = px - ax;  apy = py - ay;\\n    \\t\\t\\t\\tbpx = px - bx;  bpy = py - by;\\n    \\t\\t\\t\\tcpx = px - cx;  cpy = py - cy;\\n\\n    \\t\\t\\t\\t// see if p is inside triangle abc\\n\\n    \\t\\t\\t\\taCROSSbp = aX * bpy - aY * bpx;\\n    \\t\\t\\t\\tcCROSSap = cX * apy - cY * apx;\\n    \\t\\t\\t\\tbCROSScp = bX * cpy - bY * cpx;\\n\\n    \\t\\t\\t\\tif ( ( aCROSSbp >= - Number.EPSILON ) && ( bCROSScp >= - Number.EPSILON ) && ( cCROSSap >= - Number.EPSILON ) ) return false;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\treturn true;\\n\\n    \\t\\t}\\n\\n    \\t\\t// takes in an contour array and returns\\n\\n    \\t\\treturn function triangulate( contour, indices ) {\\n\\n    \\t\\t\\tvar n = contour.length;\\n\\n    \\t\\t\\tif ( n < 3 ) return null;\\n\\n    \\t\\t\\tvar result = [],\\n    \\t\\t\\t\\tverts = [],\\n    \\t\\t\\t\\tvertIndices = [];\\n\\n    \\t\\t\\t/* we want a counter-clockwise polygon in verts */\\n\\n    \\t\\t\\tvar u, v, w;\\n\\n    \\t\\t\\tif ( exports.ShapeUtils.area( contour ) > 0.0 ) {\\n\\n    \\t\\t\\t\\tfor ( v = 0; v < n; v ++ ) verts[ v ] = v;\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\tfor ( v = 0; v < n; v ++ ) verts[ v ] = ( n - 1 ) - v;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tvar nv = n;\\n\\n    \\t\\t\\t/*  remove nv - 2 vertices, creating 1 triangle every time */\\n\\n    \\t\\t\\tvar count = 2 * nv;   /* error detection */\\n\\n    \\t\\t\\tfor ( v = nv - 1; nv > 2; ) {\\n\\n    \\t\\t\\t\\t/* if we loop, it is probably a non-simple polygon */\\n\\n    \\t\\t\\t\\tif ( ( count -- ) <= 0 ) {\\n\\n    \\t\\t\\t\\t\\t//** Triangulate: ERROR - probable bad polygon!\\n\\n    \\t\\t\\t\\t\\t//throw ( \\\"Warning, unable to triangulate polygon!\\\" );\\n    \\t\\t\\t\\t\\t//return null;\\n    \\t\\t\\t\\t\\t// Sometimes warning is fine, especially polygons are triangulated in reverse.\\n    \\t\\t\\t\\t\\tconsole.warn( 'THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()' );\\n\\n    \\t\\t\\t\\t\\tif ( indices ) return vertIndices;\\n    \\t\\t\\t\\t\\treturn result;\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t/* three consecutive vertices in current polygon, <u,v,w> */\\n\\n    \\t\\t\\t\\tu = v; \\t \\tif ( nv <= u ) u = 0;     /* previous */\\n    \\t\\t\\t\\tv = u + 1;  if ( nv <= v ) v = 0;     /* new v    */\\n    \\t\\t\\t\\tw = v + 1;  if ( nv <= w ) w = 0;     /* next     */\\n\\n    \\t\\t\\t\\tif ( snip( contour, u, v, w, nv, verts ) ) {\\n\\n    \\t\\t\\t\\t\\tvar a, b, c, s, t;\\n\\n    \\t\\t\\t\\t\\t/* true names of the vertices */\\n\\n    \\t\\t\\t\\t\\ta = verts[ u ];\\n    \\t\\t\\t\\t\\tb = verts[ v ];\\n    \\t\\t\\t\\t\\tc = verts[ w ];\\n\\n    \\t\\t\\t\\t\\t/* output Triangle */\\n\\n    \\t\\t\\t\\t\\tresult.push( [ contour[ a ],\\n    \\t\\t\\t\\t\\t\\tcontour[ b ],\\n    \\t\\t\\t\\t\\t\\tcontour[ c ] ] );\\n\\n\\n    \\t\\t\\t\\t\\tvertIndices.push( [ verts[ u ], verts[ v ], verts[ w ] ] );\\n\\n    \\t\\t\\t\\t\\t/* remove v from the remaining polygon */\\n\\n    \\t\\t\\t\\t\\tfor ( s = v, t = v + 1; t < nv; s ++, t ++ ) {\\n\\n    \\t\\t\\t\\t\\t\\tverts[ s ] = verts[ t ];\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\tnv --;\\n\\n    \\t\\t\\t\\t\\t/* reset error detection counter */\\n\\n    \\t\\t\\t\\t\\tcount = 2 * nv;\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tif ( indices ) return vertIndices;\\n    \\t\\t\\treturn result;\\n\\n    \\t\\t}\\n\\n    \\t} )(),\\n\\n    \\ttriangulateShape: function ( contour, holes ) {\\n\\n    \\t\\tfunction removeDupEndPts(points) {\\n\\n    \\t\\t\\tvar l = points.length;\\n\\n    \\t\\t\\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\\n\\n    \\t\\t\\t\\tpoints.pop();\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\tremoveDupEndPts( contour );\\n    \\t\\tholes.forEach( removeDupEndPts );\\n\\n    \\t\\tfunction point_in_segment_2D_colin( inSegPt1, inSegPt2, inOtherPt ) {\\n\\n    \\t\\t\\t// inOtherPt needs to be collinear to the inSegment\\n    \\t\\t\\tif ( inSegPt1.x !== inSegPt2.x ) {\\n\\n    \\t\\t\\t\\tif ( inSegPt1.x < inSegPt2.x ) {\\n\\n    \\t\\t\\t\\t\\treturn\\t( ( inSegPt1.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt2.x ) );\\n\\n    \\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\treturn\\t( ( inSegPt2.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt1.x ) );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\tif ( inSegPt1.y < inSegPt2.y ) {\\n\\n    \\t\\t\\t\\t\\treturn\\t( ( inSegPt1.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt2.y ) );\\n\\n    \\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\treturn\\t( ( inSegPt2.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt1.y ) );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\tfunction intersect_segments_2D( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1, inSeg2Pt2, inExcludeAdjacentSegs ) {\\n\\n    \\t\\t\\tvar seg1dx = inSeg1Pt2.x - inSeg1Pt1.x,   seg1dy = inSeg1Pt2.y - inSeg1Pt1.y;\\n    \\t\\t\\tvar seg2dx = inSeg2Pt2.x - inSeg2Pt1.x,   seg2dy = inSeg2Pt2.y - inSeg2Pt1.y;\\n\\n    \\t\\t\\tvar seg1seg2dx = inSeg1Pt1.x - inSeg2Pt1.x;\\n    \\t\\t\\tvar seg1seg2dy = inSeg1Pt1.y - inSeg2Pt1.y;\\n\\n    \\t\\t\\tvar limit\\t\\t= seg1dy * seg2dx - seg1dx * seg2dy;\\n    \\t\\t\\tvar perpSeg1\\t= seg1dy * seg1seg2dx - seg1dx * seg1seg2dy;\\n\\n    \\t\\t\\tif ( Math.abs( limit ) > Number.EPSILON ) {\\n\\n    \\t\\t\\t\\t// not parallel\\n\\n    \\t\\t\\t\\tvar perpSeg2;\\n    \\t\\t\\t\\tif ( limit > 0 ) {\\n\\n    \\t\\t\\t\\t\\tif ( ( perpSeg1 < 0 ) || ( perpSeg1 > limit ) ) \\t\\treturn [];\\n    \\t\\t\\t\\t\\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\\n    \\t\\t\\t\\t\\tif ( ( perpSeg2 < 0 ) || ( perpSeg2 > limit ) ) \\t\\treturn [];\\n\\n    \\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\tif ( ( perpSeg1 > 0 ) || ( perpSeg1 < limit ) ) \\t\\treturn [];\\n    \\t\\t\\t\\t\\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\\n    \\t\\t\\t\\t\\tif ( ( perpSeg2 > 0 ) || ( perpSeg2 < limit ) ) \\t\\treturn [];\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t// i.e. to reduce rounding errors\\n    \\t\\t\\t\\t// intersection at endpoint of segment#1?\\n    \\t\\t\\t\\tif ( perpSeg2 === 0 ) {\\n\\n    \\t\\t\\t\\t\\tif ( ( inExcludeAdjacentSegs ) &&\\n    \\t\\t\\t\\t\\t\\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\\t\\treturn [];\\n    \\t\\t\\t\\t\\treturn [ inSeg1Pt1 ];\\n\\n    \\t\\t\\t\\t}\\n    \\t\\t\\t\\tif ( perpSeg2 === limit ) {\\n\\n    \\t\\t\\t\\t\\tif ( ( inExcludeAdjacentSegs ) &&\\n    \\t\\t\\t\\t\\t\\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\\t\\treturn [];\\n    \\t\\t\\t\\t\\treturn [ inSeg1Pt2 ];\\n\\n    \\t\\t\\t\\t}\\n    \\t\\t\\t\\t// intersection at endpoint of segment#2?\\n    \\t\\t\\t\\tif ( perpSeg1 === 0 )\\t\\treturn [ inSeg2Pt1 ];\\n    \\t\\t\\t\\tif ( perpSeg1 === limit )\\treturn [ inSeg2Pt2 ];\\n\\n    \\t\\t\\t\\t// return real intersection point\\n    \\t\\t\\t\\tvar factorSeg1 = perpSeg2 / limit;\\n    \\t\\t\\t\\treturn\\t[ { x: inSeg1Pt1.x + factorSeg1 * seg1dx,\\n    \\t\\t\\t\\t\\t\\t\\ty: inSeg1Pt1.y + factorSeg1 * seg1dy } ];\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t// parallel or collinear\\n    \\t\\t\\t\\tif ( ( perpSeg1 !== 0 ) ||\\n    \\t\\t\\t\\t\\t ( seg2dy * seg1seg2dx !== seg2dx * seg1seg2dy ) ) \\t\\t\\treturn [];\\n\\n    \\t\\t\\t\\t// they are collinear or degenerate\\n    \\t\\t\\t\\tvar seg1Pt = ( ( seg1dx === 0 ) && ( seg1dy === 0 ) );\\t// segment1 is just a point?\\n    \\t\\t\\t\\tvar seg2Pt = ( ( seg2dx === 0 ) && ( seg2dy === 0 ) );\\t// segment2 is just a point?\\n    \\t\\t\\t\\t// both segments are points\\n    \\t\\t\\t\\tif ( seg1Pt && seg2Pt ) {\\n\\n    \\t\\t\\t\\t\\tif ( ( inSeg1Pt1.x !== inSeg2Pt1.x ) ||\\n    \\t\\t\\t\\t\\t\\t ( inSeg1Pt1.y !== inSeg2Pt1.y ) )\\t\\treturn [];\\t// they are distinct  points\\n    \\t\\t\\t\\t\\treturn [ inSeg1Pt1 ];                 \\t\\t\\t\\t\\t\\t// they are the same point\\n\\n    \\t\\t\\t\\t}\\n    \\t\\t\\t\\t// segment#1  is a single point\\n    \\t\\t\\t\\tif ( seg1Pt ) {\\n\\n    \\t\\t\\t\\t\\tif ( ! point_in_segment_2D_colin( inSeg2Pt1, inSeg2Pt2, inSeg1Pt1 ) )\\t\\treturn [];\\t\\t// but not in segment#2\\n    \\t\\t\\t\\t\\treturn [ inSeg1Pt1 ];\\n\\n    \\t\\t\\t\\t}\\n    \\t\\t\\t\\t// segment#2  is a single point\\n    \\t\\t\\t\\tif ( seg2Pt ) {\\n\\n    \\t\\t\\t\\t\\tif ( ! point_in_segment_2D_colin( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1 ) )\\t\\treturn [];\\t\\t// but not in segment#1\\n    \\t\\t\\t\\t\\treturn [ inSeg2Pt1 ];\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t// they are collinear segments, which might overlap\\n    \\t\\t\\t\\tvar seg1min, seg1max, seg1minVal, seg1maxVal;\\n    \\t\\t\\t\\tvar seg2min, seg2max, seg2minVal, seg2maxVal;\\n    \\t\\t\\t\\tif ( seg1dx !== 0 ) {\\n\\n    \\t\\t\\t\\t\\t// the segments are NOT on a vertical line\\n    \\t\\t\\t\\t\\tif ( inSeg1Pt1.x < inSeg1Pt2.x ) {\\n\\n    \\t\\t\\t\\t\\t\\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.x;\\n    \\t\\t\\t\\t\\t\\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.x;\\n\\n    \\t\\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\t\\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.x;\\n    \\t\\t\\t\\t\\t\\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.x;\\n\\n    \\t\\t\\t\\t\\t}\\n    \\t\\t\\t\\t\\tif ( inSeg2Pt1.x < inSeg2Pt2.x ) {\\n\\n    \\t\\t\\t\\t\\t\\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.x;\\n    \\t\\t\\t\\t\\t\\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.x;\\n\\n    \\t\\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\t\\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.x;\\n    \\t\\t\\t\\t\\t\\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.x;\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\t// the segments are on a vertical line\\n    \\t\\t\\t\\t\\tif ( inSeg1Pt1.y < inSeg1Pt2.y ) {\\n\\n    \\t\\t\\t\\t\\t\\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.y;\\n    \\t\\t\\t\\t\\t\\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.y;\\n\\n    \\t\\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\t\\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.y;\\n    \\t\\t\\t\\t\\t\\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.y;\\n\\n    \\t\\t\\t\\t\\t}\\n    \\t\\t\\t\\t\\tif ( inSeg2Pt1.y < inSeg2Pt2.y ) {\\n\\n    \\t\\t\\t\\t\\t\\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.y;\\n    \\t\\t\\t\\t\\t\\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.y;\\n\\n    \\t\\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\t\\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.y;\\n    \\t\\t\\t\\t\\t\\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.y;\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t}\\n    \\t\\t\\t\\tif ( seg1minVal <= seg2minVal ) {\\n\\n    \\t\\t\\t\\t\\tif ( seg1maxVal <  seg2minVal )\\treturn [];\\n    \\t\\t\\t\\t\\tif ( seg1maxVal === seg2minVal )\\t{\\n\\n    \\t\\t\\t\\t\\t\\tif ( inExcludeAdjacentSegs )\\t\\treturn [];\\n    \\t\\t\\t\\t\\t\\treturn [ seg2min ];\\n\\n    \\t\\t\\t\\t\\t}\\n    \\t\\t\\t\\t\\tif ( seg1maxVal <= seg2maxVal )\\treturn [ seg2min, seg1max ];\\n    \\t\\t\\t\\t\\treturn\\t[ seg2min, seg2max ];\\n\\n    \\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\tif ( seg1minVal >  seg2maxVal )\\treturn [];\\n    \\t\\t\\t\\t\\tif ( seg1minVal === seg2maxVal )\\t{\\n\\n    \\t\\t\\t\\t\\t\\tif ( inExcludeAdjacentSegs )\\t\\treturn [];\\n    \\t\\t\\t\\t\\t\\treturn [ seg1min ];\\n\\n    \\t\\t\\t\\t\\t}\\n    \\t\\t\\t\\t\\tif ( seg1maxVal <= seg2maxVal )\\treturn [ seg1min, seg1max ];\\n    \\t\\t\\t\\t\\treturn\\t[ seg1min, seg2max ];\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\tfunction isPointInsideAngle( inVertex, inLegFromPt, inLegToPt, inOtherPt ) {\\n\\n    \\t\\t\\t// The order of legs is important\\n\\n    \\t\\t\\t// translation of all points, so that Vertex is at (0,0)\\n    \\t\\t\\tvar legFromPtX\\t= inLegFromPt.x - inVertex.x,  legFromPtY\\t= inLegFromPt.y - inVertex.y;\\n    \\t\\t\\tvar legToPtX\\t= inLegToPt.x\\t- inVertex.x,  legToPtY\\t\\t= inLegToPt.y\\t- inVertex.y;\\n    \\t\\t\\tvar otherPtX\\t= inOtherPt.x\\t- inVertex.x,  otherPtY\\t\\t= inOtherPt.y\\t- inVertex.y;\\n\\n    \\t\\t\\t// main angle >0: < 180 deg.; 0: 180 deg.; <0: > 180 deg.\\n    \\t\\t\\tvar from2toAngle\\t= legFromPtX * legToPtY - legFromPtY * legToPtX;\\n    \\t\\t\\tvar from2otherAngle\\t= legFromPtX * otherPtY - legFromPtY * otherPtX;\\n\\n    \\t\\t\\tif ( Math.abs( from2toAngle ) > Number.EPSILON ) {\\n\\n    \\t\\t\\t\\t// angle != 180 deg.\\n\\n    \\t\\t\\t\\tvar other2toAngle\\t\\t= otherPtX * legToPtY - otherPtY * legToPtX;\\n    \\t\\t\\t\\t// console.log( \\\"from2to: \\\" + from2toAngle + \\\", from2other: \\\" + from2otherAngle + \\\", other2to: \\\" + other2toAngle );\\n\\n    \\t\\t\\t\\tif ( from2toAngle > 0 ) {\\n\\n    \\t\\t\\t\\t\\t// main angle < 180 deg.\\n    \\t\\t\\t\\t\\treturn\\t( ( from2otherAngle >= 0 ) && ( other2toAngle >= 0 ) );\\n\\n    \\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\t// main angle > 180 deg.\\n    \\t\\t\\t\\t\\treturn\\t( ( from2otherAngle >= 0 ) || ( other2toAngle >= 0 ) );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t// angle == 180 deg.\\n    \\t\\t\\t\\t// console.log( \\\"from2to: 180 deg., from2other: \\\" + from2otherAngle  );\\n    \\t\\t\\t\\treturn\\t( from2otherAngle > 0 );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n\\n    \\t\\tfunction removeHoles( contour, holes ) {\\n\\n    \\t\\t\\tvar shape = contour.concat(); // work on this shape\\n    \\t\\t\\tvar hole;\\n\\n    \\t\\t\\tfunction isCutLineInsideAngles( inShapeIdx, inHoleIdx ) {\\n\\n    \\t\\t\\t\\t// Check if hole point lies within angle around shape point\\n    \\t\\t\\t\\tvar lastShapeIdx = shape.length - 1;\\n\\n    \\t\\t\\t\\tvar prevShapeIdx = inShapeIdx - 1;\\n    \\t\\t\\t\\tif ( prevShapeIdx < 0 )\\t\\t\\tprevShapeIdx = lastShapeIdx;\\n\\n    \\t\\t\\t\\tvar nextShapeIdx = inShapeIdx + 1;\\n    \\t\\t\\t\\tif ( nextShapeIdx > lastShapeIdx )\\tnextShapeIdx = 0;\\n\\n    \\t\\t\\t\\tvar insideAngle = isPointInsideAngle( shape[ inShapeIdx ], shape[ prevShapeIdx ], shape[ nextShapeIdx ], hole[ inHoleIdx ] );\\n    \\t\\t\\t\\tif ( ! insideAngle ) {\\n\\n    \\t\\t\\t\\t\\t// console.log( \\\"Vertex (Shape): \\\" + inShapeIdx + \\\", Point: \\\" + hole[inHoleIdx].x + \\\"/\\\" + hole[inHoleIdx].y );\\n    \\t\\t\\t\\t\\treturn\\tfalse;\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t// Check if shape point lies within angle around hole point\\n    \\t\\t\\t\\tvar lastHoleIdx = hole.length - 1;\\n\\n    \\t\\t\\t\\tvar prevHoleIdx = inHoleIdx - 1;\\n    \\t\\t\\t\\tif ( prevHoleIdx < 0 )\\t\\t\\tprevHoleIdx = lastHoleIdx;\\n\\n    \\t\\t\\t\\tvar nextHoleIdx = inHoleIdx + 1;\\n    \\t\\t\\t\\tif ( nextHoleIdx > lastHoleIdx )\\tnextHoleIdx = 0;\\n\\n    \\t\\t\\t\\tinsideAngle = isPointInsideAngle( hole[ inHoleIdx ], hole[ prevHoleIdx ], hole[ nextHoleIdx ], shape[ inShapeIdx ] );\\n    \\t\\t\\t\\tif ( ! insideAngle ) {\\n\\n    \\t\\t\\t\\t\\t// console.log( \\\"Vertex (Hole): \\\" + inHoleIdx + \\\", Point: \\\" + shape[inShapeIdx].x + \\\"/\\\" + shape[inShapeIdx].y );\\n    \\t\\t\\t\\t\\treturn\\tfalse;\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\treturn\\ttrue;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tfunction intersectsShapeEdge( inShapePt, inHolePt ) {\\n\\n    \\t\\t\\t\\t// checks for intersections with shape edges\\n    \\t\\t\\t\\tvar sIdx, nextIdx, intersection;\\n    \\t\\t\\t\\tfor ( sIdx = 0; sIdx < shape.length; sIdx ++ ) {\\n\\n    \\t\\t\\t\\t\\tnextIdx = sIdx + 1; nextIdx %= shape.length;\\n    \\t\\t\\t\\t\\tintersection = intersect_segments_2D( inShapePt, inHolePt, shape[ sIdx ], shape[ nextIdx ], true );\\n    \\t\\t\\t\\t\\tif ( intersection.length > 0 )\\t\\treturn\\ttrue;\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\treturn\\tfalse;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tvar indepHoles = [];\\n\\n    \\t\\t\\tfunction intersectsHoleEdge( inShapePt, inHolePt ) {\\n\\n    \\t\\t\\t\\t// checks for intersections with hole edges\\n    \\t\\t\\t\\tvar ihIdx, chkHole,\\n    \\t\\t\\t\\t\\thIdx, nextIdx, intersection;\\n    \\t\\t\\t\\tfor ( ihIdx = 0; ihIdx < indepHoles.length; ihIdx ++ ) {\\n\\n    \\t\\t\\t\\t\\tchkHole = holes[ indepHoles[ ihIdx ]];\\n    \\t\\t\\t\\t\\tfor ( hIdx = 0; hIdx < chkHole.length; hIdx ++ ) {\\n\\n    \\t\\t\\t\\t\\t\\tnextIdx = hIdx + 1; nextIdx %= chkHole.length;\\n    \\t\\t\\t\\t\\t\\tintersection = intersect_segments_2D( inShapePt, inHolePt, chkHole[ hIdx ], chkHole[ nextIdx ], true );\\n    \\t\\t\\t\\t\\t\\tif ( intersection.length > 0 )\\t\\treturn\\ttrue;\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t}\\n    \\t\\t\\t\\treturn\\tfalse;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tvar holeIndex, shapeIndex,\\n    \\t\\t\\t\\tshapePt, holePt,\\n    \\t\\t\\t\\tholeIdx, cutKey, failedCuts = [],\\n    \\t\\t\\t\\ttmpShape1, tmpShape2,\\n    \\t\\t\\t\\ttmpHole1, tmpHole2;\\n\\n    \\t\\t\\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\\n\\n    \\t\\t\\t\\tindepHoles.push( h );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tvar minShapeIndex = 0;\\n    \\t\\t\\tvar counter = indepHoles.length * 2;\\n    \\t\\t\\twhile ( indepHoles.length > 0 ) {\\n\\n    \\t\\t\\t\\tcounter --;\\n    \\t\\t\\t\\tif ( counter < 0 ) {\\n\\n    \\t\\t\\t\\t\\tconsole.log( \\\"Infinite Loop! Holes left:\\\" + indepHoles.length + \\\", Probably Hole outside Shape!\\\" );\\n    \\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t// search for shape-vertex and hole-vertex,\\n    \\t\\t\\t\\t// which can be connected without intersections\\n    \\t\\t\\t\\tfor ( shapeIndex = minShapeIndex; shapeIndex < shape.length; shapeIndex ++ ) {\\n\\n    \\t\\t\\t\\t\\tshapePt = shape[ shapeIndex ];\\n    \\t\\t\\t\\t\\tholeIndex\\t= - 1;\\n\\n    \\t\\t\\t\\t\\t// search for hole which can be reached without intersections\\n    \\t\\t\\t\\t\\tfor ( var h = 0; h < indepHoles.length; h ++ ) {\\n\\n    \\t\\t\\t\\t\\t\\tholeIdx = indepHoles[ h ];\\n\\n    \\t\\t\\t\\t\\t\\t// prevent multiple checks\\n    \\t\\t\\t\\t\\t\\tcutKey = shapePt.x + \\\":\\\" + shapePt.y + \\\":\\\" + holeIdx;\\n    \\t\\t\\t\\t\\t\\tif ( failedCuts[ cutKey ] !== undefined )\\t\\t\\tcontinue;\\n\\n    \\t\\t\\t\\t\\t\\thole = holes[ holeIdx ];\\n    \\t\\t\\t\\t\\t\\tfor ( var h2 = 0; h2 < hole.length; h2 ++ ) {\\n\\n    \\t\\t\\t\\t\\t\\t\\tholePt = hole[ h2 ];\\n    \\t\\t\\t\\t\\t\\t\\tif ( ! isCutLineInsideAngles( shapeIndex, h2 ) )\\t\\tcontinue;\\n    \\t\\t\\t\\t\\t\\t\\tif ( intersectsShapeEdge( shapePt, holePt ) )\\t\\tcontinue;\\n    \\t\\t\\t\\t\\t\\t\\tif ( intersectsHoleEdge( shapePt, holePt ) )\\t\\tcontinue;\\n\\n    \\t\\t\\t\\t\\t\\t\\tholeIndex = h2;\\n    \\t\\t\\t\\t\\t\\t\\tindepHoles.splice( h, 1 );\\n\\n    \\t\\t\\t\\t\\t\\t\\ttmpShape1 = shape.slice( 0, shapeIndex + 1 );\\n    \\t\\t\\t\\t\\t\\t\\ttmpShape2 = shape.slice( shapeIndex );\\n    \\t\\t\\t\\t\\t\\t\\ttmpHole1 = hole.slice( holeIndex );\\n    \\t\\t\\t\\t\\t\\t\\ttmpHole2 = hole.slice( 0, holeIndex + 1 );\\n\\n    \\t\\t\\t\\t\\t\\t\\tshape = tmpShape1.concat( tmpHole1 ).concat( tmpHole2 ).concat( tmpShape2 );\\n\\n    \\t\\t\\t\\t\\t\\t\\tminShapeIndex = shapeIndex;\\n\\n    \\t\\t\\t\\t\\t\\t\\t// Debug only, to show the selected cuts\\n    \\t\\t\\t\\t\\t\\t\\t// glob_CutLines.push( [ shapePt, holePt ] );\\n\\n    \\t\\t\\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\t\\t\\t}\\n    \\t\\t\\t\\t\\t\\tif ( holeIndex >= 0 )\\tbreak;\\t\\t// hole-vertex found\\n\\n    \\t\\t\\t\\t\\t\\tfailedCuts[ cutKey ] = true;\\t\\t\\t// remember failure\\n\\n    \\t\\t\\t\\t\\t}\\n    \\t\\t\\t\\t\\tif ( holeIndex >= 0 )\\tbreak;\\t\\t// hole-vertex found\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\treturn shape; \\t\\t\\t/* shape with no holes */\\n\\n    \\t\\t}\\n\\n\\n    \\t\\tvar i, il, f, face,\\n    \\t\\t\\tkey, index,\\n    \\t\\t\\tallPointsMap = {};\\n\\n    \\t\\t// To maintain reference to old shape, one must match coordinates, or offset the indices from original arrays. It's probably easier to do the first.\\n\\n    \\t\\tvar allpoints = contour.concat();\\n\\n    \\t\\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\\n\\n    \\t\\t\\tArray.prototype.push.apply( allpoints, holes[ h ] );\\n\\n    \\t\\t}\\n\\n    \\t\\t//console.log( \\\"allpoints\\\",allpoints, allpoints.length );\\n\\n    \\t\\t// prepare all points map\\n\\n    \\t\\tfor ( i = 0, il = allpoints.length; i < il; i ++ ) {\\n\\n    \\t\\t\\tkey = allpoints[ i ].x + \\\":\\\" + allpoints[ i ].y;\\n\\n    \\t\\t\\tif ( allPointsMap[ key ] !== undefined ) {\\n\\n    \\t\\t\\t\\tconsole.warn( \\\"THREE.ShapeUtils: Duplicate point\\\", key, i );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tallPointsMap[ key ] = i;\\n\\n    \\t\\t}\\n\\n    \\t\\t// remove holes by cutting paths to holes and adding them to the shape\\n    \\t\\tvar shapeWithoutHoles = removeHoles( contour, holes );\\n\\n    \\t\\tvar triangles = exports.ShapeUtils.triangulate( shapeWithoutHoles, false ); // True returns indices for points of spooled shape\\n    \\t\\t//console.log( \\\"triangles\\\",triangles, triangles.length );\\n\\n    \\t\\t// check all face vertices against all points map\\n\\n    \\t\\tfor ( i = 0, il = triangles.length; i < il; i ++ ) {\\n\\n    \\t\\t\\tface = triangles[ i ];\\n\\n    \\t\\t\\tfor ( f = 0; f < 3; f ++ ) {\\n\\n    \\t\\t\\t\\tkey = face[ f ].x + \\\":\\\" + face[ f ].y;\\n\\n    \\t\\t\\t\\tindex = allPointsMap[ key ];\\n\\n    \\t\\t\\t\\tif ( index !== undefined ) {\\n\\n    \\t\\t\\t\\t\\tface[ f ] = index;\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\treturn triangles.concat();\\n\\n    \\t},\\n\\n    \\tisClockWise: function ( pts ) {\\n\\n    \\t\\treturn exports.ShapeUtils.area( pts ) < 0;\\n\\n    \\t},\\n\\n    \\t// Bezier Curves formulas obtained from\\n    \\t// http://en.wikipedia.org/wiki/B%C3%A9zier_curve\\n\\n    \\t// Quad Bezier Functions\\n\\n    \\tb2: ( function () {\\n\\n    \\t\\tfunction b2p0( t, p ) {\\n\\n    \\t\\t\\tvar k = 1 - t;\\n    \\t\\t\\treturn k * k * p;\\n\\n    \\t\\t}\\n\\n    \\t\\tfunction b2p1( t, p ) {\\n\\n    \\t\\t\\treturn 2 * ( 1 - t ) * t * p;\\n\\n    \\t\\t}\\n\\n    \\t\\tfunction b2p2( t, p ) {\\n\\n    \\t\\t\\treturn t * t * p;\\n\\n    \\t\\t}\\n\\n    \\t\\treturn function b2( t, p0, p1, p2 ) {\\n\\n    \\t\\t\\treturn b2p0( t, p0 ) + b2p1( t, p1 ) + b2p2( t, p2 );\\n\\n    \\t\\t};\\n\\n    \\t} )(),\\n\\n    \\t// Cubic Bezier Functions\\n\\n    \\tb3: ( function () {\\n\\n    \\t\\tfunction b3p0( t, p ) {\\n\\n    \\t\\t\\tvar k = 1 - t;\\n    \\t\\t\\treturn k * k * k * p;\\n\\n    \\t\\t}\\n\\n    \\t\\tfunction b3p1( t, p ) {\\n\\n    \\t\\t\\tvar k = 1 - t;\\n    \\t\\t\\treturn 3 * k * k * t * p;\\n\\n    \\t\\t}\\n\\n    \\t\\tfunction b3p2( t, p ) {\\n\\n    \\t\\t\\tvar k = 1 - t;\\n    \\t\\t\\treturn 3 * k * t * t * p;\\n\\n    \\t\\t}\\n\\n    \\t\\tfunction b3p3( t, p ) {\\n\\n    \\t\\t\\treturn t * t * t * p;\\n\\n    \\t\\t}\\n\\n    \\t\\treturn function b3( t, p0, p1, p2, p3 ) {\\n\\n    \\t\\t\\treturn b3p0( t, p0 ) + b3p1( t, p1 ) + b3p2( t, p2 ) + b3p3( t, p3 );\\n\\n    \\t\\t};\\n\\n    \\t} )()\\n\\n    };\\n\\n    /**\\n     * @author zz85 / http://www.lab4games.net/zz85/blog\\n     *\\n     * Creates extruded geometry from a path shape.\\n     *\\n     * parameters = {\\n     *\\n     *  curveSegments: <int>, // number of points on the curves\\n     *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\\n     *  amount: <int>, // Depth to extrude the shape\\n     *\\n     *  bevelEnabled: <bool>, // turn on bevel\\n     *  bevelThickness: <float>, // how deep into the original shape bevel goes\\n     *  bevelSize: <float>, // how far from shape outline is bevel\\n     *  bevelSegments: <int>, // number of bevel layers\\n     *\\n     *  extrudePath: <THREE.CurvePath> // 3d spline path to extrude shape along. (creates Frames if .frames aren't defined)\\n     *  frames: <THREE.TubeGeometry.FrenetFrames> // containing arrays of tangents, normals, binormals\\n     *\\n     *  uvGenerator: <Object> // object that provides UV generator functions\\n     *\\n     * }\\n     **/\\n\\n    function ExtrudeGeometry( shapes, options ) {\\n\\n    \\tif ( typeof( shapes ) === \\\"undefined\\\" ) {\\n\\n    \\t\\tshapes = [];\\n    \\t\\treturn;\\n\\n    \\t}\\n\\n    \\tGeometry.call( this );\\n\\n    \\tthis.type = 'ExtrudeGeometry';\\n\\n    \\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\\n\\n    \\tthis.addShapeList( shapes, options );\\n\\n    \\tthis.computeFaceNormals();\\n\\n    \\t// can't really use automatic vertex normals\\n    \\t// as then front and back sides get smoothed too\\n    \\t// should do separate smoothing just for sides\\n\\n    \\t//this.computeVertexNormals();\\n\\n    \\t//console.log( \\\"took\\\", ( Date.now() - startTime ) );\\n\\n    }\\n\\n    ExtrudeGeometry.prototype = Object.create( Geometry.prototype );\\n    ExtrudeGeometry.prototype.constructor = ExtrudeGeometry;\\n\\n    ExtrudeGeometry.prototype.addShapeList = function ( shapes, options ) {\\n\\n    \\tvar sl = shapes.length;\\n\\n    \\tfor ( var s = 0; s < sl; s ++ ) {\\n\\n    \\t\\tvar shape = shapes[ s ];\\n    \\t\\tthis.addShape( shape, options );\\n\\n    \\t}\\n\\n    };\\n\\n    ExtrudeGeometry.prototype.addShape = function ( shape, options ) {\\n\\n    \\tvar amount = options.amount !== undefined ? options.amount : 100;\\n\\n    \\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6; // 10\\n    \\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2; // 8\\n    \\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\\n\\n    \\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true; // false\\n\\n    \\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\\n\\n    \\tvar steps = options.steps !== undefined ? options.steps : 1;\\n\\n    \\tvar extrudePath = options.extrudePath;\\n    \\tvar extrudePts, extrudeByPath = false;\\n\\n    \\t// Use default WorldUVGenerator if no UV generators are specified.\\n    \\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : ExtrudeGeometry.WorldUVGenerator;\\n\\n    \\tvar splineTube, binormal, normal, position2;\\n    \\tif ( extrudePath ) {\\n\\n    \\t\\textrudePts = extrudePath.getSpacedPoints( steps );\\n\\n    \\t\\textrudeByPath = true;\\n    \\t\\tbevelEnabled = false; // bevels not supported for path extrusion\\n\\n    \\t\\t// SETUP TNB variables\\n\\n    \\t\\t// Reuse TNB from TubeGeomtry for now.\\n    \\t\\t// TODO1 - have a .isClosed in spline?\\n\\n    \\t\\tsplineTube = options.frames !== undefined ? options.frames : new TubeGeometry.FrenetFrames( extrudePath, steps, false );\\n\\n    \\t\\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\\n\\n    \\t\\tbinormal = new Vector3();\\n    \\t\\tnormal = new Vector3();\\n    \\t\\tposition2 = new Vector3();\\n\\n    \\t}\\n\\n    \\t// Safeguards if bevels are not enabled\\n\\n    \\tif ( ! bevelEnabled ) {\\n\\n    \\t\\tbevelSegments = 0;\\n    \\t\\tbevelThickness = 0;\\n    \\t\\tbevelSize = 0;\\n\\n    \\t}\\n\\n    \\t// Variables initialization\\n\\n    \\tvar ahole, h, hl; // looping of holes\\n    \\tvar scope = this;\\n\\n    \\tvar shapesOffset = this.vertices.length;\\n\\n    \\tvar shapePoints = shape.extractPoints( curveSegments );\\n\\n    \\tvar vertices = shapePoints.shape;\\n    \\tvar holes = shapePoints.holes;\\n\\n    \\tvar reverse = ! exports.ShapeUtils.isClockWise( vertices );\\n\\n    \\tif ( reverse ) {\\n\\n    \\t\\tvertices = vertices.reverse();\\n\\n    \\t\\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\\n\\n    \\t\\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\\n\\n    \\t\\t\\tahole = holes[ h ];\\n\\n    \\t\\t\\tif ( exports.ShapeUtils.isClockWise( ahole ) ) {\\n\\n    \\t\\t\\t\\tholes[ h ] = ahole.reverse();\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\treverse = false; // If vertices are in order now, we shouldn't need to worry about them again (hopefully)!\\n\\n    \\t}\\n\\n\\n    \\tvar faces = exports.ShapeUtils.triangulateShape( vertices, holes );\\n\\n    \\t/* Vertices */\\n\\n    \\tvar contour = vertices; // vertices has all points but contour has only points of circumference\\n\\n    \\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\\n\\n    \\t\\tahole = holes[ h ];\\n\\n    \\t\\tvertices = vertices.concat( ahole );\\n\\n    \\t}\\n\\n\\n    \\tfunction scalePt2( pt, vec, size ) {\\n\\n    \\t\\tif ( ! vec ) console.error( \\\"THREE.ExtrudeGeometry: vec does not exist\\\" );\\n\\n    \\t\\treturn vec.clone().multiplyScalar( size ).add( pt );\\n\\n    \\t}\\n\\n    \\tvar b, bs, t, z,\\n    \\t\\tvert, vlen = vertices.length,\\n    \\t\\tface, flen = faces.length;\\n\\n\\n    \\t// Find directions for point movement\\n\\n\\n    \\tfunction getBevelVec( inPt, inPrev, inNext ) {\\n\\n    \\t\\t// computes for inPt the corresponding point inPt' on a new contour\\n    \\t\\t//   shifted by 1 unit (length of normalized vector) to the left\\n    \\t\\t// if we walk along contour clockwise, this new contour is outside the old one\\n    \\t\\t//\\n    \\t\\t// inPt' is the intersection of the two lines parallel to the two\\n    \\t\\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\\n\\n    \\t\\tvar v_trans_x, v_trans_y, shrink_by = 1;\\t\\t// resulting translation vector for inPt\\n\\n    \\t\\t// good reading for geometry algorithms (here: line-line intersection)\\n    \\t\\t// http://geomalgorithms.com/a05-_intersect-1.html\\n\\n    \\t\\tvar v_prev_x = inPt.x - inPrev.x, v_prev_y = inPt.y - inPrev.y;\\n    \\t\\tvar v_next_x = inNext.x - inPt.x, v_next_y = inNext.y - inPt.y;\\n\\n    \\t\\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\\n\\n    \\t\\t// check for collinear edges\\n    \\t\\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\\n\\n    \\t\\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\\n\\n    \\t\\t\\t// not collinear\\n\\n    \\t\\t\\t// length of vectors for normalizing\\n\\n    \\t\\t\\tvar v_prev_len = Math.sqrt( v_prev_lensq );\\n    \\t\\t\\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\\n\\n    \\t\\t\\t// shift adjacent points by unit vectors to the left\\n\\n    \\t\\t\\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\\n    \\t\\t\\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\\n\\n    \\t\\t\\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\\n    \\t\\t\\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\\n\\n    \\t\\t\\t// scaling factor for v_prev to intersection point\\n\\n    \\t\\t\\tvar sf = (  ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\\n    \\t\\t\\t\\t\\t\\t( ptNextShift_y - ptPrevShift_y ) * v_next_x    ) /\\n    \\t\\t\\t\\t\\t  ( v_prev_x * v_next_y - v_prev_y * v_next_x );\\n\\n    \\t\\t\\t// vector from inPt to intersection point\\n\\n    \\t\\t\\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\\n    \\t\\t\\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\\n\\n    \\t\\t\\t// Don't normalize!, otherwise sharp corners become ugly\\n    \\t\\t\\t//  but prevent crazy spikes\\n    \\t\\t\\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\\n    \\t\\t\\tif ( v_trans_lensq <= 2 ) {\\n\\n    \\t\\t\\t\\treturn\\tnew Vector2( v_trans_x, v_trans_y );\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\t// handle special case of collinear edges\\n\\n    \\t\\t\\tvar direction_eq = false;\\t\\t// assumes: opposite\\n    \\t\\t\\tif ( v_prev_x > Number.EPSILON ) {\\n\\n    \\t\\t\\t\\tif ( v_next_x > Number.EPSILON ) {\\n\\n    \\t\\t\\t\\t\\tdirection_eq = true;\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\tif ( v_prev_x < - Number.EPSILON ) {\\n\\n    \\t\\t\\t\\t\\tif ( v_next_x < - Number.EPSILON ) {\\n\\n    \\t\\t\\t\\t\\t\\tdirection_eq = true;\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\\n\\n    \\t\\t\\t\\t\\t\\tdirection_eq = true;\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tif ( direction_eq ) {\\n\\n    \\t\\t\\t\\t// console.log(\\\"Warning: lines are a straight sequence\\\");\\n    \\t\\t\\t\\tv_trans_x = - v_prev_y;\\n    \\t\\t\\t\\tv_trans_y =  v_prev_x;\\n    \\t\\t\\t\\tshrink_by = Math.sqrt( v_prev_lensq );\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t// console.log(\\\"Warning: lines are a straight spike\\\");\\n    \\t\\t\\t\\tv_trans_x = v_prev_x;\\n    \\t\\t\\t\\tv_trans_y = v_prev_y;\\n    \\t\\t\\t\\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\treturn\\tnew Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\\n\\n    \\t}\\n\\n\\n    \\tvar contourMovements = [];\\n\\n    \\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\\n\\n    \\t\\tif ( j === il ) j = 0;\\n    \\t\\tif ( k === il ) k = 0;\\n\\n    \\t\\t//  (j)---(i)---(k)\\n    \\t\\t// console.log('i,j,k', i, j , k)\\n\\n    \\t\\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\\n\\n    \\t}\\n\\n    \\tvar holesMovements = [], oneHoleMovements, verticesMovements = contourMovements.concat();\\n\\n    \\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\\n\\n    \\t\\tahole = holes[ h ];\\n\\n    \\t\\toneHoleMovements = [];\\n\\n    \\t\\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\\n\\n    \\t\\t\\tif ( j === il ) j = 0;\\n    \\t\\t\\tif ( k === il ) k = 0;\\n\\n    \\t\\t\\t//  (j)---(i)---(k)\\n    \\t\\t\\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\\n\\n    \\t\\t}\\n\\n    \\t\\tholesMovements.push( oneHoleMovements );\\n    \\t\\tverticesMovements = verticesMovements.concat( oneHoleMovements );\\n\\n    \\t}\\n\\n\\n    \\t// Loop bevelSegments, 1 for the front, 1 for the back\\n\\n    \\tfor ( b = 0; b < bevelSegments; b ++ ) {\\n\\n    \\t\\t//for ( b = bevelSegments; b > 0; b -- ) {\\n\\n    \\t\\tt = b / bevelSegments;\\n    \\t\\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\\n    \\t\\tbs = bevelSize * Math.sin( t * Math.PI / 2 );\\n\\n    \\t\\t// contract shape\\n\\n    \\t\\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\\n\\n    \\t\\t\\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\\n\\n    \\t\\t\\tv( vert.x, vert.y,  - z );\\n\\n    \\t\\t}\\n\\n    \\t\\t// expand holes\\n\\n    \\t\\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\\n\\n    \\t\\t\\tahole = holes[ h ];\\n    \\t\\t\\toneHoleMovements = holesMovements[ h ];\\n\\n    \\t\\t\\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\\n\\n    \\t\\t\\t\\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\\n\\n    \\t\\t\\t\\tv( vert.x, vert.y,  - z );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\tbs = bevelSize;\\n\\n    \\t// Back facing vertices\\n\\n    \\tfor ( i = 0; i < vlen; i ++ ) {\\n\\n    \\t\\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\\n\\n    \\t\\tif ( ! extrudeByPath ) {\\n\\n    \\t\\t\\tv( vert.x, vert.y, 0 );\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\\n\\n    \\t\\t\\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\\n    \\t\\t\\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\\n\\n    \\t\\t\\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\\n\\n    \\t\\t\\tv( position2.x, position2.y, position2.z );\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\t// Add stepped vertices...\\n    \\t// Including front facing vertices\\n\\n    \\tvar s;\\n\\n    \\tfor ( s = 1; s <= steps; s ++ ) {\\n\\n    \\t\\tfor ( i = 0; i < vlen; i ++ ) {\\n\\n    \\t\\t\\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\\n\\n    \\t\\t\\tif ( ! extrudeByPath ) {\\n\\n    \\t\\t\\t\\tv( vert.x, vert.y, amount / steps * s );\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\\n\\n    \\t\\t\\t\\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\\n    \\t\\t\\t\\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\\n\\n    \\t\\t\\t\\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\\n\\n    \\t\\t\\t\\tv( position2.x, position2.y, position2.z );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n\\n    \\t// Add bevel segments planes\\n\\n    \\t//for ( b = 1; b <= bevelSegments; b ++ ) {\\n    \\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\\n\\n    \\t\\tt = b / bevelSegments;\\n    \\t\\tz = bevelThickness * Math.cos ( t * Math.PI / 2 );\\n    \\t\\tbs = bevelSize * Math.sin( t * Math.PI / 2 );\\n\\n    \\t\\t// contract shape\\n\\n    \\t\\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\\n\\n    \\t\\t\\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\\n    \\t\\t\\tv( vert.x, vert.y,  amount + z );\\n\\n    \\t\\t}\\n\\n    \\t\\t// expand holes\\n\\n    \\t\\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\\n\\n    \\t\\t\\tahole = holes[ h ];\\n    \\t\\t\\toneHoleMovements = holesMovements[ h ];\\n\\n    \\t\\t\\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\\n\\n    \\t\\t\\t\\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\\n\\n    \\t\\t\\t\\tif ( ! extrudeByPath ) {\\n\\n    \\t\\t\\t\\t\\tv( vert.x, vert.y,  amount + z );\\n\\n    \\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\t/* Faces */\\n\\n    \\t// Top and bottom faces\\n\\n    \\tbuildLidFaces();\\n\\n    \\t// Sides faces\\n\\n    \\tbuildSideFaces();\\n\\n\\n    \\t/////  Internal functions\\n\\n    \\tfunction buildLidFaces() {\\n\\n    \\t\\tif ( bevelEnabled ) {\\n\\n    \\t\\t\\tvar layer = 0; // steps + 1\\n    \\t\\t\\tvar offset = vlen * layer;\\n\\n    \\t\\t\\t// Bottom faces\\n\\n    \\t\\t\\tfor ( i = 0; i < flen; i ++ ) {\\n\\n    \\t\\t\\t\\tface = faces[ i ];\\n    \\t\\t\\t\\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tlayer = steps + bevelSegments * 2;\\n    \\t\\t\\toffset = vlen * layer;\\n\\n    \\t\\t\\t// Top faces\\n\\n    \\t\\t\\tfor ( i = 0; i < flen; i ++ ) {\\n\\n    \\t\\t\\t\\tface = faces[ i ];\\n    \\t\\t\\t\\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\t// Bottom faces\\n\\n    \\t\\t\\tfor ( i = 0; i < flen; i ++ ) {\\n\\n    \\t\\t\\t\\tface = faces[ i ];\\n    \\t\\t\\t\\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\t// Top faces\\n\\n    \\t\\t\\tfor ( i = 0; i < flen; i ++ ) {\\n\\n    \\t\\t\\t\\tface = faces[ i ];\\n    \\t\\t\\t\\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\t// Create faces for the z-sides of the shape\\n\\n    \\tfunction buildSideFaces() {\\n\\n    \\t\\tvar layeroffset = 0;\\n    \\t\\tsidewalls( contour, layeroffset );\\n    \\t\\tlayeroffset += contour.length;\\n\\n    \\t\\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\\n\\n    \\t\\t\\tahole = holes[ h ];\\n    \\t\\t\\tsidewalls( ahole, layeroffset );\\n\\n    \\t\\t\\t//, true\\n    \\t\\t\\tlayeroffset += ahole.length;\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\tfunction sidewalls( contour, layeroffset ) {\\n\\n    \\t\\tvar j, k;\\n    \\t\\ti = contour.length;\\n\\n    \\t\\twhile ( -- i >= 0 ) {\\n\\n    \\t\\t\\tj = i;\\n    \\t\\t\\tk = i - 1;\\n    \\t\\t\\tif ( k < 0 ) k = contour.length - 1;\\n\\n    \\t\\t\\t//console.log('b', i,j, i-1, k,vertices.length);\\n\\n    \\t\\t\\tvar s = 0, sl = steps  + bevelSegments * 2;\\n\\n    \\t\\t\\tfor ( s = 0; s < sl; s ++ ) {\\n\\n    \\t\\t\\t\\tvar slen1 = vlen * s;\\n    \\t\\t\\t\\tvar slen2 = vlen * ( s + 1 );\\n\\n    \\t\\t\\t\\tvar a = layeroffset + j + slen1,\\n    \\t\\t\\t\\t\\tb = layeroffset + k + slen1,\\n    \\t\\t\\t\\t\\tc = layeroffset + k + slen2,\\n    \\t\\t\\t\\t\\td = layeroffset + j + slen2;\\n\\n    \\t\\t\\t\\tf4( a, b, c, d, contour, s, sl, j, k );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n\\n    \\tfunction v( x, y, z ) {\\n\\n    \\t\\tscope.vertices.push( new Vector3( x, y, z ) );\\n\\n    \\t}\\n\\n    \\tfunction f3( a, b, c ) {\\n\\n    \\t\\ta += shapesOffset;\\n    \\t\\tb += shapesOffset;\\n    \\t\\tc += shapesOffset;\\n\\n    \\t\\tscope.faces.push( new Face3( a, b, c, null, null, 0 ) );\\n\\n    \\t\\tvar uvs = uvgen.generateTopUV( scope, a, b, c );\\n\\n    \\t\\tscope.faceVertexUvs[ 0 ].push( uvs );\\n\\n    \\t}\\n\\n    \\tfunction f4( a, b, c, d, wallContour, stepIndex, stepsLength, contourIndex1, contourIndex2 ) {\\n\\n    \\t\\ta += shapesOffset;\\n    \\t\\tb += shapesOffset;\\n    \\t\\tc += shapesOffset;\\n    \\t\\td += shapesOffset;\\n\\n    \\t\\tscope.faces.push( new Face3( a, b, d, null, null, 1 ) );\\n    \\t\\tscope.faces.push( new Face3( b, c, d, null, null, 1 ) );\\n\\n    \\t\\tvar uvs = uvgen.generateSideWallUV( scope, a, b, c, d );\\n\\n    \\t\\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 0 ], uvs[ 1 ], uvs[ 3 ] ] );\\n    \\t\\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 1 ], uvs[ 2 ], uvs[ 3 ] ] );\\n\\n    \\t}\\n\\n    };\\n\\n    ExtrudeGeometry.WorldUVGenerator = {\\n\\n    \\tgenerateTopUV: function ( geometry, indexA, indexB, indexC ) {\\n\\n    \\t\\tvar vertices = geometry.vertices;\\n\\n    \\t\\tvar a = vertices[ indexA ];\\n    \\t\\tvar b = vertices[ indexB ];\\n    \\t\\tvar c = vertices[ indexC ];\\n\\n    \\t\\treturn [\\n    \\t\\t\\tnew Vector2( a.x, a.y ),\\n    \\t\\t\\tnew Vector2( b.x, b.y ),\\n    \\t\\t\\tnew Vector2( c.x, c.y )\\n    \\t\\t];\\n\\n    \\t},\\n\\n    \\tgenerateSideWallUV: function ( geometry, indexA, indexB, indexC, indexD ) {\\n\\n    \\t\\tvar vertices = geometry.vertices;\\n\\n    \\t\\tvar a = vertices[ indexA ];\\n    \\t\\tvar b = vertices[ indexB ];\\n    \\t\\tvar c = vertices[ indexC ];\\n    \\t\\tvar d = vertices[ indexD ];\\n\\n    \\t\\tif ( Math.abs( a.y - b.y ) < 0.01 ) {\\n\\n    \\t\\t\\treturn [\\n    \\t\\t\\t\\tnew Vector2( a.x, 1 - a.z ),\\n    \\t\\t\\t\\tnew Vector2( b.x, 1 - b.z ),\\n    \\t\\t\\t\\tnew Vector2( c.x, 1 - c.z ),\\n    \\t\\t\\t\\tnew Vector2( d.x, 1 - d.z )\\n    \\t\\t\\t];\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\treturn [\\n    \\t\\t\\t\\tnew Vector2( a.y, 1 - a.z ),\\n    \\t\\t\\t\\tnew Vector2( b.y, 1 - b.z ),\\n    \\t\\t\\t\\tnew Vector2( c.y, 1 - c.z ),\\n    \\t\\t\\t\\tnew Vector2( d.y, 1 - d.z )\\n    \\t\\t\\t];\\n\\n    \\t\\t}\\n\\n    \\t}\\n    };\\n\\n    /**\\n     * @author zz85 / http://www.lab4games.net/zz85/blog\\n     * @author alteredq / http://alteredqualia.com/\\n     *\\n     * Text = 3D Text\\n     *\\n     * parameters = {\\n     *  font: <THREE.Font>, // font\\n     *\\n     *  size: <float>, // size of the text\\n     *  height: <float>, // thickness to extrude text\\n     *  curveSegments: <int>, // number of points on the curves\\n     *\\n     *  bevelEnabled: <bool>, // turn on bevel\\n     *  bevelThickness: <float>, // how deep into text bevel goes\\n     *  bevelSize: <float> // how far from text outline is bevel\\n     * }\\n     */\\n\\n    function TextGeometry( text, parameters ) {\\n\\n    \\tparameters = parameters || {};\\n\\n    \\tvar font = parameters.font;\\n\\n    \\tif ( (font && font.isFont) === false ) {\\n\\n    \\t\\tconsole.error( 'THREE.TextGeometry: font parameter is not an instance of THREE.Font.' );\\n    \\t\\treturn new Geometry();\\n\\n    \\t}\\n\\n    \\tvar shapes = font.generateShapes( text, parameters.size, parameters.curveSegments );\\n\\n    \\t// translate parameters to ExtrudeGeometry API\\n\\n    \\tparameters.amount = parameters.height !== undefined ? parameters.height : 50;\\n\\n    \\t// defaults\\n\\n    \\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\\n    \\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\\n    \\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\\n\\n    \\tExtrudeGeometry.call( this, shapes, parameters );\\n\\n    \\tthis.type = 'TextGeometry';\\n\\n    }\\n\\n    TextGeometry.prototype = Object.create( ExtrudeGeometry.prototype );\\n    TextGeometry.prototype.constructor = TextGeometry;\\n\\n    /**\\n     * @author benaadams / https://twitter.com/ben_a_adams\\n     * based on THREE.SphereGeometry\\n     */\\n\\n    function SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\\n\\n    \\tBufferGeometry.call( this );\\n\\n    \\tthis.type = 'SphereBufferGeometry';\\n\\n    \\tthis.parameters = {\\n    \\t\\tradius: radius,\\n    \\t\\twidthSegments: widthSegments,\\n    \\t\\theightSegments: heightSegments,\\n    \\t\\tphiStart: phiStart,\\n    \\t\\tphiLength: phiLength,\\n    \\t\\tthetaStart: thetaStart,\\n    \\t\\tthetaLength: thetaLength\\n    \\t};\\n\\n    \\tradius = radius || 50;\\n\\n    \\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\\n    \\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\\n\\n    \\tphiStart = phiStart !== undefined ? phiStart : 0;\\n    \\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\\n\\n    \\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\\n    \\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\\n\\n    \\tvar thetaEnd = thetaStart + thetaLength;\\n\\n    \\tvar vertexCount = ( ( widthSegments + 1 ) * ( heightSegments + 1 ) );\\n\\n    \\tvar positions = new BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\\n    \\tvar normals = new BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\\n    \\tvar uvs = new BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\\n\\n    \\tvar index = 0, vertices = [], normal = new Vector3();\\n\\n    \\tfor ( var y = 0; y <= heightSegments; y ++ ) {\\n\\n    \\t\\tvar verticesRow = [];\\n\\n    \\t\\tvar v = y / heightSegments;\\n\\n    \\t\\tfor ( var x = 0; x <= widthSegments; x ++ ) {\\n\\n    \\t\\t\\tvar u = x / widthSegments;\\n\\n    \\t\\t\\tvar px = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\\n    \\t\\t\\tvar py = radius * Math.cos( thetaStart + v * thetaLength );\\n    \\t\\t\\tvar pz = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\\n\\n    \\t\\t\\tnormal.set( px, py, pz ).normalize();\\n\\n    \\t\\t\\tpositions.setXYZ( index, px, py, pz );\\n    \\t\\t\\tnormals.setXYZ( index, normal.x, normal.y, normal.z );\\n    \\t\\t\\tuvs.setXY( index, u, 1 - v );\\n\\n    \\t\\t\\tverticesRow.push( index );\\n\\n    \\t\\t\\tindex ++;\\n\\n    \\t\\t}\\n\\n    \\t\\tvertices.push( verticesRow );\\n\\n    \\t}\\n\\n    \\tvar indices = [];\\n\\n    \\tfor ( var y = 0; y < heightSegments; y ++ ) {\\n\\n    \\t\\tfor ( var x = 0; x < widthSegments; x ++ ) {\\n\\n    \\t\\t\\tvar v1 = vertices[ y ][ x + 1 ];\\n    \\t\\t\\tvar v2 = vertices[ y ][ x ];\\n    \\t\\t\\tvar v3 = vertices[ y + 1 ][ x ];\\n    \\t\\t\\tvar v4 = vertices[ y + 1 ][ x + 1 ];\\n\\n    \\t\\t\\tif ( y !== 0 || thetaStart > 0 ) indices.push( v1, v2, v4 );\\n    \\t\\t\\tif ( y !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( v2, v3, v4 );\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\tthis.setIndex( new ( positions.count > 65535 ? Uint32Attribute : Uint16Attribute )( indices, 1 ) );\\n    \\tthis.addAttribute( 'position', positions );\\n    \\tthis.addAttribute( 'normal', normals );\\n    \\tthis.addAttribute( 'uv', uvs );\\n\\n    \\tthis.boundingSphere = new Sphere( new Vector3(), radius );\\n\\n    }\\n\\n    SphereBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\\n    SphereBufferGeometry.prototype.constructor = SphereBufferGeometry;\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     */\\n\\n    function SphereGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\\n\\n    \\tGeometry.call( this );\\n\\n    \\tthis.type = 'SphereGeometry';\\n\\n    \\tthis.parameters = {\\n    \\t\\tradius: radius,\\n    \\t\\twidthSegments: widthSegments,\\n    \\t\\theightSegments: heightSegments,\\n    \\t\\tphiStart: phiStart,\\n    \\t\\tphiLength: phiLength,\\n    \\t\\tthetaStart: thetaStart,\\n    \\t\\tthetaLength: thetaLength\\n    \\t};\\n\\n    \\tthis.fromBufferGeometry( new SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\\n\\n    }\\n\\n    SphereGeometry.prototype = Object.create( Geometry.prototype );\\n    SphereGeometry.prototype.constructor = SphereGeometry;\\n\\n    /**\\n     * @author Mugen87 / https://github.com/Mugen87\\n     */\\n\\n    function RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\\n\\n    \\tBufferGeometry.call( this );\\n\\n    \\tthis.type = 'RingBufferGeometry';\\n\\n    \\tthis.parameters = {\\n    \\t\\tinnerRadius: innerRadius,\\n    \\t\\touterRadius: outerRadius,\\n    \\t\\tthetaSegments: thetaSegments,\\n    \\t\\tphiSegments: phiSegments,\\n    \\t\\tthetaStart: thetaStart,\\n    \\t\\tthetaLength: thetaLength\\n    \\t};\\n\\n    \\tinnerRadius = innerRadius || 20;\\n    \\touterRadius = outerRadius || 50;\\n\\n    \\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\\n    \\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\\n\\n    \\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\\n    \\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 1;\\n\\n    \\t// these are used to calculate buffer length\\n    \\tvar vertexCount = ( thetaSegments + 1 ) * ( phiSegments + 1 );\\n    \\tvar indexCount = thetaSegments * phiSegments * 2 * 3;\\n\\n    \\t// buffers\\n    \\tvar indices = new BufferAttribute( new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount ) , 1 );\\n    \\tvar vertices = new BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\\n    \\tvar normals = new BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\\n    \\tvar uvs = new BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\\n\\n    \\t// some helper variables\\n    \\tvar index = 0, indexOffset = 0, segment;\\n    \\tvar radius = innerRadius;\\n    \\tvar radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\\n    \\tvar vertex = new Vector3();\\n    \\tvar uv = new Vector2();\\n    \\tvar j, i;\\n\\n    \\t// generate vertices, normals and uvs\\n\\n    \\t// values are generate from the inside of the ring to the outside\\n\\n    \\tfor ( j = 0; j <= phiSegments; j ++ ) {\\n\\n    \\t\\tfor ( i = 0; i <= thetaSegments; i ++ ) {\\n\\n    \\t\\t\\tsegment = thetaStart + i / thetaSegments * thetaLength;\\n\\n    \\t\\t\\t// vertex\\n    \\t\\t\\tvertex.x = radius * Math.cos( segment );\\n    \\t\\t\\tvertex.y = radius * Math.sin( segment );\\n    \\t\\t\\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\\n\\n    \\t\\t\\t// normal\\n    \\t\\t\\tnormals.setXYZ( index, 0, 0, 1 );\\n\\n    \\t\\t\\t// uv\\n    \\t\\t\\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\\n    \\t\\t\\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\\n    \\t\\t\\tuvs.setXY( index, uv.x, uv.y );\\n\\n    \\t\\t\\t// increase index\\n    \\t\\t\\tindex++;\\n\\n    \\t\\t}\\n\\n    \\t\\t// increase the radius for next row of vertices\\n    \\t\\tradius += radiusStep;\\n\\n    \\t}\\n\\n    \\t// generate indices\\n\\n    \\tfor ( j = 0; j < phiSegments; j ++ ) {\\n\\n    \\t\\tvar thetaSegmentLevel = j * ( thetaSegments + 1 );\\n\\n    \\t\\tfor ( i = 0; i < thetaSegments; i ++ ) {\\n\\n    \\t\\t\\tsegment = i + thetaSegmentLevel;\\n\\n    \\t\\t\\t// indices\\n    \\t\\t\\tvar a = segment;\\n    \\t\\t\\tvar b = segment + thetaSegments + 1;\\n    \\t\\t\\tvar c = segment + thetaSegments + 2;\\n    \\t\\t\\tvar d = segment + 1;\\n\\n    \\t\\t\\t// face one\\n    \\t\\t\\tindices.setX( indexOffset, a ); indexOffset++;\\n    \\t\\t\\tindices.setX( indexOffset, b ); indexOffset++;\\n    \\t\\t\\tindices.setX( indexOffset, c ); indexOffset++;\\n\\n    \\t\\t\\t// face two\\n    \\t\\t\\tindices.setX( indexOffset, a ); indexOffset++;\\n    \\t\\t\\tindices.setX( indexOffset, c ); indexOffset++;\\n    \\t\\t\\tindices.setX( indexOffset, d ); indexOffset++;\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\t// build geometry\\n\\n    \\tthis.setIndex( indices );\\n    \\tthis.addAttribute( 'position', vertices );\\n    \\tthis.addAttribute( 'normal', normals );\\n    \\tthis.addAttribute( 'uv', uvs );\\n\\n    }\\n\\n    RingBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\\n    RingBufferGeometry.prototype.constructor = RingBufferGeometry;\\n\\n    /**\\n     * @author Kaleb Murphy\\n     */\\n\\n    function RingGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\\n\\n    \\tGeometry.call( this );\\n\\n    \\tthis.type = 'RingGeometry';\\n\\n    \\tthis.parameters = {\\n    \\t\\tinnerRadius: innerRadius,\\n    \\t\\touterRadius: outerRadius,\\n    \\t\\tthetaSegments: thetaSegments,\\n    \\t\\tphiSegments: phiSegments,\\n    \\t\\tthetaStart: thetaStart,\\n    \\t\\tthetaLength: thetaLength\\n    \\t};\\n\\n    \\tthis.fromBufferGeometry( new RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) );\\n\\n    }\\n\\n    RingGeometry.prototype = Object.create( Geometry.prototype );\\n    RingGeometry.prototype.constructor = RingGeometry;\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\\n     */\\n\\n    function PlaneGeometry( width, height, widthSegments, heightSegments ) {\\n\\n    \\tGeometry.call( this );\\n\\n    \\tthis.type = 'PlaneGeometry';\\n\\n    \\tthis.parameters = {\\n    \\t\\twidth: width,\\n    \\t\\theight: height,\\n    \\t\\twidthSegments: widthSegments,\\n    \\t\\theightSegments: heightSegments\\n    \\t};\\n\\n    \\tthis.fromBufferGeometry( new PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\\n\\n    }\\n\\n    PlaneGeometry.prototype = Object.create( Geometry.prototype );\\n    PlaneGeometry.prototype.constructor = PlaneGeometry;\\n\\n    /**\\n     * @author Mugen87 / https://github.com/Mugen87\\n     */\\n\\n     // points - to create a closed torus, one must use a set of points\\n     //    like so: [ a, b, c, d, a ], see first is the same as last.\\n     // segments - the number of circumference segments to create\\n     // phiStart - the starting radian\\n     // phiLength - the radian (0 to 2PI) range of the lathed section\\n     //    2PI is a closed lathe, less than 2PI is a portion.\\n\\n    function LatheBufferGeometry( points, segments, phiStart, phiLength ) {\\n\\n    \\tBufferGeometry.call( this );\\n\\n    \\tthis.type = 'LatheBufferGeometry';\\n\\n    \\tthis.parameters = {\\n    \\t\\tpoints: points,\\n    \\t\\tsegments: segments,\\n    \\t\\tphiStart: phiStart,\\n    \\t\\tphiLength: phiLength\\n    \\t};\\n\\n    \\tsegments = Math.floor( segments ) || 12;\\n    \\tphiStart = phiStart || 0;\\n    \\tphiLength = phiLength || Math.PI * 2;\\n\\n    \\t// clamp phiLength so it's in range of [ 0, 2PI ]\\n    \\tphiLength = exports.Math.clamp( phiLength, 0, Math.PI * 2 );\\n\\n    \\t// these are used to calculate buffer length\\n    \\tvar vertexCount = ( segments + 1 ) * points.length;\\n    \\tvar indexCount = segments * points.length * 2 * 3;\\n\\n    \\t// buffers\\n    \\tvar indices = new BufferAttribute( new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount ) , 1 );\\n    \\tvar vertices = new BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\\n    \\tvar uvs = new BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\\n\\n    \\t// helper variables\\n    \\tvar index = 0, indexOffset = 0, base;\\n    \\tvar inverseSegments = 1.0 / segments;\\n    \\tvar vertex = new Vector3();\\n    \\tvar uv = new Vector2();\\n    \\tvar i, j;\\n\\n    \\t// generate vertices and uvs\\n\\n    \\tfor ( i = 0; i <= segments; i ++ ) {\\n\\n    \\t\\tvar phi = phiStart + i * inverseSegments * phiLength;\\n\\n    \\t\\tvar sin = Math.sin( phi );\\n    \\t\\tvar cos = Math.cos( phi );\\n\\n    \\t\\tfor ( j = 0; j <= ( points.length - 1 ); j ++ ) {\\n\\n    \\t\\t\\t// vertex\\n    \\t\\t\\tvertex.x = points[ j ].x * sin;\\n    \\t\\t\\tvertex.y = points[ j ].y;\\n    \\t\\t\\tvertex.z = points[ j ].x * cos;\\n    \\t\\t\\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\\n\\n    \\t\\t\\t// uv\\n    \\t\\t\\tuv.x = i / segments;\\n    \\t\\t\\tuv.y = j / ( points.length - 1 );\\n    \\t\\t\\tuvs.setXY( index, uv.x, uv.y );\\n\\n    \\t\\t\\t// increase index\\n    \\t\\t\\tindex ++;\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\t// generate indices\\n\\n    \\tfor ( i = 0; i < segments; i ++ ) {\\n\\n    \\t\\tfor ( j = 0; j < ( points.length - 1 ); j ++ ) {\\n\\n    \\t\\t\\tbase = j + i * points.length;\\n\\n    \\t\\t\\t// indices\\n    \\t\\t\\tvar a = base;\\n    \\t\\t\\tvar b = base + points.length;\\n    \\t\\t\\tvar c = base + points.length + 1;\\n    \\t\\t\\tvar d = base + 1;\\n\\n    \\t\\t\\t// face one\\n    \\t\\t\\tindices.setX( indexOffset, a ); indexOffset++;\\n    \\t\\t\\tindices.setX( indexOffset, b ); indexOffset++;\\n    \\t\\t\\tindices.setX( indexOffset, d ); indexOffset++;\\n\\n    \\t\\t\\t// face two\\n    \\t\\t\\tindices.setX( indexOffset, b ); indexOffset++;\\n    \\t\\t\\tindices.setX( indexOffset, c ); indexOffset++;\\n    \\t\\t\\tindices.setX( indexOffset, d ); indexOffset++;\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\t// build geometry\\n\\n    \\tthis.setIndex( indices );\\n    \\tthis.addAttribute( 'position', vertices );\\n    \\tthis.addAttribute( 'uv', uvs );\\n\\n    \\t// generate normals\\n\\n    \\tthis.computeVertexNormals();\\n\\n    \\t// if the geometry is closed, we need to average the normals along the seam.\\n    \\t// because the corresponding vertices are identical (but still have different UVs).\\n\\n    \\tif( phiLength === Math.PI * 2 ) {\\n\\n    \\t\\tvar normals = this.attributes.normal.array;\\n    \\t\\tvar n1 = new Vector3();\\n    \\t\\tvar n2 = new Vector3();\\n    \\t\\tvar n = new Vector3();\\n\\n    \\t\\t// this is the buffer offset for the last line of vertices\\n    \\t\\tbase = segments * points.length * 3;\\n\\n    \\t\\tfor( i = 0, j = 0; i < points.length; i ++, j += 3 ) {\\n\\n    \\t\\t\\t// select the normal of the vertex in the first line\\n    \\t\\t\\tn1.x = normals[ j + 0 ];\\n    \\t\\t\\tn1.y = normals[ j + 1 ];\\n    \\t\\t\\tn1.z = normals[ j + 2 ];\\n\\n    \\t\\t\\t// select the normal of the vertex in the last line\\n    \\t\\t\\tn2.x = normals[ base + j + 0 ];\\n    \\t\\t\\tn2.y = normals[ base + j + 1 ];\\n    \\t\\t\\tn2.z = normals[ base + j + 2 ];\\n\\n    \\t\\t\\t// average normals\\n    \\t\\t\\tn.addVectors( n1, n2 ).normalize();\\n\\n    \\t\\t\\t// assign the new values to both normals\\n    \\t\\t\\tnormals[ j + 0 ] = normals[ base + j + 0 ] = n.x;\\n    \\t\\t\\tnormals[ j + 1 ] = normals[ base + j + 1 ] = n.y;\\n    \\t\\t\\tnormals[ j + 2 ] = normals[ base + j + 2 ] = n.z;\\n\\n    \\t\\t} // next row\\n\\n    \\t}\\n\\n    }\\n\\n    LatheBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\\n    LatheBufferGeometry.prototype.constructor = LatheBufferGeometry;\\n\\n    /**\\n     * @author astrodud / http://astrodud.isgreat.org/\\n     * @author zz85 / https://github.com/zz85\\n     * @author bhouston / http://clara.io\\n     */\\n\\n    // points - to create a closed torus, one must use a set of points\\n    //    like so: [ a, b, c, d, a ], see first is the same as last.\\n    // segments - the number of circumference segments to create\\n    // phiStart - the starting radian\\n    // phiLength - the radian (0 to 2PI) range of the lathed section\\n    //    2PI is a closed lathe, less than 2PI is a portion.\\n\\n    function LatheGeometry( points, segments, phiStart, phiLength ) {\\n\\n    \\tGeometry.call( this );\\n\\n    \\tthis.type = 'LatheGeometry';\\n\\n    \\tthis.parameters = {\\n    \\t\\tpoints: points,\\n    \\t\\tsegments: segments,\\n    \\t\\tphiStart: phiStart,\\n    \\t\\tphiLength: phiLength\\n    \\t};\\n\\n    \\tthis.fromBufferGeometry( new LatheBufferGeometry( points, segments, phiStart, phiLength ) );\\n    \\tthis.mergeVertices();\\n\\n    }\\n\\n    LatheGeometry.prototype = Object.create( Geometry.prototype );\\n    LatheGeometry.prototype.constructor = LatheGeometry;\\n\\n    /**\\n     * @author jonobr1 / http://jonobr1.com\\n     *\\n     * Creates a one-sided polygonal geometry from a path shape. Similar to\\n     * ExtrudeGeometry.\\n     *\\n     * parameters = {\\n     *\\n     *\\tcurveSegments: <int>, // number of points on the curves. NOT USED AT THE MOMENT.\\n     *\\n     *\\tmaterial: <int> // material index for front and back faces\\n     *\\tuvGenerator: <Object> // object that provides UV generator functions\\n     *\\n     * }\\n     **/\\n\\n    function ShapeGeometry( shapes, options ) {\\n\\n    \\tGeometry.call( this );\\n\\n    \\tthis.type = 'ShapeGeometry';\\n\\n    \\tif ( Array.isArray( shapes ) === false ) shapes = [ shapes ];\\n\\n    \\tthis.addShapeList( shapes, options );\\n\\n    \\tthis.computeFaceNormals();\\n\\n    }\\n\\n    ShapeGeometry.prototype = Object.create( Geometry.prototype );\\n    ShapeGeometry.prototype.constructor = ShapeGeometry;\\n\\n    /**\\n     * Add an array of shapes to THREE.ShapeGeometry.\\n     */\\n    ShapeGeometry.prototype.addShapeList = function ( shapes, options ) {\\n\\n    \\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\\n\\n    \\t\\tthis.addShape( shapes[ i ], options );\\n\\n    \\t}\\n\\n    \\treturn this;\\n\\n    };\\n\\n    /**\\n     * Adds a shape to THREE.ShapeGeometry, based on THREE.ExtrudeGeometry.\\n     */\\n    ShapeGeometry.prototype.addShape = function ( shape, options ) {\\n\\n    \\tif ( options === undefined ) options = {};\\n    \\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\\n\\n    \\tvar material = options.material;\\n    \\tvar uvgen = options.UVGenerator === undefined ? ExtrudeGeometry.WorldUVGenerator : options.UVGenerator;\\n\\n    \\t//\\n\\n    \\tvar i, l, hole;\\n\\n    \\tvar shapesOffset = this.vertices.length;\\n    \\tvar shapePoints = shape.extractPoints( curveSegments );\\n\\n    \\tvar vertices = shapePoints.shape;\\n    \\tvar holes = shapePoints.holes;\\n\\n    \\tvar reverse = ! exports.ShapeUtils.isClockWise( vertices );\\n\\n    \\tif ( reverse ) {\\n\\n    \\t\\tvertices = vertices.reverse();\\n\\n    \\t\\t// Maybe we should also check if holes are in the opposite direction, just to be safe...\\n\\n    \\t\\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\\n\\n    \\t\\t\\thole = holes[ i ];\\n\\n    \\t\\t\\tif ( exports.ShapeUtils.isClockWise( hole ) ) {\\n\\n    \\t\\t\\t\\tholes[ i ] = hole.reverse();\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\treverse = false;\\n\\n    \\t}\\n\\n    \\tvar faces = exports.ShapeUtils.triangulateShape( vertices, holes );\\n\\n    \\t// Vertices\\n\\n    \\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\\n\\n    \\t\\thole = holes[ i ];\\n    \\t\\tvertices = vertices.concat( hole );\\n\\n    \\t}\\n\\n    \\t//\\n\\n    \\tvar vert, vlen = vertices.length;\\n    \\tvar face, flen = faces.length;\\n\\n    \\tfor ( i = 0; i < vlen; i ++ ) {\\n\\n    \\t\\tvert = vertices[ i ];\\n\\n    \\t\\tthis.vertices.push( new Vector3( vert.x, vert.y, 0 ) );\\n\\n    \\t}\\n\\n    \\tfor ( i = 0; i < flen; i ++ ) {\\n\\n    \\t\\tface = faces[ i ];\\n\\n    \\t\\tvar a = face[ 0 ] + shapesOffset;\\n    \\t\\tvar b = face[ 1 ] + shapesOffset;\\n    \\t\\tvar c = face[ 2 ] + shapesOffset;\\n\\n    \\t\\tthis.faces.push( new Face3( a, b, c, null, null, material ) );\\n    \\t\\tthis.faceVertexUvs[ 0 ].push( uvgen.generateTopUV( this, a, b, c ) );\\n\\n    \\t}\\n\\n    };\\n\\n    /**\\n     * @author WestLangley / http://github.com/WestLangley\\n     */\\n\\n    function EdgesGeometry( geometry, thresholdAngle ) {\\n\\n    \\tBufferGeometry.call( this );\\n\\n    \\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\\n\\n    \\tvar thresholdDot = Math.cos( exports.Math.DEG2RAD * thresholdAngle );\\n\\n    \\tvar edge = [ 0, 0 ], hash = {};\\n\\n    \\tfunction sortFunction( a, b ) {\\n\\n    \\t\\treturn a - b;\\n\\n    \\t}\\n\\n    \\tvar keys = [ 'a', 'b', 'c' ];\\n\\n    \\tvar geometry2;\\n\\n    \\tif ( (geometry && geometry.isBufferGeometry) ) {\\n\\n    \\t\\tgeometry2 = new Geometry();\\n    \\t\\tgeometry2.fromBufferGeometry( geometry );\\n\\n    \\t} else {\\n\\n    \\t\\tgeometry2 = geometry.clone();\\n\\n    \\t}\\n\\n    \\tgeometry2.mergeVertices();\\n    \\tgeometry2.computeFaceNormals();\\n\\n    \\tvar vertices = geometry2.vertices;\\n    \\tvar faces = geometry2.faces;\\n\\n    \\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\\n\\n    \\t\\tvar face = faces[ i ];\\n\\n    \\t\\tfor ( var j = 0; j < 3; j ++ ) {\\n\\n    \\t\\t\\tedge[ 0 ] = face[ keys[ j ] ];\\n    \\t\\t\\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\\n    \\t\\t\\tedge.sort( sortFunction );\\n\\n    \\t\\t\\tvar key = edge.toString();\\n\\n    \\t\\t\\tif ( hash[ key ] === undefined ) {\\n\\n    \\t\\t\\t\\thash[ key ] = { vert1: edge[ 0 ], vert2: edge[ 1 ], face1: i, face2: undefined };\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\thash[ key ].face2 = i;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\tvar coords = [];\\n\\n    \\tfor ( var key in hash ) {\\n\\n    \\t\\tvar h = hash[ key ];\\n\\n    \\t\\tif ( h.face2 === undefined || faces[ h.face1 ].normal.dot( faces[ h.face2 ].normal ) <= thresholdDot ) {\\n\\n    \\t\\t\\tvar vertex = vertices[ h.vert1 ];\\n    \\t\\t\\tcoords.push( vertex.x );\\n    \\t\\t\\tcoords.push( vertex.y );\\n    \\t\\t\\tcoords.push( vertex.z );\\n\\n    \\t\\t\\tvertex = vertices[ h.vert2 ];\\n    \\t\\t\\tcoords.push( vertex.x );\\n    \\t\\t\\tcoords.push( vertex.y );\\n    \\t\\t\\tcoords.push( vertex.z );\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\tthis.addAttribute( 'position', new BufferAttribute( new Float32Array( coords ), 3 ) );\\n\\n    }\\n\\n    EdgesGeometry.prototype = Object.create( BufferGeometry.prototype );\\n    EdgesGeometry.prototype.constructor = EdgesGeometry;\\n\\n    /**\\n     * @author Mugen87 / https://github.com/Mugen87\\n     */\\n\\n    function CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\\n\\n    \\tBufferGeometry.call( this );\\n\\n    \\tthis.type = 'CylinderBufferGeometry';\\n\\n    \\tthis.parameters = {\\n    \\t\\tradiusTop: radiusTop,\\n    \\t\\tradiusBottom: radiusBottom,\\n    \\t\\theight: height,\\n    \\t\\tradialSegments: radialSegments,\\n    \\t\\theightSegments: heightSegments,\\n    \\t\\topenEnded: openEnded,\\n    \\t\\tthetaStart: thetaStart,\\n    \\t\\tthetaLength: thetaLength\\n    \\t};\\n\\n    \\tvar scope = this;\\n\\n    \\tradiusTop = radiusTop !== undefined ? radiusTop : 20;\\n    \\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 20;\\n    \\theight = height !== undefined ? height : 100;\\n\\n    \\tradialSegments = Math.floor( radialSegments ) || 8;\\n    \\theightSegments = Math.floor( heightSegments ) || 1;\\n\\n    \\topenEnded = openEnded !== undefined ? openEnded : false;\\n    \\tthetaStart = thetaStart !== undefined ? thetaStart : 0.0;\\n    \\tthetaLength = thetaLength !== undefined ? thetaLength : 2.0 * Math.PI;\\n\\n    \\t// used to calculate buffer length\\n\\n    \\tvar nbCap = 0;\\n\\n    \\tif ( openEnded === false ) {\\n\\n    \\t\\tif ( radiusTop > 0 ) nbCap ++;\\n    \\t\\tif ( radiusBottom > 0 ) nbCap ++;\\n\\n    \\t}\\n\\n    \\tvar vertexCount = calculateVertexCount();\\n    \\tvar indexCount = calculateIndexCount();\\n\\n    \\t// buffers\\n\\n    \\tvar indices = new BufferAttribute( new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount ), 1 );\\n    \\tvar vertices = new BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\\n    \\tvar normals = new BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\\n    \\tvar uvs = new BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\\n\\n    \\t// helper variables\\n\\n    \\tvar index = 0,\\n    \\t    indexOffset = 0,\\n    \\t    indexArray = [],\\n    \\t    halfHeight = height / 2;\\n\\n    \\t// group variables\\n    \\tvar groupStart = 0;\\n\\n    \\t// generate geometry\\n\\n    \\tgenerateTorso();\\n\\n    \\tif ( openEnded === false ) {\\n\\n    \\t\\tif ( radiusTop > 0 ) generateCap( true );\\n    \\t\\tif ( radiusBottom > 0 ) generateCap( false );\\n\\n    \\t}\\n\\n    \\t// build geometry\\n\\n    \\tthis.setIndex( indices );\\n    \\tthis.addAttribute( 'position', vertices );\\n    \\tthis.addAttribute( 'normal', normals );\\n    \\tthis.addAttribute( 'uv', uvs );\\n\\n    \\t// helper functions\\n\\n    \\tfunction calculateVertexCount() {\\n\\n    \\t\\tvar count = ( radialSegments + 1 ) * ( heightSegments + 1 );\\n\\n    \\t\\tif ( openEnded === false ) {\\n\\n    \\t\\t\\tcount += ( ( radialSegments + 1 ) * nbCap ) + ( radialSegments * nbCap );\\n\\n    \\t\\t}\\n\\n    \\t\\treturn count;\\n\\n    \\t}\\n\\n    \\tfunction calculateIndexCount() {\\n\\n    \\t\\tvar count = radialSegments * heightSegments * 2 * 3;\\n\\n    \\t\\tif ( openEnded === false ) {\\n\\n    \\t\\t\\tcount += radialSegments * nbCap * 3;\\n\\n    \\t\\t}\\n\\n    \\t\\treturn count;\\n\\n    \\t}\\n\\n    \\tfunction generateTorso() {\\n\\n    \\t\\tvar x, y;\\n    \\t\\tvar normal = new Vector3();\\n    \\t\\tvar vertex = new Vector3();\\n\\n    \\t\\tvar groupCount = 0;\\n\\n    \\t\\t// this will be used to calculate the normal\\n    \\t\\tvar slope = ( radiusBottom - radiusTop ) / height;\\n\\n    \\t\\t// generate vertices, normals and uvs\\n\\n    \\t\\tfor ( y = 0; y <= heightSegments; y ++ ) {\\n\\n    \\t\\t\\tvar indexRow = [];\\n\\n    \\t\\t\\tvar v = y / heightSegments;\\n\\n    \\t\\t\\t// calculate the radius of the current row\\n    \\t\\t\\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\\n\\n    \\t\\t\\tfor ( x = 0; x <= radialSegments; x ++ ) {\\n\\n    \\t\\t\\t\\tvar u = x / radialSegments;\\n\\n    \\t\\t\\t\\tvar theta = u * thetaLength + thetaStart;\\n\\n    \\t\\t\\t\\tvar sinTheta = Math.sin( theta );\\n    \\t\\t\\t\\tvar cosTheta = Math.cos( theta );\\n\\n    \\t\\t\\t\\t// vertex\\n    \\t\\t\\t\\tvertex.x = radius * sinTheta;\\n    \\t\\t\\t\\tvertex.y = - v * height + halfHeight;\\n    \\t\\t\\t\\tvertex.z = radius * cosTheta;\\n    \\t\\t\\t\\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\\n\\n    \\t\\t\\t\\t// normal\\n    \\t\\t\\t\\tnormal.set( sinTheta, slope, cosTheta ).normalize();\\n    \\t\\t\\t\\tnormals.setXYZ( index, normal.x, normal.y, normal.z );\\n\\n    \\t\\t\\t\\t// uv\\n    \\t\\t\\t\\tuvs.setXY( index, u, 1 - v );\\n\\n    \\t\\t\\t\\t// save index of vertex in respective row\\n    \\t\\t\\t\\tindexRow.push( index );\\n\\n    \\t\\t\\t\\t// increase index\\n    \\t\\t\\t\\tindex ++;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\t// now save vertices of the row in our index array\\n    \\t\\t\\tindexArray.push( indexRow );\\n\\n    \\t\\t}\\n\\n    \\t\\t// generate indices\\n\\n    \\t\\tfor ( x = 0; x < radialSegments; x ++ ) {\\n\\n    \\t\\t\\tfor ( y = 0; y < heightSegments; y ++ ) {\\n\\n    \\t\\t\\t\\t// we use the index array to access the correct indices\\n    \\t\\t\\t\\tvar i1 = indexArray[ y ][ x ];\\n    \\t\\t\\t\\tvar i2 = indexArray[ y + 1 ][ x ];\\n    \\t\\t\\t\\tvar i3 = indexArray[ y + 1 ][ x + 1 ];\\n    \\t\\t\\t\\tvar i4 = indexArray[ y ][ x + 1 ];\\n\\n    \\t\\t\\t\\t// face one\\n    \\t\\t\\t\\tindices.setX( indexOffset, i1 ); indexOffset ++;\\n    \\t\\t\\t\\tindices.setX( indexOffset, i2 ); indexOffset ++;\\n    \\t\\t\\t\\tindices.setX( indexOffset, i4 ); indexOffset ++;\\n\\n    \\t\\t\\t\\t// face two\\n    \\t\\t\\t\\tindices.setX( indexOffset, i2 ); indexOffset ++;\\n    \\t\\t\\t\\tindices.setX( indexOffset, i3 ); indexOffset ++;\\n    \\t\\t\\t\\tindices.setX( indexOffset, i4 ); indexOffset ++;\\n\\n    \\t\\t\\t\\t// update counters\\n    \\t\\t\\t\\tgroupCount += 6;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\t// add a group to the geometry. this will ensure multi material support\\n    \\t\\tscope.addGroup( groupStart, groupCount, 0 );\\n\\n    \\t\\t// calculate new start value for groups\\n    \\t\\tgroupStart += groupCount;\\n\\n    \\t}\\n\\n    \\tfunction generateCap( top ) {\\n\\n    \\t\\tvar x, centerIndexStart, centerIndexEnd;\\n\\n    \\t\\tvar uv = new Vector2();\\n    \\t\\tvar vertex = new Vector3();\\n\\n    \\t\\tvar groupCount = 0;\\n\\n    \\t\\tvar radius = ( top === true ) ? radiusTop : radiusBottom;\\n    \\t\\tvar sign = ( top === true ) ? 1 : - 1;\\n\\n    \\t\\t// save the index of the first center vertex\\n    \\t\\tcenterIndexStart = index;\\n\\n    \\t\\t// first we generate the center vertex data of the cap.\\n    \\t\\t// because the geometry needs one set of uvs per face,\\n    \\t\\t// we must generate a center vertex per face/segment\\n\\n    \\t\\tfor ( x = 1; x <= radialSegments; x ++ ) {\\n\\n    \\t\\t\\t// vertex\\n    \\t\\t\\tvertices.setXYZ( index, 0, halfHeight * sign, 0 );\\n\\n    \\t\\t\\t// normal\\n    \\t\\t\\tnormals.setXYZ( index, 0, sign, 0 );\\n\\n    \\t\\t\\t// uv\\n    \\t\\t\\tuv.x = 0.5;\\n    \\t\\t\\tuv.y = 0.5;\\n\\n    \\t\\t\\tuvs.setXY( index, uv.x, uv.y );\\n\\n    \\t\\t\\t// increase index\\n    \\t\\t\\tindex ++;\\n\\n    \\t\\t}\\n\\n    \\t\\t// save the index of the last center vertex\\n    \\t\\tcenterIndexEnd = index;\\n\\n    \\t\\t// now we generate the surrounding vertices, normals and uvs\\n\\n    \\t\\tfor ( x = 0; x <= radialSegments; x ++ ) {\\n\\n    \\t\\t\\tvar u = x / radialSegments;\\n    \\t\\t\\tvar theta = u * thetaLength + thetaStart;\\n\\n    \\t\\t\\tvar cosTheta = Math.cos( theta );\\n    \\t\\t\\tvar sinTheta = Math.sin( theta );\\n\\n    \\t\\t\\t// vertex\\n    \\t\\t\\tvertex.x = radius * sinTheta;\\n    \\t\\t\\tvertex.y = halfHeight * sign;\\n    \\t\\t\\tvertex.z = radius * cosTheta;\\n    \\t\\t\\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\\n\\n    \\t\\t\\t// normal\\n    \\t\\t\\tnormals.setXYZ( index, 0, sign, 0 );\\n\\n    \\t\\t\\t// uv\\n    \\t\\t\\tuv.x = ( cosTheta * 0.5 ) + 0.5;\\n    \\t\\t\\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\\n    \\t\\t\\tuvs.setXY( index, uv.x, uv.y );\\n\\n    \\t\\t\\t// increase index\\n    \\t\\t\\tindex ++;\\n\\n    \\t\\t}\\n\\n    \\t\\t// generate indices\\n\\n    \\t\\tfor ( x = 0; x < radialSegments; x ++ ) {\\n\\n    \\t\\t\\tvar c = centerIndexStart + x;\\n    \\t\\t\\tvar i = centerIndexEnd + x;\\n\\n    \\t\\t\\tif ( top === true ) {\\n\\n    \\t\\t\\t\\t// face top\\n    \\t\\t\\t\\tindices.setX( indexOffset, i ); indexOffset ++;\\n    \\t\\t\\t\\tindices.setX( indexOffset, i + 1 ); indexOffset ++;\\n    \\t\\t\\t\\tindices.setX( indexOffset, c ); indexOffset ++;\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t// face bottom\\n    \\t\\t\\t\\tindices.setX( indexOffset, i + 1 ); indexOffset ++;\\n    \\t\\t\\t\\tindices.setX( indexOffset, i ); indexOffset ++;\\n    \\t\\t\\t\\tindices.setX( indexOffset, c ); indexOffset ++;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\t// update counters\\n    \\t\\t\\tgroupCount += 3;\\n\\n    \\t\\t}\\n\\n    \\t\\t// add a group to the geometry. this will ensure multi material support\\n    \\t\\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\\n\\n    \\t\\t// calculate new start value for groups\\n    \\t\\tgroupStart += groupCount;\\n\\n    \\t}\\n\\n    }\\n\\n    CylinderBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\\n    CylinderBufferGeometry.prototype.constructor = CylinderBufferGeometry;\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     */\\n\\n    function CylinderGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\\n\\n    \\tGeometry.call( this );\\n\\n    \\tthis.type = 'CylinderGeometry';\\n\\n    \\tthis.parameters = {\\n    \\t\\tradiusTop: radiusTop,\\n    \\t\\tradiusBottom: radiusBottom,\\n    \\t\\theight: height,\\n    \\t\\tradialSegments: radialSegments,\\n    \\t\\theightSegments: heightSegments,\\n    \\t\\topenEnded: openEnded,\\n    \\t\\tthetaStart: thetaStart,\\n    \\t\\tthetaLength: thetaLength\\n    \\t};\\n\\n    \\tthis.fromBufferGeometry( new CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) );\\n    \\tthis.mergeVertices();\\n\\n    }\\n\\n    CylinderGeometry.prototype = Object.create( Geometry.prototype );\\n    CylinderGeometry.prototype.constructor = CylinderGeometry;\\n\\n    /**\\n     * @author abelnation / http://github.com/abelnation\\n     */\\n\\n    function ConeGeometry(\\n    \\tradius, height,\\n    \\tradialSegments, heightSegments,\\n    \\topenEnded, thetaStart, thetaLength ) {\\n\\n    \\tCylinderGeometry.call( this,\\n    \\t\\t0, radius, height,\\n    \\t\\tradialSegments, heightSegments,\\n    \\t\\topenEnded, thetaStart, thetaLength );\\n\\n    \\tthis.type = 'ConeGeometry';\\n\\n    \\tthis.parameters = {\\n    \\t\\tradius: radius,\\n    \\t\\theight: height,\\n    \\t\\tradialSegments: radialSegments,\\n    \\t\\theightSegments: heightSegments,\\n    \\t\\topenEnded: openEnded,\\n    \\t\\tthetaStart: thetaStart,\\n    \\t\\tthetaLength: thetaLength\\n    \\t};\\n\\n    }\\n\\n    ConeGeometry.prototype = Object.create( CylinderGeometry.prototype );\\n    ConeGeometry.prototype.constructor = ConeGeometry;\\n\\n    /*\\n     * @author: abelnation / http://github.com/abelnation\\n     */\\n\\n    function ConeBufferGeometry(\\n    \\tradius, height,\\n    \\tradialSegments, heightSegments,\\n    \\topenEnded, thetaStart, thetaLength ) {\\n\\n    \\tCylinderBufferGeometry.call( this,\\n    \\t\\t0, radius, height,\\n    \\t\\tradialSegments, heightSegments,\\n    \\t\\topenEnded, thetaStart, thetaLength );\\n\\n    \\tthis.type = 'ConeBufferGeometry';\\n\\n    \\tthis.parameters = {\\n    \\t\\tradius: radius,\\n    \\t\\theight: height,\\n    \\t\\tradialSegments: radialSegments,\\n    \\t\\theightSegments: heightSegments,\\n    \\t\\tthetaStart: thetaStart,\\n    \\t\\tthetaLength: thetaLength\\n    \\t};\\n\\n    }\\n\\n    ConeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\\n    ConeBufferGeometry.prototype.constructor = ConeBufferGeometry;\\n\\n    /**\\n     * @author benaadams / https://twitter.com/ben_a_adams\\n     */\\n\\n    function CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) {\\n\\n    \\tBufferGeometry.call( this );\\n\\n    \\tthis.type = 'CircleBufferGeometry';\\n\\n    \\tthis.parameters = {\\n    \\t\\tradius: radius,\\n    \\t\\tsegments: segments,\\n    \\t\\tthetaStart: thetaStart,\\n    \\t\\tthetaLength: thetaLength\\n    \\t};\\n\\n    \\tradius = radius || 50;\\n    \\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\\n\\n    \\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\\n    \\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\\n\\n    \\tvar vertices = segments + 2;\\n\\n    \\tvar positions = new Float32Array( vertices * 3 );\\n    \\tvar normals = new Float32Array( vertices * 3 );\\n    \\tvar uvs = new Float32Array( vertices * 2 );\\n\\n    \\t// center data is already zero, but need to set a few extras\\n    \\tnormals[ 2 ] = 1.0;\\n    \\tuvs[ 0 ] = 0.5;\\n    \\tuvs[ 1 ] = 0.5;\\n\\n    \\tfor ( var s = 0, i = 3, ii = 2 ; s <= segments; s ++, i += 3, ii += 2 ) {\\n\\n    \\t\\tvar segment = thetaStart + s / segments * thetaLength;\\n\\n    \\t\\tpositions[ i ] = radius * Math.cos( segment );\\n    \\t\\tpositions[ i + 1 ] = radius * Math.sin( segment );\\n\\n    \\t\\tnormals[ i + 2 ] = 1; // normal z\\n\\n    \\t\\tuvs[ ii ] = ( positions[ i ] / radius + 1 ) / 2;\\n    \\t\\tuvs[ ii + 1 ] = ( positions[ i + 1 ] / radius + 1 ) / 2;\\n\\n    \\t}\\n\\n    \\tvar indices = [];\\n\\n    \\tfor ( var i = 1; i <= segments; i ++ ) {\\n\\n    \\t\\tindices.push( i, i + 1, 0 );\\n\\n    \\t}\\n\\n    \\tthis.setIndex( new BufferAttribute( new Uint16Array( indices ), 1 ) );\\n    \\tthis.addAttribute( 'position', new BufferAttribute( positions, 3 ) );\\n    \\tthis.addAttribute( 'normal', new BufferAttribute( normals, 3 ) );\\n    \\tthis.addAttribute( 'uv', new BufferAttribute( uvs, 2 ) );\\n\\n    \\tthis.boundingSphere = new Sphere( new Vector3(), radius );\\n\\n    }\\n\\n    CircleBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\\n    CircleBufferGeometry.prototype.constructor = CircleBufferGeometry;\\n\\n    /**\\n     * @author hughes\\n     */\\n\\n    function CircleGeometry( radius, segments, thetaStart, thetaLength ) {\\n\\n    \\tGeometry.call( this );\\n\\n    \\tthis.type = 'CircleGeometry';\\n\\n    \\tthis.parameters = {\\n    \\t\\tradius: radius,\\n    \\t\\tsegments: segments,\\n    \\t\\tthetaStart: thetaStart,\\n    \\t\\tthetaLength: thetaLength\\n    \\t};\\n\\n    \\tthis.fromBufferGeometry( new CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) );\\n\\n    }\\n\\n    CircleGeometry.prototype = Object.create( Geometry.prototype );\\n    CircleGeometry.prototype.constructor = CircleGeometry;\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Cube.as\\n     */\\n\\n    function BoxGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\\n\\n    \\tGeometry.call( this );\\n\\n    \\tthis.type = 'BoxGeometry';\\n\\n    \\tthis.parameters = {\\n    \\t\\twidth: width,\\n    \\t\\theight: height,\\n    \\t\\tdepth: depth,\\n    \\t\\twidthSegments: widthSegments,\\n    \\t\\theightSegments: heightSegments,\\n    \\t\\tdepthSegments: depthSegments\\n    \\t};\\n\\n    \\tthis.fromBufferGeometry( new BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) );\\n    \\tthis.mergeVertices();\\n\\n    }\\n\\n    BoxGeometry.prototype = Object.create( Geometry.prototype );\\n    BoxGeometry.prototype.constructor = BoxGeometry;\\n\\n\\n\\n    var Geometries = Object.freeze({\\n    \\tWireframeGeometry: WireframeGeometry,\\n    \\tParametricGeometry: ParametricGeometry,\\n    \\tTetrahedronGeometry: TetrahedronGeometry,\\n    \\tOctahedronGeometry: OctahedronGeometry,\\n    \\tIcosahedronGeometry: IcosahedronGeometry,\\n    \\tDodecahedronGeometry: DodecahedronGeometry,\\n    \\tPolyhedronGeometry: PolyhedronGeometry,\\n    \\tTubeGeometry: TubeGeometry,\\n    \\tTorusKnotGeometry: TorusKnotGeometry,\\n    \\tTorusKnotBufferGeometry: TorusKnotBufferGeometry,\\n    \\tTorusGeometry: TorusGeometry,\\n    \\tTorusBufferGeometry: TorusBufferGeometry,\\n    \\tTextGeometry: TextGeometry,\\n    \\tSphereBufferGeometry: SphereBufferGeometry,\\n    \\tSphereGeometry: SphereGeometry,\\n    \\tRingGeometry: RingGeometry,\\n    \\tRingBufferGeometry: RingBufferGeometry,\\n    \\tPlaneBufferGeometry: PlaneBufferGeometry,\\n    \\tPlaneGeometry: PlaneGeometry,\\n    \\tLatheGeometry: LatheGeometry,\\n    \\tLatheBufferGeometry: LatheBufferGeometry,\\n    \\tShapeGeometry: ShapeGeometry,\\n    \\tExtrudeGeometry: ExtrudeGeometry,\\n    \\tEdgesGeometry: EdgesGeometry,\\n    \\tConeGeometry: ConeGeometry,\\n    \\tConeBufferGeometry: ConeBufferGeometry,\\n    \\tCylinderGeometry: CylinderGeometry,\\n    \\tCylinderBufferGeometry: CylinderBufferGeometry,\\n    \\tCircleBufferGeometry: CircleBufferGeometry,\\n    \\tCircleGeometry: CircleGeometry,\\n    \\tBoxBufferGeometry: BoxBufferGeometry,\\n    \\tBoxGeometry: BoxGeometry\\n    });\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     */\\n\\n    function ShadowMaterial() {\\n\\n    \\tShaderMaterial.call( this, {\\n    \\t\\tuniforms: exports.UniformsUtils.merge( [\\n    \\t\\t\\tUniformsLib[ \\\"lights\\\" ],\\n    \\t\\t\\t{\\n    \\t\\t\\t\\topacity: { value: 1.0 }\\n    \\t\\t\\t}\\n    \\t\\t] ),\\n    \\t\\tvertexShader: ShaderChunk[ 'shadow_vert' ],\\n    \\t\\tfragmentShader: ShaderChunk[ 'shadow_frag' ]\\n    \\t} );\\n\\n    \\tthis.lights = true;\\n    \\tthis.transparent = true;\\n\\n    \\tObject.defineProperties( this, {\\n    \\t\\topacity: {\\n    \\t\\t\\tenumerable: true,\\n    \\t\\t\\tget: function () {\\n    \\t\\t\\t\\treturn this.uniforms.opacity.value;\\n    \\t\\t\\t},\\n    \\t\\t\\tset: function ( value ) {\\n    \\t\\t\\t\\tthis.uniforms.opacity.value = value;\\n    \\t\\t\\t}\\n    \\t\\t}\\n    \\t} );\\n\\n    }\\n\\n    ShadowMaterial.prototype = Object.create( ShaderMaterial.prototype );\\n    ShadowMaterial.prototype.constructor = ShadowMaterial;\\n\\n    ShadowMaterial.prototype.isShadowMaterial = true;\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     */\\n\\n    function RawShaderMaterial( parameters ) {\\n\\n    \\tShaderMaterial.call( this, parameters );\\n\\n    \\tthis.type = 'RawShaderMaterial';\\n\\n    }\\n\\n    RawShaderMaterial.prototype = Object.create( ShaderMaterial.prototype );\\n    RawShaderMaterial.prototype.constructor = RawShaderMaterial;\\n\\n    RawShaderMaterial.prototype.isRawShaderMaterial = true;\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     */\\n\\n    function MultiMaterial( materials ) {\\n\\n    \\tthis.uuid = exports.Math.generateUUID();\\n\\n    \\tthis.type = 'MultiMaterial';\\n\\n    \\tthis.materials = materials instanceof Array ? materials : [];\\n\\n    \\tthis.visible = true;\\n\\n    }\\n\\n    MultiMaterial.prototype = {\\n\\n    \\tconstructor: MultiMaterial,\\n\\n    \\tisMultiMaterial: true,\\n\\n    \\ttoJSON: function ( meta ) {\\n\\n    \\t\\tvar output = {\\n    \\t\\t\\tmetadata: {\\n    \\t\\t\\t\\tversion: 4.2,\\n    \\t\\t\\t\\ttype: 'material',\\n    \\t\\t\\t\\tgenerator: 'MaterialExporter'\\n    \\t\\t\\t},\\n    \\t\\t\\tuuid: this.uuid,\\n    \\t\\t\\ttype: this.type,\\n    \\t\\t\\tmaterials: []\\n    \\t\\t};\\n\\n    \\t\\tvar materials = this.materials;\\n\\n    \\t\\tfor ( var i = 0, l = materials.length; i < l; i ++ ) {\\n\\n    \\t\\t\\tvar material = materials[ i ].toJSON( meta );\\n    \\t\\t\\tdelete material.metadata;\\n\\n    \\t\\t\\toutput.materials.push( material );\\n\\n    \\t\\t}\\n\\n    \\t\\toutput.visible = this.visible;\\n\\n    \\t\\treturn output;\\n\\n    \\t},\\n\\n    \\tclone: function () {\\n\\n    \\t\\tvar material = new this.constructor();\\n\\n    \\t\\tfor ( var i = 0; i < this.materials.length; i ++ ) {\\n\\n    \\t\\t\\tmaterial.materials.push( this.materials[ i ].clone() );\\n\\n    \\t\\t}\\n\\n    \\t\\tmaterial.visible = this.visible;\\n\\n    \\t\\treturn material;\\n\\n    \\t}\\n\\n    };\\n\\n    /**\\n     * @author WestLangley / http://github.com/WestLangley\\n     *\\n     * parameters = {\\n     *  color: <hex>,\\n     *  roughness: <float>,\\n     *  metalness: <float>,\\n     *  opacity: <float>,\\n     *\\n     *  map: new THREE.Texture( <Image> ),\\n     *\\n     *  lightMap: new THREE.Texture( <Image> ),\\n     *  lightMapIntensity: <float>\\n     *\\n     *  aoMap: new THREE.Texture( <Image> ),\\n     *  aoMapIntensity: <float>\\n     *\\n     *  emissive: <hex>,\\n     *  emissiveIntensity: <float>\\n     *  emissiveMap: new THREE.Texture( <Image> ),\\n     *\\n     *  bumpMap: new THREE.Texture( <Image> ),\\n     *  bumpScale: <float>,\\n     *\\n     *  normalMap: new THREE.Texture( <Image> ),\\n     *  normalScale: <Vector2>,\\n     *\\n     *  displacementMap: new THREE.Texture( <Image> ),\\n     *  displacementScale: <float>,\\n     *  displacementBias: <float>,\\n     *\\n     *  roughnessMap: new THREE.Texture( <Image> ),\\n     *\\n     *  metalnessMap: new THREE.Texture( <Image> ),\\n     *\\n     *  alphaMap: new THREE.Texture( <Image> ),\\n     *\\n     *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\\n     *  envMapIntensity: <float>\\n     *\\n     *  refractionRatio: <float>,\\n     *\\n     *  wireframe: <boolean>,\\n     *  wireframeLinewidth: <float>,\\n     *\\n     *  skinning: <bool>,\\n     *  morphTargets: <bool>,\\n     *  morphNormals: <bool>\\n     * }\\n     */\\n\\n    function MeshStandardMaterial( parameters ) {\\n\\n    \\tMaterial.call( this );\\n\\n    \\tthis.defines = { 'STANDARD': '' };\\n\\n    \\tthis.type = 'MeshStandardMaterial';\\n\\n    \\tthis.color = new Color( 0xffffff ); // diffuse\\n    \\tthis.roughness = 0.5;\\n    \\tthis.metalness = 0.5;\\n\\n    \\tthis.map = null;\\n\\n    \\tthis.lightMap = null;\\n    \\tthis.lightMapIntensity = 1.0;\\n\\n    \\tthis.aoMap = null;\\n    \\tthis.aoMapIntensity = 1.0;\\n\\n    \\tthis.emissive = new Color( 0x000000 );\\n    \\tthis.emissiveIntensity = 1.0;\\n    \\tthis.emissiveMap = null;\\n\\n    \\tthis.bumpMap = null;\\n    \\tthis.bumpScale = 1;\\n\\n    \\tthis.normalMap = null;\\n    \\tthis.normalScale = new Vector2( 1, 1 );\\n\\n    \\tthis.displacementMap = null;\\n    \\tthis.displacementScale = 1;\\n    \\tthis.displacementBias = 0;\\n\\n    \\tthis.roughnessMap = null;\\n\\n    \\tthis.metalnessMap = null;\\n\\n    \\tthis.alphaMap = null;\\n\\n    \\tthis.envMap = null;\\n    \\tthis.envMapIntensity = 1.0;\\n\\n    \\tthis.refractionRatio = 0.98;\\n\\n    \\tthis.wireframe = false;\\n    \\tthis.wireframeLinewidth = 1;\\n    \\tthis.wireframeLinecap = 'round';\\n    \\tthis.wireframeLinejoin = 'round';\\n\\n    \\tthis.skinning = false;\\n    \\tthis.morphTargets = false;\\n    \\tthis.morphNormals = false;\\n\\n    \\tthis.setValues( parameters );\\n\\n    }\\n\\n    MeshStandardMaterial.prototype = Object.create( Material.prototype );\\n    MeshStandardMaterial.prototype.constructor = MeshStandardMaterial;\\n\\n    MeshStandardMaterial.prototype.isMeshStandardMaterial = true;\\n\\n    MeshStandardMaterial.prototype.copy = function ( source ) {\\n\\n    \\tMaterial.prototype.copy.call( this, source );\\n\\n    \\tthis.defines = { 'STANDARD': '' };\\n\\n    \\tthis.color.copy( source.color );\\n    \\tthis.roughness = source.roughness;\\n    \\tthis.metalness = source.metalness;\\n\\n    \\tthis.map = source.map;\\n\\n    \\tthis.lightMap = source.lightMap;\\n    \\tthis.lightMapIntensity = source.lightMapIntensity;\\n\\n    \\tthis.aoMap = source.aoMap;\\n    \\tthis.aoMapIntensity = source.aoMapIntensity;\\n\\n    \\tthis.emissive.copy( source.emissive );\\n    \\tthis.emissiveMap = source.emissiveMap;\\n    \\tthis.emissiveIntensity = source.emissiveIntensity;\\n\\n    \\tthis.bumpMap = source.bumpMap;\\n    \\tthis.bumpScale = source.bumpScale;\\n\\n    \\tthis.normalMap = source.normalMap;\\n    \\tthis.normalScale.copy( source.normalScale );\\n\\n    \\tthis.displacementMap = source.displacementMap;\\n    \\tthis.displacementScale = source.displacementScale;\\n    \\tthis.displacementBias = source.displacementBias;\\n\\n    \\tthis.roughnessMap = source.roughnessMap;\\n\\n    \\tthis.metalnessMap = source.metalnessMap;\\n\\n    \\tthis.alphaMap = source.alphaMap;\\n\\n    \\tthis.envMap = source.envMap;\\n    \\tthis.envMapIntensity = source.envMapIntensity;\\n\\n    \\tthis.refractionRatio = source.refractionRatio;\\n\\n    \\tthis.wireframe = source.wireframe;\\n    \\tthis.wireframeLinewidth = source.wireframeLinewidth;\\n    \\tthis.wireframeLinecap = source.wireframeLinecap;\\n    \\tthis.wireframeLinejoin = source.wireframeLinejoin;\\n\\n    \\tthis.skinning = source.skinning;\\n    \\tthis.morphTargets = source.morphTargets;\\n    \\tthis.morphNormals = source.morphNormals;\\n\\n    \\treturn this;\\n\\n    };\\n\\n    /**\\n     * @author WestLangley / http://github.com/WestLangley\\n     *\\n     * parameters = {\\n     *  reflectivity: <float>\\n     * }\\n     */\\n\\n    function MeshPhysicalMaterial( parameters ) {\\n\\n    \\tMeshStandardMaterial.call( this );\\n\\n    \\tthis.defines = { 'PHYSICAL': '' };\\n\\n    \\tthis.type = 'MeshPhysicalMaterial';\\n\\n    \\tthis.reflectivity = 0.5; // maps to F0 = 0.04\\n\\n    \\tthis.clearCoat = 0.0;\\n    \\tthis.clearCoatRoughness = 0.0;\\n\\n    \\tthis.setValues( parameters );\\n\\n    }\\n\\n    MeshPhysicalMaterial.prototype = Object.create( MeshStandardMaterial.prototype );\\n    MeshPhysicalMaterial.prototype.constructor = MeshPhysicalMaterial;\\n\\n    MeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\\n\\n    MeshPhysicalMaterial.prototype.copy = function ( source ) {\\n\\n    \\tMeshStandardMaterial.prototype.copy.call( this, source );\\n\\n    \\tthis.defines = { 'PHYSICAL': '' };\\n\\n    \\tthis.reflectivity = source.reflectivity;\\n\\n    \\tthis.clearCoat = source.clearCoat;\\n    \\tthis.clearCoatRoughness = source.clearCoatRoughness;\\n\\n    \\treturn this;\\n\\n    };\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     * @author alteredq / http://alteredqualia.com/\\n     *\\n     * parameters = {\\n     *  color: <hex>,\\n     *  specular: <hex>,\\n     *  shininess: <float>,\\n     *  opacity: <float>,\\n     *\\n     *  map: new THREE.Texture( <Image> ),\\n     *\\n     *  lightMap: new THREE.Texture( <Image> ),\\n     *  lightMapIntensity: <float>\\n     *\\n     *  aoMap: new THREE.Texture( <Image> ),\\n     *  aoMapIntensity: <float>\\n     *\\n     *  emissive: <hex>,\\n     *  emissiveIntensity: <float>\\n     *  emissiveMap: new THREE.Texture( <Image> ),\\n     *\\n     *  bumpMap: new THREE.Texture( <Image> ),\\n     *  bumpScale: <float>,\\n     *\\n     *  normalMap: new THREE.Texture( <Image> ),\\n     *  normalScale: <Vector2>,\\n     *\\n     *  displacementMap: new THREE.Texture( <Image> ),\\n     *  displacementScale: <float>,\\n     *  displacementBias: <float>,\\n     *\\n     *  specularMap: new THREE.Texture( <Image> ),\\n     *\\n     *  alphaMap: new THREE.Texture( <Image> ),\\n     *\\n     *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\\n     *  combine: THREE.Multiply,\\n     *  reflectivity: <float>,\\n     *  refractionRatio: <float>,\\n     *\\n     *  wireframe: <boolean>,\\n     *  wireframeLinewidth: <float>,\\n     *\\n     *  skinning: <bool>,\\n     *  morphTargets: <bool>,\\n     *  morphNormals: <bool>\\n     * }\\n     */\\n\\n    function MeshPhongMaterial( parameters ) {\\n\\n    \\tMaterial.call( this );\\n\\n    \\tthis.type = 'MeshPhongMaterial';\\n\\n    \\tthis.color = new Color( 0xffffff ); // diffuse\\n    \\tthis.specular = new Color( 0x111111 );\\n    \\tthis.shininess = 30;\\n\\n    \\tthis.map = null;\\n\\n    \\tthis.lightMap = null;\\n    \\tthis.lightMapIntensity = 1.0;\\n\\n    \\tthis.aoMap = null;\\n    \\tthis.aoMapIntensity = 1.0;\\n\\n    \\tthis.emissive = new Color( 0x000000 );\\n    \\tthis.emissiveIntensity = 1.0;\\n    \\tthis.emissiveMap = null;\\n\\n    \\tthis.bumpMap = null;\\n    \\tthis.bumpScale = 1;\\n\\n    \\tthis.normalMap = null;\\n    \\tthis.normalScale = new Vector2( 1, 1 );\\n\\n    \\tthis.displacementMap = null;\\n    \\tthis.displacementScale = 1;\\n    \\tthis.displacementBias = 0;\\n\\n    \\tthis.specularMap = null;\\n\\n    \\tthis.alphaMap = null;\\n\\n    \\tthis.envMap = null;\\n    \\tthis.combine = MultiplyOperation;\\n    \\tthis.reflectivity = 1;\\n    \\tthis.refractionRatio = 0.98;\\n\\n    \\tthis.wireframe = false;\\n    \\tthis.wireframeLinewidth = 1;\\n    \\tthis.wireframeLinecap = 'round';\\n    \\tthis.wireframeLinejoin = 'round';\\n\\n    \\tthis.skinning = false;\\n    \\tthis.morphTargets = false;\\n    \\tthis.morphNormals = false;\\n\\n    \\tthis.setValues( parameters );\\n\\n    }\\n\\n    MeshPhongMaterial.prototype = Object.create( Material.prototype );\\n    MeshPhongMaterial.prototype.constructor = MeshPhongMaterial;\\n\\n    MeshPhongMaterial.prototype.isMeshPhongMaterial = true;\\n\\n    MeshPhongMaterial.prototype.copy = function ( source ) {\\n\\n    \\tMaterial.prototype.copy.call( this, source );\\n\\n    \\tthis.color.copy( source.color );\\n    \\tthis.specular.copy( source.specular );\\n    \\tthis.shininess = source.shininess;\\n\\n    \\tthis.map = source.map;\\n\\n    \\tthis.lightMap = source.lightMap;\\n    \\tthis.lightMapIntensity = source.lightMapIntensity;\\n\\n    \\tthis.aoMap = source.aoMap;\\n    \\tthis.aoMapIntensity = source.aoMapIntensity;\\n\\n    \\tthis.emissive.copy( source.emissive );\\n    \\tthis.emissiveMap = source.emissiveMap;\\n    \\tthis.emissiveIntensity = source.emissiveIntensity;\\n\\n    \\tthis.bumpMap = source.bumpMap;\\n    \\tthis.bumpScale = source.bumpScale;\\n\\n    \\tthis.normalMap = source.normalMap;\\n    \\tthis.normalScale.copy( source.normalScale );\\n\\n    \\tthis.displacementMap = source.displacementMap;\\n    \\tthis.displacementScale = source.displacementScale;\\n    \\tthis.displacementBias = source.displacementBias;\\n\\n    \\tthis.specularMap = source.specularMap;\\n\\n    \\tthis.alphaMap = source.alphaMap;\\n\\n    \\tthis.envMap = source.envMap;\\n    \\tthis.combine = source.combine;\\n    \\tthis.reflectivity = source.reflectivity;\\n    \\tthis.refractionRatio = source.refractionRatio;\\n\\n    \\tthis.wireframe = source.wireframe;\\n    \\tthis.wireframeLinewidth = source.wireframeLinewidth;\\n    \\tthis.wireframeLinecap = source.wireframeLinecap;\\n    \\tthis.wireframeLinejoin = source.wireframeLinejoin;\\n\\n    \\tthis.skinning = source.skinning;\\n    \\tthis.morphTargets = source.morphTargets;\\n    \\tthis.morphNormals = source.morphNormals;\\n\\n    \\treturn this;\\n\\n    };\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     *\\n     * parameters = {\\n     *  opacity: <float>,\\n     *\\n     *  wireframe: <boolean>,\\n     *  wireframeLinewidth: <float>\\n     * }\\n     */\\n\\n    function MeshNormalMaterial( parameters ) {\\n\\n    \\tMaterial.call( this, parameters );\\n\\n    \\tthis.type = 'MeshNormalMaterial';\\n\\n    \\tthis.wireframe = false;\\n    \\tthis.wireframeLinewidth = 1;\\n\\n    \\tthis.fog = false;\\n    \\tthis.lights = false;\\n    \\tthis.morphTargets = false;\\n\\n    \\tthis.setValues( parameters );\\n\\n    }\\n\\n    MeshNormalMaterial.prototype = Object.create( Material.prototype );\\n    MeshNormalMaterial.prototype.constructor = MeshNormalMaterial;\\n\\n    MeshNormalMaterial.prototype.isMeshNormalMaterial = true;\\n\\n    MeshNormalMaterial.prototype.copy = function ( source ) {\\n\\n    \\tMaterial.prototype.copy.call( this, source );\\n\\n    \\tthis.wireframe = source.wireframe;\\n    \\tthis.wireframeLinewidth = source.wireframeLinewidth;\\n\\n    \\treturn this;\\n\\n    };\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     * @author alteredq / http://alteredqualia.com/\\n     *\\n     * parameters = {\\n     *  color: <hex>,\\n     *  opacity: <float>,\\n     *\\n     *  map: new THREE.Texture( <Image> ),\\n     *\\n     *  lightMap: new THREE.Texture( <Image> ),\\n     *  lightMapIntensity: <float>\\n     *\\n     *  aoMap: new THREE.Texture( <Image> ),\\n     *  aoMapIntensity: <float>\\n     *\\n     *  emissive: <hex>,\\n     *  emissiveIntensity: <float>\\n     *  emissiveMap: new THREE.Texture( <Image> ),\\n     *\\n     *  specularMap: new THREE.Texture( <Image> ),\\n     *\\n     *  alphaMap: new THREE.Texture( <Image> ),\\n     *\\n     *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\\n     *  combine: THREE.Multiply,\\n     *  reflectivity: <float>,\\n     *  refractionRatio: <float>,\\n     *\\n     *  wireframe: <boolean>,\\n     *  wireframeLinewidth: <float>,\\n     *\\n     *  skinning: <bool>,\\n     *  morphTargets: <bool>,\\n     *  morphNormals: <bool>\\n     * }\\n     */\\n\\n    function MeshLambertMaterial( parameters ) {\\n\\n    \\tMaterial.call( this );\\n\\n    \\tthis.type = 'MeshLambertMaterial';\\n\\n    \\tthis.color = new Color( 0xffffff ); // diffuse\\n\\n    \\tthis.map = null;\\n\\n    \\tthis.lightMap = null;\\n    \\tthis.lightMapIntensity = 1.0;\\n\\n    \\tthis.aoMap = null;\\n    \\tthis.aoMapIntensity = 1.0;\\n\\n    \\tthis.emissive = new Color( 0x000000 );\\n    \\tthis.emissiveIntensity = 1.0;\\n    \\tthis.emissiveMap = null;\\n\\n    \\tthis.specularMap = null;\\n\\n    \\tthis.alphaMap = null;\\n\\n    \\tthis.envMap = null;\\n    \\tthis.combine = MultiplyOperation;\\n    \\tthis.reflectivity = 1;\\n    \\tthis.refractionRatio = 0.98;\\n\\n    \\tthis.wireframe = false;\\n    \\tthis.wireframeLinewidth = 1;\\n    \\tthis.wireframeLinecap = 'round';\\n    \\tthis.wireframeLinejoin = 'round';\\n\\n    \\tthis.skinning = false;\\n    \\tthis.morphTargets = false;\\n    \\tthis.morphNormals = false;\\n\\n    \\tthis.setValues( parameters );\\n\\n    }\\n\\n    MeshLambertMaterial.prototype = Object.create( Material.prototype );\\n    MeshLambertMaterial.prototype.constructor = MeshLambertMaterial;\\n\\n    MeshLambertMaterial.prototype.isMeshLambertMaterial = true;\\n\\n    MeshLambertMaterial.prototype.copy = function ( source ) {\\n\\n    \\tMaterial.prototype.copy.call( this, source );\\n\\n    \\tthis.color.copy( source.color );\\n\\n    \\tthis.map = source.map;\\n\\n    \\tthis.lightMap = source.lightMap;\\n    \\tthis.lightMapIntensity = source.lightMapIntensity;\\n\\n    \\tthis.aoMap = source.aoMap;\\n    \\tthis.aoMapIntensity = source.aoMapIntensity;\\n\\n    \\tthis.emissive.copy( source.emissive );\\n    \\tthis.emissiveMap = source.emissiveMap;\\n    \\tthis.emissiveIntensity = source.emissiveIntensity;\\n\\n    \\tthis.specularMap = source.specularMap;\\n\\n    \\tthis.alphaMap = source.alphaMap;\\n\\n    \\tthis.envMap = source.envMap;\\n    \\tthis.combine = source.combine;\\n    \\tthis.reflectivity = source.reflectivity;\\n    \\tthis.refractionRatio = source.refractionRatio;\\n\\n    \\tthis.wireframe = source.wireframe;\\n    \\tthis.wireframeLinewidth = source.wireframeLinewidth;\\n    \\tthis.wireframeLinecap = source.wireframeLinecap;\\n    \\tthis.wireframeLinejoin = source.wireframeLinejoin;\\n\\n    \\tthis.skinning = source.skinning;\\n    \\tthis.morphTargets = source.morphTargets;\\n    \\tthis.morphNormals = source.morphNormals;\\n\\n    \\treturn this;\\n\\n    };\\n\\n    /**\\n     * @author alteredq / http://alteredqualia.com/\\n     *\\n     * parameters = {\\n     *  color: <hex>,\\n     *  opacity: <float>,\\n     *\\n     *  linewidth: <float>,\\n     *\\n     *  scale: <float>,\\n     *  dashSize: <float>,\\n     *  gapSize: <float>\\n     * }\\n     */\\n\\n    function LineDashedMaterial( parameters ) {\\n\\n    \\tMaterial.call( this );\\n\\n    \\tthis.type = 'LineDashedMaterial';\\n\\n    \\tthis.color = new Color( 0xffffff );\\n\\n    \\tthis.linewidth = 1;\\n\\n    \\tthis.scale = 1;\\n    \\tthis.dashSize = 3;\\n    \\tthis.gapSize = 1;\\n\\n    \\tthis.lights = false;\\n\\n    \\tthis.setValues( parameters );\\n\\n    }\\n\\n    LineDashedMaterial.prototype = Object.create( Material.prototype );\\n    LineDashedMaterial.prototype.constructor = LineDashedMaterial;\\n\\n    LineDashedMaterial.prototype.isLineDashedMaterial = true;\\n\\n    LineDashedMaterial.prototype.copy = function ( source ) {\\n\\n    \\tMaterial.prototype.copy.call( this, source );\\n\\n    \\tthis.color.copy( source.color );\\n\\n    \\tthis.linewidth = source.linewidth;\\n\\n    \\tthis.scale = source.scale;\\n    \\tthis.dashSize = source.dashSize;\\n    \\tthis.gapSize = source.gapSize;\\n\\n    \\treturn this;\\n\\n    };\\n\\n\\n\\n    var Materials = Object.freeze({\\n    \\tShadowMaterial: ShadowMaterial,\\n    \\tSpriteMaterial: SpriteMaterial,\\n    \\tRawShaderMaterial: RawShaderMaterial,\\n    \\tShaderMaterial: ShaderMaterial,\\n    \\tPointsMaterial: PointsMaterial,\\n    \\tMultiMaterial: MultiMaterial,\\n    \\tMeshPhysicalMaterial: MeshPhysicalMaterial,\\n    \\tMeshStandardMaterial: MeshStandardMaterial,\\n    \\tMeshPhongMaterial: MeshPhongMaterial,\\n    \\tMeshNormalMaterial: MeshNormalMaterial,\\n    \\tMeshLambertMaterial: MeshLambertMaterial,\\n    \\tMeshDepthMaterial: MeshDepthMaterial,\\n    \\tMeshBasicMaterial: MeshBasicMaterial,\\n    \\tLineDashedMaterial: LineDashedMaterial,\\n    \\tLineBasicMaterial: LineBasicMaterial,\\n    \\tMaterial: Material\\n    });\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     */\\n\\n    exports.Cache = {\\n\\n    \\tenabled: false,\\n\\n    \\tfiles: {},\\n\\n    \\tadd: function ( key, file ) {\\n\\n    \\t\\tif ( this.enabled === false ) return;\\n\\n    \\t\\t// console.log( 'THREE.Cache', 'Adding key:', key );\\n\\n    \\t\\tthis.files[ key ] = file;\\n\\n    \\t},\\n\\n    \\tget: function ( key ) {\\n\\n    \\t\\tif ( this.enabled === false ) return;\\n\\n    \\t\\t// console.log( 'THREE.Cache', 'Checking key:', key );\\n\\n    \\t\\treturn this.files[ key ];\\n\\n    \\t},\\n\\n    \\tremove: function ( key ) {\\n\\n    \\t\\tdelete this.files[ key ];\\n\\n    \\t},\\n\\n    \\tclear: function () {\\n\\n    \\t\\tthis.files = {};\\n\\n    \\t}\\n\\n    };\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     */\\n\\n    function LoadingManager( onLoad, onProgress, onError ) {\\n\\n    \\tvar scope = this;\\n\\n    \\tvar isLoading = false, itemsLoaded = 0, itemsTotal = 0;\\n\\n    \\tthis.onStart = undefined;\\n    \\tthis.onLoad = onLoad;\\n    \\tthis.onProgress = onProgress;\\n    \\tthis.onError = onError;\\n\\n    \\tthis.itemStart = function ( url ) {\\n\\n    \\t\\titemsTotal ++;\\n\\n    \\t\\tif ( isLoading === false ) {\\n\\n    \\t\\t\\tif ( scope.onStart !== undefined ) {\\n\\n    \\t\\t\\t\\tscope.onStart( url, itemsLoaded, itemsTotal );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\tisLoading = true;\\n\\n    \\t};\\n\\n    \\tthis.itemEnd = function ( url ) {\\n\\n    \\t\\titemsLoaded ++;\\n\\n    \\t\\tif ( scope.onProgress !== undefined ) {\\n\\n    \\t\\t\\tscope.onProgress( url, itemsLoaded, itemsTotal );\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( itemsLoaded === itemsTotal ) {\\n\\n    \\t\\t\\tisLoading = false;\\n\\n    \\t\\t\\tif ( scope.onLoad !== undefined ) {\\n\\n    \\t\\t\\t\\tscope.onLoad();\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t};\\n\\n    \\tthis.itemError = function ( url ) {\\n\\n    \\t\\tif ( scope.onError !== undefined ) {\\n\\n    \\t\\t\\tscope.onError( url );\\n\\n    \\t\\t}\\n\\n    \\t};\\n\\n    }\\n\\n    exports.DefaultLoadingManager = new LoadingManager();\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     */\\n\\n    function XHRLoader( manager ) {\\n\\n    \\tthis.manager = ( manager !== undefined ) ? manager : exports.DefaultLoadingManager;\\n\\n    }\\n\\n    Object.assign( XHRLoader.prototype, {\\n\\n    \\tload: function ( url, onLoad, onProgress, onError ) {\\n\\n    \\t\\tif ( this.path !== undefined ) url = this.path + url;\\n\\n    \\t\\tvar scope = this;\\n\\n    \\t\\tvar cached = exports.Cache.get( url );\\n\\n    \\t\\tif ( cached !== undefined ) {\\n\\n    \\t\\t\\tscope.manager.itemStart( url );\\n\\n    \\t\\t\\tsetTimeout( function () {\\n\\n    \\t\\t\\t\\tif ( onLoad ) onLoad( cached );\\n\\n    \\t\\t\\t\\tscope.manager.itemEnd( url );\\n\\n    \\t\\t\\t}, 0 );\\n\\n    \\t\\t\\treturn cached;\\n\\n    \\t\\t}\\n\\n    \\t\\tvar request = new XMLHttpRequest();\\n    \\t\\trequest.open( 'GET', url, true );\\n\\n    \\t\\trequest.addEventListener( 'load', function ( event ) {\\n\\n    \\t\\t\\tvar response = event.target.response;\\n\\n    \\t\\t\\texports.Cache.add( url, response );\\n\\n    \\t\\t\\tif ( this.status === 200 ) {\\n\\n    \\t\\t\\t\\tif ( onLoad ) onLoad( response );\\n\\n    \\t\\t\\t\\tscope.manager.itemEnd( url );\\n\\n    \\t\\t\\t} else if ( this.status === 0 ) {\\n\\n    \\t\\t\\t\\t// Some browsers return HTTP Status 0 when using non-http protocol\\n    \\t\\t\\t\\t// e.g. 'file://' or 'data://'. Handle as success.\\n\\n    \\t\\t\\t\\tconsole.warn( 'THREE.XHRLoader: HTTP Status 0 received.' );\\n\\n    \\t\\t\\t\\tif ( onLoad ) onLoad( response );\\n\\n    \\t\\t\\t\\tscope.manager.itemEnd( url );\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\tif ( onError ) onError( event );\\n\\n    \\t\\t\\t\\tscope.manager.itemError( url );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}, false );\\n\\n    \\t\\tif ( onProgress !== undefined ) {\\n\\n    \\t\\t\\trequest.addEventListener( 'progress', function ( event ) {\\n\\n    \\t\\t\\t\\tonProgress( event );\\n\\n    \\t\\t\\t}, false );\\n\\n    \\t\\t}\\n\\n    \\t\\trequest.addEventListener( 'error', function ( event ) {\\n\\n    \\t\\t\\tif ( onError ) onError( event );\\n\\n    \\t\\t\\tscope.manager.itemError( url );\\n\\n    \\t\\t}, false );\\n\\n    \\t\\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\\n    \\t\\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\\n\\n    \\t\\tif ( request.overrideMimeType ) request.overrideMimeType( 'text/plain' );\\n\\n    \\t\\trequest.send( null );\\n\\n    \\t\\tscope.manager.itemStart( url );\\n\\n    \\t\\treturn request;\\n\\n    \\t},\\n\\n    \\tsetPath: function ( value ) {\\n\\n    \\t\\tthis.path = value;\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsetResponseType: function ( value ) {\\n\\n    \\t\\tthis.responseType = value;\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsetWithCredentials: function ( value ) {\\n\\n    \\t\\tthis.withCredentials = value;\\n    \\t\\treturn this;\\n\\n    \\t}\\n\\n    } );\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     *\\n     * Abstract Base class to block based textures loader (dds, pvr, ...)\\n     */\\n\\n    function CompressedTextureLoader( manager ) {\\n\\n    \\tthis.manager = ( manager !== undefined ) ? manager : exports.DefaultLoadingManager;\\n\\n    \\t// override in sub classes\\n    \\tthis._parser = null;\\n\\n    }\\n\\n    Object.assign( CompressedTextureLoader.prototype, {\\n\\n    \\tload: function ( url, onLoad, onProgress, onError ) {\\n\\n    \\t\\tvar scope = this;\\n\\n    \\t\\tvar images = [];\\n\\n    \\t\\tvar texture = new CompressedTexture();\\n    \\t\\ttexture.image = images;\\n\\n    \\t\\tvar loader = new XHRLoader( this.manager );\\n    \\t\\tloader.setPath( this.path );\\n    \\t\\tloader.setResponseType( 'arraybuffer' );\\n\\n    \\t\\tfunction loadTexture( i ) {\\n\\n    \\t\\t\\tloader.load( url[ i ], function ( buffer ) {\\n\\n    \\t\\t\\t\\tvar texDatas = scope._parser( buffer, true );\\n\\n    \\t\\t\\t\\timages[ i ] = {\\n    \\t\\t\\t\\t\\twidth: texDatas.width,\\n    \\t\\t\\t\\t\\theight: texDatas.height,\\n    \\t\\t\\t\\t\\tformat: texDatas.format,\\n    \\t\\t\\t\\t\\tmipmaps: texDatas.mipmaps\\n    \\t\\t\\t\\t};\\n\\n    \\t\\t\\t\\tloaded += 1;\\n\\n    \\t\\t\\t\\tif ( loaded === 6 ) {\\n\\n    \\t\\t\\t\\t\\tif ( texDatas.mipmapCount === 1 )\\n    \\t\\t\\t\\t\\t\\ttexture.minFilter = LinearFilter;\\n\\n    \\t\\t\\t\\t\\ttexture.format = texDatas.format;\\n    \\t\\t\\t\\t\\ttexture.needsUpdate = true;\\n\\n    \\t\\t\\t\\t\\tif ( onLoad ) onLoad( texture );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}, onProgress, onError );\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( Array.isArray( url ) ) {\\n\\n    \\t\\t\\tvar loaded = 0;\\n\\n    \\t\\t\\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\\n\\n    \\t\\t\\t\\tloadTexture( i );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\t// compressed cubemap texture stored in a single DDS file\\n\\n    \\t\\t\\tloader.load( url, function ( buffer ) {\\n\\n    \\t\\t\\t\\tvar texDatas = scope._parser( buffer, true );\\n\\n    \\t\\t\\t\\tif ( texDatas.isCubemap ) {\\n\\n    \\t\\t\\t\\t\\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\\n\\n    \\t\\t\\t\\t\\tfor ( var f = 0; f < faces; f ++ ) {\\n\\n    \\t\\t\\t\\t\\t\\timages[ f ] = { mipmaps : [] };\\n\\n    \\t\\t\\t\\t\\t\\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\\n\\n    \\t\\t\\t\\t\\t\\t\\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\\n    \\t\\t\\t\\t\\t\\t\\timages[ f ].format = texDatas.format;\\n    \\t\\t\\t\\t\\t\\t\\timages[ f ].width = texDatas.width;\\n    \\t\\t\\t\\t\\t\\t\\timages[ f ].height = texDatas.height;\\n\\n    \\t\\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\ttexture.image.width = texDatas.width;\\n    \\t\\t\\t\\t\\ttexture.image.height = texDatas.height;\\n    \\t\\t\\t\\t\\ttexture.mipmaps = texDatas.mipmaps;\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\tif ( texDatas.mipmapCount === 1 ) {\\n\\n    \\t\\t\\t\\t\\ttexture.minFilter = LinearFilter;\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\ttexture.format = texDatas.format;\\n    \\t\\t\\t\\ttexture.needsUpdate = true;\\n\\n    \\t\\t\\t\\tif ( onLoad ) onLoad( texture );\\n\\n    \\t\\t\\t}, onProgress, onError );\\n\\n    \\t\\t}\\n\\n    \\t\\treturn texture;\\n\\n    \\t},\\n\\n    \\tsetPath: function ( value ) {\\n\\n    \\t\\tthis.path = value;\\n    \\t\\treturn this;\\n\\n    \\t}\\n\\n    } );\\n\\n    /**\\n     * @author Nikos M. / https://github.com/foo123/\\n     *\\n     * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\\n     */\\n\\n    var DataTextureLoader = BinaryTextureLoader;\\n    function BinaryTextureLoader( manager ) {\\n\\n    \\tthis.manager = ( manager !== undefined ) ? manager : exports.DefaultLoadingManager;\\n\\n    \\t// override in sub classes\\n    \\tthis._parser = null;\\n\\n    }\\n\\n    Object.assign( BinaryTextureLoader.prototype, {\\n\\n    \\tload: function ( url, onLoad, onProgress, onError ) {\\n\\n    \\t\\tvar scope = this;\\n\\n    \\t\\tvar texture = new DataTexture();\\n\\n    \\t\\tvar loader = new XHRLoader( this.manager );\\n    \\t\\tloader.setResponseType( 'arraybuffer' );\\n\\n    \\t\\tloader.load( url, function ( buffer ) {\\n\\n    \\t\\t\\tvar texData = scope._parser( buffer );\\n\\n    \\t\\t\\tif ( ! texData ) return;\\n\\n    \\t\\t\\tif ( undefined !== texData.image ) {\\n\\n    \\t\\t\\t\\ttexture.image = texData.image;\\n\\n    \\t\\t\\t} else if ( undefined !== texData.data ) {\\n\\n    \\t\\t\\t\\ttexture.image.width = texData.width;\\n    \\t\\t\\t\\ttexture.image.height = texData.height;\\n    \\t\\t\\t\\ttexture.image.data = texData.data;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\ttexture.wrapS = undefined !== texData.wrapS ? texData.wrapS : ClampToEdgeWrapping;\\n    \\t\\t\\ttexture.wrapT = undefined !== texData.wrapT ? texData.wrapT : ClampToEdgeWrapping;\\n\\n    \\t\\t\\ttexture.magFilter = undefined !== texData.magFilter ? texData.magFilter : LinearFilter;\\n    \\t\\t\\ttexture.minFilter = undefined !== texData.minFilter ? texData.minFilter : LinearMipMapLinearFilter;\\n\\n    \\t\\t\\ttexture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;\\n\\n    \\t\\t\\tif ( undefined !== texData.format ) {\\n\\n    \\t\\t\\t\\ttexture.format = texData.format;\\n\\n    \\t\\t\\t}\\n    \\t\\t\\tif ( undefined !== texData.type ) {\\n\\n    \\t\\t\\t\\ttexture.type = texData.type;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tif ( undefined !== texData.mipmaps ) {\\n\\n    \\t\\t\\t\\ttexture.mipmaps = texData.mipmaps;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tif ( 1 === texData.mipmapCount ) {\\n\\n    \\t\\t\\t\\ttexture.minFilter = LinearFilter;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\ttexture.needsUpdate = true;\\n\\n    \\t\\t\\tif ( onLoad ) onLoad( texture, texData );\\n\\n    \\t\\t}, onProgress, onError );\\n\\n\\n    \\t\\treturn texture;\\n\\n    \\t}\\n\\n    } );\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     */\\n\\n    function ImageLoader( manager ) {\\n\\n    \\tthis.manager = ( manager !== undefined ) ? manager : exports.DefaultLoadingManager;\\n\\n    }\\n\\n    Object.assign( ImageLoader.prototype, {\\n\\n    \\tload: function ( url, onLoad, onProgress, onError ) {\\n\\n    \\t\\tvar scope = this;\\n\\n    \\t\\tvar image = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'img' );\\n    \\t\\timage.onload = function () {\\n\\n    \\t\\t\\timage.onload = null;\\n\\n    \\t\\t\\tURL.revokeObjectURL( image.src );\\n\\n    \\t\\t\\tif ( onLoad ) onLoad( image );\\n\\n    \\t\\t\\tscope.manager.itemEnd( url );\\n\\n    \\t\\t};\\n\\n    \\t\\tif ( url.indexOf( 'data:' ) === 0 ) {\\n\\n    \\t\\t\\timage.src = url;\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\tvar loader = new XHRLoader();\\n    \\t\\t\\tloader.setPath( this.path );\\n    \\t\\t\\tloader.setResponseType( 'blob' );\\n    \\t\\t\\tloader.setWithCredentials( this.withCredentials );\\n    \\t\\t\\tloader.load( url, function ( blob ) {\\n\\n    \\t\\t\\t\\timage.src = URL.createObjectURL( blob );\\n\\n    \\t\\t\\t}, onProgress, onError );\\n\\n    \\t\\t}\\n\\n    \\t\\tscope.manager.itemStart( url );\\n\\n    \\t\\treturn image;\\n\\n    \\t},\\n\\n    \\tsetCrossOrigin: function ( value ) {\\n\\n    \\t\\tthis.crossOrigin = value;\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsetWithCredentials: function ( value ) {\\n\\n    \\t\\tthis.withCredentials = value;\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsetPath: function ( value ) {\\n\\n    \\t\\tthis.path = value;\\n    \\t\\treturn this;\\n\\n    \\t}\\n\\n    } );\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     */\\n\\n    function CubeTextureLoader( manager ) {\\n\\n    \\tthis.manager = ( manager !== undefined ) ? manager : exports.DefaultLoadingManager;\\n\\n    }\\n\\n    Object.assign( CubeTextureLoader.prototype, {\\n\\n    \\tload: function ( urls, onLoad, onProgress, onError ) {\\n\\n    \\t\\tvar texture = new CubeTexture();\\n\\n    \\t\\tvar loader = new ImageLoader( this.manager );\\n    \\t\\tloader.setCrossOrigin( this.crossOrigin );\\n    \\t\\tloader.setPath( this.path );\\n\\n    \\t\\tvar loaded = 0;\\n\\n    \\t\\tfunction loadTexture( i ) {\\n\\n    \\t\\t\\tloader.load( urls[ i ], function ( image ) {\\n\\n    \\t\\t\\t\\ttexture.images[ i ] = image;\\n\\n    \\t\\t\\t\\tloaded ++;\\n\\n    \\t\\t\\t\\tif ( loaded === 6 ) {\\n\\n    \\t\\t\\t\\t\\ttexture.needsUpdate = true;\\n\\n    \\t\\t\\t\\t\\tif ( onLoad ) onLoad( texture );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}, undefined, onError );\\n\\n    \\t\\t}\\n\\n    \\t\\tfor ( var i = 0; i < urls.length; ++ i ) {\\n\\n    \\t\\t\\tloadTexture( i );\\n\\n    \\t\\t}\\n\\n    \\t\\treturn texture;\\n\\n    \\t},\\n\\n    \\tsetCrossOrigin: function ( value ) {\\n\\n    \\t\\tthis.crossOrigin = value;\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsetPath: function ( value ) {\\n\\n    \\t\\tthis.path = value;\\n    \\t\\treturn this;\\n\\n    \\t}\\n\\n    } );\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     */\\n\\n    function TextureLoader( manager ) {\\n\\n    \\tthis.manager = ( manager !== undefined ) ? manager : exports.DefaultLoadingManager;\\n\\n    }\\n\\n    Object.assign( TextureLoader.prototype, {\\n\\n    \\tload: function ( url, onLoad, onProgress, onError ) {\\n\\n    \\t\\tvar texture = new Texture();\\n\\n    \\t\\tvar loader = new ImageLoader( this.manager );\\n    \\t\\tloader.setCrossOrigin( this.crossOrigin );\\n    \\t\\tloader.setWithCredentials( this.withCredentials );\\n    \\t\\tloader.setPath( this.path );\\n    \\t\\tloader.load( url, function ( image ) {\\n\\n    \\t\\t\\t// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\\n    \\t\\t\\tvar isJPEG = url.search( /\\\\.(jpg|jpeg)$/ ) > 0 || url.search( /^data\\\\:image\\\\/jpeg/ ) === 0;\\n\\n    \\t\\t\\ttexture.format = isJPEG ? RGBFormat : RGBAFormat;\\n    \\t\\t\\ttexture.image = image;\\n    \\t\\t\\ttexture.needsUpdate = true;\\n\\n    \\t\\t\\tif ( onLoad !== undefined ) {\\n\\n    \\t\\t\\t\\tonLoad( texture );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}, onProgress, onError );\\n\\n    \\t\\treturn texture;\\n\\n    \\t},\\n\\n    \\tsetCrossOrigin: function ( value ) {\\n\\n    \\t\\tthis.crossOrigin = value;\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsetWithCredentials: function ( value ) {\\n\\n    \\t\\tthis.withCredentials = value;\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsetPath: function ( value ) {\\n\\n    \\t\\tthis.path = value;\\n    \\t\\treturn this;\\n\\n    \\t}\\n\\n\\n\\n    } );\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     * @author alteredq / http://alteredqualia.com/\\n     */\\n\\n    function Light( color, intensity ) {\\n\\n    \\tObject3D.call( this );\\n\\n    \\tthis.type = 'Light';\\n\\n    \\tthis.color = new Color( color );\\n    \\tthis.intensity = intensity !== undefined ? intensity : 1;\\n\\n    \\tthis.receiveShadow = undefined;\\n\\n    }\\n\\n    Light.prototype = Object.assign( Object.create( Object3D.prototype ), {\\n\\n    \\tconstructor: Light,\\n\\n    \\tisLight: true,\\n\\n    \\tcopy: function ( source ) {\\n\\n    \\t\\tObject3D.prototype.copy.call( this, source );\\n\\n    \\t\\tthis.color.copy( source.color );\\n    \\t\\tthis.intensity = source.intensity;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\ttoJSON: function ( meta ) {\\n\\n    \\t\\tvar data = Object3D.prototype.toJSON.call( this, meta );\\n\\n    \\t\\tdata.object.color = this.color.getHex();\\n    \\t\\tdata.object.intensity = this.intensity;\\n\\n    \\t\\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\\n\\n    \\t\\tif ( this.distance !== undefined ) data.object.distance = this.distance;\\n    \\t\\tif ( this.angle !== undefined ) data.object.angle = this.angle;\\n    \\t\\tif ( this.decay !== undefined ) data.object.decay = this.decay;\\n    \\t\\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\\n\\n    \\t\\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\\n\\n    \\t\\treturn data;\\n\\n    \\t}\\n\\n    } );\\n\\n    /**\\n     * @author alteredq / http://alteredqualia.com/\\n     */\\n\\n    function HemisphereLight( skyColor, groundColor, intensity ) {\\n\\n    \\tLight.call( this, skyColor, intensity );\\n\\n    \\tthis.type = 'HemisphereLight';\\n\\n    \\tthis.castShadow = undefined;\\n\\n    \\tthis.position.copy( Object3D.DefaultUp );\\n    \\tthis.updateMatrix();\\n\\n    \\tthis.groundColor = new Color( groundColor );\\n\\n    }\\n\\n    HemisphereLight.prototype = Object.assign( Object.create( Light.prototype ), {\\n\\n    \\tconstructor: HemisphereLight,\\n\\n    \\tisHemisphereLight: true,\\n\\n    \\tcopy: function ( source ) {\\n\\n    \\t\\tLight.prototype.copy.call( this, source );\\n\\n    \\t\\tthis.groundColor.copy( source.groundColor );\\n\\n    \\t\\treturn this;\\n\\n    \\t}\\n\\n    } );\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     */\\n\\n    function LightShadow( camera ) {\\n\\n    \\tthis.camera = camera;\\n\\n    \\tthis.bias = 0;\\n    \\tthis.radius = 1;\\n\\n    \\tthis.mapSize = new Vector2( 512, 512 );\\n\\n    \\tthis.map = null;\\n    \\tthis.matrix = new Matrix4();\\n\\n    }\\n\\n    Object.assign( LightShadow.prototype, {\\n\\n    \\tcopy: function ( source ) {\\n\\n    \\t\\tthis.camera = source.camera.clone();\\n\\n    \\t\\tthis.bias = source.bias;\\n    \\t\\tthis.radius = source.radius;\\n\\n    \\t\\tthis.mapSize.copy( source.mapSize );\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tclone: function () {\\n\\n    \\t\\treturn new this.constructor().copy( this );\\n\\n    \\t},\\n\\n    \\ttoJSON: function () {\\n\\n    \\t\\tvar object = {};\\n\\n    \\t\\tif ( this.bias !== 0 ) object.bias = this.bias;\\n    \\t\\tif ( this.radius !== 1 ) object.radius = this.radius;\\n    \\t\\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\\n\\n    \\t\\tobject.camera = this.camera.toJSON( false ).object;\\n    \\t\\tdelete object.camera.matrix;\\n\\n    \\t\\treturn object;\\n\\n    \\t}\\n\\n    } );\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     */\\n\\n    function SpotLightShadow() {\\n\\n    \\tLightShadow.call( this, new PerspectiveCamera( 50, 1, 0.5, 500 ) );\\n\\n    }\\n\\n    SpotLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\\n\\n    \\tconstructor: SpotLightShadow,\\n\\n    \\tisSpotLightShadow: true,\\n\\n    \\tupdate: function ( light ) {\\n\\n    \\t\\tvar fov = exports.Math.RAD2DEG * 2 * light.angle;\\n    \\t\\tvar aspect = this.mapSize.width / this.mapSize.height;\\n    \\t\\tvar far = light.distance || 500;\\n\\n    \\t\\tvar camera = this.camera;\\n\\n    \\t\\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\\n\\n    \\t\\t\\tcamera.fov = fov;\\n    \\t\\t\\tcamera.aspect = aspect;\\n    \\t\\t\\tcamera.far = far;\\n    \\t\\t\\tcamera.updateProjectionMatrix();\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    } );\\n\\n    /**\\n     * @author alteredq / http://alteredqualia.com/\\n     */\\n\\n    function SpotLight( color, intensity, distance, angle, penumbra, decay ) {\\n\\n    \\tLight.call( this, color, intensity );\\n\\n    \\tthis.type = 'SpotLight';\\n\\n    \\tthis.position.copy( Object3D.DefaultUp );\\n    \\tthis.updateMatrix();\\n\\n    \\tthis.target = new Object3D();\\n\\n    \\tObject.defineProperty( this, 'power', {\\n    \\t\\tget: function () {\\n    \\t\\t\\t// intensity = power per solid angle.\\n    \\t\\t\\t// ref: equation (17) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\\n    \\t\\t\\treturn this.intensity * Math.PI;\\n    \\t\\t},\\n    \\t\\tset: function ( power ) {\\n    \\t\\t\\t// intensity = power per solid angle.\\n    \\t\\t\\t// ref: equation (17) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\\n    \\t\\t\\tthis.intensity = power / Math.PI;\\n    \\t\\t}\\n    \\t} );\\n\\n    \\tthis.distance = ( distance !== undefined ) ? distance : 0;\\n    \\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\\n    \\tthis.penumbra = ( penumbra !== undefined ) ? penumbra : 0;\\n    \\tthis.decay = ( decay !== undefined ) ? decay : 1;\\t// for physically correct lights, should be 2.\\n\\n    \\tthis.shadow = new SpotLightShadow();\\n\\n    }\\n\\n    SpotLight.prototype = Object.assign( Object.create( Light.prototype ), {\\n\\n    \\tconstructor: SpotLight,\\n\\n    \\tisSpotLight: true,\\n\\n    \\tcopy: function ( source ) {\\n\\n    \\t\\tLight.prototype.copy.call( this, source );\\n\\n    \\t\\tthis.distance = source.distance;\\n    \\t\\tthis.angle = source.angle;\\n    \\t\\tthis.penumbra = source.penumbra;\\n    \\t\\tthis.decay = source.decay;\\n\\n    \\t\\tthis.target = source.target.clone();\\n\\n    \\t\\tthis.shadow = source.shadow.clone();\\n\\n    \\t\\treturn this;\\n\\n    \\t}\\n\\n    } );\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     */\\n\\n\\n    function PointLight( color, intensity, distance, decay ) {\\n\\n    \\tLight.call( this, color, intensity );\\n\\n    \\tthis.type = 'PointLight';\\n\\n    \\tObject.defineProperty( this, 'power', {\\n    \\t\\tget: function () {\\n    \\t\\t\\t// intensity = power per solid angle.\\n    \\t\\t\\t// ref: equation (15) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\\n    \\t\\t\\treturn this.intensity * 4 * Math.PI;\\n\\n    \\t\\t},\\n    \\t\\tset: function ( power ) {\\n    \\t\\t\\t// intensity = power per solid angle.\\n    \\t\\t\\t// ref: equation (15) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\\n    \\t\\t\\tthis.intensity = power / ( 4 * Math.PI );\\n    \\t\\t}\\n    \\t} );\\n\\n    \\tthis.distance = ( distance !== undefined ) ? distance : 0;\\n    \\tthis.decay = ( decay !== undefined ) ? decay : 1;\\t// for physically correct lights, should be 2.\\n\\n    \\tthis.shadow = new LightShadow( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\\n\\n    }\\n\\n    PointLight.prototype = Object.assign( Object.create( Light.prototype ), {\\n\\n    \\tconstructor: PointLight,\\n\\n    \\tisPointLight: true,\\n\\n    \\tcopy: function ( source ) {\\n\\n    \\t\\tLight.prototype.copy.call( this, source );\\n\\n    \\t\\tthis.distance = source.distance;\\n    \\t\\tthis.decay = source.decay;\\n\\n    \\t\\tthis.shadow = source.shadow.clone();\\n\\n    \\t\\treturn this;\\n\\n    \\t}\\n\\n    } );\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     */\\n\\n    function DirectionalLightShadow( light ) {\\n\\n    \\tLightShadow.call( this, new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\\n\\n    }\\n\\n    DirectionalLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\\n\\n    \\tconstructor: DirectionalLightShadow\\n\\n    } );\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     * @author alteredq / http://alteredqualia.com/\\n     */\\n\\n    function DirectionalLight( color, intensity ) {\\n\\n    \\tLight.call( this, color, intensity );\\n\\n    \\tthis.type = 'DirectionalLight';\\n\\n    \\tthis.position.copy( Object3D.DefaultUp );\\n    \\tthis.updateMatrix();\\n\\n    \\tthis.target = new Object3D();\\n\\n    \\tthis.shadow = new DirectionalLightShadow();\\n\\n    }\\n\\n    DirectionalLight.prototype = Object.assign( Object.create( Light.prototype ), {\\n\\n    \\tconstructor: DirectionalLight,\\n\\n    \\tisDirectionalLight: true,\\n\\n    \\tcopy: function ( source ) {\\n\\n    \\t\\tLight.prototype.copy.call( this, source );\\n\\n    \\t\\tthis.target = source.target.clone();\\n\\n    \\t\\tthis.shadow = source.shadow.clone();\\n\\n    \\t\\treturn this;\\n\\n    \\t}\\n\\n    } );\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     */\\n\\n    function AmbientLight( color, intensity ) {\\n\\n    \\tLight.call( this, color, intensity );\\n\\n    \\tthis.type = 'AmbientLight';\\n\\n    \\tthis.castShadow = undefined;\\n\\n    }\\n\\n    AmbientLight.prototype = Object.assign( Object.create( Light.prototype ), {\\n\\n    \\tconstructor: AmbientLight,\\n\\n    \\tisAmbientLight: true,\\n\\n    } );\\n\\n    /**\\n     * @author tschw\\n     * @author Ben Houston / http://clara.io/\\n     * @author David Sarno / http://lighthaus.us/\\n     */\\n\\n    exports.AnimationUtils = {\\n\\n    \\t// same as Array.prototype.slice, but also works on typed arrays\\n    \\tarraySlice: function( array, from, to ) {\\n\\n    \\t\\tif ( exports.AnimationUtils.isTypedArray( array ) ) {\\n\\n    \\t\\t\\treturn new array.constructor( array.subarray( from, to ) );\\n\\n    \\t\\t}\\n\\n    \\t\\treturn array.slice( from, to );\\n\\n    \\t},\\n\\n    \\t// converts an array to a specific type\\n    \\tconvertArray: function( array, type, forceClone ) {\\n\\n    \\t\\tif ( ! array || // let 'undefined' and 'null' pass\\n    \\t\\t\\t\\t! forceClone && array.constructor === type ) return array;\\n\\n    \\t\\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\\n\\n    \\t\\t\\treturn new type( array ); // create typed array\\n\\n    \\t\\t}\\n\\n    \\t\\treturn Array.prototype.slice.call( array ); // create Array\\n\\n    \\t},\\n\\n    \\tisTypedArray: function( object ) {\\n\\n    \\t\\treturn ArrayBuffer.isView( object ) &&\\n    \\t\\t\\t\\t! ( object instanceof DataView );\\n\\n    \\t},\\n\\n    \\t// returns an array by which times and values can be sorted\\n    \\tgetKeyframeOrder: function( times ) {\\n\\n    \\t\\tfunction compareTime( i, j ) {\\n\\n    \\t\\t\\treturn times[ i ] - times[ j ];\\n\\n    \\t\\t}\\n\\n    \\t\\tvar n = times.length;\\n    \\t\\tvar result = new Array( n );\\n    \\t\\tfor ( var i = 0; i !== n; ++ i ) result[ i ] = i;\\n\\n    \\t\\tresult.sort( compareTime );\\n\\n    \\t\\treturn result;\\n\\n    \\t},\\n\\n    \\t// uses the array previously returned by 'getKeyframeOrder' to sort data\\n    \\tsortedArray: function( values, stride, order ) {\\n\\n    \\t\\tvar nValues = values.length;\\n    \\t\\tvar result = new values.constructor( nValues );\\n\\n    \\t\\tfor ( var i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\\n\\n    \\t\\t\\tvar srcOffset = order[ i ] * stride;\\n\\n    \\t\\t\\tfor ( var j = 0; j !== stride; ++ j ) {\\n\\n    \\t\\t\\t\\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\treturn result;\\n\\n    \\t},\\n\\n    \\t// function for parsing AOS keyframe formats\\n    \\tflattenJSON: function( jsonKeys, times, values, valuePropertyName ) {\\n\\n    \\t\\tvar i = 1, key = jsonKeys[ 0 ];\\n\\n    \\t\\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\\n\\n    \\t\\t\\tkey = jsonKeys[ i ++ ];\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( key === undefined ) return; // no data\\n\\n    \\t\\tvar value = key[ valuePropertyName ];\\n    \\t\\tif ( value === undefined ) return; // no data\\n\\n    \\t\\tif ( Array.isArray( value ) ) {\\n\\n    \\t\\t\\tdo {\\n\\n    \\t\\t\\t\\tvalue = key[ valuePropertyName ];\\n\\n    \\t\\t\\t\\tif ( value !== undefined ) {\\n\\n    \\t\\t\\t\\t\\ttimes.push( key.time );\\n    \\t\\t\\t\\t\\tvalues.push.apply( values, value ); // push all elements\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\tkey = jsonKeys[ i ++ ];\\n\\n    \\t\\t\\t} while ( key !== undefined );\\n\\n    \\t\\t} else if ( value.toArray !== undefined ) {\\n    \\t\\t\\t// ...assume THREE.Math-ish\\n\\n    \\t\\t\\tdo {\\n\\n    \\t\\t\\t\\tvalue = key[ valuePropertyName ];\\n\\n    \\t\\t\\t\\tif ( value !== undefined ) {\\n\\n    \\t\\t\\t\\t\\ttimes.push( key.time );\\n    \\t\\t\\t\\t\\tvalue.toArray( values, values.length );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\tkey = jsonKeys[ i ++ ];\\n\\n    \\t\\t\\t} while ( key !== undefined );\\n\\n    \\t\\t} else {\\n    \\t\\t\\t// otherwise push as-is\\n\\n    \\t\\t\\tdo {\\n\\n    \\t\\t\\t\\tvalue = key[ valuePropertyName ];\\n\\n    \\t\\t\\t\\tif ( value !== undefined ) {\\n\\n    \\t\\t\\t\\t\\ttimes.push( key.time );\\n    \\t\\t\\t\\t\\tvalues.push( value );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\tkey = jsonKeys[ i ++ ];\\n\\n    \\t\\t\\t} while ( key !== undefined );\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    };\\n\\n    /**\\n     * Abstract base class of interpolants over parametric samples.\\n     *\\n     * The parameter domain is one dimensional, typically the time or a path\\n     * along a curve defined by the data.\\n     *\\n     * The sample values can have any dimensionality and derived classes may\\n     * apply special interpretations to the data.\\n     *\\n     * This class provides the interval seek in a Template Method, deferring\\n     * the actual interpolation to derived classes.\\n     *\\n     * Time complexity is O(1) for linear access crossing at most two points\\n     * and O(log N) for random access, where N is the number of positions.\\n     *\\n     * References:\\n     *\\n     * \\t\\thttp://www.oodesign.com/template-method-pattern.html\\n     *\\n     * @author tschw\\n     */\\n\\n    function Interpolant(\\n    \\t\\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\\n\\n    \\tthis.parameterPositions = parameterPositions;\\n    \\tthis._cachedIndex = 0;\\n\\n    \\tthis.resultBuffer = resultBuffer !== undefined ?\\n    \\t\\t\\tresultBuffer : new sampleValues.constructor( sampleSize );\\n    \\tthis.sampleValues = sampleValues;\\n    \\tthis.valueSize = sampleSize;\\n\\n    }\\n\\n    Interpolant.prototype = {\\n\\n    \\tconstructor: Interpolant,\\n\\n    \\tevaluate: function( t ) {\\n\\n    \\t\\tvar pp = this.parameterPositions,\\n    \\t\\t\\ti1 = this._cachedIndex,\\n\\n    \\t\\t\\tt1 = pp[   i1   ],\\n    \\t\\t\\tt0 = pp[ i1 - 1 ];\\n\\n    \\t\\tvalidate_interval: {\\n\\n    \\t\\t\\tseek: {\\n\\n    \\t\\t\\t\\tvar right;\\n\\n    \\t\\t\\t\\tlinear_scan: {\\n    //- See http://jsperf.com/comparison-to-undefined/3\\n    //- slower code:\\n    //-\\n    //- \\t\\t\\t\\tif ( t >= t1 || t1 === undefined ) {\\n    \\t\\t\\t\\t\\tforward_scan: if ( ! ( t < t1 ) ) {\\n\\n    \\t\\t\\t\\t\\t\\tfor ( var giveUpAt = i1 + 2; ;) {\\n\\n    \\t\\t\\t\\t\\t\\t\\tif ( t1 === undefined ) {\\n\\n    \\t\\t\\t\\t\\t\\t\\t\\tif ( t < t0 ) break forward_scan;\\n\\n    \\t\\t\\t\\t\\t\\t\\t\\t// after end\\n\\n    \\t\\t\\t\\t\\t\\t\\t\\ti1 = pp.length;\\n    \\t\\t\\t\\t\\t\\t\\t\\tthis._cachedIndex = i1;\\n    \\t\\t\\t\\t\\t\\t\\t\\treturn this.afterEnd_( i1 - 1, t, t0 );\\n\\n    \\t\\t\\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\t\\t\\tif ( i1 === giveUpAt ) break; // this loop\\n\\n    \\t\\t\\t\\t\\t\\t\\tt0 = t1;\\n    \\t\\t\\t\\t\\t\\t\\tt1 = pp[ ++ i1 ];\\n\\n    \\t\\t\\t\\t\\t\\t\\tif ( t < t1 ) {\\n\\n    \\t\\t\\t\\t\\t\\t\\t\\t// we have arrived at the sought interval\\n    \\t\\t\\t\\t\\t\\t\\t\\tbreak seek;\\n\\n    \\t\\t\\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\t\\t// prepare binary search on the right side of the index\\n    \\t\\t\\t\\t\\t\\tright = pp.length;\\n    \\t\\t\\t\\t\\t\\tbreak linear_scan;\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    //- slower code:\\n    //-\\t\\t\\t\\t\\tif ( t < t0 || t0 === undefined ) {\\n    \\t\\t\\t\\t\\tif ( ! ( t >= t0 ) ) {\\n\\n    \\t\\t\\t\\t\\t\\t// looping?\\n\\n    \\t\\t\\t\\t\\t\\tvar t1global = pp[ 1 ];\\n\\n    \\t\\t\\t\\t\\t\\tif ( t < t1global ) {\\n\\n    \\t\\t\\t\\t\\t\\t\\ti1 = 2; // + 1, using the scan for the details\\n    \\t\\t\\t\\t\\t\\t\\tt0 = t1global;\\n\\n    \\t\\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\t\\t// linear reverse scan\\n\\n    \\t\\t\\t\\t\\t\\tfor ( var giveUpAt = i1 - 2; ;) {\\n\\n    \\t\\t\\t\\t\\t\\t\\tif ( t0 === undefined ) {\\n\\n    \\t\\t\\t\\t\\t\\t\\t\\t// before start\\n\\n    \\t\\t\\t\\t\\t\\t\\t\\tthis._cachedIndex = 0;\\n    \\t\\t\\t\\t\\t\\t\\t\\treturn this.beforeStart_( 0, t, t1 );\\n\\n    \\t\\t\\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\t\\t\\tif ( i1 === giveUpAt ) break; // this loop\\n\\n    \\t\\t\\t\\t\\t\\t\\tt1 = t0;\\n    \\t\\t\\t\\t\\t\\t\\tt0 = pp[ -- i1 - 1 ];\\n\\n    \\t\\t\\t\\t\\t\\t\\tif ( t >= t0 ) {\\n\\n    \\t\\t\\t\\t\\t\\t\\t\\t// we have arrived at the sought interval\\n    \\t\\t\\t\\t\\t\\t\\t\\tbreak seek;\\n\\n    \\t\\t\\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\t\\t// prepare binary search on the left side of the index\\n    \\t\\t\\t\\t\\t\\tright = i1;\\n    \\t\\t\\t\\t\\t\\ti1 = 0;\\n    \\t\\t\\t\\t\\t\\tbreak linear_scan;\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\t// the interval is valid\\n\\n    \\t\\t\\t\\t\\tbreak validate_interval;\\n\\n    \\t\\t\\t\\t} // linear scan\\n\\n    \\t\\t\\t\\t// binary search\\n\\n    \\t\\t\\t\\twhile ( i1 < right ) {\\n\\n    \\t\\t\\t\\t\\tvar mid = ( i1 + right ) >>> 1;\\n\\n    \\t\\t\\t\\t\\tif ( t < pp[ mid ] ) {\\n\\n    \\t\\t\\t\\t\\t\\tright = mid;\\n\\n    \\t\\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\t\\ti1 = mid + 1;\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\tt1 = pp[   i1   ];\\n    \\t\\t\\t\\tt0 = pp[ i1 - 1 ];\\n\\n    \\t\\t\\t\\t// check boundary cases, again\\n\\n    \\t\\t\\t\\tif ( t0 === undefined ) {\\n\\n    \\t\\t\\t\\t\\tthis._cachedIndex = 0;\\n    \\t\\t\\t\\t\\treturn this.beforeStart_( 0, t, t1 );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\tif ( t1 === undefined ) {\\n\\n    \\t\\t\\t\\t\\ti1 = pp.length;\\n    \\t\\t\\t\\t\\tthis._cachedIndex = i1;\\n    \\t\\t\\t\\t\\treturn this.afterEnd_( i1 - 1, t0, t );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t} // seek\\n\\n    \\t\\t\\tthis._cachedIndex = i1;\\n\\n    \\t\\t\\tthis.intervalChanged_( i1, t0, t1 );\\n\\n    \\t\\t} // validate_interval\\n\\n    \\t\\treturn this.interpolate_( i1, t0, t, t1 );\\n\\n    \\t},\\n\\n    \\tsettings: null, // optional, subclass-specific settings structure\\n    \\t// Note: The indirection allows central control of many interpolants.\\n\\n    \\t// --- Protected interface\\n\\n    \\tDefaultSettings_: {},\\n\\n    \\tgetSettings_: function() {\\n\\n    \\t\\treturn this.settings || this.DefaultSettings_;\\n\\n    \\t},\\n\\n    \\tcopySampleValue_: function( index ) {\\n\\n    \\t\\t// copies a sample value to the result buffer\\n\\n    \\t\\tvar result = this.resultBuffer,\\n    \\t\\t\\tvalues = this.sampleValues,\\n    \\t\\t\\tstride = this.valueSize,\\n    \\t\\t\\toffset = index * stride;\\n\\n    \\t\\tfor ( var i = 0; i !== stride; ++ i ) {\\n\\n    \\t\\t\\tresult[ i ] = values[ offset + i ];\\n\\n    \\t\\t}\\n\\n    \\t\\treturn result;\\n\\n    \\t},\\n\\n    \\t// Template methods for derived classes:\\n\\n    \\tinterpolate_: function( i1, t0, t, t1 ) {\\n\\n    \\t\\tthrow new Error( \\\"call to abstract method\\\" );\\n    \\t\\t// implementations shall return this.resultBuffer\\n\\n    \\t},\\n\\n    \\tintervalChanged_: function( i1, t0, t1 ) {\\n\\n    \\t\\t// empty\\n\\n    \\t}\\n\\n    };\\n\\n    Object.assign( Interpolant.prototype, {\\n\\n    \\tbeforeStart_: //( 0, t, t0 ), returns this.resultBuffer\\n    \\t\\tInterpolant.prototype.copySampleValue_,\\n\\n    \\tafterEnd_: //( N-1, tN-1, t ), returns this.resultBuffer\\n    \\t\\tInterpolant.prototype.copySampleValue_\\n\\n    } );\\n\\n    /**\\n     * Fast and simple cubic spline interpolant.\\n     *\\n     * It was derived from a Hermitian construction setting the first derivative\\n     * at each sample position to the linear slope between neighboring positions\\n     * over their parameter interval.\\n     *\\n     * @author tschw\\n     */\\n\\n    function CubicInterpolant(\\n    \\t\\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\\n\\n    \\tInterpolant.call(\\n    \\t\\t\\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\\n\\n    \\tthis._weightPrev = -0;\\n    \\tthis._offsetPrev = -0;\\n    \\tthis._weightNext = -0;\\n    \\tthis._offsetNext = -0;\\n\\n    }\\n\\n    CubicInterpolant.prototype =\\n    \\t\\tObject.assign( Object.create( Interpolant.prototype ), {\\n\\n    \\tconstructor: CubicInterpolant,\\n\\n    \\tDefaultSettings_: {\\n\\n    \\t\\tendingStart: \\tZeroCurvatureEnding,\\n    \\t\\tendingEnd:\\t\\tZeroCurvatureEnding\\n\\n    \\t},\\n\\n    \\tintervalChanged_: function( i1, t0, t1 ) {\\n\\n    \\t\\tvar pp = this.parameterPositions,\\n    \\t\\t\\tiPrev = i1 - 2,\\n    \\t\\t\\tiNext = i1 + 1,\\n\\n    \\t\\t\\ttPrev = pp[ iPrev ],\\n    \\t\\t\\ttNext = pp[ iNext ];\\n\\n    \\t\\tif ( tPrev === undefined ) {\\n\\n    \\t\\t\\tswitch ( this.getSettings_().endingStart ) {\\n\\n    \\t\\t\\t\\tcase ZeroSlopeEnding:\\n\\n    \\t\\t\\t\\t\\t// f'(t0) = 0\\n    \\t\\t\\t\\t\\tiPrev = i1;\\n    \\t\\t\\t\\t\\ttPrev = 2 * t0 - t1;\\n\\n    \\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\tcase WrapAroundEnding:\\n\\n    \\t\\t\\t\\t\\t// use the other end of the curve\\n    \\t\\t\\t\\t\\tiPrev = pp.length - 2;\\n    \\t\\t\\t\\t\\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\\n\\n    \\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\tdefault: // ZeroCurvatureEnding\\n\\n    \\t\\t\\t\\t\\t// f''(t0) = 0 a.k.a. Natural Spline\\n    \\t\\t\\t\\t\\tiPrev = i1;\\n    \\t\\t\\t\\t\\ttPrev = t1;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( tNext === undefined ) {\\n\\n    \\t\\t\\tswitch ( this.getSettings_().endingEnd ) {\\n\\n    \\t\\t\\t\\tcase ZeroSlopeEnding:\\n\\n    \\t\\t\\t\\t\\t// f'(tN) = 0\\n    \\t\\t\\t\\t\\tiNext = i1;\\n    \\t\\t\\t\\t\\ttNext = 2 * t1 - t0;\\n\\n    \\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\tcase WrapAroundEnding:\\n\\n    \\t\\t\\t\\t\\t// use the other end of the curve\\n    \\t\\t\\t\\t\\tiNext = 1;\\n    \\t\\t\\t\\t\\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\\n\\n    \\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\tdefault: // ZeroCurvatureEnding\\n\\n    \\t\\t\\t\\t\\t// f''(tN) = 0, a.k.a. Natural Spline\\n    \\t\\t\\t\\t\\tiNext = i1 - 1;\\n    \\t\\t\\t\\t\\ttNext = t0;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\tvar halfDt = ( t1 - t0 ) * 0.5,\\n    \\t\\t\\tstride = this.valueSize;\\n\\n    \\t\\tthis._weightPrev = halfDt / ( t0 - tPrev );\\n    \\t\\tthis._weightNext = halfDt / ( tNext - t1 );\\n    \\t\\tthis._offsetPrev = iPrev * stride;\\n    \\t\\tthis._offsetNext = iNext * stride;\\n\\n    \\t},\\n\\n    \\tinterpolate_: function( i1, t0, t, t1 ) {\\n\\n    \\t\\tvar result = this.resultBuffer,\\n    \\t\\t\\tvalues = this.sampleValues,\\n    \\t\\t\\tstride = this.valueSize,\\n\\n    \\t\\t\\to1 = i1 * stride,\\t\\to0 = o1 - stride,\\n    \\t\\t\\toP = this._offsetPrev, \\toN = this._offsetNext,\\n    \\t\\t\\twP = this._weightPrev,\\twN = this._weightNext,\\n\\n    \\t\\t\\tp = ( t - t0 ) / ( t1 - t0 ),\\n    \\t\\t\\tpp = p * p,\\n    \\t\\t\\tppp = pp * p;\\n\\n    \\t\\t// evaluate polynomials\\n\\n    \\t\\tvar sP =     - wP   * ppp   +         2 * wP    * pp    -          wP   * p;\\n    \\t\\tvar s0 = ( 1 + wP ) * ppp   + (-1.5 - 2 * wP )  * pp    + ( -0.5 + wP ) * p     + 1;\\n    \\t\\tvar s1 = (-1 - wN ) * ppp   + ( 1.5 +   wN   )  * pp    +    0.5        * p;\\n    \\t\\tvar sN =       wN   * ppp   -           wN      * pp;\\n\\n    \\t\\t// combine data linearly\\n\\n    \\t\\tfor ( var i = 0; i !== stride; ++ i ) {\\n\\n    \\t\\t\\tresult[ i ] =\\n    \\t\\t\\t\\t\\tsP * values[ oP + i ] +\\n    \\t\\t\\t\\t\\ts0 * values[ o0 + i ] +\\n    \\t\\t\\t\\t\\ts1 * values[ o1 + i ] +\\n    \\t\\t\\t\\t\\tsN * values[ oN + i ];\\n\\n    \\t\\t}\\n\\n    \\t\\treturn result;\\n\\n    \\t}\\n\\n    } );\\n\\n    /**\\n     * @author tschw\\n     */\\n\\n    function LinearInterpolant(\\n    \\t\\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\\n\\n    \\tInterpolant.call(\\n    \\t\\t\\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\\n\\n    }\\n\\n    LinearInterpolant.prototype =\\n    \\t\\tObject.assign( Object.create( Interpolant.prototype ), {\\n\\n    \\tconstructor: LinearInterpolant,\\n\\n    \\tinterpolate_: function( i1, t0, t, t1 ) {\\n\\n    \\t\\tvar result = this.resultBuffer,\\n    \\t\\t\\tvalues = this.sampleValues,\\n    \\t\\t\\tstride = this.valueSize,\\n\\n    \\t\\t\\toffset1 = i1 * stride,\\n    \\t\\t\\toffset0 = offset1 - stride,\\n\\n    \\t\\t\\tweight1 = ( t - t0 ) / ( t1 - t0 ),\\n    \\t\\t\\tweight0 = 1 - weight1;\\n\\n    \\t\\tfor ( var i = 0; i !== stride; ++ i ) {\\n\\n    \\t\\t\\tresult[ i ] =\\n    \\t\\t\\t\\t\\tvalues[ offset0 + i ] * weight0 +\\n    \\t\\t\\t\\t\\tvalues[ offset1 + i ] * weight1;\\n\\n    \\t\\t}\\n\\n    \\t\\treturn result;\\n\\n    \\t}\\n\\n    } );\\n\\n    /**\\n     *\\n     * Interpolant that evaluates to the sample value at the position preceeding\\n     * the parameter.\\n     *\\n     * @author tschw\\n     */\\n\\n    function DiscreteInterpolant(\\n    \\t\\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\\n\\n    \\tInterpolant.call(\\n    \\t\\t\\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\\n\\n    }\\n\\n    DiscreteInterpolant.prototype =\\n    \\t\\tObject.assign( Object.create( Interpolant.prototype ), {\\n\\n    \\tconstructor: DiscreteInterpolant,\\n\\n    \\tinterpolate_: function( i1, t0, t, t1 ) {\\n\\n    \\t\\treturn this.copySampleValue_( i1 - 1 );\\n\\n    \\t}\\n\\n    } );\\n\\n    var KeyframeTrackPrototype;\\n\\n    KeyframeTrackPrototype = {\\n\\n    \\tTimeBufferType: Float32Array,\\n    \\tValueBufferType: Float32Array,\\n\\n    \\tDefaultInterpolation: InterpolateLinear,\\n\\n    \\tInterpolantFactoryMethodDiscrete: function( result ) {\\n\\n    \\t\\treturn new DiscreteInterpolant(\\n    \\t\\t\\t\\tthis.times, this.values, this.getValueSize(), result );\\n\\n    \\t},\\n\\n    \\tInterpolantFactoryMethodLinear: function( result ) {\\n\\n    \\t\\treturn new LinearInterpolant(\\n    \\t\\t\\t\\tthis.times, this.values, this.getValueSize(), result );\\n\\n    \\t},\\n\\n    \\tInterpolantFactoryMethodSmooth: function( result ) {\\n\\n    \\t\\treturn new CubicInterpolant(\\n    \\t\\t\\t\\tthis.times, this.values, this.getValueSize(), result );\\n\\n    \\t},\\n\\n    \\tsetInterpolation: function( interpolation ) {\\n\\n    \\t\\tvar factoryMethod;\\n\\n    \\t\\tswitch ( interpolation ) {\\n\\n    \\t\\t\\tcase InterpolateDiscrete:\\n\\n    \\t\\t\\t\\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\\n\\n    \\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\tcase InterpolateLinear:\\n\\n    \\t\\t\\t\\tfactoryMethod = this.InterpolantFactoryMethodLinear;\\n\\n    \\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\tcase InterpolateSmooth:\\n\\n    \\t\\t\\t\\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\\n\\n    \\t\\t\\t\\tbreak;\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( factoryMethod === undefined ) {\\n\\n    \\t\\t\\tvar message = \\\"unsupported interpolation for \\\" +\\n    \\t\\t\\t\\t\\tthis.ValueTypeName + \\\" keyframe track named \\\" + this.name;\\n\\n    \\t\\t\\tif ( this.createInterpolant === undefined ) {\\n\\n    \\t\\t\\t\\t// fall back to default, unless the default itself is messed up\\n    \\t\\t\\t\\tif ( interpolation !== this.DefaultInterpolation ) {\\n\\n    \\t\\t\\t\\t\\tthis.setInterpolation( this.DefaultInterpolation );\\n\\n    \\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\tthrow new Error( message ); // fatal, in this case\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tconsole.warn( message );\\n    \\t\\t\\treturn;\\n\\n    \\t\\t}\\n\\n    \\t\\tthis.createInterpolant = factoryMethod;\\n\\n    \\t},\\n\\n    \\tgetInterpolation: function() {\\n\\n    \\t\\tswitch ( this.createInterpolant ) {\\n\\n    \\t\\t\\tcase this.InterpolantFactoryMethodDiscrete:\\n\\n    \\t\\t\\t\\treturn InterpolateDiscrete;\\n\\n    \\t\\t\\tcase this.InterpolantFactoryMethodLinear:\\n\\n    \\t\\t\\t\\treturn InterpolateLinear;\\n\\n    \\t\\t\\tcase this.InterpolantFactoryMethodSmooth:\\n\\n    \\t\\t\\t\\treturn InterpolateSmooth;\\n\\n    \\t\\t}\\n\\n    \\t},\\n\\n    \\tgetValueSize: function() {\\n\\n    \\t\\treturn this.values.length / this.times.length;\\n\\n    \\t},\\n\\n    \\t// move all keyframes either forwards or backwards in time\\n    \\tshift: function( timeOffset ) {\\n\\n    \\t\\tif( timeOffset !== 0.0 ) {\\n\\n    \\t\\t\\tvar times = this.times;\\n\\n    \\t\\t\\tfor( var i = 0, n = times.length; i !== n; ++ i ) {\\n\\n    \\t\\t\\t\\ttimes[ i ] += timeOffset;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\\n    \\tscale: function( timeScale ) {\\n\\n    \\t\\tif( timeScale !== 1.0 ) {\\n\\n    \\t\\t\\tvar times = this.times;\\n\\n    \\t\\t\\tfor( var i = 0, n = times.length; i !== n; ++ i ) {\\n\\n    \\t\\t\\t\\ttimes[ i ] *= timeScale;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\\n    \\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\\n    \\ttrim: function( startTime, endTime ) {\\n\\n    \\t\\tvar times = this.times,\\n    \\t\\t\\tnKeys = times.length,\\n    \\t\\t\\tfrom = 0,\\n    \\t\\t\\tto = nKeys - 1;\\n\\n    \\t\\twhile ( from !== nKeys && times[ from ] < startTime ) ++ from;\\n    \\t\\twhile ( to !== -1 && times[ to ] > endTime ) -- to;\\n\\n    \\t\\t++ to; // inclusive -> exclusive bound\\n\\n    \\t\\tif( from !== 0 || to !== nKeys ) {\\n\\n    \\t\\t\\t// empty tracks are forbidden, so keep at least one keyframe\\n    \\t\\t\\tif ( from >= to ) to = Math.max( to , 1 ), from = to - 1;\\n\\n    \\t\\t\\tvar stride = this.getValueSize();\\n    \\t\\t\\tthis.times = exports.AnimationUtils.arraySlice( times, from, to );\\n    \\t\\t\\tthis.values = exports.AnimationUtils.\\n    \\t\\t\\t\\t\\tarraySlice( this.values, from * stride, to * stride );\\n\\n    \\t\\t}\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\\n    \\tvalidate: function() {\\n\\n    \\t\\tvar valid = true;\\n\\n    \\t\\tvar valueSize = this.getValueSize();\\n    \\t\\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\\n\\n    \\t\\t\\tconsole.error( \\\"invalid value size in track\\\", this );\\n    \\t\\t\\tvalid = false;\\n\\n    \\t\\t}\\n\\n    \\t\\tvar times = this.times,\\n    \\t\\t\\tvalues = this.values,\\n\\n    \\t\\t\\tnKeys = times.length;\\n\\n    \\t\\tif( nKeys === 0 ) {\\n\\n    \\t\\t\\tconsole.error( \\\"track is empty\\\", this );\\n    \\t\\t\\tvalid = false;\\n\\n    \\t\\t}\\n\\n    \\t\\tvar prevTime = null;\\n\\n    \\t\\tfor( var i = 0; i !== nKeys; i ++ ) {\\n\\n    \\t\\t\\tvar currTime = times[ i ];\\n\\n    \\t\\t\\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\\n\\n    \\t\\t\\t\\tconsole.error( \\\"time is not a valid number\\\", this, i, currTime );\\n    \\t\\t\\t\\tvalid = false;\\n    \\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tif( prevTime !== null && prevTime > currTime ) {\\n\\n    \\t\\t\\t\\tconsole.error( \\\"out of order keys\\\", this, i, currTime, prevTime );\\n    \\t\\t\\t\\tvalid = false;\\n    \\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tprevTime = currTime;\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( values !== undefined ) {\\n\\n    \\t\\t\\tif ( exports.AnimationUtils.isTypedArray( values ) ) {\\n\\n    \\t\\t\\t\\tfor ( var i = 0, n = values.length; i !== n; ++ i ) {\\n\\n    \\t\\t\\t\\t\\tvar value = values[ i ];\\n\\n    \\t\\t\\t\\t\\tif ( isNaN( value ) ) {\\n\\n    \\t\\t\\t\\t\\t\\tconsole.error( \\\"value is not a valid number\\\", this, i, value );\\n    \\t\\t\\t\\t\\t\\tvalid = false;\\n    \\t\\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\treturn valid;\\n\\n    \\t},\\n\\n    \\t// removes equivalent sequential keys as common in morph target sequences\\n    \\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\\n    \\toptimize: function() {\\n\\n    \\t\\tvar times = this.times,\\n    \\t\\t\\tvalues = this.values,\\n    \\t\\t\\tstride = this.getValueSize(),\\n\\n    \\t\\t\\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\\n\\n    \\t\\t\\twriteIndex = 1,\\n    \\t\\t\\tlastIndex = times.length - 1;\\n\\n    \\t\\tfor( var i = 1; i < lastIndex; ++ i ) {\\n\\n    \\t\\t\\tvar keep = false;\\n\\n    \\t\\t\\tvar time = times[ i ];\\n    \\t\\t\\tvar timeNext = times[ i + 1 ];\\n\\n    \\t\\t\\t// remove adjacent keyframes scheduled at the same time\\n\\n    \\t\\t\\tif ( time !== timeNext && ( i !== 1 || time !== time[ 0 ] ) ) {\\n\\n    \\t\\t\\t\\tif ( ! smoothInterpolation ) {\\n\\n    \\t\\t\\t\\t\\t// remove unnecessary keyframes same as their neighbors\\n\\n    \\t\\t\\t\\t\\tvar offset = i * stride,\\n    \\t\\t\\t\\t\\t\\toffsetP = offset - stride,\\n    \\t\\t\\t\\t\\t\\toffsetN = offset + stride;\\n\\n    \\t\\t\\t\\t\\tfor ( var j = 0; j !== stride; ++ j ) {\\n\\n    \\t\\t\\t\\t\\t\\tvar value = values[ offset + j ];\\n\\n    \\t\\t\\t\\t\\t\\tif ( value !== values[ offsetP + j ] ||\\n    \\t\\t\\t\\t\\t\\t\\t\\tvalue !== values[ offsetN + j ] ) {\\n\\n    \\t\\t\\t\\t\\t\\t\\tkeep = true;\\n    \\t\\t\\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t} else keep = true;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\t// in-place compaction\\n\\n    \\t\\t\\tif ( keep ) {\\n\\n    \\t\\t\\t\\tif ( i !== writeIndex ) {\\n\\n    \\t\\t\\t\\t\\ttimes[ writeIndex ] = times[ i ];\\n\\n    \\t\\t\\t\\t\\tvar readOffset = i * stride,\\n    \\t\\t\\t\\t\\t\\twriteOffset = writeIndex * stride;\\n\\n    \\t\\t\\t\\t\\tfor ( var j = 0; j !== stride; ++ j )\\n\\n    \\t\\t\\t\\t\\t\\tvalues[ writeOffset + j ] = values[ readOffset + j ];\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t++ writeIndex;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\t// flush last keyframe (compaction looks ahead)\\n\\n    \\t\\tif ( lastIndex > 0 ) {\\n\\n    \\t\\t\\ttimes[ writeIndex ] = times[ lastIndex ];\\n\\n    \\t\\t\\tfor ( var readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j )\\n\\n    \\t\\t\\t\\tvalues[ writeOffset + j ] = values[ readOffset + j ];\\n\\n    \\t\\t\\t++ writeIndex;\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( writeIndex !== times.length ) {\\n\\n    \\t\\t\\tthis.times = exports.AnimationUtils.arraySlice( times, 0, writeIndex );\\n    \\t\\t\\tthis.values = exports.AnimationUtils.arraySlice( values, 0, writeIndex * stride );\\n\\n    \\t\\t}\\n\\n    \\t\\treturn this;\\n\\n    \\t}\\n\\n    }\\n\\n    function KeyframeTrackConstructor( name, times, values, interpolation ) {\\n\\n    \\tif( name === undefined ) throw new Error( \\\"track name is undefined\\\" );\\n\\n    \\tif( times === undefined || times.length === 0 ) {\\n\\n    \\t\\tthrow new Error( \\\"no keyframes in track named \\\" + name );\\n\\n    \\t}\\n\\n    \\tthis.name = name;\\n\\n    \\tthis.times = exports.AnimationUtils.convertArray( times, this.TimeBufferType );\\n    \\tthis.values = exports.AnimationUtils.convertArray( values, this.ValueBufferType );\\n\\n    \\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\\n\\n    \\tthis.validate();\\n    \\tthis.optimize();\\n\\n    }\\n\\n    /**\\n     *\\n     * A Track of vectored keyframe values.\\n     *\\n     *\\n     * @author Ben Houston / http://clara.io/\\n     * @author David Sarno / http://lighthaus.us/\\n     * @author tschw\\n     */\\n\\n    function VectorKeyframeTrack( name, times, values, interpolation ) {\\n\\n    \\tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\\n\\n    }\\n\\n    VectorKeyframeTrack.prototype =\\n    \\t\\tObject.assign( Object.create( KeyframeTrackPrototype ), {\\n\\n    \\tconstructor: VectorKeyframeTrack,\\n\\n    \\tValueTypeName: 'vector'\\n\\n    \\t// ValueBufferType is inherited\\n\\n    \\t// DefaultInterpolation is inherited\\n\\n    } );\\n\\n    /**\\n     * Spherical linear unit quaternion interpolant.\\n     *\\n     * @author tschw\\n     */\\n\\n    function QuaternionLinearInterpolant(\\n    \\t\\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\\n\\n    \\tInterpolant.call(\\n    \\t\\t\\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\\n\\n    }\\n\\n    QuaternionLinearInterpolant.prototype =\\n    \\t\\tObject.assign( Object.create( Interpolant.prototype ), {\\n\\n    \\tconstructor: QuaternionLinearInterpolant,\\n\\n    \\tinterpolate_: function( i1, t0, t, t1 ) {\\n\\n    \\t\\tvar result = this.resultBuffer,\\n    \\t\\t\\tvalues = this.sampleValues,\\n    \\t\\t\\tstride = this.valueSize,\\n\\n    \\t\\t\\toffset = i1 * stride,\\n\\n    \\t\\t\\talpha = ( t - t0 ) / ( t1 - t0 );\\n\\n    \\t\\tfor ( var end = offset + stride; offset !== end; offset += 4 ) {\\n\\n    \\t\\t\\tQuaternion.slerpFlat( result, 0,\\n    \\t\\t\\t\\t\\tvalues, offset - stride, values, offset, alpha );\\n\\n    \\t\\t}\\n\\n    \\t\\treturn result;\\n\\n    \\t}\\n\\n    } );\\n\\n    /**\\n     *\\n     * A Track of quaternion keyframe values.\\n     *\\n     * @author Ben Houston / http://clara.io/\\n     * @author David Sarno / http://lighthaus.us/\\n     * @author tschw\\n     */\\n\\n    function QuaternionKeyframeTrack( name, times, values, interpolation ) {\\n\\n    \\tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\\n\\n    }\\n\\n    QuaternionKeyframeTrack.prototype =\\n    \\t\\tObject.assign( Object.create( KeyframeTrackPrototype ), {\\n\\n    \\tconstructor: QuaternionKeyframeTrack,\\n\\n    \\tValueTypeName: 'quaternion',\\n\\n    \\t// ValueBufferType is inherited\\n\\n    \\tDefaultInterpolation: InterpolateLinear,\\n\\n    \\tInterpolantFactoryMethodLinear: function( result ) {\\n\\n    \\t\\treturn new QuaternionLinearInterpolant(\\n    \\t\\t\\t\\tthis.times, this.values, this.getValueSize(), result );\\n\\n    \\t},\\n\\n    \\tInterpolantFactoryMethodSmooth: undefined // not yet implemented\\n\\n    } );\\n\\n    /**\\n     *\\n     * A Track of numeric keyframe values.\\n     *\\n     * @author Ben Houston / http://clara.io/\\n     * @author David Sarno / http://lighthaus.us/\\n     * @author tschw\\n     */\\n\\n    function NumberKeyframeTrack( name, times, values, interpolation ) {\\n\\n    \\tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\\n\\n    }\\n\\n    NumberKeyframeTrack.prototype =\\n    \\t\\tObject.assign( Object.create( KeyframeTrackPrototype ), {\\n\\n    \\tconstructor: NumberKeyframeTrack,\\n\\n    \\tValueTypeName: 'number',\\n\\n    \\t// ValueBufferType is inherited\\n\\n    \\t// DefaultInterpolation is inherited\\n\\n    } );\\n\\n    /**\\n     *\\n     * A Track that interpolates Strings\\n     *\\n     *\\n     * @author Ben Houston / http://clara.io/\\n     * @author David Sarno / http://lighthaus.us/\\n     * @author tschw\\n     */\\n\\n    function StringKeyframeTrack( name, times, values, interpolation ) {\\n\\n    \\tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\\n\\n    }\\n\\n    StringKeyframeTrack.prototype =\\n    \\t\\tObject.assign( Object.create( KeyframeTrackPrototype ), {\\n\\n    \\tconstructor: StringKeyframeTrack,\\n\\n    \\tValueTypeName: 'string',\\n    \\tValueBufferType: Array,\\n\\n    \\tDefaultInterpolation: InterpolateDiscrete,\\n\\n    \\tInterpolantFactoryMethodLinear: undefined,\\n\\n    \\tInterpolantFactoryMethodSmooth: undefined\\n\\n    } );\\n\\n    /**\\n     *\\n     * A Track of Boolean keyframe values.\\n     *\\n     *\\n     * @author Ben Houston / http://clara.io/\\n     * @author David Sarno / http://lighthaus.us/\\n     * @author tschw\\n     */\\n\\n    function BooleanKeyframeTrack( name, times, values ) {\\n\\n    \\tKeyframeTrackConstructor.call( this, name, times, values );\\n\\n    }\\n\\n    BooleanKeyframeTrack.prototype =\\n    \\t\\tObject.assign( Object.create( KeyframeTrackPrototype ), {\\n\\n    \\tconstructor: BooleanKeyframeTrack,\\n\\n    \\tValueTypeName: 'bool',\\n    \\tValueBufferType: Array,\\n\\n    \\tDefaultInterpolation: InterpolateDiscrete,\\n\\n    \\tInterpolantFactoryMethodLinear: undefined,\\n    \\tInterpolantFactoryMethodSmooth: undefined\\n\\n    \\t// Note: Actually this track could have a optimized / compressed\\n    \\t// representation of a single value and a custom interpolant that\\n    \\t// computes \\\"firstValue ^ isOdd( index )\\\".\\n\\n    } );\\n\\n    /**\\n     *\\n     * A Track of keyframe values that represent color.\\n     *\\n     *\\n     * @author Ben Houston / http://clara.io/\\n     * @author David Sarno / http://lighthaus.us/\\n     * @author tschw\\n     */\\n\\n    function ColorKeyframeTrack( name, times, values, interpolation ) {\\n\\n    \\tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\\n\\n    }\\n\\n    ColorKeyframeTrack.prototype =\\n    \\t\\tObject.assign( Object.create( KeyframeTrackPrototype ), {\\n\\n    \\tconstructor: ColorKeyframeTrack,\\n\\n    \\tValueTypeName: 'color'\\n\\n    \\t// ValueBufferType is inherited\\n\\n    \\t// DefaultInterpolation is inherited\\n\\n\\n    \\t// Note: Very basic implementation and nothing special yet.\\n    \\t// However, this is the place for color space parameterization.\\n\\n    } );\\n\\n    /**\\n     *\\n     * A timed sequence of keyframes for a specific property.\\n     *\\n     *\\n     * @author Ben Houston / http://clara.io/\\n     * @author David Sarno / http://lighthaus.us/\\n     * @author tschw\\n     */\\n\\n    function KeyframeTrack( name, times, values, interpolation ) {\\n\\n    \\tKeyframeTrackConstructor.apply( this, arguments );\\n\\n    }\\n\\n    KeyframeTrack.prototype = KeyframeTrackPrototype;\\n    KeyframeTrackPrototype.constructor = KeyframeTrack;\\n\\n    // Static methods:\\n\\n    Object.assign( KeyframeTrack, {\\n\\n    \\t// Serialization (in static context, because of constructor invocation\\n    \\t// and automatic invocation of .toJSON):\\n\\n    \\tparse: function( json ) {\\n\\n    \\t\\tif( json.type === undefined ) {\\n\\n    \\t\\t\\tthrow new Error( \\\"track type undefined, can not parse\\\" );\\n\\n    \\t\\t}\\n\\n    \\t\\tvar trackType = KeyframeTrack._getTrackTypeForValueTypeName( json.type );\\n\\n    \\t\\tif ( json.times === undefined ) {\\n\\n    \\t\\t\\tvar times = [], values = [];\\n\\n    \\t\\t\\texports.AnimationUtils.flattenJSON( json.keys, times, values, 'value' );\\n\\n    \\t\\t\\tjson.times = times;\\n    \\t\\t\\tjson.values = values;\\n\\n    \\t\\t}\\n\\n    \\t\\t// derived classes can define a static parse method\\n    \\t\\tif ( trackType.parse !== undefined ) {\\n\\n    \\t\\t\\treturn trackType.parse( json );\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\t// by default, we asssume a constructor compatible with the base\\n    \\t\\t\\treturn new trackType(\\n    \\t\\t\\t\\t\\tjson.name, json.times, json.values, json.interpolation );\\n\\n    \\t\\t}\\n\\n    \\t},\\n\\n    \\ttoJSON: function( track ) {\\n\\n    \\t\\tvar trackType = track.constructor;\\n\\n    \\t\\tvar json;\\n\\n    \\t\\t// derived classes can define a static toJSON method\\n    \\t\\tif ( trackType.toJSON !== undefined ) {\\n\\n    \\t\\t\\tjson = trackType.toJSON( track );\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\t// by default, we assume the data can be serialized as-is\\n    \\t\\t\\tjson = {\\n\\n    \\t\\t\\t\\t'name': track.name,\\n    \\t\\t\\t\\t'times': exports.AnimationUtils.convertArray( track.times, Array ),\\n    \\t\\t\\t\\t'values': exports.AnimationUtils.convertArray( track.values, Array )\\n\\n    \\t\\t\\t};\\n\\n    \\t\\t\\tvar interpolation = track.getInterpolation();\\n\\n    \\t\\t\\tif ( interpolation !== track.DefaultInterpolation ) {\\n\\n    \\t\\t\\t\\tjson.interpolation = interpolation;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\tjson.type = track.ValueTypeName; // mandatory\\n\\n    \\t\\treturn json;\\n\\n    \\t},\\n\\n    \\t_getTrackTypeForValueTypeName: function( typeName ) {\\n\\n    \\t\\tswitch( typeName.toLowerCase() ) {\\n\\n    \\t\\t\\tcase \\\"scalar\\\":\\n    \\t\\t\\tcase \\\"double\\\":\\n    \\t\\t\\tcase \\\"float\\\":\\n    \\t\\t\\tcase \\\"number\\\":\\n    \\t\\t\\tcase \\\"integer\\\":\\n\\n    \\t\\t\\t\\treturn NumberKeyframeTrack;\\n\\n    \\t\\t\\tcase \\\"vector\\\":\\n    \\t\\t\\tcase \\\"vector2\\\":\\n    \\t\\t\\tcase \\\"vector3\\\":\\n    \\t\\t\\tcase \\\"vector4\\\":\\n\\n    \\t\\t\\t\\treturn VectorKeyframeTrack;\\n\\n    \\t\\t\\tcase \\\"color\\\":\\n\\n    \\t\\t\\t\\treturn ColorKeyframeTrack;\\n\\n    \\t\\t\\tcase \\\"quaternion\\\":\\n\\n    \\t\\t\\t\\treturn QuaternionKeyframeTrack;\\n\\n    \\t\\t\\tcase \\\"bool\\\":\\n    \\t\\t\\tcase \\\"boolean\\\":\\n\\n    \\t\\t\\t\\treturn BooleanKeyframeTrack;\\n\\n    \\t\\t\\tcase \\\"string\\\":\\n\\n    \\t\\t\\t\\treturn StringKeyframeTrack;\\n\\n    \\t\\t}\\n\\n    \\t\\tthrow new Error( \\\"Unsupported typeName: \\\" + typeName );\\n\\n    \\t}\\n\\n    } );\\n\\n    /**\\n     *\\n     * Reusable set of Tracks that represent an animation.\\n     *\\n     * @author Ben Houston / http://clara.io/\\n     * @author David Sarno / http://lighthaus.us/\\n     */\\n\\n    function AnimationClip( name, duration, tracks ) {\\n\\n    \\tthis.name = name;\\n    \\tthis.tracks = tracks;\\n    \\tthis.duration = ( duration !== undefined ) ? duration : -1;\\n\\n    \\tthis.uuid = exports.Math.generateUUID();\\n\\n    \\t// this means it should figure out its duration by scanning the tracks\\n    \\tif ( this.duration < 0 ) {\\n\\n    \\t\\tthis.resetDuration();\\n\\n    \\t}\\n\\n    \\tthis.optimize();\\n\\n    }\\n\\n    AnimationClip.prototype = {\\n\\n    \\tconstructor: AnimationClip,\\n\\n    \\tresetDuration: function() {\\n\\n    \\t\\tvar tracks = this.tracks,\\n    \\t\\t\\tduration = 0;\\n\\n    \\t\\tfor ( var i = 0, n = tracks.length; i !== n; ++ i ) {\\n\\n    \\t\\t\\tvar track = this.tracks[ i ];\\n\\n    \\t\\t\\tduration = Math.max(\\n    \\t\\t\\t\\t\\tduration, track.times[ track.times.length - 1 ] );\\n\\n    \\t\\t}\\n\\n    \\t\\tthis.duration = duration;\\n\\n    \\t},\\n\\n    \\ttrim: function() {\\n\\n    \\t\\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\\n\\n    \\t\\t\\tthis.tracks[ i ].trim( 0, this.duration );\\n\\n    \\t\\t}\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\toptimize: function() {\\n\\n    \\t\\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\\n\\n    \\t\\t\\tthis.tracks[ i ].optimize();\\n\\n    \\t\\t}\\n\\n    \\t\\treturn this;\\n\\n    \\t}\\n\\n    };\\n\\n    // Static methods:\\n\\n    Object.assign( AnimationClip, {\\n\\n    \\tparse: function( json ) {\\n\\n    \\t\\tvar tracks = [],\\n    \\t\\t\\tjsonTracks = json.tracks,\\n    \\t\\t\\tframeTime = 1.0 / ( json.fps || 1.0 );\\n\\n    \\t\\tfor ( var i = 0, n = jsonTracks.length; i !== n; ++ i ) {\\n\\n    \\t\\t\\ttracks.push( KeyframeTrack.parse( jsonTracks[ i ] ).scale( frameTime ) );\\n\\n    \\t\\t}\\n\\n    \\t\\treturn new AnimationClip( json.name, json.duration, tracks );\\n\\n    \\t},\\n\\n\\n    \\ttoJSON: function( clip ) {\\n\\n    \\t\\tvar tracks = [],\\n    \\t\\t\\tclipTracks = clip.tracks;\\n\\n    \\t\\tvar json = {\\n\\n    \\t\\t\\t'name': clip.name,\\n    \\t\\t\\t'duration': clip.duration,\\n    \\t\\t\\t'tracks': tracks\\n\\n    \\t\\t};\\n\\n    \\t\\tfor ( var i = 0, n = clipTracks.length; i !== n; ++ i ) {\\n\\n    \\t\\t\\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\\n\\n    \\t\\t}\\n\\n    \\t\\treturn json;\\n\\n    \\t},\\n\\n\\n    \\tCreateFromMorphTargetSequence: function( name, morphTargetSequence, fps, noLoop ) {\\n\\n    \\t\\tvar numMorphTargets = morphTargetSequence.length;\\n    \\t\\tvar tracks = [];\\n\\n    \\t\\tfor ( var i = 0; i < numMorphTargets; i ++ ) {\\n\\n    \\t\\t\\tvar times = [];\\n    \\t\\t\\tvar values = [];\\n\\n    \\t\\t\\ttimes.push(\\n    \\t\\t\\t\\t\\t( i + numMorphTargets - 1 ) % numMorphTargets,\\n    \\t\\t\\t\\t\\ti,\\n    \\t\\t\\t\\t\\t( i + 1 ) % numMorphTargets );\\n\\n    \\t\\t\\tvalues.push( 0, 1, 0 );\\n\\n    \\t\\t\\tvar order = exports.AnimationUtils.getKeyframeOrder( times );\\n    \\t\\t\\ttimes = exports.AnimationUtils.sortedArray( times, 1, order );\\n    \\t\\t\\tvalues = exports.AnimationUtils.sortedArray( values, 1, order );\\n\\n    \\t\\t\\t// if there is a key at the first frame, duplicate it as the\\n    \\t\\t\\t// last frame as well for perfect loop.\\n    \\t\\t\\tif ( ! noLoop && times[ 0 ] === 0 ) {\\n\\n    \\t\\t\\t\\ttimes.push( numMorphTargets );\\n    \\t\\t\\t\\tvalues.push( values[ 0 ] );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\ttracks.push(\\n    \\t\\t\\t\\t\\tnew NumberKeyframeTrack(\\n    \\t\\t\\t\\t\\t\\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\\n    \\t\\t\\t\\t\\t\\ttimes, values\\n    \\t\\t\\t\\t\\t).scale( 1.0 / fps ) );\\n    \\t\\t}\\n\\n    \\t\\treturn new AnimationClip( name, -1, tracks );\\n\\n    \\t},\\n\\n    \\tfindByName: function( objectOrClipArray, name ) {\\n\\n    \\t\\tvar clipArray = objectOrClipArray;\\n\\n    \\t\\tif ( ! Array.isArray( objectOrClipArray ) ) {\\n\\n    \\t\\t\\tvar o = objectOrClipArray;\\n    \\t\\t\\tclipArray = o.geometry && o.geometry.animations || o.animations;\\n\\n    \\t\\t}\\n\\n    \\t\\tfor ( var i = 0; i < clipArray.length; i ++ ) {\\n\\n    \\t\\t\\tif ( clipArray[ i ].name === name ) {\\n\\n    \\t\\t\\t\\treturn clipArray[ i ];\\n\\n    \\t\\t\\t}\\n    \\t\\t}\\n\\n    \\t\\treturn null;\\n\\n    \\t},\\n\\n    \\tCreateClipsFromMorphTargetSequences: function( morphTargets, fps, noLoop ) {\\n\\n    \\t\\tvar animationToMorphTargets = {};\\n\\n    \\t\\t// tested with https://regex101.com/ on trick sequences\\n    \\t\\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\\n    \\t\\tvar pattern = /^([\\\\w-]*?)([\\\\d]+)$/;\\n\\n    \\t\\t// sort morph target names into animation groups based\\n    \\t\\t// patterns like Walk_001, Walk_002, Run_001, Run_002\\n    \\t\\tfor ( var i = 0, il = morphTargets.length; i < il; i ++ ) {\\n\\n    \\t\\t\\tvar morphTarget = morphTargets[ i ];\\n    \\t\\t\\tvar parts = morphTarget.name.match( pattern );\\n\\n    \\t\\t\\tif ( parts && parts.length > 1 ) {\\n\\n    \\t\\t\\t\\tvar name = parts[ 1 ];\\n\\n    \\t\\t\\t\\tvar animationMorphTargets = animationToMorphTargets[ name ];\\n    \\t\\t\\t\\tif ( ! animationMorphTargets ) {\\n\\n    \\t\\t\\t\\t\\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\tanimationMorphTargets.push( morphTarget );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\tvar clips = [];\\n\\n    \\t\\tfor ( var name in animationToMorphTargets ) {\\n\\n    \\t\\t\\tclips.push( AnimationClip.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\\n\\n    \\t\\t}\\n\\n    \\t\\treturn clips;\\n\\n    \\t},\\n\\n    \\t// parse the animation.hierarchy format\\n    \\tparseAnimation: function( animation, bones ) {\\n\\n    \\t\\tif ( ! animation ) {\\n\\n    \\t\\t\\tconsole.error( \\\"  no animation in JSONLoader data\\\" );\\n    \\t\\t\\treturn null;\\n\\n    \\t\\t}\\n\\n    \\t\\tvar addNonemptyTrack = function(\\n    \\t\\t\\t\\ttrackType, trackName, animationKeys, propertyName, destTracks ) {\\n\\n    \\t\\t\\t// only return track if there are actually keys.\\n    \\t\\t\\tif ( animationKeys.length !== 0 ) {\\n\\n    \\t\\t\\t\\tvar times = [];\\n    \\t\\t\\t\\tvar values = [];\\n\\n    \\t\\t\\t\\texports.AnimationUtils.flattenJSON(\\n    \\t\\t\\t\\t\\t\\tanimationKeys, times, values, propertyName );\\n\\n    \\t\\t\\t\\t// empty keys are filtered out, so check again\\n    \\t\\t\\t\\tif ( times.length !== 0 ) {\\n\\n    \\t\\t\\t\\t\\tdestTracks.push( new trackType( trackName, times, values ) );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t};\\n\\n    \\t\\tvar tracks = [];\\n\\n    \\t\\tvar clipName = animation.name || 'default';\\n    \\t\\t// automatic length determination in AnimationClip.\\n    \\t\\tvar duration = animation.length || -1;\\n    \\t\\tvar fps = animation.fps || 30;\\n\\n    \\t\\tvar hierarchyTracks = animation.hierarchy || [];\\n\\n    \\t\\tfor ( var h = 0; h < hierarchyTracks.length; h ++ ) {\\n\\n    \\t\\t\\tvar animationKeys = hierarchyTracks[ h ].keys;\\n\\n    \\t\\t\\t// skip empty tracks\\n    \\t\\t\\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\\n\\n    \\t\\t\\t// process morph targets in a way exactly compatible\\n    \\t\\t\\t// with AnimationHandler.init( animation )\\n    \\t\\t\\tif ( animationKeys[0].morphTargets ) {\\n\\n    \\t\\t\\t\\t// figure out all morph targets used in this track\\n    \\t\\t\\t\\tvar morphTargetNames = {};\\n    \\t\\t\\t\\tfor ( var k = 0; k < animationKeys.length; k ++ ) {\\n\\n    \\t\\t\\t\\t\\tif ( animationKeys[k].morphTargets ) {\\n\\n    \\t\\t\\t\\t\\t\\tfor ( var m = 0; m < animationKeys[k].morphTargets.length; m ++ ) {\\n\\n    \\t\\t\\t\\t\\t\\t\\tmorphTargetNames[ animationKeys[k].morphTargets[m] ] = -1;\\n    \\t\\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t// create a track for each morph target with all zero\\n    \\t\\t\\t\\t// morphTargetInfluences except for the keys in which\\n    \\t\\t\\t\\t// the morphTarget is named.\\n    \\t\\t\\t\\tfor ( var morphTargetName in morphTargetNames ) {\\n\\n    \\t\\t\\t\\t\\tvar times = [];\\n    \\t\\t\\t\\t\\tvar values = [];\\n\\n    \\t\\t\\t\\t\\tfor ( var m = 0;\\n    \\t\\t\\t\\t\\t\\t\\tm !== animationKeys[k].morphTargets.length; ++ m ) {\\n\\n    \\t\\t\\t\\t\\t\\tvar animationKey = animationKeys[k];\\n\\n    \\t\\t\\t\\t\\t\\ttimes.push( animationKey.time );\\n    \\t\\t\\t\\t\\t\\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\ttracks.push( new NumberKeyframeTrack(\\n    \\t\\t\\t\\t\\t\\t\\t'.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\tduration = morphTargetNames.length * ( fps || 1.0 );\\n\\n    \\t\\t\\t} else {\\n    \\t\\t\\t\\t// ...assume skeletal animation\\n\\n    \\t\\t\\t\\tvar boneName = '.bones[' + bones[ h ].name + ']';\\n\\n    \\t\\t\\t\\taddNonemptyTrack(\\n    \\t\\t\\t\\t\\t\\tVectorKeyframeTrack, boneName + '.position',\\n    \\t\\t\\t\\t\\t\\tanimationKeys, 'pos', tracks );\\n\\n    \\t\\t\\t\\taddNonemptyTrack(\\n    \\t\\t\\t\\t\\t\\tQuaternionKeyframeTrack, boneName + '.quaternion',\\n    \\t\\t\\t\\t\\t\\tanimationKeys, 'rot', tracks );\\n\\n    \\t\\t\\t\\taddNonemptyTrack(\\n    \\t\\t\\t\\t\\t\\tVectorKeyframeTrack, boneName + '.scale',\\n    \\t\\t\\t\\t\\t\\tanimationKeys, 'scl', tracks );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( tracks.length === 0 ) {\\n\\n    \\t\\t\\treturn null;\\n\\n    \\t\\t}\\n\\n    \\t\\tvar clip = new AnimationClip( clipName, duration, tracks );\\n\\n    \\t\\treturn clip;\\n\\n    \\t}\\n\\n    } );\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     */\\n\\n    function MaterialLoader( manager ) {\\n\\n    \\tthis.manager = ( manager !== undefined ) ? manager : exports.DefaultLoadingManager;\\n    \\tthis.textures = {};\\n\\n    }\\n\\n    Object.assign( MaterialLoader.prototype, {\\n\\n    \\tload: function ( url, onLoad, onProgress, onError ) {\\n\\n    \\t\\tvar scope = this;\\n\\n    \\t\\tvar loader = new XHRLoader( scope.manager );\\n    \\t\\tloader.load( url, function ( text ) {\\n\\n    \\t\\t\\tonLoad( scope.parse( JSON.parse( text ) ) );\\n\\n    \\t\\t}, onProgress, onError );\\n\\n    \\t},\\n\\n    \\tsetTextures: function ( value ) {\\n\\n    \\t\\tthis.textures = value;\\n\\n    \\t},\\n\\n    \\tparse: function ( json ) {\\n\\n    \\t\\tvar textures = this.textures;\\n\\n    \\t\\tfunction getTexture( name ) {\\n\\n    \\t\\t\\tif ( textures[ name ] === undefined ) {\\n\\n    \\t\\t\\t\\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\treturn textures[ name ];\\n\\n    \\t\\t}\\n\\n    \\t\\tvar material = new Materials[ json.type ]();\\n\\n    \\t\\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\\n    \\t\\tif ( json.name !== undefined ) material.name = json.name;\\n    \\t\\tif ( json.color !== undefined ) material.color.setHex( json.color );\\n    \\t\\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\\n    \\t\\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\\n    \\t\\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\\n    \\t\\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\\n    \\t\\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\\n    \\t\\tif ( json.uniforms !== undefined ) material.uniforms = json.uniforms;\\n    \\t\\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\\n    \\t\\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\\n    \\t\\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\\n    \\t\\tif ( json.fog !== undefined ) material.fog = json.fog;\\n    \\t\\tif ( json.shading !== undefined ) material.shading = json.shading;\\n    \\t\\tif ( json.blending !== undefined ) material.blending = json.blending;\\n    \\t\\tif ( json.side !== undefined ) material.side = json.side;\\n    \\t\\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\\n    \\t\\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\\n    \\t\\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\\n    \\t\\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\\n    \\t\\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\\n    \\t\\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\\n    \\t\\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\\n    \\t\\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\\n    \\t\\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\\n    \\t\\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\\n    \\t\\tif ( json.skinning !== undefined ) material.skinning = json.skinning;\\n    \\t\\tif ( json.morphTargets !== undefined ) material.morphTargets = json.morphTargets;\\n\\n    \\t\\t// for PointsMaterial\\n\\n    \\t\\tif ( json.size !== undefined ) material.size = json.size;\\n    \\t\\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\\n\\n    \\t\\t// maps\\n\\n    \\t\\tif ( json.map !== undefined ) material.map = getTexture( json.map );\\n\\n    \\t\\tif ( json.alphaMap !== undefined ) {\\n\\n    \\t\\t\\tmaterial.alphaMap = getTexture( json.alphaMap );\\n    \\t\\t\\tmaterial.transparent = true;\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\\n    \\t\\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\\n\\n    \\t\\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\\n    \\t\\tif ( json.normalScale !== undefined ) {\\n\\n    \\t\\t\\tvar normalScale = json.normalScale;\\n\\n    \\t\\t\\tif ( Array.isArray( normalScale ) === false ) {\\n\\n    \\t\\t\\t\\t// Blender exporter used to export a scalar. See #7459\\n\\n    \\t\\t\\t\\tnormalScale = [ normalScale, normalScale ];\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tmaterial.normalScale = new Vector2().fromArray( normalScale );\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\\n    \\t\\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\\n    \\t\\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\\n\\n    \\t\\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\\n    \\t\\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\\n\\n    \\t\\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\\n    \\t\\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\\n\\n    \\t\\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\\n\\n    \\t\\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\\n\\n    \\t\\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\\n\\n    \\t\\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\\n    \\t\\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\\n\\n    \\t\\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\\n    \\t\\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\\n\\n    \\t\\t// MultiMaterial\\n\\n    \\t\\tif ( json.materials !== undefined ) {\\n\\n    \\t\\t\\tfor ( var i = 0, l = json.materials.length; i < l; i ++ ) {\\n\\n    \\t\\t\\t\\tmaterial.materials.push( this.parse( json.materials[ i ] ) );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\treturn material;\\n\\n    \\t}\\n\\n    } );\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     */\\n\\n    function BufferGeometryLoader( manager ) {\\n\\n    \\tthis.manager = ( manager !== undefined ) ? manager : exports.DefaultLoadingManager;\\n\\n    }\\n\\n    Object.assign( BufferGeometryLoader.prototype, {\\n\\n    \\tload: function ( url, onLoad, onProgress, onError ) {\\n\\n    \\t\\tvar scope = this;\\n\\n    \\t\\tvar loader = new XHRLoader( scope.manager );\\n    \\t\\tloader.load( url, function ( text ) {\\n\\n    \\t\\t\\tonLoad( scope.parse( JSON.parse( text ) ) );\\n\\n    \\t\\t}, onProgress, onError );\\n\\n    \\t},\\n\\n    \\tparse: function ( json ) {\\n\\n    \\t\\tvar geometry = new BufferGeometry();\\n\\n    \\t\\tvar index = json.data.index;\\n\\n    \\t\\tvar TYPED_ARRAYS = {\\n    \\t\\t\\t'Int8Array': Int8Array,\\n    \\t\\t\\t'Uint8Array': Uint8Array,\\n    \\t\\t\\t'Uint8ClampedArray': Uint8ClampedArray,\\n    \\t\\t\\t'Int16Array': Int16Array,\\n    \\t\\t\\t'Uint16Array': Uint16Array,\\n    \\t\\t\\t'Int32Array': Int32Array,\\n    \\t\\t\\t'Uint32Array': Uint32Array,\\n    \\t\\t\\t'Float32Array': Float32Array,\\n    \\t\\t\\t'Float64Array': Float64Array\\n    \\t\\t};\\n\\n    \\t\\tif ( index !== undefined ) {\\n\\n    \\t\\t\\tvar typedArray = new TYPED_ARRAYS[ index.type ]( index.array );\\n    \\t\\t\\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\\n\\n    \\t\\t}\\n\\n    \\t\\tvar attributes = json.data.attributes;\\n\\n    \\t\\tfor ( var key in attributes ) {\\n\\n    \\t\\t\\tvar attribute = attributes[ key ];\\n    \\t\\t\\tvar typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\\n\\n    \\t\\t\\tgeometry.addAttribute( key, new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized ) );\\n\\n    \\t\\t}\\n\\n    \\t\\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\\n\\n    \\t\\tif ( groups !== undefined ) {\\n\\n    \\t\\t\\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\\n\\n    \\t\\t\\t\\tvar group = groups[ i ];\\n\\n    \\t\\t\\t\\tgeometry.addGroup( group.start, group.count, group.materialIndex );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\tvar boundingSphere = json.data.boundingSphere;\\n\\n    \\t\\tif ( boundingSphere !== undefined ) {\\n\\n    \\t\\t\\tvar center = new Vector3();\\n\\n    \\t\\t\\tif ( boundingSphere.center !== undefined ) {\\n\\n    \\t\\t\\t\\tcenter.fromArray( boundingSphere.center );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\\n\\n    \\t\\t}\\n\\n    \\t\\treturn geometry;\\n\\n    \\t}\\n\\n    } );\\n\\n    /**\\n     * @author alteredq / http://alteredqualia.com/\\n     */\\n\\n    function Loader() {\\n\\n    \\tthis.onLoadStart = function () {};\\n    \\tthis.onLoadProgress = function () {};\\n    \\tthis.onLoadComplete = function () {};\\n\\n    }\\n\\n    Loader.prototype = {\\n\\n    \\tconstructor: Loader,\\n\\n    \\tcrossOrigin: undefined,\\n\\n    \\textractUrlBase: function ( url ) {\\n\\n    \\t\\tvar parts = url.split( '/' );\\n\\n    \\t\\tif ( parts.length === 1 ) return './';\\n\\n    \\t\\tparts.pop();\\n\\n    \\t\\treturn parts.join( '/' ) + '/';\\n\\n    \\t},\\n\\n    \\tinitMaterials: function ( materials, texturePath, crossOrigin ) {\\n\\n    \\t\\tvar array = [];\\n\\n    \\t\\tfor ( var i = 0; i < materials.length; ++ i ) {\\n\\n    \\t\\t\\tarray[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin );\\n\\n    \\t\\t}\\n\\n    \\t\\treturn array;\\n\\n    \\t},\\n\\n    \\tcreateMaterial: ( function () {\\n\\n    \\t\\tvar color, textureLoader, materialLoader;\\n\\n    \\t\\treturn function createMaterial( m, texturePath, crossOrigin ) {\\n\\n    \\t\\t\\tif ( color === undefined ) color = new Color();\\n    \\t\\t\\tif ( textureLoader === undefined ) textureLoader = new TextureLoader();\\n    \\t\\t\\tif ( materialLoader === undefined ) materialLoader = new MaterialLoader();\\n\\n    \\t\\t\\t// convert from old material format\\n\\n    \\t\\t\\tvar textures = {};\\n\\n    \\t\\t\\tfunction loadTexture( path, repeat, offset, wrap, anisotropy ) {\\n\\n    \\t\\t\\t\\tvar fullPath = texturePath + path;\\n    \\t\\t\\t\\tvar loader = Loader.Handlers.get( fullPath );\\n\\n    \\t\\t\\t\\tvar texture;\\n\\n    \\t\\t\\t\\tif ( loader !== null ) {\\n\\n    \\t\\t\\t\\t\\ttexture = loader.load( fullPath );\\n\\n    \\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\ttextureLoader.setCrossOrigin( crossOrigin );\\n    \\t\\t\\t\\t\\ttexture = textureLoader.load( fullPath );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\tif ( repeat !== undefined ) {\\n\\n    \\t\\t\\t\\t\\ttexture.repeat.fromArray( repeat );\\n\\n    \\t\\t\\t\\t\\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = RepeatWrapping;\\n    \\t\\t\\t\\t\\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = RepeatWrapping;\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\tif ( offset !== undefined ) {\\n\\n    \\t\\t\\t\\t\\ttexture.offset.fromArray( offset );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\tif ( wrap !== undefined ) {\\n\\n    \\t\\t\\t\\t\\tif ( wrap[ 0 ] === 'repeat' ) texture.wrapS = RepeatWrapping;\\n    \\t\\t\\t\\t\\tif ( wrap[ 0 ] === 'mirror' ) texture.wrapS = MirroredRepeatWrapping;\\n\\n    \\t\\t\\t\\t\\tif ( wrap[ 1 ] === 'repeat' ) texture.wrapT = RepeatWrapping;\\n    \\t\\t\\t\\t\\tif ( wrap[ 1 ] === 'mirror' ) texture.wrapT = MirroredRepeatWrapping;\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\tif ( anisotropy !== undefined ) {\\n\\n    \\t\\t\\t\\t\\ttexture.anisotropy = anisotropy;\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\tvar uuid = exports.Math.generateUUID();\\n\\n    \\t\\t\\t\\ttextures[ uuid ] = texture;\\n\\n    \\t\\t\\t\\treturn uuid;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\t//\\n\\n    \\t\\t\\tvar json = {\\n    \\t\\t\\t\\tuuid: exports.Math.generateUUID(),\\n    \\t\\t\\t\\ttype: 'MeshLambertMaterial'\\n    \\t\\t\\t};\\n\\n    \\t\\t\\tfor ( var name in m ) {\\n\\n    \\t\\t\\t\\tvar value = m[ name ];\\n\\n    \\t\\t\\t\\tswitch ( name ) {\\n    \\t\\t\\t\\t\\tcase 'DbgColor':\\n    \\t\\t\\t\\t\\tcase 'DbgIndex':\\n    \\t\\t\\t\\t\\tcase 'opticalDensity':\\n    \\t\\t\\t\\t\\tcase 'illumination':\\n    \\t\\t\\t\\t\\t\\tbreak;\\n    \\t\\t\\t\\t\\tcase 'DbgName':\\n    \\t\\t\\t\\t\\t\\tjson.name = value;\\n    \\t\\t\\t\\t\\t\\tbreak;\\n    \\t\\t\\t\\t\\tcase 'blending':\\n    \\t\\t\\t\\t\\t\\tjson.blending = BlendingMode[ value ];\\n    \\t\\t\\t\\t\\t\\tbreak;\\n    \\t\\t\\t\\t\\tcase 'colorAmbient':\\n    \\t\\t\\t\\t\\tcase 'mapAmbient':\\n    \\t\\t\\t\\t\\t\\tconsole.warn( 'THREE.Loader.createMaterial:', name, 'is no longer supported.' );\\n    \\t\\t\\t\\t\\t\\tbreak;\\n    \\t\\t\\t\\t\\tcase 'colorDiffuse':\\n    \\t\\t\\t\\t\\t\\tjson.color = color.fromArray( value ).getHex();\\n    \\t\\t\\t\\t\\t\\tbreak;\\n    \\t\\t\\t\\t\\tcase 'colorSpecular':\\n    \\t\\t\\t\\t\\t\\tjson.specular = color.fromArray( value ).getHex();\\n    \\t\\t\\t\\t\\t\\tbreak;\\n    \\t\\t\\t\\t\\tcase 'colorEmissive':\\n    \\t\\t\\t\\t\\t\\tjson.emissive = color.fromArray( value ).getHex();\\n    \\t\\t\\t\\t\\t\\tbreak;\\n    \\t\\t\\t\\t\\tcase 'specularCoef':\\n    \\t\\t\\t\\t\\t\\tjson.shininess = value;\\n    \\t\\t\\t\\t\\t\\tbreak;\\n    \\t\\t\\t\\t\\tcase 'shading':\\n    \\t\\t\\t\\t\\t\\tif ( value.toLowerCase() === 'basic' ) json.type = 'MeshBasicMaterial';\\n    \\t\\t\\t\\t\\t\\tif ( value.toLowerCase() === 'phong' ) json.type = 'MeshPhongMaterial';\\n    \\t\\t\\t\\t\\t\\tif ( value.toLowerCase() === 'standard' ) json.type = 'MeshStandardMaterial';\\n    \\t\\t\\t\\t\\t\\tbreak;\\n    \\t\\t\\t\\t\\tcase 'mapDiffuse':\\n    \\t\\t\\t\\t\\t\\tjson.map = loadTexture( value, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\\n    \\t\\t\\t\\t\\t\\tbreak;\\n    \\t\\t\\t\\t\\tcase 'mapDiffuseRepeat':\\n    \\t\\t\\t\\t\\tcase 'mapDiffuseOffset':\\n    \\t\\t\\t\\t\\tcase 'mapDiffuseWrap':\\n    \\t\\t\\t\\t\\tcase 'mapDiffuseAnisotropy':\\n    \\t\\t\\t\\t\\t\\tbreak;\\n    \\t\\t\\t\\t\\tcase 'mapEmissive':\\n    \\t\\t\\t\\t\\t\\tjson.emissiveMap = loadTexture( value, m.mapEmissiveRepeat, m.mapEmissiveOffset, m.mapEmissiveWrap, m.mapEmissiveAnisotropy );\\n    \\t\\t\\t\\t\\t\\tbreak;\\n    \\t\\t\\t\\t\\tcase 'mapEmissiveRepeat':\\n    \\t\\t\\t\\t\\tcase 'mapEmissiveOffset':\\n    \\t\\t\\t\\t\\tcase 'mapEmissiveWrap':\\n    \\t\\t\\t\\t\\tcase 'mapEmissiveAnisotropy':\\n    \\t\\t\\t\\t\\t\\tbreak;\\n    \\t\\t\\t\\t\\tcase 'mapLight':\\n    \\t\\t\\t\\t\\t\\tjson.lightMap = loadTexture( value, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\\n    \\t\\t\\t\\t\\t\\tbreak;\\n    \\t\\t\\t\\t\\tcase 'mapLightRepeat':\\n    \\t\\t\\t\\t\\tcase 'mapLightOffset':\\n    \\t\\t\\t\\t\\tcase 'mapLightWrap':\\n    \\t\\t\\t\\t\\tcase 'mapLightAnisotropy':\\n    \\t\\t\\t\\t\\t\\tbreak;\\n    \\t\\t\\t\\t\\tcase 'mapAO':\\n    \\t\\t\\t\\t\\t\\tjson.aoMap = loadTexture( value, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy );\\n    \\t\\t\\t\\t\\t\\tbreak;\\n    \\t\\t\\t\\t\\tcase 'mapAORepeat':\\n    \\t\\t\\t\\t\\tcase 'mapAOOffset':\\n    \\t\\t\\t\\t\\tcase 'mapAOWrap':\\n    \\t\\t\\t\\t\\tcase 'mapAOAnisotropy':\\n    \\t\\t\\t\\t\\t\\tbreak;\\n    \\t\\t\\t\\t\\tcase 'mapBump':\\n    \\t\\t\\t\\t\\t\\tjson.bumpMap = loadTexture( value, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\\n    \\t\\t\\t\\t\\t\\tbreak;\\n    \\t\\t\\t\\t\\tcase 'mapBumpScale':\\n    \\t\\t\\t\\t\\t\\tjson.bumpScale = value;\\n    \\t\\t\\t\\t\\t\\tbreak;\\n    \\t\\t\\t\\t\\tcase 'mapBumpRepeat':\\n    \\t\\t\\t\\t\\tcase 'mapBumpOffset':\\n    \\t\\t\\t\\t\\tcase 'mapBumpWrap':\\n    \\t\\t\\t\\t\\tcase 'mapBumpAnisotropy':\\n    \\t\\t\\t\\t\\t\\tbreak;\\n    \\t\\t\\t\\t\\tcase 'mapNormal':\\n    \\t\\t\\t\\t\\t\\tjson.normalMap = loadTexture( value, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\\n    \\t\\t\\t\\t\\t\\tbreak;\\n    \\t\\t\\t\\t\\tcase 'mapNormalFactor':\\n    \\t\\t\\t\\t\\t\\tjson.normalScale = [ value, value ];\\n    \\t\\t\\t\\t\\t\\tbreak;\\n    \\t\\t\\t\\t\\tcase 'mapNormalRepeat':\\n    \\t\\t\\t\\t\\tcase 'mapNormalOffset':\\n    \\t\\t\\t\\t\\tcase 'mapNormalWrap':\\n    \\t\\t\\t\\t\\tcase 'mapNormalAnisotropy':\\n    \\t\\t\\t\\t\\t\\tbreak;\\n    \\t\\t\\t\\t\\tcase 'mapSpecular':\\n    \\t\\t\\t\\t\\t\\tjson.specularMap = loadTexture( value, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\\n    \\t\\t\\t\\t\\t\\tbreak;\\n    \\t\\t\\t\\t\\tcase 'mapSpecularRepeat':\\n    \\t\\t\\t\\t\\tcase 'mapSpecularOffset':\\n    \\t\\t\\t\\t\\tcase 'mapSpecularWrap':\\n    \\t\\t\\t\\t\\tcase 'mapSpecularAnisotropy':\\n    \\t\\t\\t\\t\\t\\tbreak;\\n    \\t\\t\\t\\t\\tcase 'mapMetalness':\\n    \\t\\t\\t\\t\\t\\tjson.metalnessMap = loadTexture( value, m.mapMetalnessRepeat, m.mapMetalnessOffset, m.mapMetalnessWrap, m.mapMetalnessAnisotropy );\\n    \\t\\t\\t\\t\\t\\tbreak;\\n    \\t\\t\\t\\t\\tcase 'mapMetalnessRepeat':\\n    \\t\\t\\t\\t\\tcase 'mapMetalnessOffset':\\n    \\t\\t\\t\\t\\tcase 'mapMetalnessWrap':\\n    \\t\\t\\t\\t\\tcase 'mapMetalnessAnisotropy':\\n    \\t\\t\\t\\t\\t\\tbreak;\\n    \\t\\t\\t\\t\\tcase 'mapRoughness':\\n    \\t\\t\\t\\t\\t\\tjson.roughnessMap = loadTexture( value, m.mapRoughnessRepeat, m.mapRoughnessOffset, m.mapRoughnessWrap, m.mapRoughnessAnisotropy );\\n    \\t\\t\\t\\t\\t\\tbreak;\\n    \\t\\t\\t\\t\\tcase 'mapRoughnessRepeat':\\n    \\t\\t\\t\\t\\tcase 'mapRoughnessOffset':\\n    \\t\\t\\t\\t\\tcase 'mapRoughnessWrap':\\n    \\t\\t\\t\\t\\tcase 'mapRoughnessAnisotropy':\\n    \\t\\t\\t\\t\\t\\tbreak;\\n    \\t\\t\\t\\t\\tcase 'mapAlpha':\\n    \\t\\t\\t\\t\\t\\tjson.alphaMap = loadTexture( value, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\\n    \\t\\t\\t\\t\\t\\tbreak;\\n    \\t\\t\\t\\t\\tcase 'mapAlphaRepeat':\\n    \\t\\t\\t\\t\\tcase 'mapAlphaOffset':\\n    \\t\\t\\t\\t\\tcase 'mapAlphaWrap':\\n    \\t\\t\\t\\t\\tcase 'mapAlphaAnisotropy':\\n    \\t\\t\\t\\t\\t\\tbreak;\\n    \\t\\t\\t\\t\\tcase 'flipSided':\\n    \\t\\t\\t\\t\\t\\tjson.side = BackSide;\\n    \\t\\t\\t\\t\\t\\tbreak;\\n    \\t\\t\\t\\t\\tcase 'doubleSided':\\n    \\t\\t\\t\\t\\t\\tjson.side = DoubleSide;\\n    \\t\\t\\t\\t\\t\\tbreak;\\n    \\t\\t\\t\\t\\tcase 'transparency':\\n    \\t\\t\\t\\t\\t\\tconsole.warn( 'THREE.Loader.createMaterial: transparency has been renamed to opacity' );\\n    \\t\\t\\t\\t\\t\\tjson.opacity = value;\\n    \\t\\t\\t\\t\\t\\tbreak;\\n    \\t\\t\\t\\t\\tcase 'depthTest':\\n    \\t\\t\\t\\t\\tcase 'depthWrite':\\n    \\t\\t\\t\\t\\tcase 'colorWrite':\\n    \\t\\t\\t\\t\\tcase 'opacity':\\n    \\t\\t\\t\\t\\tcase 'reflectivity':\\n    \\t\\t\\t\\t\\tcase 'transparent':\\n    \\t\\t\\t\\t\\tcase 'visible':\\n    \\t\\t\\t\\t\\tcase 'wireframe':\\n    \\t\\t\\t\\t\\t\\tjson[ name ] = value;\\n    \\t\\t\\t\\t\\t\\tbreak;\\n    \\t\\t\\t\\t\\tcase 'vertexColors':\\n    \\t\\t\\t\\t\\t\\tif ( value === true ) json.vertexColors = VertexColors;\\n    \\t\\t\\t\\t\\t\\tif ( value === 'face' ) json.vertexColors = FaceColors;\\n    \\t\\t\\t\\t\\t\\tbreak;\\n    \\t\\t\\t\\t\\tdefault:\\n    \\t\\t\\t\\t\\t\\tconsole.error( 'THREE.Loader.createMaterial: Unsupported', name, value );\\n    \\t\\t\\t\\t\\t\\tbreak;\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tif ( json.type === 'MeshBasicMaterial' ) delete json.emissive;\\n    \\t\\t\\tif ( json.type !== 'MeshPhongMaterial' ) delete json.specular;\\n\\n    \\t\\t\\tif ( json.opacity < 1 ) json.transparent = true;\\n\\n    \\t\\t\\tmaterialLoader.setTextures( textures );\\n\\n    \\t\\t\\treturn materialLoader.parse( json );\\n\\n    \\t\\t};\\n\\n    \\t} )()\\n\\n    };\\n\\n    Loader.Handlers = {\\n\\n    \\thandlers: [],\\n\\n    \\tadd: function ( regex, loader ) {\\n\\n    \\t\\tthis.handlers.push( regex, loader );\\n\\n    \\t},\\n\\n    \\tget: function ( file ) {\\n\\n    \\t\\tvar handlers = this.handlers;\\n\\n    \\t\\tfor ( var i = 0, l = handlers.length; i < l; i += 2 ) {\\n\\n    \\t\\t\\tvar regex = handlers[ i ];\\n    \\t\\t\\tvar loader  = handlers[ i + 1 ];\\n\\n    \\t\\t\\tif ( regex.test( file ) ) {\\n\\n    \\t\\t\\t\\treturn loader;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\treturn null;\\n\\n    \\t}\\n\\n    };\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     * @author alteredq / http://alteredqualia.com/\\n     */\\n\\n    function JSONLoader( manager ) {\\n\\n    \\tif ( typeof manager === 'boolean' ) {\\n\\n    \\t\\tconsole.warn( 'THREE.JSONLoader: showStatus parameter has been removed from constructor.' );\\n    \\t\\tmanager = undefined;\\n\\n    \\t}\\n\\n    \\tthis.manager = ( manager !== undefined ) ? manager : exports.DefaultLoadingManager;\\n\\n    \\tthis.withCredentials = false;\\n\\n    }\\n\\n    Object.assign( JSONLoader.prototype, {\\n\\n    \\tload: function( url, onLoad, onProgress, onError ) {\\n\\n    \\t\\tvar scope = this;\\n\\n    \\t\\tvar texturePath = this.texturePath && ( typeof this.texturePath === \\\"string\\\" ) ? this.texturePath : Loader.prototype.extractUrlBase( url );\\n\\n    \\t\\tvar loader = new XHRLoader( this.manager );\\n    \\t\\tloader.setWithCredentials( this.withCredentials );\\n    \\t\\tloader.load( url, function ( text ) {\\n\\n    \\t\\t\\tvar json = JSON.parse( text );\\n    \\t\\t\\tvar metadata = json.metadata;\\n\\n    \\t\\t\\tif ( metadata !== undefined ) {\\n\\n    \\t\\t\\t\\tvar type = metadata.type;\\n\\n    \\t\\t\\t\\tif ( type !== undefined ) {\\n\\n    \\t\\t\\t\\t\\tif ( type.toLowerCase() === 'object' ) {\\n\\n    \\t\\t\\t\\t\\t\\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.' );\\n    \\t\\t\\t\\t\\t\\treturn;\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\tif ( type.toLowerCase() === 'scene' ) {\\n\\n    \\t\\t\\t\\t\\t\\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.SceneLoader instead.' );\\n    \\t\\t\\t\\t\\t\\treturn;\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tvar object = scope.parse( json, texturePath );\\n    \\t\\t\\tonLoad( object.geometry, object.materials );\\n\\n    \\t\\t}, onProgress, onError );\\n\\n    \\t},\\n\\n    \\tsetTexturePath: function ( value ) {\\n\\n    \\t\\tthis.texturePath = value;\\n\\n    \\t},\\n\\n    \\tparse: function ( json, texturePath ) {\\n\\n    \\t\\tvar geometry = new Geometry(),\\n    \\t\\tscale = ( json.scale !== undefined ) ? 1.0 / json.scale : 1.0;\\n\\n    \\t\\tparseModel( scale );\\n\\n    \\t\\tparseSkin();\\n    \\t\\tparseMorphing( scale );\\n    \\t\\tparseAnimations();\\n\\n    \\t\\tgeometry.computeFaceNormals();\\n    \\t\\tgeometry.computeBoundingSphere();\\n\\n    \\t\\tfunction parseModel( scale ) {\\n\\n    \\t\\t\\tfunction isBitSet( value, position ) {\\n\\n    \\t\\t\\t\\treturn value & ( 1 << position );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tvar i, j, fi,\\n\\n    \\t\\t\\toffset, zLength,\\n\\n    \\t\\tcolorIndex, normalIndex, uvIndex, materialIndex,\\n\\n    \\t\\t\\ttype,\\n    \\t\\t\\tisQuad,\\n    \\t\\t\\thasMaterial,\\n    \\t\\t\\thasFaceVertexUv,\\n    \\t\\t\\thasFaceNormal, hasFaceVertexNormal,\\n    \\t\\t\\thasFaceColor, hasFaceVertexColor,\\n\\n    \\t\\tvertex, face, faceA, faceB, hex, normal,\\n\\n    \\t\\t\\tuvLayer, uv, u, v,\\n\\n    \\t\\t\\tfaces = json.faces,\\n    \\t\\t\\tvertices = json.vertices,\\n    \\t\\t\\tnormals = json.normals,\\n    \\t\\t\\tcolors = json.colors,\\n\\n    \\t\\t\\tnUvLayers = 0;\\n\\n    \\t\\t\\tif ( json.uvs !== undefined ) {\\n\\n    \\t\\t\\t\\t// disregard empty arrays\\n\\n    \\t\\t\\t\\tfor ( i = 0; i < json.uvs.length; i ++ ) {\\n\\n    \\t\\t\\t\\t\\tif ( json.uvs[ i ].length ) nUvLayers ++;\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\tfor ( i = 0; i < nUvLayers; i ++ ) {\\n\\n    \\t\\t\\t\\t\\tgeometry.faceVertexUvs[ i ] = [];\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\toffset = 0;\\n    \\t\\t\\tzLength = vertices.length;\\n\\n    \\t\\t\\twhile ( offset < zLength ) {\\n\\n    \\t\\t\\t\\tvertex = new Vector3();\\n\\n    \\t\\t\\t\\tvertex.x = vertices[ offset ++ ] * scale;\\n    \\t\\t\\t\\tvertex.y = vertices[ offset ++ ] * scale;\\n    \\t\\t\\t\\tvertex.z = vertices[ offset ++ ] * scale;\\n\\n    \\t\\t\\t\\tgeometry.vertices.push( vertex );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\toffset = 0;\\n    \\t\\t\\tzLength = faces.length;\\n\\n    \\t\\t\\twhile ( offset < zLength ) {\\n\\n    \\t\\t\\t\\ttype = faces[ offset ++ ];\\n\\n\\n    \\t\\t\\t\\tisQuad              = isBitSet( type, 0 );\\n    \\t\\t\\t\\thasMaterial         = isBitSet( type, 1 );\\n    \\t\\t\\t\\thasFaceVertexUv     = isBitSet( type, 3 );\\n    \\t\\t\\t\\thasFaceNormal       = isBitSet( type, 4 );\\n    \\t\\t\\t\\thasFaceVertexNormal = isBitSet( type, 5 );\\n    \\t\\t\\t\\thasFaceColor\\t     = isBitSet( type, 6 );\\n    \\t\\t\\t\\thasFaceVertexColor  = isBitSet( type, 7 );\\n\\n    \\t\\t\\t\\t// console.log(\\\"type\\\", type, \\\"bits\\\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\\n\\n    \\t\\t\\t\\tif ( isQuad ) {\\n\\n    \\t\\t\\t\\t\\tfaceA = new Face3();\\n    \\t\\t\\t\\t\\tfaceA.a = faces[ offset ];\\n    \\t\\t\\t\\t\\tfaceA.b = faces[ offset + 1 ];\\n    \\t\\t\\t\\t\\tfaceA.c = faces[ offset + 3 ];\\n\\n    \\t\\t\\t\\t\\tfaceB = new Face3();\\n    \\t\\t\\t\\t\\tfaceB.a = faces[ offset + 1 ];\\n    \\t\\t\\t\\t\\tfaceB.b = faces[ offset + 2 ];\\n    \\t\\t\\t\\t\\tfaceB.c = faces[ offset + 3 ];\\n\\n    \\t\\t\\t\\t\\toffset += 4;\\n\\n    \\t\\t\\t\\t\\tif ( hasMaterial ) {\\n\\n    \\t\\t\\t\\t\\t\\tmaterialIndex = faces[ offset ++ ];\\n    \\t\\t\\t\\t\\t\\tfaceA.materialIndex = materialIndex;\\n    \\t\\t\\t\\t\\t\\tfaceB.materialIndex = materialIndex;\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\t// to get face <=> uv index correspondence\\n\\n    \\t\\t\\t\\t\\tfi = geometry.faces.length;\\n\\n    \\t\\t\\t\\t\\tif ( hasFaceVertexUv ) {\\n\\n    \\t\\t\\t\\t\\t\\tfor ( i = 0; i < nUvLayers; i ++ ) {\\n\\n    \\t\\t\\t\\t\\t\\t\\tuvLayer = json.uvs[ i ];\\n\\n    \\t\\t\\t\\t\\t\\t\\tgeometry.faceVertexUvs[ i ][ fi ] = [];\\n    \\t\\t\\t\\t\\t\\t\\tgeometry.faceVertexUvs[ i ][ fi + 1 ] = [];\\n\\n    \\t\\t\\t\\t\\t\\t\\tfor ( j = 0; j < 4; j ++ ) {\\n\\n    \\t\\t\\t\\t\\t\\t\\t\\tuvIndex = faces[ offset ++ ];\\n\\n    \\t\\t\\t\\t\\t\\t\\t\\tu = uvLayer[ uvIndex * 2 ];\\n    \\t\\t\\t\\t\\t\\t\\t\\tv = uvLayer[ uvIndex * 2 + 1 ];\\n\\n    \\t\\t\\t\\t\\t\\t\\t\\tuv = new Vector2( u, v );\\n\\n    \\t\\t\\t\\t\\t\\t\\t\\tif ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\\n    \\t\\t\\t\\t\\t\\t\\t\\tif ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\\n\\n    \\t\\t\\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\tif ( hasFaceNormal ) {\\n\\n    \\t\\t\\t\\t\\t\\tnormalIndex = faces[ offset ++ ] * 3;\\n\\n    \\t\\t\\t\\t\\t\\tfaceA.normal.set(\\n    \\t\\t\\t\\t\\t\\t\\tnormals[ normalIndex ++ ],\\n    \\t\\t\\t\\t\\t\\t\\tnormals[ normalIndex ++ ],\\n    \\t\\t\\t\\t\\t\\t\\tnormals[ normalIndex ]\\n    \\t\\t\\t\\t\\t\\t);\\n\\n    \\t\\t\\t\\t\\t\\tfaceB.normal.copy( faceA.normal );\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\tif ( hasFaceVertexNormal ) {\\n\\n    \\t\\t\\t\\t\\t\\tfor ( i = 0; i < 4; i ++ ) {\\n\\n    \\t\\t\\t\\t\\t\\t\\tnormalIndex = faces[ offset ++ ] * 3;\\n\\n    \\t\\t\\t\\t\\t\\t\\tnormal = new Vector3(\\n    \\t\\t\\t\\t\\t\\t\\t\\tnormals[ normalIndex ++ ],\\n    \\t\\t\\t\\t\\t\\t\\t\\tnormals[ normalIndex ++ ],\\n    \\t\\t\\t\\t\\t\\t\\t\\tnormals[ normalIndex ]\\n    \\t\\t\\t\\t\\t\\t\\t);\\n\\n\\n    \\t\\t\\t\\t\\t\\t\\tif ( i !== 2 ) faceA.vertexNormals.push( normal );\\n    \\t\\t\\t\\t\\t\\t\\tif ( i !== 0 ) faceB.vertexNormals.push( normal );\\n\\n    \\t\\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\t}\\n\\n\\n    \\t\\t\\t\\t\\tif ( hasFaceColor ) {\\n\\n    \\t\\t\\t\\t\\t\\tcolorIndex = faces[ offset ++ ];\\n    \\t\\t\\t\\t\\t\\thex = colors[ colorIndex ];\\n\\n    \\t\\t\\t\\t\\t\\tfaceA.color.setHex( hex );\\n    \\t\\t\\t\\t\\t\\tfaceB.color.setHex( hex );\\n\\n    \\t\\t\\t\\t\\t}\\n\\n\\n    \\t\\t\\t\\t\\tif ( hasFaceVertexColor ) {\\n\\n    \\t\\t\\t\\t\\t\\tfor ( i = 0; i < 4; i ++ ) {\\n\\n    \\t\\t\\t\\t\\t\\t\\tcolorIndex = faces[ offset ++ ];\\n    \\t\\t\\t\\t\\t\\t\\thex = colors[ colorIndex ];\\n\\n    \\t\\t\\t\\t\\t\\t\\tif ( i !== 2 ) faceA.vertexColors.push( new Color( hex ) );\\n    \\t\\t\\t\\t\\t\\t\\tif ( i !== 0 ) faceB.vertexColors.push( new Color( hex ) );\\n\\n    \\t\\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\tgeometry.faces.push( faceA );\\n    \\t\\t\\t\\t\\tgeometry.faces.push( faceB );\\n\\n    \\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\tface = new Face3();\\n    \\t\\t\\t\\t\\tface.a = faces[ offset ++ ];\\n    \\t\\t\\t\\t\\tface.b = faces[ offset ++ ];\\n    \\t\\t\\t\\t\\tface.c = faces[ offset ++ ];\\n\\n    \\t\\t\\t\\t\\tif ( hasMaterial ) {\\n\\n    \\t\\t\\t\\t\\t\\tmaterialIndex = faces[ offset ++ ];\\n    \\t\\t\\t\\t\\t\\tface.materialIndex = materialIndex;\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\t// to get face <=> uv index correspondence\\n\\n    \\t\\t\\t\\t\\tfi = geometry.faces.length;\\n\\n    \\t\\t\\t\\t\\tif ( hasFaceVertexUv ) {\\n\\n    \\t\\t\\t\\t\\t\\tfor ( i = 0; i < nUvLayers; i ++ ) {\\n\\n    \\t\\t\\t\\t\\t\\t\\tuvLayer = json.uvs[ i ];\\n\\n    \\t\\t\\t\\t\\t\\t\\tgeometry.faceVertexUvs[ i ][ fi ] = [];\\n\\n    \\t\\t\\t\\t\\t\\t\\tfor ( j = 0; j < 3; j ++ ) {\\n\\n    \\t\\t\\t\\t\\t\\t\\t\\tuvIndex = faces[ offset ++ ];\\n\\n    \\t\\t\\t\\t\\t\\t\\t\\tu = uvLayer[ uvIndex * 2 ];\\n    \\t\\t\\t\\t\\t\\t\\t\\tv = uvLayer[ uvIndex * 2 + 1 ];\\n\\n    \\t\\t\\t\\t\\t\\t\\t\\tuv = new Vector2( u, v );\\n\\n    \\t\\t\\t\\t\\t\\t\\t\\tgeometry.faceVertexUvs[ i ][ fi ].push( uv );\\n\\n    \\t\\t\\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\tif ( hasFaceNormal ) {\\n\\n    \\t\\t\\t\\t\\t\\tnormalIndex = faces[ offset ++ ] * 3;\\n\\n    \\t\\t\\t\\t\\t\\tface.normal.set(\\n    \\t\\t\\t\\t\\t\\t\\tnormals[ normalIndex ++ ],\\n    \\t\\t\\t\\t\\t\\t\\tnormals[ normalIndex ++ ],\\n    \\t\\t\\t\\t\\t\\t\\tnormals[ normalIndex ]\\n    \\t\\t\\t\\t\\t\\t);\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\tif ( hasFaceVertexNormal ) {\\n\\n    \\t\\t\\t\\t\\t\\tfor ( i = 0; i < 3; i ++ ) {\\n\\n    \\t\\t\\t\\t\\t\\t\\tnormalIndex = faces[ offset ++ ] * 3;\\n\\n    \\t\\t\\t\\t\\t\\t\\tnormal = new Vector3(\\n    \\t\\t\\t\\t\\t\\t\\t\\tnormals[ normalIndex ++ ],\\n    \\t\\t\\t\\t\\t\\t\\t\\tnormals[ normalIndex ++ ],\\n    \\t\\t\\t\\t\\t\\t\\t\\tnormals[ normalIndex ]\\n    \\t\\t\\t\\t\\t\\t\\t);\\n\\n    \\t\\t\\t\\t\\t\\t\\tface.vertexNormals.push( normal );\\n\\n    \\t\\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\t}\\n\\n\\n    \\t\\t\\t\\t\\tif ( hasFaceColor ) {\\n\\n    \\t\\t\\t\\t\\t\\tcolorIndex = faces[ offset ++ ];\\n    \\t\\t\\t\\t\\t\\tface.color.setHex( colors[ colorIndex ] );\\n\\n    \\t\\t\\t\\t\\t}\\n\\n\\n    \\t\\t\\t\\t\\tif ( hasFaceVertexColor ) {\\n\\n    \\t\\t\\t\\t\\t\\tfor ( i = 0; i < 3; i ++ ) {\\n\\n    \\t\\t\\t\\t\\t\\t\\tcolorIndex = faces[ offset ++ ];\\n    \\t\\t\\t\\t\\t\\t\\tface.vertexColors.push( new Color( colors[ colorIndex ] ) );\\n\\n    \\t\\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\tgeometry.faces.push( face );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\tfunction parseSkin() {\\n\\n    \\t\\t\\tvar influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;\\n\\n    \\t\\t\\tif ( json.skinWeights ) {\\n\\n    \\t\\t\\t\\tfor ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {\\n\\n    \\t\\t\\t\\t\\tvar x =                               json.skinWeights[ i ];\\n    \\t\\t\\t\\t\\tvar y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;\\n    \\t\\t\\t\\t\\tvar z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;\\n    \\t\\t\\t\\t\\tvar w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;\\n\\n    \\t\\t\\t\\t\\tgeometry.skinWeights.push( new Vector4( x, y, z, w ) );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tif ( json.skinIndices ) {\\n\\n    \\t\\t\\t\\tfor ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {\\n\\n    \\t\\t\\t\\t\\tvar a =                               json.skinIndices[ i ];\\n    \\t\\t\\t\\t\\tvar b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;\\n    \\t\\t\\t\\t\\tvar c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;\\n    \\t\\t\\t\\t\\tvar d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;\\n\\n    \\t\\t\\t\\t\\tgeometry.skinIndices.push( new Vector4( a, b, c, d ) );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tgeometry.bones = json.bones;\\n\\n    \\t\\t\\tif ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {\\n\\n    \\t\\t\\t\\tconsole.warn( 'When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\\n    \\t\\t\\t\\t\\tgeometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\tfunction parseMorphing( scale ) {\\n\\n    \\t\\t\\tif ( json.morphTargets !== undefined ) {\\n\\n    \\t\\t\\t\\tfor ( var i = 0, l = json.morphTargets.length; i < l; i ++ ) {\\n\\n    \\t\\t\\t\\t\\tgeometry.morphTargets[ i ] = {};\\n    \\t\\t\\t\\t\\tgeometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\\n    \\t\\t\\t\\t\\tgeometry.morphTargets[ i ].vertices = [];\\n\\n    \\t\\t\\t\\t\\tvar dstVertices = geometry.morphTargets[ i ].vertices;\\n    \\t\\t\\t\\t\\tvar srcVertices = json.morphTargets[ i ].vertices;\\n\\n    \\t\\t\\t\\t\\tfor ( var v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\\n\\n    \\t\\t\\t\\t\\t\\tvar vertex = new Vector3();\\n    \\t\\t\\t\\t\\t\\tvertex.x = srcVertices[ v ] * scale;\\n    \\t\\t\\t\\t\\t\\tvertex.y = srcVertices[ v + 1 ] * scale;\\n    \\t\\t\\t\\t\\t\\tvertex.z = srcVertices[ v + 2 ] * scale;\\n\\n    \\t\\t\\t\\t\\t\\tdstVertices.push( vertex );\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tif ( json.morphColors !== undefined && json.morphColors.length > 0 ) {\\n\\n    \\t\\t\\t\\tconsole.warn( 'THREE.JSONLoader: \\\"morphColors\\\" no longer supported. Using them as face colors.' );\\n\\n    \\t\\t\\t\\tvar faces = geometry.faces;\\n    \\t\\t\\t\\tvar morphColors = json.morphColors[ 0 ].colors;\\n\\n    \\t\\t\\t\\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\\n\\n    \\t\\t\\t\\t\\tfaces[ i ].color.fromArray( morphColors, i * 3 );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\tfunction parseAnimations() {\\n\\n    \\t\\t\\tvar outputAnimations = [];\\n\\n    \\t\\t\\t// parse old style Bone/Hierarchy animations\\n    \\t\\t\\tvar animations = [];\\n\\n    \\t\\t\\tif ( json.animation !== undefined ) {\\n\\n    \\t\\t\\t\\tanimations.push( json.animation );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tif ( json.animations !== undefined ) {\\n\\n    \\t\\t\\t\\tif ( json.animations.length ) {\\n\\n    \\t\\t\\t\\t\\tanimations = animations.concat( json.animations );\\n\\n    \\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\tanimations.push( json.animations );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tfor ( var i = 0; i < animations.length; i ++ ) {\\n\\n    \\t\\t\\t\\tvar clip = AnimationClip.parseAnimation( animations[ i ], geometry.bones );\\n    \\t\\t\\t\\tif ( clip ) outputAnimations.push( clip );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\t// parse implicit morph animations\\n    \\t\\t\\tif ( geometry.morphTargets ) {\\n\\n    \\t\\t\\t\\t// TODO: Figure out what an appropraite FPS is for morph target animations -- defaulting to 10, but really it is completely arbitrary.\\n    \\t\\t\\t\\tvar morphAnimationClips = AnimationClip.CreateClipsFromMorphTargetSequences( geometry.morphTargets, 10 );\\n    \\t\\t\\t\\toutputAnimations = outputAnimations.concat( morphAnimationClips );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tif ( outputAnimations.length > 0 ) geometry.animations = outputAnimations;\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( json.materials === undefined || json.materials.length === 0 ) {\\n\\n    \\t\\t\\treturn { geometry: geometry };\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\tvar materials = Loader.prototype.initMaterials( json.materials, texturePath, this.crossOrigin );\\n\\n    \\t\\t\\treturn { geometry: geometry, materials: materials };\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    } );\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     */\\n\\n    function ObjectLoader ( manager ) {\\n\\n    \\tthis.manager = ( manager !== undefined ) ? manager : exports.DefaultLoadingManager;\\n    \\tthis.texturePath = '';\\n\\n    }\\n\\n    Object.assign( ObjectLoader.prototype, {\\n\\n    \\tload: function ( url, onLoad, onProgress, onError ) {\\n\\n    \\t\\tif ( this.texturePath === '' ) {\\n\\n    \\t\\t\\tthis.texturePath = url.substring( 0, url.lastIndexOf( '/' ) + 1 );\\n\\n    \\t\\t}\\n\\n    \\t\\tvar scope = this;\\n\\n    \\t\\tvar loader = new XHRLoader( scope.manager );\\n    \\t\\tloader.load( url, function ( text ) {\\n\\n    \\t\\t\\tscope.parse( JSON.parse( text ), onLoad );\\n\\n    \\t\\t}, onProgress, onError );\\n\\n    \\t},\\n\\n    \\tsetTexturePath: function ( value ) {\\n\\n    \\t\\tthis.texturePath = value;\\n\\n    \\t},\\n\\n    \\tsetCrossOrigin: function ( value ) {\\n\\n    \\t\\tthis.crossOrigin = value;\\n\\n    \\t},\\n\\n    \\tparse: function ( json, onLoad ) {\\n\\n    \\t\\tvar geometries = this.parseGeometries( json.geometries );\\n\\n    \\t\\tvar images = this.parseImages( json.images, function () {\\n\\n    \\t\\t\\tif ( onLoad !== undefined ) onLoad( object );\\n\\n    \\t\\t} );\\n\\n    \\t\\tvar textures  = this.parseTextures( json.textures, images );\\n    \\t\\tvar materials = this.parseMaterials( json.materials, textures );\\n\\n    \\t\\tvar object = this.parseObject( json.object, geometries, materials );\\n\\n    \\t\\tif ( json.animations ) {\\n\\n    \\t\\t\\tobject.animations = this.parseAnimations( json.animations );\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( json.images === undefined || json.images.length === 0 ) {\\n\\n    \\t\\t\\tif ( onLoad !== undefined ) onLoad( object );\\n\\n    \\t\\t}\\n\\n    \\t\\treturn object;\\n\\n    \\t},\\n\\n    \\tparseGeometries: function ( json ) {\\n\\n    \\t\\tvar geometries = {};\\n\\n    \\t\\tif ( json !== undefined ) {\\n\\n    \\t\\t\\tvar geometryLoader = new JSONLoader();\\n    \\t\\t\\tvar bufferGeometryLoader = new BufferGeometryLoader();\\n\\n    \\t\\t\\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\\n\\n    \\t\\t\\t\\tvar geometry;\\n    \\t\\t\\t\\tvar data = json[ i ];\\n\\n    \\t\\t\\t\\tswitch ( data.type ) {\\n\\n    \\t\\t\\t\\t\\tcase 'PlaneGeometry':\\n    \\t\\t\\t\\t\\tcase 'PlaneBufferGeometry':\\n\\n    \\t\\t\\t\\t\\t\\tgeometry = new Geometries[ data.type ](\\n    \\t\\t\\t\\t\\t\\t\\tdata.width,\\n    \\t\\t\\t\\t\\t\\t\\tdata.height,\\n    \\t\\t\\t\\t\\t\\t\\tdata.widthSegments,\\n    \\t\\t\\t\\t\\t\\t\\tdata.heightSegments\\n    \\t\\t\\t\\t\\t\\t);\\n\\n    \\t\\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\t\\tcase 'BoxGeometry':\\n    \\t\\t\\t\\t\\tcase 'BoxBufferGeometry':\\n    \\t\\t\\t\\t\\tcase 'CubeGeometry': // backwards compatible\\n\\n    \\t\\t\\t\\t\\t\\tgeometry = new Geometries[ data.type ](\\n    \\t\\t\\t\\t\\t\\t\\tdata.width,\\n    \\t\\t\\t\\t\\t\\t\\tdata.height,\\n    \\t\\t\\t\\t\\t\\t\\tdata.depth,\\n    \\t\\t\\t\\t\\t\\t\\tdata.widthSegments,\\n    \\t\\t\\t\\t\\t\\t\\tdata.heightSegments,\\n    \\t\\t\\t\\t\\t\\t\\tdata.depthSegments\\n    \\t\\t\\t\\t\\t\\t);\\n\\n    \\t\\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\t\\tcase 'CircleGeometry':\\n    \\t\\t\\t\\t\\tcase 'CircleBufferGeometry':\\n\\n    \\t\\t\\t\\t\\t\\tgeometry = new Geometries[ data.type ](\\n    \\t\\t\\t\\t\\t\\t\\tdata.radius,\\n    \\t\\t\\t\\t\\t\\t\\tdata.segments,\\n    \\t\\t\\t\\t\\t\\t\\tdata.thetaStart,\\n    \\t\\t\\t\\t\\t\\t\\tdata.thetaLength\\n    \\t\\t\\t\\t\\t\\t);\\n\\n    \\t\\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\t\\tcase 'CylinderGeometry':\\n    \\t\\t\\t\\t\\tcase 'CylinderBufferGeometry':\\n\\n    \\t\\t\\t\\t\\t\\tgeometry = new Geometries[ data.type ](\\n    \\t\\t\\t\\t\\t\\t\\tdata.radiusTop,\\n    \\t\\t\\t\\t\\t\\t\\tdata.radiusBottom,\\n    \\t\\t\\t\\t\\t\\t\\tdata.height,\\n    \\t\\t\\t\\t\\t\\t\\tdata.radialSegments,\\n    \\t\\t\\t\\t\\t\\t\\tdata.heightSegments,\\n    \\t\\t\\t\\t\\t\\t\\tdata.openEnded,\\n    \\t\\t\\t\\t\\t\\t\\tdata.thetaStart,\\n    \\t\\t\\t\\t\\t\\t\\tdata.thetaLength\\n    \\t\\t\\t\\t\\t\\t);\\n\\n    \\t\\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\t\\tcase 'ConeGeometry':\\n    \\t\\t\\t\\t\\tcase 'ConeBufferGeometry':\\n\\n    \\t\\t\\t\\t\\t\\tgeometry = new Geometries[ data.type ](\\n    \\t\\t\\t\\t\\t\\t\\tdata.radius,\\n    \\t\\t\\t\\t\\t\\t\\tdata.height,\\n    \\t\\t\\t\\t\\t\\t\\tdata.radialSegments,\\n    \\t\\t\\t\\t\\t\\t\\tdata.heightSegments,\\n    \\t\\t\\t\\t\\t\\t\\tdata.openEnded,\\n    \\t\\t\\t\\t\\t\\t\\tdata.thetaStart,\\n    \\t\\t\\t\\t\\t\\t\\tdata.thetaLength\\n    \\t\\t\\t\\t\\t\\t);\\n\\n    \\t\\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\t\\tcase 'SphereGeometry':\\n    \\t\\t\\t\\t\\tcase 'SphereBufferGeometry':\\n\\n    \\t\\t\\t\\t\\t\\tgeometry = new Geometries[ data.type ](\\n    \\t\\t\\t\\t\\t\\t\\tdata.radius,\\n    \\t\\t\\t\\t\\t\\t\\tdata.widthSegments,\\n    \\t\\t\\t\\t\\t\\t\\tdata.heightSegments,\\n    \\t\\t\\t\\t\\t\\t\\tdata.phiStart,\\n    \\t\\t\\t\\t\\t\\t\\tdata.phiLength,\\n    \\t\\t\\t\\t\\t\\t\\tdata.thetaStart,\\n    \\t\\t\\t\\t\\t\\t\\tdata.thetaLength\\n    \\t\\t\\t\\t\\t\\t);\\n\\n    \\t\\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\t\\tcase 'DodecahedronGeometry':\\n    \\t\\t\\t\\t\\tcase 'IcosahedronGeometry':\\n    \\t\\t\\t\\t\\tcase 'OctahedronGeometry':\\n    \\t\\t\\t\\t\\tcase 'TetrahedronGeometry':\\n\\n    \\t\\t\\t\\t\\t\\tgeometry = new Geometries[ data.type ](\\n    \\t\\t\\t\\t\\t\\t\\tdata.radius,\\n    \\t\\t\\t\\t\\t\\t\\tdata.detail\\n    \\t\\t\\t\\t\\t\\t);\\n\\n    \\t\\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\t\\tcase 'RingGeometry':\\n    \\t\\t\\t\\t\\tcase 'RingBufferGeometry':\\n\\n    \\t\\t\\t\\t\\t\\tgeometry = new Geometries[ data.type ](\\n    \\t\\t\\t\\t\\t\\t\\tdata.innerRadius,\\n    \\t\\t\\t\\t\\t\\t\\tdata.outerRadius,\\n    \\t\\t\\t\\t\\t\\t\\tdata.thetaSegments,\\n    \\t\\t\\t\\t\\t\\t\\tdata.phiSegments,\\n    \\t\\t\\t\\t\\t\\t\\tdata.thetaStart,\\n    \\t\\t\\t\\t\\t\\t\\tdata.thetaLength\\n    \\t\\t\\t\\t\\t\\t);\\n\\n    \\t\\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\t\\tcase 'TorusGeometry':\\n    \\t\\t\\t\\t\\tcase 'TorusBufferGeometry':\\n\\n    \\t\\t\\t\\t\\t\\tgeometry = new Geometries[ data.type ](\\n    \\t\\t\\t\\t\\t\\t\\tdata.radius,\\n    \\t\\t\\t\\t\\t\\t\\tdata.tube,\\n    \\t\\t\\t\\t\\t\\t\\tdata.radialSegments,\\n    \\t\\t\\t\\t\\t\\t\\tdata.tubularSegments,\\n    \\t\\t\\t\\t\\t\\t\\tdata.arc\\n    \\t\\t\\t\\t\\t\\t);\\n\\n    \\t\\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\t\\tcase 'TorusKnotGeometry':\\n    \\t\\t\\t\\t\\tcase 'TorusKnotBufferGeometry':\\n\\n    \\t\\t\\t\\t\\t\\tgeometry = new Geometries[ data.type ](\\n    \\t\\t\\t\\t\\t\\t\\tdata.radius,\\n    \\t\\t\\t\\t\\t\\t\\tdata.tube,\\n    \\t\\t\\t\\t\\t\\t\\tdata.tubularSegments,\\n    \\t\\t\\t\\t\\t\\t\\tdata.radialSegments,\\n    \\t\\t\\t\\t\\t\\t\\tdata.p,\\n    \\t\\t\\t\\t\\t\\t\\tdata.q\\n    \\t\\t\\t\\t\\t\\t);\\n\\n    \\t\\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\t\\tcase 'LatheGeometry':\\n    \\t\\t\\t\\t\\tcase 'LatheBufferGeometry':\\n\\n    \\t\\t\\t\\t\\t\\tgeometry = new Geometries[ data.type ](\\n    \\t\\t\\t\\t\\t\\t\\tdata.points,\\n    \\t\\t\\t\\t\\t\\t\\tdata.segments,\\n    \\t\\t\\t\\t\\t\\t\\tdata.phiStart,\\n    \\t\\t\\t\\t\\t\\t\\tdata.phiLength\\n    \\t\\t\\t\\t\\t\\t);\\n\\n    \\t\\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\t\\tcase 'BufferGeometry':\\n\\n    \\t\\t\\t\\t\\t\\tgeometry = bufferGeometryLoader.parse( data );\\n\\n    \\t\\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\t\\tcase 'Geometry':\\n\\n    \\t\\t\\t\\t\\t\\tgeometry = geometryLoader.parse( data.data, this.texturePath ).geometry;\\n\\n    \\t\\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\t\\tdefault:\\n\\n    \\t\\t\\t\\t\\t\\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \\\"' + data.type + '\\\"' );\\n\\n    \\t\\t\\t\\t\\t\\tcontinue;\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\tgeometry.uuid = data.uuid;\\n\\n    \\t\\t\\t\\tif ( data.name !== undefined ) geometry.name = data.name;\\n\\n    \\t\\t\\t\\tgeometries[ data.uuid ] = geometry;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\treturn geometries;\\n\\n    \\t},\\n\\n    \\tparseMaterials: function ( json, textures ) {\\n\\n    \\t\\tvar materials = {};\\n\\n    \\t\\tif ( json !== undefined ) {\\n\\n    \\t\\t\\tvar loader = new MaterialLoader();\\n    \\t\\t\\tloader.setTextures( textures );\\n\\n    \\t\\t\\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\\n\\n    \\t\\t\\t\\tvar material = loader.parse( json[ i ] );\\n    \\t\\t\\t\\tmaterials[ material.uuid ] = material;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\treturn materials;\\n\\n    \\t},\\n\\n    \\tparseAnimations: function ( json ) {\\n\\n    \\t\\tvar animations = [];\\n\\n    \\t\\tfor ( var i = 0; i < json.length; i ++ ) {\\n\\n    \\t\\t\\tvar clip = AnimationClip.parse( json[ i ] );\\n\\n    \\t\\t\\tanimations.push( clip );\\n\\n    \\t\\t}\\n\\n    \\t\\treturn animations;\\n\\n    \\t},\\n\\n    \\tparseImages: function ( json, onLoad ) {\\n\\n    \\t\\tvar scope = this;\\n    \\t\\tvar images = {};\\n\\n    \\t\\tfunction loadImage( url ) {\\n\\n    \\t\\t\\tscope.manager.itemStart( url );\\n\\n    \\t\\t\\treturn loader.load( url, function () {\\n\\n    \\t\\t\\t\\tscope.manager.itemEnd( url );\\n\\n    \\t\\t\\t}, undefined, function () {\\n\\n    \\t\\t\\t\\tscope.manager.itemError( url );\\n\\n    \\t\\t\\t} );\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( json !== undefined && json.length > 0 ) {\\n\\n    \\t\\t\\tvar manager = new LoadingManager( onLoad );\\n\\n    \\t\\t\\tvar loader = new ImageLoader( manager );\\n    \\t\\t\\tloader.setCrossOrigin( this.crossOrigin );\\n\\n    \\t\\t\\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\\n\\n    \\t\\t\\t\\tvar image = json[ i ];\\n    \\t\\t\\t\\tvar path = /^(\\\\/\\\\/)|([a-z]+:(\\\\/\\\\/)?)/i.test( image.url ) ? image.url : scope.texturePath + image.url;\\n\\n    \\t\\t\\t\\timages[ image.uuid ] = loadImage( path );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\treturn images;\\n\\n    \\t},\\n\\n    \\tparseTextures: function ( json, images ) {\\n\\n    \\t\\tfunction parseConstant( value, type ) {\\n\\n    \\t\\t\\tif ( typeof( value ) === 'number' ) return value;\\n\\n    \\t\\t\\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\\n\\n    \\t\\t\\treturn type[ value ];\\n\\n    \\t\\t}\\n\\n    \\t\\tvar textures = {};\\n\\n    \\t\\tif ( json !== undefined ) {\\n\\n    \\t\\t\\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\\n\\n    \\t\\t\\t\\tvar data = json[ i ];\\n\\n    \\t\\t\\t\\tif ( data.image === undefined ) {\\n\\n    \\t\\t\\t\\t\\tconsole.warn( 'THREE.ObjectLoader: No \\\"image\\\" specified for', data.uuid );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\tif ( images[ data.image ] === undefined ) {\\n\\n    \\t\\t\\t\\t\\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\tvar texture = new Texture( images[ data.image ] );\\n    \\t\\t\\t\\ttexture.needsUpdate = true;\\n\\n    \\t\\t\\t\\ttexture.uuid = data.uuid;\\n\\n    \\t\\t\\t\\tif ( data.name !== undefined ) texture.name = data.name;\\n\\n    \\t\\t\\t\\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TextureMapping );\\n\\n    \\t\\t\\t\\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\\n    \\t\\t\\t\\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\\n    \\t\\t\\t\\tif ( data.wrap !== undefined ) {\\n\\n    \\t\\t\\t\\t\\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TextureWrapping );\\n    \\t\\t\\t\\t\\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TextureWrapping );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TextureFilter );\\n    \\t\\t\\t\\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TextureFilter );\\n    \\t\\t\\t\\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\\n\\n    \\t\\t\\t\\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\\n\\n    \\t\\t\\t\\ttextures[ data.uuid ] = texture;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\treturn textures;\\n\\n    \\t},\\n\\n    \\tparseObject: function () {\\n\\n    \\t\\tvar matrix = new Matrix4();\\n\\n    \\t\\treturn function parseObject( data, geometries, materials ) {\\n\\n    \\t\\t\\tvar object;\\n\\n    \\t\\t\\tfunction getGeometry( name ) {\\n\\n    \\t\\t\\t\\tif ( geometries[ name ] === undefined ) {\\n\\n    \\t\\t\\t\\t\\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\treturn geometries[ name ];\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tfunction getMaterial( name ) {\\n\\n    \\t\\t\\t\\tif ( name === undefined ) return undefined;\\n\\n    \\t\\t\\t\\tif ( materials[ name ] === undefined ) {\\n\\n    \\t\\t\\t\\t\\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\treturn materials[ name ];\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tswitch ( data.type ) {\\n\\n    \\t\\t\\t\\tcase 'Scene':\\n\\n    \\t\\t\\t\\t\\tobject = new Scene();\\n\\n    \\t\\t\\t\\t\\tif ( data.background !== undefined ) {\\n\\n    \\t\\t\\t\\t\\t\\tif ( Number.isInteger( data.background ) ) {\\n\\n    \\t\\t\\t\\t\\t\\t\\tobject.background = new Color( data.background );\\n\\n    \\t\\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\tif ( data.fog !== undefined ) {\\n\\n    \\t\\t\\t\\t\\t\\tif ( data.fog.type === 'Fog' ) {\\n\\n    \\t\\t\\t\\t\\t\\t\\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\\n\\n    \\t\\t\\t\\t\\t\\t} else if ( data.fog.type === 'FogExp2' ) {\\n\\n    \\t\\t\\t\\t\\t\\t\\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\\n\\n    \\t\\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\tcase 'PerspectiveCamera':\\n\\n    \\t\\t\\t\\t\\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\\n\\n    \\t\\t\\t\\t\\tif ( data.focus !== undefined ) object.focus = data.focus;\\n    \\t\\t\\t\\t\\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\\n    \\t\\t\\t\\t\\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\\n    \\t\\t\\t\\t\\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\\n    \\t\\t\\t\\t\\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\\n\\n    \\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\tcase 'OrthographicCamera':\\n\\n    \\t\\t\\t\\t\\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\\n\\n    \\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\tcase 'AmbientLight':\\n\\n    \\t\\t\\t\\t\\tobject = new AmbientLight( data.color, data.intensity );\\n\\n    \\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\tcase 'DirectionalLight':\\n\\n    \\t\\t\\t\\t\\tobject = new DirectionalLight( data.color, data.intensity );\\n\\n    \\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\tcase 'PointLight':\\n\\n    \\t\\t\\t\\t\\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\\n\\n    \\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\tcase 'SpotLight':\\n\\n    \\t\\t\\t\\t\\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\\n\\n    \\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\tcase 'HemisphereLight':\\n\\n    \\t\\t\\t\\t\\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\\n\\n    \\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\tcase 'Mesh':\\n\\n    \\t\\t\\t\\t\\tvar geometry = getGeometry( data.geometry );\\n    \\t\\t\\t\\t\\tvar material = getMaterial( data.material );\\n\\n    \\t\\t\\t\\t\\tif ( geometry.bones && geometry.bones.length > 0 ) {\\n\\n    \\t\\t\\t\\t\\t\\tobject = new SkinnedMesh( geometry, material );\\n\\n    \\t\\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\t\\tobject = new Mesh( geometry, material );\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\tcase 'LOD':\\n\\n    \\t\\t\\t\\t\\tobject = new LOD();\\n\\n    \\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\tcase 'Line':\\n\\n    \\t\\t\\t\\t\\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\\n\\n    \\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\tcase 'LineSegments':\\n\\n    \\t\\t\\t\\t\\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\\n\\n    \\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\tcase 'PointCloud':\\n    \\t\\t\\t\\tcase 'Points':\\n\\n    \\t\\t\\t\\t\\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\\n\\n    \\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\tcase 'Sprite':\\n\\n    \\t\\t\\t\\t\\tobject = new Sprite( getMaterial( data.material ) );\\n\\n    \\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\tcase 'Group':\\n\\n    \\t\\t\\t\\t\\tobject = new Group();\\n\\n    \\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\tdefault:\\n\\n    \\t\\t\\t\\t\\tobject = new Object3D();\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tobject.uuid = data.uuid;\\n\\n    \\t\\t\\tif ( data.name !== undefined ) object.name = data.name;\\n    \\t\\t\\tif ( data.matrix !== undefined ) {\\n\\n    \\t\\t\\t\\tmatrix.fromArray( data.matrix );\\n    \\t\\t\\t\\tmatrix.decompose( object.position, object.quaternion, object.scale );\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\tif ( data.position !== undefined ) object.position.fromArray( data.position );\\n    \\t\\t\\t\\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\\n    \\t\\t\\t\\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\\n    \\t\\t\\t\\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\\n    \\t\\t\\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\\n\\n    \\t\\t\\tif ( data.shadow ) {\\n\\n    \\t\\t\\t\\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\\n    \\t\\t\\t\\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\\n    \\t\\t\\t\\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\\n    \\t\\t\\t\\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tif ( data.visible !== undefined ) object.visible = data.visible;\\n    \\t\\t\\tif ( data.userData !== undefined ) object.userData = data.userData;\\n\\n    \\t\\t\\tif ( data.children !== undefined ) {\\n\\n    \\t\\t\\t\\tfor ( var child in data.children ) {\\n\\n    \\t\\t\\t\\t\\tobject.add( this.parseObject( data.children[ child ], geometries, materials ) );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tif ( data.type === 'LOD' ) {\\n\\n    \\t\\t\\t\\tvar levels = data.levels;\\n\\n    \\t\\t\\t\\tfor ( var l = 0; l < levels.length; l ++ ) {\\n\\n    \\t\\t\\t\\t\\tvar level = levels[ l ];\\n    \\t\\t\\t\\t\\tvar child = object.getObjectByProperty( 'uuid', level.object );\\n\\n    \\t\\t\\t\\t\\tif ( child !== undefined ) {\\n\\n    \\t\\t\\t\\t\\t\\tobject.addLevel( child, level.distance );\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\treturn object;\\n\\n    \\t\\t};\\n\\n    \\t}()\\n\\n    } );\\n\\n    /**\\n     * @author zz85 / http://www.lab4games.net/zz85/blog\\n     * Extensible curve object\\n     *\\n     * Some common of Curve methods\\n     * .getPoint(t), getTangent(t)\\n     * .getPointAt(u), getTangentAt(u)\\n     * .getPoints(), .getSpacedPoints()\\n     * .getLength()\\n     * .updateArcLengths()\\n     *\\n     * This following classes subclasses THREE.Curve:\\n     *\\n     * -- 2d classes --\\n     * THREE.LineCurve\\n     * THREE.QuadraticBezierCurve\\n     * THREE.CubicBezierCurve\\n     * THREE.SplineCurve\\n     * THREE.ArcCurve\\n     * THREE.EllipseCurve\\n     *\\n     * -- 3d classes --\\n     * THREE.LineCurve3\\n     * THREE.QuadraticBezierCurve3\\n     * THREE.CubicBezierCurve3\\n     * THREE.SplineCurve3\\n     *\\n     * A series of curves can be represented as a THREE.CurvePath\\n     *\\n     **/\\n\\n    /**************************************************************\\n     *\\tAbstract Curve base class\\n     **************************************************************/\\n\\n    function Curve() {}\\n\\n    Curve.prototype = {\\n\\n    \\tconstructor: Curve,\\n\\n    \\t// Virtual base class method to overwrite and implement in subclasses\\n    \\t//\\t- t [0 .. 1]\\n\\n    \\tgetPoint: function ( t ) {\\n\\n    \\t\\tconsole.warn( \\\"THREE.Curve: Warning, getPoint() not implemented!\\\" );\\n    \\t\\treturn null;\\n\\n    \\t},\\n\\n    \\t// Get point at relative position in curve according to arc length\\n    \\t// - u [0 .. 1]\\n\\n    \\tgetPointAt: function ( u ) {\\n\\n    \\t\\tvar t = this.getUtoTmapping( u );\\n    \\t\\treturn this.getPoint( t );\\n\\n    \\t},\\n\\n    \\t// Get sequence of points using getPoint( t )\\n\\n    \\tgetPoints: function ( divisions ) {\\n\\n    \\t\\tif ( ! divisions ) divisions = 5;\\n\\n    \\t\\tvar points = [];\\n\\n    \\t\\tfor ( var d = 0; d <= divisions; d ++ ) {\\n\\n    \\t\\t\\tpoints.push( this.getPoint( d / divisions ) );\\n\\n    \\t\\t}\\n\\n    \\t\\treturn points;\\n\\n    \\t},\\n\\n    \\t// Get sequence of points using getPointAt( u )\\n\\n    \\tgetSpacedPoints: function ( divisions ) {\\n\\n    \\t\\tif ( ! divisions ) divisions = 5;\\n\\n    \\t\\tvar points = [];\\n\\n    \\t\\tfor ( var d = 0; d <= divisions; d ++ ) {\\n\\n    \\t\\t\\tpoints.push( this.getPointAt( d / divisions ) );\\n\\n    \\t\\t}\\n\\n    \\t\\treturn points;\\n\\n    \\t},\\n\\n    \\t// Get total curve arc length\\n\\n    \\tgetLength: function () {\\n\\n    \\t\\tvar lengths = this.getLengths();\\n    \\t\\treturn lengths[ lengths.length - 1 ];\\n\\n    \\t},\\n\\n    \\t// Get list of cumulative segment lengths\\n\\n    \\tgetLengths: function ( divisions ) {\\n\\n    \\t\\tif ( ! divisions ) divisions = ( this.__arcLengthDivisions ) ? ( this.__arcLengthDivisions ) : 200;\\n\\n    \\t\\tif ( this.cacheArcLengths\\n    \\t\\t\\t&& ( this.cacheArcLengths.length === divisions + 1 )\\n    \\t\\t\\t&& ! this.needsUpdate ) {\\n\\n    \\t\\t\\t//console.log( \\\"cached\\\", this.cacheArcLengths );\\n    \\t\\t\\treturn this.cacheArcLengths;\\n\\n    \\t\\t}\\n\\n    \\t\\tthis.needsUpdate = false;\\n\\n    \\t\\tvar cache = [];\\n    \\t\\tvar current, last = this.getPoint( 0 );\\n    \\t\\tvar p, sum = 0;\\n\\n    \\t\\tcache.push( 0 );\\n\\n    \\t\\tfor ( p = 1; p <= divisions; p ++ ) {\\n\\n    \\t\\t\\tcurrent = this.getPoint ( p / divisions );\\n    \\t\\t\\tsum += current.distanceTo( last );\\n    \\t\\t\\tcache.push( sum );\\n    \\t\\t\\tlast = current;\\n\\n    \\t\\t}\\n\\n    \\t\\tthis.cacheArcLengths = cache;\\n\\n    \\t\\treturn cache; // { sums: cache, sum:sum }; Sum is in the last element.\\n\\n    \\t},\\n\\n    \\tupdateArcLengths: function() {\\n\\n    \\t\\tthis.needsUpdate = true;\\n    \\t\\tthis.getLengths();\\n\\n    \\t},\\n\\n    \\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\\n\\n    \\tgetUtoTmapping: function ( u, distance ) {\\n\\n    \\t\\tvar arcLengths = this.getLengths();\\n\\n    \\t\\tvar i = 0, il = arcLengths.length;\\n\\n    \\t\\tvar targetArcLength; // The targeted u distance value to get\\n\\n    \\t\\tif ( distance ) {\\n\\n    \\t\\t\\ttargetArcLength = distance;\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\ttargetArcLength = u * arcLengths[ il - 1 ];\\n\\n    \\t\\t}\\n\\n    \\t\\t//var time = Date.now();\\n\\n    \\t\\t// binary search for the index with largest value smaller than target u distance\\n\\n    \\t\\tvar low = 0, high = il - 1, comparison;\\n\\n    \\t\\twhile ( low <= high ) {\\n\\n    \\t\\t\\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\\n\\n    \\t\\t\\tcomparison = arcLengths[ i ] - targetArcLength;\\n\\n    \\t\\t\\tif ( comparison < 0 ) {\\n\\n    \\t\\t\\t\\tlow = i + 1;\\n\\n    \\t\\t\\t} else if ( comparison > 0 ) {\\n\\n    \\t\\t\\t\\thigh = i - 1;\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\thigh = i;\\n    \\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\t// DONE\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\ti = high;\\n\\n    \\t\\t//console.log('b' , i, low, high, Date.now()- time);\\n\\n    \\t\\tif ( arcLengths[ i ] === targetArcLength ) {\\n\\n    \\t\\t\\tvar t = i / ( il - 1 );\\n    \\t\\t\\treturn t;\\n\\n    \\t\\t}\\n\\n    \\t\\t// we could get finer grain at lengths, or use simple interpolation between two points\\n\\n    \\t\\tvar lengthBefore = arcLengths[ i ];\\n    \\t\\tvar lengthAfter = arcLengths[ i + 1 ];\\n\\n    \\t\\tvar segmentLength = lengthAfter - lengthBefore;\\n\\n    \\t\\t// determine where we are between the 'before' and 'after' points\\n\\n    \\t\\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\\n\\n    \\t\\t// add that fractional amount to t\\n\\n    \\t\\tvar t = ( i + segmentFraction ) / ( il - 1 );\\n\\n    \\t\\treturn t;\\n\\n    \\t},\\n\\n    \\t// Returns a unit vector tangent at t\\n    \\t// In case any sub curve does not implement its tangent derivation,\\n    \\t// 2 points a small delta apart will be used to find its gradient\\n    \\t// which seems to give a reasonable approximation\\n\\n    \\tgetTangent: function( t ) {\\n\\n    \\t\\tvar delta = 0.0001;\\n    \\t\\tvar t1 = t - delta;\\n    \\t\\tvar t2 = t + delta;\\n\\n    \\t\\t// Capping in case of danger\\n\\n    \\t\\tif ( t1 < 0 ) t1 = 0;\\n    \\t\\tif ( t2 > 1 ) t2 = 1;\\n\\n    \\t\\tvar pt1 = this.getPoint( t1 );\\n    \\t\\tvar pt2 = this.getPoint( t2 );\\n\\n    \\t\\tvar vec = pt2.clone().sub( pt1 );\\n    \\t\\treturn vec.normalize();\\n\\n    \\t},\\n\\n    \\tgetTangentAt: function ( u ) {\\n\\n    \\t\\tvar t = this.getUtoTmapping( u );\\n    \\t\\treturn this.getTangent( t );\\n\\n    \\t}\\n\\n    };\\n\\n    // TODO: Transformation for Curves?\\n\\n    /**************************************************************\\n     *\\t3D Curves\\n     **************************************************************/\\n\\n    // A Factory method for creating new curve subclasses\\n\\n    Curve.create = function ( constructor, getPointFunc ) {\\n\\n    \\tconstructor.prototype = Object.create( Curve.prototype );\\n    \\tconstructor.prototype.constructor = constructor;\\n    \\tconstructor.prototype.getPoint = getPointFunc;\\n\\n    \\treturn constructor;\\n\\n    };\\n\\n    /**************************************************************\\n     *\\tLine\\n     **************************************************************/\\n\\n    function LineCurve( v1, v2 ) {\\n\\n    \\tthis.v1 = v1;\\n    \\tthis.v2 = v2;\\n\\n    }\\n\\n    LineCurve.prototype = Object.create( Curve.prototype );\\n    LineCurve.prototype.constructor = LineCurve;\\n\\n    LineCurve.prototype.isLineCurve = true;\\n\\n    LineCurve.prototype.getPoint = function ( t ) {\\n\\n    \\tif ( t === 1 ) {\\n\\n    \\t\\treturn this.v2.clone();\\n\\n    \\t}\\n\\n    \\tvar point = this.v2.clone().sub( this.v1 );\\n    \\tpoint.multiplyScalar( t ).add( this.v1 );\\n\\n    \\treturn point;\\n\\n    };\\n\\n    // Line curve is linear, so we can overwrite default getPointAt\\n\\n    LineCurve.prototype.getPointAt = function ( u ) {\\n\\n    \\treturn this.getPoint( u );\\n\\n    };\\n\\n    LineCurve.prototype.getTangent = function( t ) {\\n\\n    \\tvar tangent = this.v2.clone().sub( this.v1 );\\n\\n    \\treturn tangent.normalize();\\n\\n    };\\n\\n    /**\\n     * @author zz85 / http://www.lab4games.net/zz85/blog\\n     *\\n     **/\\n\\n    /**************************************************************\\n     *\\tCurved Path - a curve path is simply a array of connected\\n     *  curves, but retains the api of a curve\\n     **************************************************************/\\n\\n    function CurvePath() {\\n\\n    \\tthis.curves = [];\\n\\n    \\tthis.autoClose = false; // Automatically closes the path\\n\\n    }\\n\\n    CurvePath.prototype = Object.assign( Object.create( Curve.prototype ), {\\n\\n    \\tconstructor: CurvePath,\\n\\n    \\tadd: function ( curve ) {\\n\\n    \\t\\tthis.curves.push( curve );\\n\\n    \\t},\\n\\n    \\tclosePath: function () {\\n\\n    \\t\\t// Add a line curve if start and end of lines are not connected\\n    \\t\\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\\n    \\t\\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\\n\\n    \\t\\tif ( ! startPoint.equals( endPoint ) ) {\\n\\n    \\t\\t\\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\\n\\n    \\t\\t}\\n\\n    \\t},\\n\\n    \\t// To get accurate point with reference to\\n    \\t// entire path distance at time t,\\n    \\t// following has to be done:\\n\\n    \\t// 1. Length of each sub path have to be known\\n    \\t// 2. Locate and identify type of curve\\n    \\t// 3. Get t for the curve\\n    \\t// 4. Return curve.getPointAt(t')\\n\\n    \\tgetPoint: function ( t ) {\\n\\n    \\t\\tvar d = t * this.getLength();\\n    \\t\\tvar curveLengths = this.getCurveLengths();\\n    \\t\\tvar i = 0;\\n\\n    \\t\\t// To think about boundaries points.\\n\\n    \\t\\twhile ( i < curveLengths.length ) {\\n\\n    \\t\\t\\tif ( curveLengths[ i ] >= d ) {\\n\\n    \\t\\t\\t\\tvar diff = curveLengths[ i ] - d;\\n    \\t\\t\\t\\tvar curve = this.curves[ i ];\\n\\n    \\t\\t\\t\\tvar segmentLength = curve.getLength();\\n    \\t\\t\\t\\tvar u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\\n\\n    \\t\\t\\t\\treturn curve.getPointAt( u );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\ti ++;\\n\\n    \\t\\t}\\n\\n    \\t\\treturn null;\\n\\n    \\t\\t// loop where sum != 0, sum > d , sum+1 <d\\n\\n    \\t},\\n\\n    \\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\\n    \\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\\n    \\t// getPoint() depends on getLength\\n\\n    \\tgetLength: function () {\\n\\n    \\t\\tvar lens = this.getCurveLengths();\\n    \\t\\treturn lens[ lens.length - 1 ];\\n\\n    \\t},\\n\\n    \\t// cacheLengths must be recalculated.\\n    \\tupdateArcLengths: function () {\\n\\n    \\t\\tthis.needsUpdate = true;\\n    \\t\\tthis.cacheLengths = null;\\n    \\t\\tthis.getLengths();\\n\\n    \\t},\\n\\n    \\t// Compute lengths and cache them\\n    \\t// We cannot overwrite getLengths() because UtoT mapping uses it.\\n\\n    \\tgetCurveLengths: function () {\\n\\n    \\t\\t// We use cache values if curves and cache array are same length\\n\\n    \\t\\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\\n\\n    \\t\\t\\treturn this.cacheLengths;\\n\\n    \\t\\t}\\n\\n    \\t\\t// Get length of sub-curve\\n    \\t\\t// Push sums into cached array\\n\\n    \\t\\tvar lengths = [], sums = 0;\\n\\n    \\t\\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\\n\\n    \\t\\t\\tsums += this.curves[ i ].getLength();\\n    \\t\\t\\tlengths.push( sums );\\n\\n    \\t\\t}\\n\\n    \\t\\tthis.cacheLengths = lengths;\\n\\n    \\t\\treturn lengths;\\n\\n    \\t},\\n\\n    \\tgetSpacedPoints: function ( divisions ) {\\n\\n    \\t\\tif ( ! divisions ) divisions = 40;\\n\\n    \\t\\tvar points = [];\\n\\n    \\t\\tfor ( var i = 0; i <= divisions; i ++ ) {\\n\\n    \\t\\t\\tpoints.push( this.getPoint( i / divisions ) );\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( this.autoClose ) {\\n\\n    \\t\\t\\tpoints.push( points[ 0 ] );\\n\\n    \\t\\t}\\n\\n    \\t\\treturn points;\\n\\n    \\t},\\n\\n    \\tgetPoints: function ( divisions ) {\\n\\n    \\t\\tdivisions = divisions || 12;\\n\\n    \\t\\tvar points = [], last;\\n\\n    \\t\\tfor ( var i = 0, curves = this.curves; i < curves.length; i ++ ) {\\n\\n    \\t\\t\\tvar curve = curves[ i ];\\n    \\t\\t\\tvar resolution = (curve && curve.isEllipseCurve) ? divisions * 2\\n    \\t\\t\\t\\t: (curve && curve.isLineCurve) ? 1\\n    \\t\\t\\t\\t: (curve && curve.isSplineCurve) ? divisions * curve.points.length\\n    \\t\\t\\t\\t: divisions;\\n\\n    \\t\\t\\tvar pts = curve.getPoints( resolution );\\n\\n    \\t\\t\\tfor ( var j = 0; j < pts.length; j++ ) {\\n\\n    \\t\\t\\t\\tvar point = pts[ j ];\\n\\n    \\t\\t\\t\\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\\n\\n    \\t\\t\\t\\tpoints.push( point );\\n    \\t\\t\\t\\tlast = point;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( this.autoClose && points.length > 1 && !points[ points.length - 1 ].equals( points[ 0 ] ) ) {\\n\\n    \\t\\t\\tpoints.push( points[ 0 ] );\\n\\n    \\t\\t}\\n\\n    \\t\\treturn points;\\n\\n    \\t},\\n\\n    \\t/**************************************************************\\n    \\t *\\tCreate Geometries Helpers\\n    \\t **************************************************************/\\n\\n    \\t/// Generate geometry from path points (for Line or Points objects)\\n\\n    \\tcreatePointsGeometry: function ( divisions ) {\\n\\n    \\t\\tvar pts = this.getPoints( divisions );\\n    \\t\\treturn this.createGeometry( pts );\\n\\n    \\t},\\n\\n    \\t// Generate geometry from equidistant sampling along the path\\n\\n    \\tcreateSpacedPointsGeometry: function ( divisions ) {\\n\\n    \\t\\tvar pts = this.getSpacedPoints( divisions );\\n    \\t\\treturn this.createGeometry( pts );\\n\\n    \\t},\\n\\n    \\tcreateGeometry: function ( points ) {\\n\\n    \\t\\tvar geometry = new Geometry();\\n\\n    \\t\\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\\n\\n    \\t\\t\\tvar point = points[ i ];\\n    \\t\\t\\tgeometry.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\\n\\n    \\t\\t}\\n\\n    \\t\\treturn geometry;\\n\\n    \\t}\\n\\n    } );\\n\\n    /**************************************************************\\n     *\\tEllipse curve\\n     **************************************************************/\\n\\n    function EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\\n\\n    \\tthis.aX = aX;\\n    \\tthis.aY = aY;\\n\\n    \\tthis.xRadius = xRadius;\\n    \\tthis.yRadius = yRadius;\\n\\n    \\tthis.aStartAngle = aStartAngle;\\n    \\tthis.aEndAngle = aEndAngle;\\n\\n    \\tthis.aClockwise = aClockwise;\\n\\n    \\tthis.aRotation = aRotation || 0;\\n\\n    }\\n\\n    EllipseCurve.prototype = Object.create( Curve.prototype );\\n    EllipseCurve.prototype.constructor = EllipseCurve;\\n\\n    EllipseCurve.prototype.isEllipseCurve = true;\\n\\n    EllipseCurve.prototype.getPoint = function( t ) {\\n\\n    \\tvar twoPi = Math.PI * 2;\\n    \\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\\n    \\tvar samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\\n\\n    \\t// ensures that deltaAngle is 0 .. 2 PI\\n    \\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\\n    \\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\\n\\n    \\tif ( deltaAngle < Number.EPSILON ) {\\n\\n    \\t\\tif ( samePoints ) {\\n\\n    \\t\\t\\tdeltaAngle = 0;\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\tdeltaAngle = twoPi;\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\tif ( this.aClockwise === true && ! samePoints ) {\\n\\n    \\t\\tif ( deltaAngle === twoPi ) {\\n\\n    \\t\\t\\tdeltaAngle = - twoPi;\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\tdeltaAngle = deltaAngle - twoPi;\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\tvar angle = this.aStartAngle + t * deltaAngle;\\n    \\tvar x = this.aX + this.xRadius * Math.cos( angle );\\n    \\tvar y = this.aY + this.yRadius * Math.sin( angle );\\n\\n    \\tif ( this.aRotation !== 0 ) {\\n\\n    \\t\\tvar cos = Math.cos( this.aRotation );\\n    \\t\\tvar sin = Math.sin( this.aRotation );\\n\\n    \\t\\tvar tx = x - this.aX;\\n    \\t\\tvar ty = y - this.aY;\\n\\n    \\t\\t// Rotate the point about the center of the ellipse.\\n    \\t\\tx = tx * cos - ty * sin + this.aX;\\n    \\t\\ty = tx * sin + ty * cos + this.aY;\\n\\n    \\t}\\n\\n    \\treturn new Vector2( x, y );\\n\\n    };\\n\\n    /**\\n     * @author zz85 / http://www.lab4games.net/zz85/blog\\n     */\\n\\n    exports.CurveUtils = {\\n\\n    \\ttangentQuadraticBezier: function ( t, p0, p1, p2 ) {\\n\\n    \\t\\treturn 2 * ( 1 - t ) * ( p1 - p0 ) + 2 * t * ( p2 - p1 );\\n\\n    \\t},\\n\\n    \\t// Puay Bing, thanks for helping with this derivative!\\n\\n    \\ttangentCubicBezier: function ( t, p0, p1, p2, p3 ) {\\n\\n    \\t\\treturn - 3 * p0 * ( 1 - t ) * ( 1 - t )  +\\n    \\t\\t\\t3 * p1 * ( 1 - t ) * ( 1 - t ) - 6 * t * p1 * ( 1 - t ) +\\n    \\t\\t\\t6 * t *  p2 * ( 1 - t ) - 3 * t * t * p2 +\\n    \\t\\t\\t3 * t * t * p3;\\n\\n    \\t},\\n\\n    \\ttangentSpline: function ( t, p0, p1, p2, p3 ) {\\n\\n    \\t\\t// To check if my formulas are correct\\n\\n    \\t\\tvar h00 = 6 * t * t - 6 * t; \\t// derived from 2t^3 − 3t^2 + 1\\n    \\t\\tvar h10 = 3 * t * t - 4 * t + 1; // t^3 − 2t^2 + t\\n    \\t\\tvar h01 = - 6 * t * t + 6 * t; \\t// − 2t3 + 3t2\\n    \\t\\tvar h11 = 3 * t * t - 2 * t;\\t// t3 − t2\\n\\n    \\t\\treturn h00 + h10 + h01 + h11;\\n\\n    \\t},\\n\\n    \\t// Catmull-Rom\\n\\n    \\tinterpolate: function( p0, p1, p2, p3, t ) {\\n\\n    \\t\\tvar v0 = ( p2 - p0 ) * 0.5;\\n    \\t\\tvar v1 = ( p3 - p1 ) * 0.5;\\n    \\t\\tvar t2 = t * t;\\n    \\t\\tvar t3 = t * t2;\\n    \\t\\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\\n\\n    \\t}\\n\\n    };\\n\\n    /**************************************************************\\n     *\\tSpline curve\\n     **************************************************************/\\n\\n    function SplineCurve( points /* array of Vector2 */ ) {\\n\\n    \\tthis.points = ( points === undefined ) ? [] : points;\\n\\n    }\\n\\n    SplineCurve.prototype = Object.create( Curve.prototype );\\n    SplineCurve.prototype.constructor = SplineCurve;\\n\\n    SplineCurve.prototype.isSplineCurve = true;\\n\\n    SplineCurve.prototype.getPoint = function ( t ) {\\n\\n    \\tvar points = this.points;\\n    \\tvar point = ( points.length - 1 ) * t;\\n\\n    \\tvar intPoint = Math.floor( point );\\n    \\tvar weight = point - intPoint;\\n\\n    \\tvar point0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\\n    \\tvar point1 = points[ intPoint ];\\n    \\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\\n    \\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\\n\\n    \\tvar interpolate = exports.CurveUtils.interpolate;\\n\\n    \\treturn new Vector2(\\n    \\t\\tinterpolate( point0.x, point1.x, point2.x, point3.x, weight ),\\n    \\t\\tinterpolate( point0.y, point1.y, point2.y, point3.y, weight )\\n    \\t);\\n\\n    };\\n\\n    /**************************************************************\\n     *\\tCubic Bezier curve\\n     **************************************************************/\\n\\n    function CubicBezierCurve( v0, v1, v2, v3 ) {\\n\\n    \\tthis.v0 = v0;\\n    \\tthis.v1 = v1;\\n    \\tthis.v2 = v2;\\n    \\tthis.v3 = v3;\\n\\n    }\\n\\n    CubicBezierCurve.prototype = Object.create( Curve.prototype );\\n    CubicBezierCurve.prototype.constructor = CubicBezierCurve;\\n\\n    CubicBezierCurve.prototype.getPoint = function ( t ) {\\n\\n    \\tvar b3 = exports.ShapeUtils.b3;\\n\\n    \\treturn new Vector2(\\n    \\t\\tb3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x ),\\n    \\t\\tb3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y )\\n    \\t);\\n\\n    };\\n\\n    CubicBezierCurve.prototype.getTangent = function( t ) {\\n\\n    \\tvar tangentCubicBezier = exports.CurveUtils.tangentCubicBezier;\\n\\n    \\treturn new Vector2(\\n    \\t\\ttangentCubicBezier( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x ),\\n    \\t\\ttangentCubicBezier( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y )\\n    \\t).normalize();\\n\\n    };\\n\\n    /**************************************************************\\n     *\\tQuadratic Bezier curve\\n     **************************************************************/\\n\\n\\n    function QuadraticBezierCurve( v0, v1, v2 ) {\\n\\n    \\tthis.v0 = v0;\\n    \\tthis.v1 = v1;\\n    \\tthis.v2 = v2;\\n\\n    }\\n\\n    QuadraticBezierCurve.prototype = Object.create( Curve.prototype );\\n    QuadraticBezierCurve.prototype.constructor = QuadraticBezierCurve;\\n\\n\\n    QuadraticBezierCurve.prototype.getPoint = function ( t ) {\\n\\n    \\tvar b2 = exports.ShapeUtils.b2;\\n\\n    \\treturn new Vector2(\\n    \\t\\tb2( t, this.v0.x, this.v1.x, this.v2.x ),\\n    \\t\\tb2( t, this.v0.y, this.v1.y, this.v2.y )\\n    \\t);\\n\\n    };\\n\\n\\n    QuadraticBezierCurve.prototype.getTangent = function( t ) {\\n\\n    \\tvar tangentQuadraticBezier = exports.CurveUtils.tangentQuadraticBezier;\\n\\n    \\treturn new Vector2(\\n    \\t\\ttangentQuadraticBezier( t, this.v0.x, this.v1.x, this.v2.x ),\\n    \\t\\ttangentQuadraticBezier( t, this.v0.y, this.v1.y, this.v2.y )\\n    \\t).normalize();\\n\\n    };\\n\\n    var PathPrototype = Object.assign( Object.create( CurvePath.prototype ), {\\n\\n    \\tfromPoints: function ( vectors ) {\\n\\n    \\t\\tthis.moveTo( vectors[ 0 ].x, vectors[ 0 ].y );\\n\\n    \\t\\tfor ( var i = 1, l = vectors.length; i < l; i ++ ) {\\n\\n    \\t\\t\\tthis.lineTo( vectors[ i ].x, vectors[ i ].y );\\n\\n    \\t\\t}\\n\\n    \\t},\\n\\n    \\tmoveTo: function ( x, y ) {\\n\\n    \\t\\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\\n\\n    \\t},\\n\\n    \\tlineTo: function ( x, y ) {\\n\\n    \\t\\tvar curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\\n    \\t\\tthis.curves.push( curve );\\n\\n    \\t\\tthis.currentPoint.set( x, y );\\n\\n    \\t},\\n\\n    \\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\\n\\n    \\t\\tvar curve = new QuadraticBezierCurve(\\n    \\t\\t\\tthis.currentPoint.clone(),\\n    \\t\\t\\tnew Vector2( aCPx, aCPy ),\\n    \\t\\t\\tnew Vector2( aX, aY )\\n    \\t\\t);\\n\\n    \\t\\tthis.curves.push( curve );\\n\\n    \\t\\tthis.currentPoint.set( aX, aY );\\n\\n    \\t},\\n\\n    \\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\\n\\n    \\t\\tvar curve = new CubicBezierCurve(\\n    \\t\\t\\tthis.currentPoint.clone(),\\n    \\t\\t\\tnew Vector2( aCP1x, aCP1y ),\\n    \\t\\t\\tnew Vector2( aCP2x, aCP2y ),\\n    \\t\\t\\tnew Vector2( aX, aY )\\n    \\t\\t);\\n\\n    \\t\\tthis.curves.push( curve );\\n\\n    \\t\\tthis.currentPoint.set( aX, aY );\\n\\n    \\t},\\n\\n    \\tsplineThru: function ( pts /*Array of Vector*/ ) {\\n\\n    \\t\\tvar npts = [ this.currentPoint.clone() ].concat( pts );\\n\\n    \\t\\tvar curve = new SplineCurve( npts );\\n    \\t\\tthis.curves.push( curve );\\n\\n    \\t\\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\\n\\n    \\t},\\n\\n    \\tarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\\n\\n    \\t\\tvar x0 = this.currentPoint.x;\\n    \\t\\tvar y0 = this.currentPoint.y;\\n\\n    \\t\\tthis.absarc( aX + x0, aY + y0, aRadius,\\n    \\t\\t\\taStartAngle, aEndAngle, aClockwise );\\n\\n    \\t},\\n\\n    \\tabsarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\\n\\n    \\t\\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\\n\\n    \\t},\\n\\n    \\tellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\\n\\n    \\t\\tvar x0 = this.currentPoint.x;\\n    \\t\\tvar y0 = this.currentPoint.y;\\n\\n    \\t\\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\\n\\n    \\t},\\n\\n    \\tabsellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\\n\\n    \\t\\tvar curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\\n\\n    \\t\\tif ( this.curves.length > 0 ) {\\n\\n    \\t\\t\\t// if a previous curve is present, attempt to join\\n    \\t\\t\\tvar firstPoint = curve.getPoint( 0 );\\n\\n    \\t\\t\\tif ( ! firstPoint.equals( this.currentPoint ) ) {\\n\\n    \\t\\t\\t\\tthis.lineTo( firstPoint.x, firstPoint.y );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\tthis.curves.push( curve );\\n\\n    \\t\\tvar lastPoint = curve.getPoint( 1 );\\n    \\t\\tthis.currentPoint.copy( lastPoint );\\n\\n    \\t}\\n\\n    } );\\n\\n    /**\\n     * @author zz85 / http://www.lab4games.net/zz85/blog\\n     * Defines a 2d shape plane using paths.\\n     **/\\n\\n    // STEP 1 Create a path.\\n    // STEP 2 Turn path into shape.\\n    // STEP 3 ExtrudeGeometry takes in Shape/Shapes\\n    // STEP 3a - Extract points from each shape, turn to vertices\\n    // STEP 3b - Triangulate each shape, add faces.\\n\\n    function Shape() {\\n\\n    \\tPath.apply( this, arguments );\\n\\n    \\tthis.holes = [];\\n\\n    }\\n\\n    Shape.prototype = Object.assign( Object.create( PathPrototype ), {\\n\\n    \\tconstructor: Shape,\\n\\n    \\tgetPointsHoles: function ( divisions ) {\\n\\n    \\t\\tvar holesPts = [];\\n\\n    \\t\\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\\n\\n    \\t\\t\\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\\n\\n    \\t\\t}\\n\\n    \\t\\treturn holesPts;\\n\\n    \\t},\\n\\n    \\t// Get points of shape and holes (keypoints based on segments parameter)\\n\\n    \\textractAllPoints: function ( divisions ) {\\n\\n    \\t\\treturn {\\n\\n    \\t\\t\\tshape: this.getPoints( divisions ),\\n    \\t\\t\\tholes: this.getPointsHoles( divisions )\\n\\n    \\t\\t};\\n\\n    \\t},\\n\\n    \\textractPoints: function ( divisions ) {\\n\\n    \\t\\treturn this.extractAllPoints( divisions );\\n\\n    \\t}\\n\\n    } );\\n\\n    /**\\n     * @author zz85 / http://www.lab4games.net/zz85/blog\\n     * Creates free form 2d path using series of points, lines or curves.\\n     *\\n     **/\\n\\n    function Path( points ) {\\n\\n    \\tCurvePath.call( this );\\n    \\tthis.currentPoint = new Vector2();\\n\\n    \\tif ( points ) {\\n\\n    \\t\\tthis.fromPoints( points );\\n\\n    \\t}\\n\\n    }\\n\\n    Path.prototype = PathPrototype;\\n    PathPrototype.constructor = Path;\\n\\n\\n    // minimal class for proxing functions to Path. Replaces old \\\"extractSubpaths()\\\"\\n    function ShapePath() {\\n    \\tthis.subPaths = [];\\n    \\tthis.currentPath = null;\\n    }\\n\\n    ShapePath.prototype = {\\n    \\tmoveTo: function ( x, y ) {\\n    \\t\\tthis.currentPath = new Path();\\n    \\t\\tthis.subPaths.push(this.currentPath);\\n    \\t\\tthis.currentPath.moveTo( x, y );\\n    \\t},\\n    \\tlineTo: function ( x, y ) {\\n    \\t\\tthis.currentPath.lineTo( x, y );\\n    \\t},\\n    \\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\\n    \\t\\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\\n    \\t},\\n    \\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\\n    \\t\\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\\n    \\t},\\n    \\tsplineThru: function ( pts ) {\\n    \\t\\tthis.currentPath.splineThru( pts );\\n    \\t},\\n\\n    \\ttoShapes: function ( isCCW, noHoles ) {\\n\\n    \\t\\tfunction toShapesNoHoles( inSubpaths ) {\\n\\n    \\t\\t\\tvar shapes = [];\\n\\n    \\t\\t\\tfor ( var i = 0, l = inSubpaths.length; i < l; i ++ ) {\\n\\n    \\t\\t\\t\\tvar tmpPath = inSubpaths[ i ];\\n\\n    \\t\\t\\t\\tvar tmpShape = new Shape();\\n    \\t\\t\\t\\ttmpShape.curves = tmpPath.curves;\\n\\n    \\t\\t\\t\\tshapes.push( tmpShape );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\treturn shapes;\\n\\n    \\t\\t}\\n\\n    \\t\\tfunction isPointInsidePolygon( inPt, inPolygon ) {\\n\\n    \\t\\t\\tvar polyLen = inPolygon.length;\\n\\n    \\t\\t\\t// inPt on polygon contour => immediate success    or\\n    \\t\\t\\t// toggling of inside/outside at every single! intersection point of an edge\\n    \\t\\t\\t//  with the horizontal line through inPt, left of inPt\\n    \\t\\t\\t//  not counting lowerY endpoints of edges and whole edges on that line\\n    \\t\\t\\tvar inside = false;\\n    \\t\\t\\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\\n\\n    \\t\\t\\t\\tvar edgeLowPt  = inPolygon[ p ];\\n    \\t\\t\\t\\tvar edgeHighPt = inPolygon[ q ];\\n\\n    \\t\\t\\t\\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\\n    \\t\\t\\t\\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\\n\\n    \\t\\t\\t\\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\\n\\n    \\t\\t\\t\\t\\t// not parallel\\n    \\t\\t\\t\\t\\tif ( edgeDy < 0 ) {\\n\\n    \\t\\t\\t\\t\\t\\tedgeLowPt  = inPolygon[ q ]; edgeDx = - edgeDx;\\n    \\t\\t\\t\\t\\t\\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\\n\\n    \\t\\t\\t\\t\\t}\\n    \\t\\t\\t\\t\\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \\t\\tcontinue;\\n\\n    \\t\\t\\t\\t\\tif ( inPt.y === edgeLowPt.y ) {\\n\\n    \\t\\t\\t\\t\\t\\tif ( inPt.x === edgeLowPt.x )\\t\\treturn\\ttrue;\\t\\t// inPt is on contour ?\\n    \\t\\t\\t\\t\\t\\t// continue;\\t\\t\\t\\t// no intersection or edgeLowPt => doesn't count !!!\\n\\n    \\t\\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\t\\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\\n    \\t\\t\\t\\t\\t\\tif ( perpEdge === 0 )\\t\\t\\t\\treturn\\ttrue;\\t\\t// inPt is on contour ?\\n    \\t\\t\\t\\t\\t\\tif ( perpEdge < 0 ) \\t\\t\\t\\tcontinue;\\n    \\t\\t\\t\\t\\t\\tinside = ! inside;\\t\\t// true intersection left of inPt\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\t// parallel or collinear\\n    \\t\\t\\t\\t\\tif ( inPt.y !== edgeLowPt.y ) \\t\\tcontinue;\\t\\t\\t// parallel\\n    \\t\\t\\t\\t\\t// edge lies on the same horizontal line as inPt\\n    \\t\\t\\t\\t\\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\\n    \\t\\t\\t\\t\\t\\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\\t\\treturn\\ttrue;\\t// inPt: Point on contour !\\n    \\t\\t\\t\\t\\t// continue;\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\treturn\\tinside;\\n\\n    \\t\\t}\\n\\n    \\t\\tvar isClockWise = exports.ShapeUtils.isClockWise;\\n\\n    \\t\\tvar subPaths = this.subPaths;\\n    \\t\\tif ( subPaths.length === 0 ) return [];\\n\\n    \\t\\tif ( noHoles === true )\\treturn\\ttoShapesNoHoles( subPaths );\\n\\n\\n    \\t\\tvar solid, tmpPath, tmpShape, shapes = [];\\n\\n    \\t\\tif ( subPaths.length === 1 ) {\\n\\n    \\t\\t\\ttmpPath = subPaths[ 0 ];\\n    \\t\\t\\ttmpShape = new Shape();\\n    \\t\\t\\ttmpShape.curves = tmpPath.curves;\\n    \\t\\t\\tshapes.push( tmpShape );\\n    \\t\\t\\treturn shapes;\\n\\n    \\t\\t}\\n\\n    \\t\\tvar holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\\n    \\t\\tholesFirst = isCCW ? ! holesFirst : holesFirst;\\n\\n    \\t\\t// console.log(\\\"Holes first\\\", holesFirst);\\n\\n    \\t\\tvar betterShapeHoles = [];\\n    \\t\\tvar newShapes = [];\\n    \\t\\tvar newShapeHoles = [];\\n    \\t\\tvar mainIdx = 0;\\n    \\t\\tvar tmpPoints;\\n\\n    \\t\\tnewShapes[ mainIdx ] = undefined;\\n    \\t\\tnewShapeHoles[ mainIdx ] = [];\\n\\n    \\t\\tfor ( var i = 0, l = subPaths.length; i < l; i ++ ) {\\n\\n    \\t\\t\\ttmpPath = subPaths[ i ];\\n    \\t\\t\\ttmpPoints = tmpPath.getPoints();\\n    \\t\\t\\tsolid = isClockWise( tmpPoints );\\n    \\t\\t\\tsolid = isCCW ? ! solid : solid;\\n\\n    \\t\\t\\tif ( solid ) {\\n\\n    \\t\\t\\t\\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\\tmainIdx ++;\\n\\n    \\t\\t\\t\\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\\n    \\t\\t\\t\\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\\n\\n    \\t\\t\\t\\tif ( holesFirst )\\tmainIdx ++;\\n    \\t\\t\\t\\tnewShapeHoles[ mainIdx ] = [];\\n\\n    \\t\\t\\t\\t//console.log('cw', i);\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\\n\\n    \\t\\t\\t\\t//console.log('ccw', i);\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\t// only Holes? -> probably all Shapes with wrong orientation\\n    \\t\\tif ( ! newShapes[ 0 ] )\\treturn\\ttoShapesNoHoles( subPaths );\\n\\n\\n    \\t\\tif ( newShapes.length > 1 ) {\\n\\n    \\t\\t\\tvar ambiguous = false;\\n    \\t\\t\\tvar toChange = [];\\n\\n    \\t\\t\\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\\n\\n    \\t\\t\\t\\tbetterShapeHoles[ sIdx ] = [];\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\\n\\n    \\t\\t\\t\\tvar sho = newShapeHoles[ sIdx ];\\n\\n    \\t\\t\\t\\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\\n\\n    \\t\\t\\t\\t\\tvar ho = sho[ hIdx ];\\n    \\t\\t\\t\\t\\tvar hole_unassigned = true;\\n\\n    \\t\\t\\t\\t\\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\\n\\n    \\t\\t\\t\\t\\t\\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\\n\\n    \\t\\t\\t\\t\\t\\t\\tif ( sIdx !== s2Idx )\\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\\n    \\t\\t\\t\\t\\t\\t\\tif ( hole_unassigned ) {\\n\\n    \\t\\t\\t\\t\\t\\t\\t\\thole_unassigned = false;\\n    \\t\\t\\t\\t\\t\\t\\t\\tbetterShapeHoles[ s2Idx ].push( ho );\\n\\n    \\t\\t\\t\\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\t\\t\\t\\tambiguous = true;\\n\\n    \\t\\t\\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\t}\\n    \\t\\t\\t\\t\\tif ( hole_unassigned ) {\\n\\n    \\t\\t\\t\\t\\t\\tbetterShapeHoles[ sIdx ].push( ho );\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n    \\t\\t\\t// console.log(\\\"ambiguous: \\\", ambiguous);\\n    \\t\\t\\tif ( toChange.length > 0 ) {\\n\\n    \\t\\t\\t\\t// console.log(\\\"to change: \\\", toChange);\\n    \\t\\t\\t\\tif ( ! ambiguous )\\tnewShapeHoles = betterShapeHoles;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\tvar tmpHoles;\\n\\n    \\t\\tfor ( var i = 0, il = newShapes.length; i < il; i ++ ) {\\n\\n    \\t\\t\\ttmpShape = newShapes[ i ].s;\\n    \\t\\t\\tshapes.push( tmpShape );\\n    \\t\\t\\ttmpHoles = newShapeHoles[ i ];\\n\\n    \\t\\t\\tfor ( var j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\\n\\n    \\t\\t\\t\\ttmpShape.holes.push( tmpHoles[ j ].h );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\t//console.log(\\\"shape\\\", shapes);\\n\\n    \\t\\treturn shapes;\\n\\n    \\t}\\n    }\\n\\n    /**\\n     * @author zz85 / http://www.lab4games.net/zz85/blog\\n     * @author mrdoob / http://mrdoob.com/\\n     */\\n\\n    function Font( data ) {\\n\\n    \\tthis.data = data;\\n\\n    }\\n\\n    Object.assign( Font.prototype, {\\n\\n    \\tisFont: true,\\n\\n    \\tgenerateShapes: function ( text, size, divisions ) {\\n\\n    \\t\\tfunction createPaths( text ) {\\n\\n    \\t\\t\\tvar chars = String( text ).split( '' );\\n    \\t\\t\\tvar scale = size / data.resolution;\\n    \\t\\t\\tvar offset = 0;\\n\\n    \\t\\t\\tvar paths = [];\\n\\n    \\t\\t\\tfor ( var i = 0; i < chars.length; i ++ ) {\\n\\n    \\t\\t\\t\\tvar ret = createPath( chars[ i ], scale, offset );\\n    \\t\\t\\t\\toffset += ret.offset;\\n\\n    \\t\\t\\t\\tpaths.push( ret.path );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\treturn paths;\\n\\n    \\t\\t}\\n\\n    \\t\\tfunction createPath( c, scale, offset ) {\\n\\n    \\t\\t\\tvar glyph = data.glyphs[ c ] || data.glyphs[ '?' ];\\n\\n    \\t\\t\\tif ( ! glyph ) return;\\n\\n    \\t\\t\\tvar path = new ShapePath();\\n\\n    \\t\\t\\tvar pts = [], b2 = exports.ShapeUtils.b2, b3 = exports.ShapeUtils.b3;\\n    \\t\\t\\tvar x, y, cpx, cpy, cpx0, cpy0, cpx1, cpy1, cpx2, cpy2, laste;\\n\\n    \\t\\t\\tif ( glyph.o ) {\\n\\n    \\t\\t\\t\\tvar outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\\n\\n    \\t\\t\\t\\tfor ( var i = 0, l = outline.length; i < l; ) {\\n\\n    \\t\\t\\t\\t\\tvar action = outline[ i ++ ];\\n\\n    \\t\\t\\t\\t\\tswitch ( action ) {\\n\\n    \\t\\t\\t\\t\\t\\tcase 'm': // moveTo\\n\\n    \\t\\t\\t\\t\\t\\t\\tx = outline[ i ++ ] * scale + offset;\\n    \\t\\t\\t\\t\\t\\t\\ty = outline[ i ++ ] * scale;\\n\\n    \\t\\t\\t\\t\\t\\t\\tpath.moveTo( x, y );\\n\\n    \\t\\t\\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\t\\t\\tcase 'l': // lineTo\\n\\n    \\t\\t\\t\\t\\t\\t\\tx = outline[ i ++ ] * scale + offset;\\n    \\t\\t\\t\\t\\t\\t\\ty = outline[ i ++ ] * scale;\\n\\n    \\t\\t\\t\\t\\t\\t\\tpath.lineTo( x, y );\\n\\n    \\t\\t\\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\t\\t\\tcase 'q': // quadraticCurveTo\\n\\n    \\t\\t\\t\\t\\t\\t\\tcpx  = outline[ i ++ ] * scale + offset;\\n    \\t\\t\\t\\t\\t\\t\\tcpy  = outline[ i ++ ] * scale;\\n    \\t\\t\\t\\t\\t\\t\\tcpx1 = outline[ i ++ ] * scale + offset;\\n    \\t\\t\\t\\t\\t\\t\\tcpy1 = outline[ i ++ ] * scale;\\n\\n    \\t\\t\\t\\t\\t\\t\\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\\n\\n    \\t\\t\\t\\t\\t\\t\\tlaste = pts[ pts.length - 1 ];\\n\\n    \\t\\t\\t\\t\\t\\t\\tif ( laste ) {\\n\\n    \\t\\t\\t\\t\\t\\t\\t\\tcpx0 = laste.x;\\n    \\t\\t\\t\\t\\t\\t\\t\\tcpy0 = laste.y;\\n\\n    \\t\\t\\t\\t\\t\\t\\t\\tfor ( var i2 = 1; i2 <= divisions; i2 ++ ) {\\n\\n    \\t\\t\\t\\t\\t\\t\\t\\t\\tvar t = i2 / divisions;\\n    \\t\\t\\t\\t\\t\\t\\t\\t\\tb2( t, cpx0, cpx1, cpx );\\n    \\t\\t\\t\\t\\t\\t\\t\\t\\tb2( t, cpy0, cpy1, cpy );\\n\\n    \\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\t\\t\\tcase 'b': // bezierCurveTo\\n\\n    \\t\\t\\t\\t\\t\\t\\tcpx  = outline[ i ++ ] * scale + offset;\\n    \\t\\t\\t\\t\\t\\t\\tcpy  = outline[ i ++ ] * scale;\\n    \\t\\t\\t\\t\\t\\t\\tcpx1 = outline[ i ++ ] * scale + offset;\\n    \\t\\t\\t\\t\\t\\t\\tcpy1 = outline[ i ++ ] * scale;\\n    \\t\\t\\t\\t\\t\\t\\tcpx2 = outline[ i ++ ] * scale + offset;\\n    \\t\\t\\t\\t\\t\\t\\tcpy2 = outline[ i ++ ] * scale;\\n\\n    \\t\\t\\t\\t\\t\\t\\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\\n\\n    \\t\\t\\t\\t\\t\\t\\tlaste = pts[ pts.length - 1 ];\\n\\n    \\t\\t\\t\\t\\t\\t\\tif ( laste ) {\\n\\n    \\t\\t\\t\\t\\t\\t\\t\\tcpx0 = laste.x;\\n    \\t\\t\\t\\t\\t\\t\\t\\tcpy0 = laste.y;\\n\\n    \\t\\t\\t\\t\\t\\t\\t\\tfor ( var i2 = 1; i2 <= divisions; i2 ++ ) {\\n\\n    \\t\\t\\t\\t\\t\\t\\t\\t\\tvar t = i2 / divisions;\\n    \\t\\t\\t\\t\\t\\t\\t\\t\\tb3( t, cpx0, cpx1, cpx2, cpx );\\n    \\t\\t\\t\\t\\t\\t\\t\\t\\tb3( t, cpy0, cpy1, cpy2, cpy );\\n\\n    \\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\treturn { offset: glyph.ha * scale, path: path };\\n\\n    \\t\\t}\\n\\n    \\t\\t//\\n\\n    \\t\\tif ( size === undefined ) size = 100;\\n    \\t\\tif ( divisions === undefined ) divisions = 4;\\n\\n    \\t\\tvar data = this.data;\\n\\n    \\t\\tvar paths = createPaths( text );\\n    \\t\\tvar shapes = [];\\n\\n    \\t\\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\\n\\n    \\t\\t\\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\\n\\n    \\t\\t}\\n\\n    \\t\\treturn shapes;\\n\\n    \\t}\\n\\n    } );\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     */\\n\\n    function FontLoader( manager ) {\\n\\n    \\tthis.manager = ( manager !== undefined ) ? manager : exports.DefaultLoadingManager;\\n\\n    }\\n\\n    Object.assign( FontLoader.prototype, {\\n\\n    \\tload: function ( url, onLoad, onProgress, onError ) {\\n\\n    \\t\\tvar scope = this;\\n\\n    \\t\\tvar loader = new XHRLoader( this.manager );\\n    \\t\\tloader.load( url, function ( text ) {\\n\\n    \\t\\t\\tvar json;\\n\\n    \\t\\t\\ttry {\\n\\n    \\t\\t\\t\\tjson = JSON.parse( text );\\n\\n    \\t\\t\\t} catch ( e ) {\\n\\n    \\t\\t\\t\\tconsole.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' );\\n    \\t\\t\\t\\tjson = JSON.parse( text.substring( 65, text.length - 2 ) );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tvar font = scope.parse( json );\\n\\n    \\t\\t\\tif ( onLoad ) onLoad( font );\\n\\n    \\t\\t}, onProgress, onError );\\n\\n    \\t},\\n\\n    \\tparse: function ( json ) {\\n\\n    \\t\\treturn new Font( json );\\n\\n    \\t}\\n\\n    } );\\n\\n    var context;\\n\\n    function getAudioContext() {\\n\\n    \\tif ( context === undefined ) {\\n\\n    \\t\\tcontext = new ( window.AudioContext || window.webkitAudioContext )();\\n\\n    \\t}\\n\\n    \\treturn context;\\n\\n    }\\n\\n    /**\\n     * @author Reece Aaron Lecrivain / http://reecenotes.com/\\n     */\\n\\n    function AudioLoader( manager ) {\\n\\n    \\tthis.manager = ( manager !== undefined ) ? manager : exports.DefaultLoadingManager;\\n\\n    }\\n\\n    Object.assign( AudioLoader.prototype, {\\n\\n    \\tload: function ( url, onLoad, onProgress, onError ) {\\n\\n    \\t\\tvar loader = new XHRLoader( this.manager );\\n    \\t\\tloader.setResponseType( 'arraybuffer' );\\n    \\t\\tloader.load( url, function ( buffer ) {\\n\\n    \\t\\t\\tvar context = getAudioContext();\\n\\n    \\t\\t\\tcontext.decodeAudioData( buffer, function ( audioBuffer ) {\\n\\n    \\t\\t\\t\\tonLoad( audioBuffer );\\n\\n    \\t\\t\\t} );\\n\\n    \\t\\t}, onProgress, onError );\\n\\n    \\t}\\n\\n    } );\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     */\\n\\n    function StereoCamera() {\\n\\n    \\tthis.type = 'StereoCamera';\\n\\n    \\tthis.aspect = 1;\\n\\n    \\tthis.eyeSep = 0.064;\\n\\n    \\tthis.cameraL = new PerspectiveCamera();\\n    \\tthis.cameraL.layers.enable( 1 );\\n    \\tthis.cameraL.matrixAutoUpdate = false;\\n\\n    \\tthis.cameraR = new PerspectiveCamera();\\n    \\tthis.cameraR.layers.enable( 2 );\\n    \\tthis.cameraR.matrixAutoUpdate = false;\\n\\n    }\\n\\n    Object.assign( StereoCamera.prototype, {\\n\\n    \\tupdate: ( function () {\\n\\n    \\t\\tvar instance, focus, fov, aspect, near, far, zoom;\\n\\n    \\t\\tvar eyeRight = new Matrix4();\\n    \\t\\tvar eyeLeft = new Matrix4();\\n\\n    \\t\\treturn function update( camera ) {\\n\\n    \\t\\t\\tvar needsUpdate = instance !== this || focus !== camera.focus || fov !== camera.fov ||\\n    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\taspect !== camera.aspect * this.aspect || near !== camera.near ||\\n    \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tfar !== camera.far || zoom !== camera.zoom;\\n\\n    \\t\\t\\tif ( needsUpdate ) {\\n\\n    \\t\\t\\t\\tinstance = this;\\n    \\t\\t\\t\\tfocus = camera.focus;\\n    \\t\\t\\t\\tfov = camera.fov;\\n    \\t\\t\\t\\taspect = camera.aspect * this.aspect;\\n    \\t\\t\\t\\tnear = camera.near;\\n    \\t\\t\\t\\tfar = camera.far;\\n    \\t\\t\\t\\tzoom = camera.zoom;\\n\\n    \\t\\t\\t\\t// Off-axis stereoscopic effect based on\\n    \\t\\t\\t\\t// http://paulbourke.net/stereographics/stereorender/\\n\\n    \\t\\t\\t\\tvar projectionMatrix = camera.projectionMatrix.clone();\\n    \\t\\t\\t\\tvar eyeSep = this.eyeSep / 2;\\n    \\t\\t\\t\\tvar eyeSepOnProjection = eyeSep * near / focus;\\n    \\t\\t\\t\\tvar ymax = ( near * Math.tan( exports.Math.DEG2RAD * fov * 0.5 ) ) / zoom;\\n    \\t\\t\\t\\tvar xmin, xmax;\\n\\n    \\t\\t\\t\\t// translate xOffset\\n\\n    \\t\\t\\t\\teyeLeft.elements[ 12 ] = - eyeSep;\\n    \\t\\t\\t\\teyeRight.elements[ 12 ] = eyeSep;\\n\\n    \\t\\t\\t\\t// for left eye\\n\\n    \\t\\t\\t\\txmin = - ymax * aspect + eyeSepOnProjection;\\n    \\t\\t\\t\\txmax = ymax * aspect + eyeSepOnProjection;\\n\\n    \\t\\t\\t\\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\\n    \\t\\t\\t\\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\\n\\n    \\t\\t\\t\\tthis.cameraL.projectionMatrix.copy( projectionMatrix );\\n\\n    \\t\\t\\t\\t// for right eye\\n\\n    \\t\\t\\t\\txmin = - ymax * aspect - eyeSepOnProjection;\\n    \\t\\t\\t\\txmax = ymax * aspect - eyeSepOnProjection;\\n\\n    \\t\\t\\t\\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\\n    \\t\\t\\t\\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\\n\\n    \\t\\t\\t\\tthis.cameraR.projectionMatrix.copy( projectionMatrix );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( eyeLeft );\\n    \\t\\t\\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( eyeRight );\\n\\n    \\t\\t};\\n\\n    \\t} )()\\n\\n    } );\\n\\n    /**\\n     * Camera for rendering cube maps\\n     *\\t- renders scene into axis-aligned cube\\n     *\\n     * @author alteredq / http://alteredqualia.com/\\n     */\\n\\n    function CubeCamera( near, far, cubeResolution ) {\\n\\n    \\tObject3D.call( this );\\n\\n    \\tthis.type = 'CubeCamera';\\n\\n    \\tvar fov = 90, aspect = 1;\\n\\n    \\tvar cameraPX = new PerspectiveCamera( fov, aspect, near, far );\\n    \\tcameraPX.up.set( 0, - 1, 0 );\\n    \\tcameraPX.lookAt( new Vector3( 1, 0, 0 ) );\\n    \\tthis.add( cameraPX );\\n\\n    \\tvar cameraNX = new PerspectiveCamera( fov, aspect, near, far );\\n    \\tcameraNX.up.set( 0, - 1, 0 );\\n    \\tcameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\\n    \\tthis.add( cameraNX );\\n\\n    \\tvar cameraPY = new PerspectiveCamera( fov, aspect, near, far );\\n    \\tcameraPY.up.set( 0, 0, 1 );\\n    \\tcameraPY.lookAt( new Vector3( 0, 1, 0 ) );\\n    \\tthis.add( cameraPY );\\n\\n    \\tvar cameraNY = new PerspectiveCamera( fov, aspect, near, far );\\n    \\tcameraNY.up.set( 0, 0, - 1 );\\n    \\tcameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\\n    \\tthis.add( cameraNY );\\n\\n    \\tvar cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\\n    \\tcameraPZ.up.set( 0, - 1, 0 );\\n    \\tcameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\\n    \\tthis.add( cameraPZ );\\n\\n    \\tvar cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\\n    \\tcameraNZ.up.set( 0, - 1, 0 );\\n    \\tcameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\\n    \\tthis.add( cameraNZ );\\n\\n    \\tvar options = { format: RGBFormat, magFilter: LinearFilter, minFilter: LinearFilter };\\n\\n    \\tthis.renderTarget = new WebGLRenderTargetCube( cubeResolution, cubeResolution, options );\\n\\n    \\tthis.updateCubeMap = function ( renderer, scene ) {\\n\\n    \\t\\tif ( this.parent === null ) this.updateMatrixWorld();\\n\\n    \\t\\tvar renderTarget = this.renderTarget;\\n    \\t\\tvar generateMipmaps = renderTarget.texture.generateMipmaps;\\n\\n    \\t\\trenderTarget.texture.generateMipmaps = false;\\n\\n    \\t\\trenderTarget.activeCubeFace = 0;\\n    \\t\\trenderer.render( scene, cameraPX, renderTarget );\\n\\n    \\t\\trenderTarget.activeCubeFace = 1;\\n    \\t\\trenderer.render( scene, cameraNX, renderTarget );\\n\\n    \\t\\trenderTarget.activeCubeFace = 2;\\n    \\t\\trenderer.render( scene, cameraPY, renderTarget );\\n\\n    \\t\\trenderTarget.activeCubeFace = 3;\\n    \\t\\trenderer.render( scene, cameraNY, renderTarget );\\n\\n    \\t\\trenderTarget.activeCubeFace = 4;\\n    \\t\\trenderer.render( scene, cameraPZ, renderTarget );\\n\\n    \\t\\trenderTarget.texture.generateMipmaps = generateMipmaps;\\n\\n    \\t\\trenderTarget.activeCubeFace = 5;\\n    \\t\\trenderer.render( scene, cameraNZ, renderTarget );\\n\\n    \\t\\trenderer.setRenderTarget( null );\\n\\n    \\t};\\n\\n    }\\n\\n    CubeCamera.prototype = Object.create( Object3D.prototype );\\n    CubeCamera.prototype.constructor = CubeCamera;\\n\\n    function AudioListener() {\\n\\n    \\tObject3D.call( this );\\n\\n    \\tthis.type = 'AudioListener';\\n\\n    \\tthis.context = getAudioContext();\\n\\n    \\tthis.gain = this.context.createGain();\\n    \\tthis.gain.connect( this.context.destination );\\n\\n    \\tthis.filter = null;\\n\\n    }\\n\\n    AudioListener.prototype = Object.assign( Object.create( Object3D.prototype ), {\\n\\n    \\tconstructor: AudioListener,\\n\\n    \\tgetInput: function () {\\n\\n    \\t\\treturn this.gain;\\n\\n    \\t},\\n\\n    \\tremoveFilter: function ( ) {\\n\\n    \\t\\tif ( this.filter !== null ) {\\n\\n    \\t\\t\\tthis.gain.disconnect( this.filter );\\n    \\t\\t\\tthis.filter.disconnect( this.context.destination );\\n    \\t\\t\\tthis.gain.connect( this.context.destination );\\n    \\t\\t\\tthis.filter = null;\\n\\n    \\t\\t}\\n\\n    \\t},\\n\\n    \\tgetFilter: function () {\\n\\n    \\t\\treturn this.filter;\\n\\n    \\t},\\n\\n    \\tsetFilter: function ( value ) {\\n\\n    \\t\\tif ( this.filter !== null ) {\\n\\n    \\t\\t\\tthis.gain.disconnect( this.filter );\\n    \\t\\t\\tthis.filter.disconnect( this.context.destination );\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\tthis.gain.disconnect( this.context.destination );\\n\\n    \\t\\t}\\n\\n    \\t\\tthis.filter = value;\\n    \\t\\tthis.gain.connect( this.filter );\\n    \\t\\tthis.filter.connect( this.context.destination );\\n\\n    \\t},\\n\\n    \\tgetMasterVolume: function () {\\n\\n    \\t\\treturn this.gain.gain.value;\\n\\n    \\t},\\n\\n    \\tsetMasterVolume: function ( value ) {\\n\\n    \\t\\tthis.gain.gain.value = value;\\n\\n    \\t},\\n\\n    \\tupdateMatrixWorld: ( function () {\\n\\n    \\t\\tvar position = new Vector3();\\n    \\t\\tvar quaternion = new Quaternion();\\n    \\t\\tvar scale = new Vector3();\\n\\n    \\t\\tvar orientation = new Vector3();\\n\\n    \\t\\treturn function updateMatrixWorld( force ) {\\n\\n    \\t\\t\\tObject3D.prototype.updateMatrixWorld.call( this, force );\\n\\n    \\t\\t\\tvar listener = this.context.listener;\\n    \\t\\t\\tvar up = this.up;\\n\\n    \\t\\t\\tthis.matrixWorld.decompose( position, quaternion, scale );\\n\\n    \\t\\t\\torientation.set( 0, 0, - 1 ).applyQuaternion( quaternion );\\n\\n    \\t\\t\\tlistener.setPosition( position.x, position.y, position.z );\\n    \\t\\t\\tlistener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );\\n\\n    \\t\\t};\\n\\n    \\t} )()\\n\\n    } );\\n\\n    function Audio( listener ) {\\n\\n    \\tObject3D.call( this );\\n\\n    \\tthis.type = 'Audio';\\n\\n    \\tthis.context = listener.context;\\n    \\tthis.source = this.context.createBufferSource();\\n    \\tthis.source.onended = this.onEnded.bind( this );\\n\\n    \\tthis.gain = this.context.createGain();\\n    \\tthis.gain.connect( listener.getInput() );\\n\\n    \\tthis.autoplay = false;\\n\\n    \\tthis.startTime = 0;\\n    \\tthis.playbackRate = 1;\\n    \\tthis.isPlaying = false;\\n    \\tthis.hasPlaybackControl = true;\\n    \\tthis.sourceType = 'empty';\\n\\n    \\tthis.filters = [];\\n\\n    }\\n\\n    Audio.prototype = Object.assign( Object.create( Object3D.prototype ), {\\n\\n    \\tconstructor: Audio,\\n\\n    \\tgetOutput: function () {\\n\\n    \\t\\treturn this.gain;\\n\\n    \\t},\\n\\n    \\tsetNodeSource: function ( audioNode ) {\\n\\n    \\t\\tthis.hasPlaybackControl = false;\\n    \\t\\tthis.sourceType = 'audioNode';\\n    \\t\\tthis.source = audioNode;\\n    \\t\\tthis.connect();\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsetBuffer: function ( audioBuffer ) {\\n\\n    \\t\\tthis.source.buffer = audioBuffer;\\n    \\t\\tthis.sourceType = 'buffer';\\n\\n    \\t\\tif ( this.autoplay ) this.play();\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tplay: function () {\\n\\n    \\t\\tif ( this.isPlaying === true ) {\\n\\n    \\t\\t\\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\\n    \\t\\t\\treturn;\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( this.hasPlaybackControl === false ) {\\n\\n    \\t\\t\\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\\n    \\t\\t\\treturn;\\n\\n    \\t\\t}\\n\\n    \\t\\tvar source = this.context.createBufferSource();\\n\\n    \\t\\tsource.buffer = this.source.buffer;\\n    \\t\\tsource.loop = this.source.loop;\\n    \\t\\tsource.onended = this.source.onended;\\n    \\t\\tsource.start( 0, this.startTime );\\n    \\t\\tsource.playbackRate.value = this.playbackRate;\\n\\n    \\t\\tthis.isPlaying = true;\\n\\n    \\t\\tthis.source = source;\\n\\n    \\t\\treturn this.connect();\\n\\n    \\t},\\n\\n    \\tpause: function () {\\n\\n    \\t\\tif ( this.hasPlaybackControl === false ) {\\n\\n    \\t\\t\\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\\n    \\t\\t\\treturn;\\n\\n    \\t\\t}\\n\\n    \\t\\tthis.source.stop();\\n    \\t\\tthis.startTime = this.context.currentTime;\\n    \\t\\tthis.isPlaying = false;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tstop: function () {\\n\\n    \\t\\tif ( this.hasPlaybackControl === false ) {\\n\\n    \\t\\t\\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\\n    \\t\\t\\treturn;\\n\\n    \\t\\t}\\n\\n    \\t\\tthis.source.stop();\\n    \\t\\tthis.startTime = 0;\\n    \\t\\tthis.isPlaying = false;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tconnect: function () {\\n\\n    \\t\\tif ( this.filters.length > 0 ) {\\n\\n    \\t\\t\\tthis.source.connect( this.filters[ 0 ] );\\n\\n    \\t\\t\\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\\n\\n    \\t\\t\\t\\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\tthis.source.connect( this.getOutput() );\\n\\n    \\t\\t}\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tdisconnect: function () {\\n\\n    \\t\\tif ( this.filters.length > 0 ) {\\n\\n    \\t\\t\\tthis.source.disconnect( this.filters[ 0 ] );\\n\\n    \\t\\t\\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\\n\\n    \\t\\t\\t\\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\tthis.source.disconnect( this.getOutput() );\\n\\n    \\t\\t}\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tgetFilters: function () {\\n\\n    \\t\\treturn this.filters;\\n\\n    \\t},\\n\\n    \\tsetFilters: function ( value ) {\\n\\n    \\t\\tif ( ! value ) value = [];\\n\\n    \\t\\tif ( this.isPlaying === true ) {\\n\\n    \\t\\t\\tthis.disconnect();\\n    \\t\\t\\tthis.filters = value;\\n    \\t\\t\\tthis.connect();\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\tthis.filters = value;\\n\\n    \\t\\t}\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tgetFilter: function () {\\n\\n    \\t\\treturn this.getFilters()[ 0 ];\\n\\n    \\t},\\n\\n    \\tsetFilter: function ( filter ) {\\n\\n    \\t\\treturn this.setFilters( filter ? [ filter ] : [] );\\n\\n    \\t},\\n\\n    \\tsetPlaybackRate: function ( value ) {\\n\\n    \\t\\tif ( this.hasPlaybackControl === false ) {\\n\\n    \\t\\t\\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\\n    \\t\\t\\treturn;\\n\\n    \\t\\t}\\n\\n    \\t\\tthis.playbackRate = value;\\n\\n    \\t\\tif ( this.isPlaying === true ) {\\n\\n    \\t\\t\\tthis.source.playbackRate.value = this.playbackRate;\\n\\n    \\t\\t}\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tgetPlaybackRate: function () {\\n\\n    \\t\\treturn this.playbackRate;\\n\\n    \\t},\\n\\n    \\tonEnded: function () {\\n\\n    \\t\\tthis.isPlaying = false;\\n\\n    \\t},\\n\\n    \\tgetLoop: function () {\\n\\n    \\t\\tif ( this.hasPlaybackControl === false ) {\\n\\n    \\t\\t\\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\\n    \\t\\t\\treturn false;\\n\\n    \\t\\t}\\n\\n    \\t\\treturn this.source.loop;\\n\\n    \\t},\\n\\n    \\tsetLoop: function ( value ) {\\n\\n    \\t\\tif ( this.hasPlaybackControl === false ) {\\n\\n    \\t\\t\\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\\n    \\t\\t\\treturn;\\n\\n    \\t\\t}\\n\\n    \\t\\tthis.source.loop = value;\\n\\n    \\t},\\n\\n    \\tgetVolume: function () {\\n\\n    \\t\\treturn this.gain.gain.value;\\n\\n    \\t},\\n\\n\\n    \\tsetVolume: function ( value ) {\\n\\n    \\t\\tthis.gain.gain.value = value;\\n\\n    \\t\\treturn this;\\n\\n    \\t}\\n\\n    } );\\n\\n    function PositionalAudio( listener ) {\\n\\n    \\tAudio.call( this, listener );\\n\\n    \\tthis.panner = this.context.createPanner();\\n    \\tthis.panner.connect( this.gain );\\n\\n    }\\n\\n    PositionalAudio.prototype = Object.assign( Object.create( Audio.prototype ), {\\n\\n    \\tconstructor: PositionalAudio,\\n\\n    \\tgetOutput: function () {\\n\\n    \\t\\treturn this.panner;\\n\\n    \\t},\\n\\n    \\tgetRefDistance: function () {\\n\\n    \\t\\treturn this.panner.refDistance;\\n\\n    \\t},\\n\\n    \\tsetRefDistance: function ( value ) {\\n\\n    \\t\\tthis.panner.refDistance = value;\\n\\n    \\t},\\n\\n    \\tgetRolloffFactor: function () {\\n\\n    \\t\\treturn this.panner.rolloffFactor;\\n\\n    \\t},\\n\\n    \\tsetRolloffFactor: function ( value ) {\\n\\n    \\t\\tthis.panner.rolloffFactor = value;\\n\\n    \\t},\\n\\n    \\tgetDistanceModel: function () {\\n\\n    \\t\\treturn this.panner.distanceModel;\\n\\n    \\t},\\n\\n    \\tsetDistanceModel: function ( value ) {\\n\\n    \\t\\tthis.panner.distanceModel = value;\\n\\n    \\t},\\n\\n    \\tgetMaxDistance: function () {\\n\\n    \\t\\treturn this.panner.maxDistance;\\n\\n    \\t},\\n\\n    \\tsetMaxDistance: function ( value ) {\\n\\n    \\t\\tthis.panner.maxDistance = value;\\n\\n    \\t},\\n\\n    \\tupdateMatrixWorld: ( function () {\\n\\n    \\t\\tvar position = new Vector3();\\n\\n    \\t\\treturn function updateMatrixWorld( force ) {\\n\\n    \\t\\t\\tObject3D.prototype.updateMatrixWorld.call( this, force );\\n\\n    \\t\\t\\tposition.setFromMatrixPosition( this.matrixWorld );\\n\\n    \\t\\t\\tthis.panner.setPosition( position.x, position.y, position.z );\\n\\n    \\t\\t};\\n\\n    \\t} )()\\n\\n\\n    } );\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     */\\n\\n    function AudioAnalyser( audio, fftSize ) {\\n\\n    \\tthis.analyser = audio.context.createAnalyser();\\n    \\tthis.analyser.fftSize = fftSize !== undefined ? fftSize : 2048;\\n\\n    \\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\\n\\n    \\taudio.getOutput().connect( this.analyser );\\n\\n    }\\n\\n    Object.assign( AudioAnalyser.prototype, {\\n\\n    \\tgetFrequencyData: function () {\\n\\n    \\t\\tthis.analyser.getByteFrequencyData( this.data );\\n\\n    \\t\\treturn this.data;\\n\\n    \\t},\\n\\n    \\tgetAverageFrequency: function () {\\n\\n    \\t\\tvar value = 0, data = this.getFrequencyData();\\n\\n    \\t\\tfor ( var i = 0; i < data.length; i ++ ) {\\n\\n    \\t\\t\\tvalue += data[ i ];\\n\\n    \\t\\t}\\n\\n    \\t\\treturn value / data.length;\\n\\n    \\t}\\n\\n    } );\\n\\n    /**\\n     *\\n     * Buffered scene graph property that allows weighted accumulation.\\n     *\\n     *\\n     * @author Ben Houston / http://clara.io/\\n     * @author David Sarno / http://lighthaus.us/\\n     * @author tschw\\n     */\\n\\n    function PropertyMixer( binding, typeName, valueSize ) {\\n\\n    \\tthis.binding = binding;\\n    \\tthis.valueSize = valueSize;\\n\\n    \\tvar bufferType = Float64Array,\\n    \\t\\tmixFunction;\\n\\n    \\tswitch ( typeName ) {\\n\\n    \\t\\tcase 'quaternion':\\t\\t\\tmixFunction = this._slerp;\\t\\tbreak;\\n\\n    \\t\\tcase 'string':\\n    \\t\\tcase 'bool':\\n\\n    \\t\\t\\tbufferType = Array,\\t\\tmixFunction = this._select;\\t\\tbreak;\\n\\n    \\t\\tdefault:\\t\\t\\t\\t\\tmixFunction = this._lerp;\\n\\n    \\t}\\n\\n    \\tthis.buffer = new bufferType( valueSize * 4 );\\n    \\t// layout: [ incoming | accu0 | accu1 | orig ]\\n    \\t//\\n    \\t// interpolators can use .buffer as their .result\\n    \\t// the data then goes to 'incoming'\\n    \\t//\\n    \\t// 'accu0' and 'accu1' are used frame-interleaved for\\n    \\t// the cumulative result and are compared to detect\\n    \\t// changes\\n    \\t//\\n    \\t// 'orig' stores the original state of the property\\n\\n    \\tthis._mixBufferRegion = mixFunction;\\n\\n    \\tthis.cumulativeWeight = 0;\\n\\n    \\tthis.useCount = 0;\\n    \\tthis.referenceCount = 0;\\n\\n    }\\n\\n    PropertyMixer.prototype = {\\n\\n    \\tconstructor: PropertyMixer,\\n\\n    \\t// accumulate data in the 'incoming' region into 'accu<i>'\\n    \\taccumulate: function( accuIndex, weight ) {\\n\\n    \\t\\t// note: happily accumulating nothing when weight = 0, the caller knows\\n    \\t\\t// the weight and shouldn't have made the call in the first place\\n\\n    \\t\\tvar buffer = this.buffer,\\n    \\t\\t\\tstride = this.valueSize,\\n    \\t\\t\\toffset = accuIndex * stride + stride,\\n\\n    \\t\\t\\tcurrentWeight = this.cumulativeWeight;\\n\\n    \\t\\tif ( currentWeight === 0 ) {\\n\\n    \\t\\t\\t// accuN := incoming * weight\\n\\n    \\t\\t\\tfor ( var i = 0; i !== stride; ++ i ) {\\n\\n    \\t\\t\\t\\tbuffer[ offset + i ] = buffer[ i ];\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tcurrentWeight = weight;\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\t// accuN := accuN + incoming * weight\\n\\n    \\t\\t\\tcurrentWeight += weight;\\n    \\t\\t\\tvar mix = weight / currentWeight;\\n    \\t\\t\\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\\n\\n    \\t\\t}\\n\\n    \\t\\tthis.cumulativeWeight = currentWeight;\\n\\n    \\t},\\n\\n    \\t// apply the state of 'accu<i>' to the binding when accus differ\\n    \\tapply: function( accuIndex ) {\\n\\n    \\t\\tvar stride = this.valueSize,\\n    \\t\\t\\tbuffer = this.buffer,\\n    \\t\\t\\toffset = accuIndex * stride + stride,\\n\\n    \\t\\t\\tweight = this.cumulativeWeight,\\n\\n    \\t\\t\\tbinding = this.binding;\\n\\n    \\t\\tthis.cumulativeWeight = 0;\\n\\n    \\t\\tif ( weight < 1 ) {\\n\\n    \\t\\t\\t// accuN := accuN + original * ( 1 - cumulativeWeight )\\n\\n    \\t\\t\\tvar originalValueOffset = stride * 3;\\n\\n    \\t\\t\\tthis._mixBufferRegion(\\n    \\t\\t\\t\\t\\tbuffer, offset, originalValueOffset, 1 - weight, stride );\\n\\n    \\t\\t}\\n\\n    \\t\\tfor ( var i = stride, e = stride + stride; i !== e; ++ i ) {\\n\\n    \\t\\t\\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\\n\\n    \\t\\t\\t\\t// value has changed -> update scene graph\\n\\n    \\t\\t\\t\\tbinding.setValue( buffer, offset );\\n    \\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t},\\n\\n    \\t// remember the state of the bound property and copy it to both accus\\n    \\tsaveOriginalState: function() {\\n\\n    \\t\\tvar binding = this.binding;\\n\\n    \\t\\tvar buffer = this.buffer,\\n    \\t\\t\\tstride = this.valueSize,\\n\\n    \\t\\t\\toriginalValueOffset = stride * 3;\\n\\n    \\t\\tbinding.getValue( buffer, originalValueOffset );\\n\\n    \\t\\t// accu[0..1] := orig -- initially detect changes against the original\\n    \\t\\tfor ( var i = stride, e = originalValueOffset; i !== e; ++ i ) {\\n\\n    \\t\\t\\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\\n\\n    \\t\\t}\\n\\n    \\t\\tthis.cumulativeWeight = 0;\\n\\n    \\t},\\n\\n    \\t// apply the state previously taken via 'saveOriginalState' to the binding\\n    \\trestoreOriginalState: function() {\\n\\n    \\t\\tvar originalValueOffset = this.valueSize * 3;\\n    \\t\\tthis.binding.setValue( this.buffer, originalValueOffset );\\n\\n    \\t},\\n\\n\\n    \\t// mix functions\\n\\n    \\t_select: function( buffer, dstOffset, srcOffset, t, stride ) {\\n\\n    \\t\\tif ( t >= 0.5 ) {\\n\\n    \\t\\t\\tfor ( var i = 0; i !== stride; ++ i ) {\\n\\n    \\t\\t\\t\\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t},\\n\\n    \\t_slerp: function( buffer, dstOffset, srcOffset, t, stride ) {\\n\\n    \\t\\tQuaternion.slerpFlat( buffer, dstOffset,\\n    \\t\\t\\t\\tbuffer, dstOffset, buffer, srcOffset, t );\\n\\n    \\t},\\n\\n    \\t_lerp: function( buffer, dstOffset, srcOffset, t, stride ) {\\n\\n    \\t\\tvar s = 1 - t;\\n\\n    \\t\\tfor ( var i = 0; i !== stride; ++ i ) {\\n\\n    \\t\\t\\tvar j = dstOffset + i;\\n\\n    \\t\\t\\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    };\\n\\n    /**\\n     *\\n     * A reference to a real property in the scene graph.\\n     *\\n     *\\n     * @author Ben Houston / http://clara.io/\\n     * @author David Sarno / http://lighthaus.us/\\n     * @author tschw\\n     */\\n\\n    function PropertyBinding( rootNode, path, parsedPath ) {\\n\\n    \\tthis.path = path;\\n    \\tthis.parsedPath = parsedPath ||\\n    \\t\\t\\tPropertyBinding.parseTrackName( path );\\n\\n    \\tthis.node = PropertyBinding.findNode(\\n    \\t\\t\\trootNode, this.parsedPath.nodeName ) || rootNode;\\n\\n    \\tthis.rootNode = rootNode;\\n\\n    }\\n\\n    PropertyBinding.prototype = {\\n\\n    \\tconstructor: PropertyBinding,\\n\\n    \\tgetValue: function getValue_unbound( targetArray, offset ) {\\n\\n    \\t\\tthis.bind();\\n    \\t\\tthis.getValue( targetArray, offset );\\n\\n    \\t\\t// Note: This class uses a State pattern on a per-method basis:\\n    \\t\\t// 'bind' sets 'this.getValue' / 'setValue' and shadows the\\n    \\t\\t// prototype version of these methods with one that represents\\n    \\t\\t// the bound state. When the property is not found, the methods\\n    \\t\\t// become no-ops.\\n\\n    \\t},\\n\\n    \\tsetValue: function getValue_unbound( sourceArray, offset ) {\\n\\n    \\t\\tthis.bind();\\n    \\t\\tthis.setValue( sourceArray, offset );\\n\\n    \\t},\\n\\n    \\t// create getter / setter pair for a property in the scene graph\\n    \\tbind: function() {\\n\\n    \\t\\tvar targetObject = this.node,\\n    \\t\\t\\tparsedPath = this.parsedPath,\\n\\n    \\t\\t\\tobjectName = parsedPath.objectName,\\n    \\t\\t\\tpropertyName = parsedPath.propertyName,\\n    \\t\\t\\tpropertyIndex = parsedPath.propertyIndex;\\n\\n    \\t\\tif ( ! targetObject ) {\\n\\n    \\t\\t\\ttargetObject = PropertyBinding.findNode(\\n    \\t\\t\\t\\t\\tthis.rootNode, parsedPath.nodeName ) || this.rootNode;\\n\\n    \\t\\t\\tthis.node = targetObject;\\n\\n    \\t\\t}\\n\\n    \\t\\t// set fail state so we can just 'return' on error\\n    \\t\\tthis.getValue = this._getValue_unavailable;\\n    \\t\\tthis.setValue = this._setValue_unavailable;\\n\\n     \\t\\t// ensure there is a value node\\n    \\t\\tif ( ! targetObject ) {\\n\\n    \\t\\t\\tconsole.error( \\\"  trying to update node for track: \\\" + this.path + \\\" but it wasn't found.\\\" );\\n    \\t\\t\\treturn;\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( objectName ) {\\n\\n    \\t\\t\\tvar objectIndex = parsedPath.objectIndex;\\n\\n    \\t\\t\\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\\n    \\t\\t\\tswitch ( objectName ) {\\n\\n    \\t\\t\\t\\tcase 'materials':\\n\\n    \\t\\t\\t\\t\\tif ( ! targetObject.material ) {\\n\\n    \\t\\t\\t\\t\\t\\tconsole.error( '  can not bind to material as node does not have a material', this );\\n    \\t\\t\\t\\t\\t\\treturn;\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\tif ( ! targetObject.material.materials ) {\\n\\n    \\t\\t\\t\\t\\t\\tconsole.error( '  can not bind to material.materials as node.material does not have a materials array', this );\\n    \\t\\t\\t\\t\\t\\treturn;\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\ttargetObject = targetObject.material.materials;\\n\\n    \\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\tcase 'bones':\\n\\n    \\t\\t\\t\\t\\tif ( ! targetObject.skeleton ) {\\n\\n    \\t\\t\\t\\t\\t\\tconsole.error( '  can not bind to bones as node does not have a skeleton', this );\\n    \\t\\t\\t\\t\\t\\treturn;\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\t// potential future optimization: skip this if propertyIndex is already an integer\\n    \\t\\t\\t\\t\\t// and convert the integer string to a true integer.\\n\\n    \\t\\t\\t\\t\\ttargetObject = targetObject.skeleton.bones;\\n\\n    \\t\\t\\t\\t\\t// support resolving morphTarget names into indices.\\n    \\t\\t\\t\\t\\tfor ( var i = 0; i < targetObject.length; i ++ ) {\\n\\n    \\t\\t\\t\\t\\t\\tif ( targetObject[ i ].name === objectIndex ) {\\n\\n    \\t\\t\\t\\t\\t\\t\\tobjectIndex = i;\\n    \\t\\t\\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\tdefault:\\n\\n    \\t\\t\\t\\t\\tif ( targetObject[ objectName ] === undefined ) {\\n\\n    \\t\\t\\t\\t\\t\\tconsole.error( '  can not bind to objectName of node, undefined', this );\\n    \\t\\t\\t\\t\\t\\treturn;\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\ttargetObject = targetObject[ objectName ];\\n\\n    \\t\\t\\t}\\n\\n\\n    \\t\\t\\tif ( objectIndex !== undefined ) {\\n\\n    \\t\\t\\t\\tif ( targetObject[ objectIndex ] === undefined ) {\\n\\n    \\t\\t\\t\\t\\tconsole.error( \\\"  trying to bind to objectIndex of objectName, but is undefined:\\\", this, targetObject );\\n    \\t\\t\\t\\t\\treturn;\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\ttargetObject = targetObject[ objectIndex ];\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\t// resolve property\\n    \\t\\tvar nodeProperty = targetObject[ propertyName ];\\n\\n    \\t\\tif ( nodeProperty === undefined ) {\\n\\n    \\t\\t\\tvar nodeName = parsedPath.nodeName;\\n\\n    \\t\\t\\tconsole.error( \\\"  trying to update property for track: \\\" + nodeName +\\n    \\t\\t\\t\\t\\t'.' + propertyName + \\\" but it wasn't found.\\\", targetObject );\\n    \\t\\t\\treturn;\\n\\n    \\t\\t}\\n\\n    \\t\\t// determine versioning scheme\\n    \\t\\tvar versioning = this.Versioning.None;\\n\\n    \\t\\tif ( targetObject.needsUpdate !== undefined ) { // material\\n\\n    \\t\\t\\tversioning = this.Versioning.NeedsUpdate;\\n    \\t\\t\\tthis.targetObject = targetObject;\\n\\n    \\t\\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\\n\\n    \\t\\t\\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\\n    \\t\\t\\tthis.targetObject = targetObject;\\n\\n    \\t\\t}\\n\\n    \\t\\t// determine how the property gets bound\\n    \\t\\tvar bindingType = this.BindingType.Direct;\\n\\n    \\t\\tif ( propertyIndex !== undefined ) {\\n    \\t\\t\\t// access a sub element of the property array (only primitives are supported right now)\\n\\n    \\t\\t\\tif ( propertyName === \\\"morphTargetInfluences\\\" ) {\\n    \\t\\t\\t\\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\\n\\n    \\t\\t\\t\\t// support resolving morphTarget names into indices.\\n    \\t\\t\\t\\tif ( ! targetObject.geometry ) {\\n\\n    \\t\\t\\t\\t\\tconsole.error( '  can not bind to morphTargetInfluences becasuse node does not have a geometry', this );\\n    \\t\\t\\t\\t\\treturn;\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\tif ( ! targetObject.geometry.morphTargets ) {\\n\\n    \\t\\t\\t\\t\\tconsole.error( '  can not bind to morphTargetInfluences becasuse node does not have a geometry.morphTargets', this );\\n    \\t\\t\\t\\t\\treturn;\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\tfor ( var i = 0; i < this.node.geometry.morphTargets.length; i ++ ) {\\n\\n    \\t\\t\\t\\t\\tif ( targetObject.geometry.morphTargets[ i ].name === propertyIndex ) {\\n\\n    \\t\\t\\t\\t\\t\\tpropertyIndex = i;\\n    \\t\\t\\t\\t\\t\\tbreak;\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tbindingType = this.BindingType.ArrayElement;\\n\\n    \\t\\t\\tthis.resolvedProperty = nodeProperty;\\n    \\t\\t\\tthis.propertyIndex = propertyIndex;\\n\\n    \\t\\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\\n    \\t\\t\\t// must use copy for Object3D.Euler/Quaternion\\n\\n    \\t\\t\\tbindingType = this.BindingType.HasFromToArray;\\n\\n    \\t\\t\\tthis.resolvedProperty = nodeProperty;\\n\\n    \\t\\t} else if ( nodeProperty.length !== undefined ) {\\n\\n    \\t\\t\\tbindingType = this.BindingType.EntireArray;\\n\\n    \\t\\t\\tthis.resolvedProperty = nodeProperty;\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\tthis.propertyName = propertyName;\\n\\n    \\t\\t}\\n\\n    \\t\\t// select getter / setter\\n    \\t\\tthis.getValue = this.GetterByBindingType[ bindingType ];\\n    \\t\\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\\n\\n    \\t},\\n\\n    \\tunbind: function() {\\n\\n    \\t\\tthis.node = null;\\n\\n    \\t\\t// back to the prototype version of getValue / setValue\\n    \\t\\t// note: avoiding to mutate the shape of 'this' via 'delete'\\n    \\t\\tthis.getValue = this._getValue_unbound;\\n    \\t\\tthis.setValue = this._setValue_unbound;\\n\\n    \\t}\\n\\n    };\\n\\n    Object.assign( PropertyBinding.prototype, { // prototype, continued\\n\\n    \\t// these are used to \\\"bind\\\" a nonexistent property\\n    \\t_getValue_unavailable: function() {},\\n    \\t_setValue_unavailable: function() {},\\n\\n    \\t// initial state of these methods that calls 'bind'\\n    \\t_getValue_unbound: PropertyBinding.prototype.getValue,\\n    \\t_setValue_unbound: PropertyBinding.prototype.setValue,\\n\\n    \\tBindingType: {\\n    \\t\\tDirect: 0,\\n    \\t\\tEntireArray: 1,\\n    \\t\\tArrayElement: 2,\\n    \\t\\tHasFromToArray: 3\\n    \\t},\\n\\n    \\tVersioning: {\\n    \\t\\tNone: 0,\\n    \\t\\tNeedsUpdate: 1,\\n    \\t\\tMatrixWorldNeedsUpdate: 2\\n    \\t},\\n\\n    \\tGetterByBindingType: [\\n\\n    \\t\\tfunction getValue_direct( buffer, offset ) {\\n\\n    \\t\\t\\tbuffer[ offset ] = this.node[ this.propertyName ];\\n\\n    \\t\\t},\\n\\n    \\t\\tfunction getValue_array( buffer, offset ) {\\n\\n    \\t\\t\\tvar source = this.resolvedProperty;\\n\\n    \\t\\t\\tfor ( var i = 0, n = source.length; i !== n; ++ i ) {\\n\\n    \\t\\t\\t\\tbuffer[ offset ++ ] = source[ i ];\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t},\\n\\n    \\t\\tfunction getValue_arrayElement( buffer, offset ) {\\n\\n    \\t\\t\\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\\n\\n    \\t\\t},\\n\\n    \\t\\tfunction getValue_toArray( buffer, offset ) {\\n\\n    \\t\\t\\tthis.resolvedProperty.toArray( buffer, offset );\\n\\n    \\t\\t}\\n\\n    \\t],\\n\\n    \\tSetterByBindingTypeAndVersioning: [\\n\\n    \\t\\t[\\n    \\t\\t\\t// Direct\\n\\n    \\t\\t\\tfunction setValue_direct( buffer, offset ) {\\n\\n    \\t\\t\\t\\tthis.node[ this.propertyName ] = buffer[ offset ];\\n\\n    \\t\\t\\t},\\n\\n    \\t\\t\\tfunction setValue_direct_setNeedsUpdate( buffer, offset ) {\\n\\n    \\t\\t\\t\\tthis.node[ this.propertyName ] = buffer[ offset ];\\n    \\t\\t\\t\\tthis.targetObject.needsUpdate = true;\\n\\n    \\t\\t\\t},\\n\\n    \\t\\t\\tfunction setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\\n\\n    \\t\\t\\t\\tthis.node[ this.propertyName ] = buffer[ offset ];\\n    \\t\\t\\t\\tthis.targetObject.matrixWorldNeedsUpdate = true;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t], [\\n\\n    \\t\\t\\t// EntireArray\\n\\n    \\t\\t\\tfunction setValue_array( buffer, offset ) {\\n\\n    \\t\\t\\t\\tvar dest = this.resolvedProperty;\\n\\n    \\t\\t\\t\\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\\n\\n    \\t\\t\\t\\t\\tdest[ i ] = buffer[ offset ++ ];\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t},\\n\\n    \\t\\t\\tfunction setValue_array_setNeedsUpdate( buffer, offset ) {\\n\\n    \\t\\t\\t\\tvar dest = this.resolvedProperty;\\n\\n    \\t\\t\\t\\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\\n\\n    \\t\\t\\t\\t\\tdest[ i ] = buffer[ offset ++ ];\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\tthis.targetObject.needsUpdate = true;\\n\\n    \\t\\t\\t},\\n\\n    \\t\\t\\tfunction setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\\n\\n    \\t\\t\\t\\tvar dest = this.resolvedProperty;\\n\\n    \\t\\t\\t\\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\\n\\n    \\t\\t\\t\\t\\tdest[ i ] = buffer[ offset ++ ];\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\tthis.targetObject.matrixWorldNeedsUpdate = true;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t], [\\n\\n    \\t\\t\\t// ArrayElement\\n\\n    \\t\\t\\tfunction setValue_arrayElement( buffer, offset ) {\\n\\n    \\t\\t\\t\\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\\n\\n    \\t\\t\\t},\\n\\n    \\t\\t\\tfunction setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\\n\\n    \\t\\t\\t\\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\\n    \\t\\t\\t\\tthis.targetObject.needsUpdate = true;\\n\\n    \\t\\t\\t},\\n\\n    \\t\\t\\tfunction setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\\n\\n    \\t\\t\\t\\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\\n    \\t\\t\\t\\tthis.targetObject.matrixWorldNeedsUpdate = true;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t], [\\n\\n    \\t\\t\\t// HasToFromArray\\n\\n    \\t\\t\\tfunction setValue_fromArray( buffer, offset ) {\\n\\n    \\t\\t\\t\\tthis.resolvedProperty.fromArray( buffer, offset );\\n\\n    \\t\\t\\t},\\n\\n    \\t\\t\\tfunction setValue_fromArray_setNeedsUpdate( buffer, offset ) {\\n\\n    \\t\\t\\t\\tthis.resolvedProperty.fromArray( buffer, offset );\\n    \\t\\t\\t\\tthis.targetObject.needsUpdate = true;\\n\\n    \\t\\t\\t},\\n\\n    \\t\\t\\tfunction setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\\n\\n    \\t\\t\\t\\tthis.resolvedProperty.fromArray( buffer, offset );\\n    \\t\\t\\t\\tthis.targetObject.matrixWorldNeedsUpdate = true;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t]\\n\\n    \\t]\\n\\n    } );\\n\\n    PropertyBinding.Composite =\\n    \\t\\tfunction( targetGroup, path, optionalParsedPath ) {\\n\\n    \\tvar parsedPath = optionalParsedPath ||\\n    \\t\\t\\tPropertyBinding.parseTrackName( path );\\n\\n    \\tthis._targetGroup = targetGroup;\\n    \\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\\n\\n    };\\n\\n    PropertyBinding.Composite.prototype = {\\n\\n    \\tconstructor: PropertyBinding.Composite,\\n\\n    \\tgetValue: function( array, offset ) {\\n\\n    \\t\\tthis.bind(); // bind all binding\\n\\n    \\t\\tvar firstValidIndex = this._targetGroup.nCachedObjects_,\\n    \\t\\t\\tbinding = this._bindings[ firstValidIndex ];\\n\\n    \\t\\t// and only call .getValue on the first\\n    \\t\\tif ( binding !== undefined ) binding.getValue( array, offset );\\n\\n    \\t},\\n\\n    \\tsetValue: function( array, offset ) {\\n\\n    \\t\\tvar bindings = this._bindings;\\n\\n    \\t\\tfor ( var i = this._targetGroup.nCachedObjects_,\\n    \\t\\t\\t\\tn = bindings.length; i !== n; ++ i ) {\\n\\n    \\t\\t\\tbindings[ i ].setValue( array, offset );\\n\\n    \\t\\t}\\n\\n    \\t},\\n\\n    \\tbind: function() {\\n\\n    \\t\\tvar bindings = this._bindings;\\n\\n    \\t\\tfor ( var i = this._targetGroup.nCachedObjects_,\\n    \\t\\t\\t\\tn = bindings.length; i !== n; ++ i ) {\\n\\n    \\t\\t\\tbindings[ i ].bind();\\n\\n    \\t\\t}\\n\\n    \\t},\\n\\n    \\tunbind: function() {\\n\\n    \\t\\tvar bindings = this._bindings;\\n\\n    \\t\\tfor ( var i = this._targetGroup.nCachedObjects_,\\n    \\t\\t\\t\\tn = bindings.length; i !== n; ++ i ) {\\n\\n    \\t\\t\\tbindings[ i ].unbind();\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    };\\n\\n    PropertyBinding.create = function( root, path, parsedPath ) {\\n\\n    \\tif ( ! ( (root && root.isAnimationObjectGroup) ) ) {\\n\\n    \\t\\treturn new PropertyBinding( root, path, parsedPath );\\n\\n    \\t} else {\\n\\n    \\t\\treturn new PropertyBinding.Composite( root, path, parsedPath );\\n\\n    \\t}\\n\\n    };\\n\\n    PropertyBinding.parseTrackName = function( trackName ) {\\n\\n    \\t// matches strings in the form of:\\n    \\t//    nodeName.property\\n    \\t//    nodeName.property[accessor]\\n    \\t//    nodeName.material.property[accessor]\\n    \\t//    uuid.property[accessor]\\n    \\t//    uuid.objectName[objectIndex].propertyName[propertyIndex]\\n    \\t//    parentName/nodeName.property\\n    \\t//    parentName/parentName/nodeName.property[index]\\n    \\t//    .bone[Armature.DEF_cog].position\\n    \\t//    scene:helium_balloon_model:helium_balloon_model.position\\n    \\t// created and tested via https://regex101.com/#javascript\\n\\n    \\tvar re = /^((?:\\\\w+[\\\\/:])*)(\\\\w+)?(?:\\\\.(\\\\w+)(?:\\\\[(.+)\\\\])?)?\\\\.(\\\\w+)(?:\\\\[(.+)\\\\])?$/;\\n    \\tvar matches = re.exec( trackName );\\n\\n    \\tif ( ! matches ) {\\n\\n    \\t\\tthrow new Error( \\\"cannot parse trackName at all: \\\" + trackName );\\n\\n    \\t}\\n\\n    \\tvar results = {\\n    \\t\\t// directoryName: matches[ 1 ], // (tschw) currently unused\\n    \\t\\tnodeName: matches[ 2 ], \\t// allowed to be null, specified root node.\\n    \\t\\tobjectName: matches[ 3 ],\\n    \\t\\tobjectIndex: matches[ 4 ],\\n    \\t\\tpropertyName: matches[ 5 ],\\n    \\t\\tpropertyIndex: matches[ 6 ]\\t// allowed to be null, specifies that the whole property is set.\\n    \\t};\\n\\n    \\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\\n\\n    \\t\\tthrow new Error( \\\"can not parse propertyName from trackName: \\\" + trackName );\\n\\n    \\t}\\n\\n    \\treturn results;\\n\\n    };\\n\\n    PropertyBinding.findNode = function( root, nodeName ) {\\n\\n    \\tif ( ! nodeName || nodeName === \\\"\\\" || nodeName === \\\"root\\\" || nodeName === \\\".\\\" || nodeName === -1 || nodeName === root.name || nodeName === root.uuid ) {\\n\\n    \\t\\treturn root;\\n\\n    \\t}\\n\\n    \\t// search into skeleton bones.\\n    \\tif ( root.skeleton ) {\\n\\n    \\t\\tvar searchSkeleton = function( skeleton ) {\\n\\n    \\t\\t\\tfor( var i = 0; i < skeleton.bones.length; i ++ ) {\\n\\n    \\t\\t\\t\\tvar bone = skeleton.bones[ i ];\\n\\n    \\t\\t\\t\\tif ( bone.name === nodeName ) {\\n\\n    \\t\\t\\t\\t\\treturn bone;\\n\\n    \\t\\t\\t\\t}\\n    \\t\\t\\t}\\n\\n    \\t\\t\\treturn null;\\n\\n    \\t\\t};\\n\\n    \\t\\tvar bone = searchSkeleton( root.skeleton );\\n\\n    \\t\\tif ( bone ) {\\n\\n    \\t\\t\\treturn bone;\\n\\n    \\t\\t}\\n    \\t}\\n\\n    \\t// search into node subtree.\\n    \\tif ( root.children ) {\\n\\n    \\t\\tvar searchNodeSubtree = function( children ) {\\n\\n    \\t\\t\\tfor( var i = 0; i < children.length; i ++ ) {\\n\\n    \\t\\t\\t\\tvar childNode = children[ i ];\\n\\n    \\t\\t\\t\\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\\n\\n    \\t\\t\\t\\t\\treturn childNode;\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\tvar result = searchNodeSubtree( childNode.children );\\n\\n    \\t\\t\\t\\tif ( result ) return result;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\treturn null;\\n\\n    \\t\\t};\\n\\n    \\t\\tvar subTreeNode = searchNodeSubtree( root.children );\\n\\n    \\t\\tif ( subTreeNode ) {\\n\\n    \\t\\t\\treturn subTreeNode;\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\treturn null;\\n\\n    };\\n\\n    /**\\n     *\\n     * A group of objects that receives a shared animation state.\\n     *\\n     * Usage:\\n     *\\n     * \\t-\\tAdd objects you would otherwise pass as 'root' to the\\n     * \\t\\tconstructor or the .clipAction method of AnimationMixer.\\n     *\\n     * \\t-\\tInstead pass this object as 'root'.\\n     *\\n     * \\t-\\tYou can also add and remove objects later when the mixer\\n     * \\t\\tis running.\\n     *\\n     * Note:\\n     *\\n     *  \\tObjects of this class appear as one object to the mixer,\\n     *  \\tso cache control of the individual objects must be done\\n     *  \\ton the group.\\n     *\\n     * Limitation:\\n     *\\n     * \\t- \\tThe animated properties must be compatible among the\\n     * \\t\\tall objects in the group.\\n     *\\n     *  -\\tA single property can either be controlled through a\\n     *  \\ttarget group or directly, but not both.\\n     *\\n     * @author tschw\\n     */\\n\\n    function AnimationObjectGroup( var_args ) {\\n\\n    \\tthis.uuid = exports.Math.generateUUID();\\n\\n    \\t// cached objects followed by the active ones\\n    \\tthis._objects = Array.prototype.slice.call( arguments );\\n\\n    \\tthis.nCachedObjects_ = 0;\\t\\t\\t// threshold\\n    \\t// note: read by PropertyBinding.Composite\\n\\n    \\tvar indices = {};\\n    \\tthis._indicesByUUID = indices;\\t\\t// for bookkeeping\\n\\n    \\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\\n\\n    \\t\\tindices[ arguments[ i ].uuid ] = i;\\n\\n    \\t}\\n\\n    \\tthis._paths = [];\\t\\t\\t\\t\\t// inside: string\\n    \\tthis._parsedPaths = [];\\t\\t\\t\\t// inside: { we don't care, here }\\n    \\tthis._bindings = []; \\t\\t\\t\\t// inside: Array< PropertyBinding >\\n    \\tthis._bindingsIndicesByPath = {}; \\t// inside: indices in these arrays\\n\\n    \\tvar scope = this;\\n\\n    \\tthis.stats = {\\n\\n    \\t\\tobjects: {\\n    \\t\\t\\tget total() { return scope._objects.length; },\\n    \\t\\t\\tget inUse() { return this.total - scope.nCachedObjects_;  }\\n    \\t\\t},\\n\\n    \\t\\tget bindingsPerObject() { return scope._bindings.length; }\\n\\n    \\t};\\n\\n    }\\n\\n    AnimationObjectGroup.prototype = {\\n\\n    \\tconstructor: AnimationObjectGroup,\\n\\n    \\tisAnimationObjectGroup: true,\\n\\n    \\tadd: function( var_args ) {\\n\\n    \\t\\tvar objects = this._objects,\\n    \\t\\t\\tnObjects = objects.length,\\n    \\t\\t\\tnCachedObjects = this.nCachedObjects_,\\n    \\t\\t\\tindicesByUUID = this._indicesByUUID,\\n    \\t\\t\\tpaths = this._paths,\\n    \\t\\t\\tparsedPaths = this._parsedPaths,\\n    \\t\\t\\tbindings = this._bindings,\\n    \\t\\t\\tnBindings = bindings.length;\\n\\n    \\t\\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\\n\\n    \\t\\t\\tvar object = arguments[ i ],\\n    \\t\\t\\t\\tuuid = object.uuid,\\n    \\t\\t\\t\\tindex = indicesByUUID[ uuid ];\\n\\n    \\t\\t\\tif ( index === undefined ) {\\n\\n    \\t\\t\\t\\t// unknown object -> add it to the ACTIVE region\\n\\n    \\t\\t\\t\\tindex = nObjects ++;\\n    \\t\\t\\t\\tindicesByUUID[ uuid ] = index;\\n    \\t\\t\\t\\tobjects.push( object );\\n\\n    \\t\\t\\t\\t// accounting is done, now do the same for all bindings\\n\\n    \\t\\t\\t\\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\\n\\n    \\t\\t\\t\\t\\tbindings[ j ].push(\\n    \\t\\t\\t\\t\\t\\t\\tnew PropertyBinding(\\n    \\t\\t\\t\\t\\t\\t\\t\\tobject, paths[ j ], parsedPaths[ j ] ) );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t} else if ( index < nCachedObjects ) {\\n\\n    \\t\\t\\t\\tvar knownObject = objects[ index ];\\n\\n    \\t\\t\\t\\t// move existing object to the ACTIVE region\\n\\n    \\t\\t\\t\\tvar firstActiveIndex = -- nCachedObjects,\\n    \\t\\t\\t\\t\\tlastCachedObject = objects[ firstActiveIndex ];\\n\\n    \\t\\t\\t\\tindicesByUUID[ lastCachedObject.uuid ] = index;\\n    \\t\\t\\t\\tobjects[ index ] = lastCachedObject;\\n\\n    \\t\\t\\t\\tindicesByUUID[ uuid ] = firstActiveIndex;\\n    \\t\\t\\t\\tobjects[ firstActiveIndex ] = object;\\n\\n    \\t\\t\\t\\t// accounting is done, now do the same for all bindings\\n\\n    \\t\\t\\t\\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\\n\\n    \\t\\t\\t\\t\\tvar bindingsForPath = bindings[ j ],\\n    \\t\\t\\t\\t\\t\\tlastCached = bindingsForPath[ firstActiveIndex ],\\n    \\t\\t\\t\\t\\t\\tbinding = bindingsForPath[ index ];\\n\\n    \\t\\t\\t\\t\\tbindingsForPath[ index ] = lastCached;\\n\\n    \\t\\t\\t\\t\\tif ( binding === undefined ) {\\n\\n    \\t\\t\\t\\t\\t\\t// since we do not bother to create new bindings\\n    \\t\\t\\t\\t\\t\\t// for objects that are cached, the binding may\\n    \\t\\t\\t\\t\\t\\t// or may not exist\\n\\n    \\t\\t\\t\\t\\t\\tbinding = new PropertyBinding(\\n    \\t\\t\\t\\t\\t\\t\\t\\tobject, paths[ j ], parsedPaths[ j ] );\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\tbindingsForPath[ firstActiveIndex ] = binding;\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t} else if ( objects[ index ] !== knownObject) {\\n\\n    \\t\\t\\t\\tconsole.error( \\\"Different objects with the same UUID \\\" +\\n    \\t\\t\\t\\t\\t\\t\\\"detected. Clean the caches or recreate your \\\" +\\n    \\t\\t\\t\\t\\t\\t\\\"infrastructure when reloading scenes...\\\" );\\n\\n    \\t\\t\\t} // else the object is already where we want it to be\\n\\n    \\t\\t} // for arguments\\n\\n    \\t\\tthis.nCachedObjects_ = nCachedObjects;\\n\\n    \\t},\\n\\n    \\tremove: function( var_args ) {\\n\\n    \\t\\tvar objects = this._objects,\\n    \\t\\t\\tnCachedObjects = this.nCachedObjects_,\\n    \\t\\t\\tindicesByUUID = this._indicesByUUID,\\n    \\t\\t\\tbindings = this._bindings,\\n    \\t\\t\\tnBindings = bindings.length;\\n\\n    \\t\\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\\n\\n    \\t\\t\\tvar object = arguments[ i ],\\n    \\t\\t\\t\\tuuid = object.uuid,\\n    \\t\\t\\t\\tindex = indicesByUUID[ uuid ];\\n\\n    \\t\\t\\tif ( index !== undefined && index >= nCachedObjects ) {\\n\\n    \\t\\t\\t\\t// move existing object into the CACHED region\\n\\n    \\t\\t\\t\\tvar lastCachedIndex = nCachedObjects ++,\\n    \\t\\t\\t\\t\\tfirstActiveObject = objects[ lastCachedIndex ];\\n\\n    \\t\\t\\t\\tindicesByUUID[ firstActiveObject.uuid ] = index;\\n    \\t\\t\\t\\tobjects[ index ] = firstActiveObject;\\n\\n    \\t\\t\\t\\tindicesByUUID[ uuid ] = lastCachedIndex;\\n    \\t\\t\\t\\tobjects[ lastCachedIndex ] = object;\\n\\n    \\t\\t\\t\\t// accounting is done, now do the same for all bindings\\n\\n    \\t\\t\\t\\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\\n\\n    \\t\\t\\t\\t\\tvar bindingsForPath = bindings[ j ],\\n    \\t\\t\\t\\t\\t\\tfirstActive = bindingsForPath[ lastCachedIndex ],\\n    \\t\\t\\t\\t\\t\\tbinding = bindingsForPath[ index ];\\n\\n    \\t\\t\\t\\t\\tbindingsForPath[ index ] = firstActive;\\n    \\t\\t\\t\\t\\tbindingsForPath[ lastCachedIndex ] = binding;\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t} // for arguments\\n\\n    \\t\\tthis.nCachedObjects_ = nCachedObjects;\\n\\n    \\t},\\n\\n    \\t// remove & forget\\n    \\tuncache: function( var_args ) {\\n\\n    \\t\\tvar objects = this._objects,\\n    \\t\\t\\tnObjects = objects.length,\\n    \\t\\t\\tnCachedObjects = this.nCachedObjects_,\\n    \\t\\t\\tindicesByUUID = this._indicesByUUID,\\n    \\t\\t\\tbindings = this._bindings,\\n    \\t\\t\\tnBindings = bindings.length;\\n\\n    \\t\\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\\n\\n    \\t\\t\\tvar object = arguments[ i ],\\n    \\t\\t\\t\\tuuid = object.uuid,\\n    \\t\\t\\t\\tindex = indicesByUUID[ uuid ];\\n\\n    \\t\\t\\tif ( index !== undefined ) {\\n\\n    \\t\\t\\t\\tdelete indicesByUUID[ uuid ];\\n\\n    \\t\\t\\t\\tif ( index < nCachedObjects ) {\\n\\n    \\t\\t\\t\\t\\t// object is cached, shrink the CACHED region\\n\\n    \\t\\t\\t\\t\\tvar firstActiveIndex = -- nCachedObjects,\\n    \\t\\t\\t\\t\\t\\tlastCachedObject = objects[ firstActiveIndex ],\\n    \\t\\t\\t\\t\\t\\tlastIndex = -- nObjects,\\n    \\t\\t\\t\\t\\t\\tlastObject = objects[ lastIndex ];\\n\\n    \\t\\t\\t\\t\\t// last cached object takes this object's place\\n    \\t\\t\\t\\t\\tindicesByUUID[ lastCachedObject.uuid ] = index;\\n    \\t\\t\\t\\t\\tobjects[ index ] = lastCachedObject;\\n\\n    \\t\\t\\t\\t\\t// last object goes to the activated slot and pop\\n    \\t\\t\\t\\t\\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\\n    \\t\\t\\t\\t\\tobjects[ firstActiveIndex ] = lastObject;\\n    \\t\\t\\t\\t\\tobjects.pop();\\n\\n    \\t\\t\\t\\t\\t// accounting is done, now do the same for all bindings\\n\\n    \\t\\t\\t\\t\\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\\n\\n    \\t\\t\\t\\t\\t\\tvar bindingsForPath = bindings[ j ],\\n    \\t\\t\\t\\t\\t\\t\\tlastCached = bindingsForPath[ firstActiveIndex ],\\n    \\t\\t\\t\\t\\t\\t\\tlast = bindingsForPath[ lastIndex ];\\n\\n    \\t\\t\\t\\t\\t\\tbindingsForPath[ index ] = lastCached;\\n    \\t\\t\\t\\t\\t\\tbindingsForPath[ firstActiveIndex ] = last;\\n    \\t\\t\\t\\t\\t\\tbindingsForPath.pop();\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\t// object is active, just swap with the last and pop\\n\\n    \\t\\t\\t\\t\\tvar lastIndex = -- nObjects,\\n    \\t\\t\\t\\t\\t\\tlastObject = objects[ lastIndex ];\\n\\n    \\t\\t\\t\\t\\tindicesByUUID[ lastObject.uuid ] = index;\\n    \\t\\t\\t\\t\\tobjects[ index ] = lastObject;\\n    \\t\\t\\t\\t\\tobjects.pop();\\n\\n    \\t\\t\\t\\t\\t// accounting is done, now do the same for all bindings\\n\\n    \\t\\t\\t\\t\\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\\n\\n    \\t\\t\\t\\t\\t\\tvar bindingsForPath = bindings[ j ];\\n\\n    \\t\\t\\t\\t\\t\\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\\n    \\t\\t\\t\\t\\t\\tbindingsForPath.pop();\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t} // cached or active\\n\\n    \\t\\t\\t} // if object is known\\n\\n    \\t\\t} // for arguments\\n\\n    \\t\\tthis.nCachedObjects_ = nCachedObjects;\\n\\n    \\t},\\n\\n    \\t// Internal interface used by befriended PropertyBinding.Composite:\\n\\n    \\tsubscribe_: function( path, parsedPath ) {\\n    \\t\\t// returns an array of bindings for the given path that is changed\\n    \\t\\t// according to the contained objects in the group\\n\\n    \\t\\tvar indicesByPath = this._bindingsIndicesByPath,\\n    \\t\\t\\tindex = indicesByPath[ path ],\\n    \\t\\t\\tbindings = this._bindings;\\n\\n    \\t\\tif ( index !== undefined ) return bindings[ index ];\\n\\n    \\t\\tvar paths = this._paths,\\n    \\t\\t\\tparsedPaths = this._parsedPaths,\\n    \\t\\t\\tobjects = this._objects,\\n    \\t\\t\\tnObjects = objects.length,\\n    \\t\\t\\tnCachedObjects = this.nCachedObjects_,\\n    \\t\\t\\tbindingsForPath = new Array( nObjects );\\n\\n    \\t\\tindex = bindings.length;\\n\\n    \\t\\tindicesByPath[ path ] = index;\\n\\n    \\t\\tpaths.push( path );\\n    \\t\\tparsedPaths.push( parsedPath );\\n    \\t\\tbindings.push( bindingsForPath );\\n\\n    \\t\\tfor ( var i = nCachedObjects,\\n    \\t\\t\\t\\tn = objects.length; i !== n; ++ i ) {\\n\\n    \\t\\t\\tvar object = objects[ i ];\\n\\n    \\t\\t\\tbindingsForPath[ i ] =\\n    \\t\\t\\t\\t\\tnew PropertyBinding( object, path, parsedPath );\\n\\n    \\t\\t}\\n\\n    \\t\\treturn bindingsForPath;\\n\\n    \\t},\\n\\n    \\tunsubscribe_: function( path ) {\\n    \\t\\t// tells the group to forget about a property path and no longer\\n    \\t\\t// update the array previously obtained with 'subscribe_'\\n\\n    \\t\\tvar indicesByPath = this._bindingsIndicesByPath,\\n    \\t\\t\\tindex = indicesByPath[ path ];\\n\\n    \\t\\tif ( index !== undefined ) {\\n\\n    \\t\\t\\tvar paths = this._paths,\\n    \\t\\t\\t\\tparsedPaths = this._parsedPaths,\\n    \\t\\t\\t\\tbindings = this._bindings,\\n    \\t\\t\\t\\tlastBindingsIndex = bindings.length - 1,\\n    \\t\\t\\t\\tlastBindings = bindings[ lastBindingsIndex ],\\n    \\t\\t\\t\\tlastBindingsPath = path[ lastBindingsIndex ];\\n\\n    \\t\\t\\tindicesByPath[ lastBindingsPath ] = index;\\n\\n    \\t\\t\\tbindings[ index ] = lastBindings;\\n    \\t\\t\\tbindings.pop();\\n\\n    \\t\\t\\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\\n    \\t\\t\\tparsedPaths.pop();\\n\\n    \\t\\t\\tpaths[ index ] = paths[ lastBindingsIndex ];\\n    \\t\\t\\tpaths.pop();\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    };\\n\\n    /**\\n     *\\n     * Action provided by AnimationMixer for scheduling clip playback on specific\\n     * objects.\\n     *\\n     * @author Ben Houston / http://clara.io/\\n     * @author David Sarno / http://lighthaus.us/\\n     * @author tschw\\n     *\\n     */\\n\\n    function AnimationAction( mixer, clip, localRoot ) {\\n\\n    \\tthis._mixer = mixer;\\n    \\tthis._clip = clip;\\n    \\tthis._localRoot = localRoot || null;\\n\\n    \\tvar tracks = clip.tracks,\\n    \\t\\tnTracks = tracks.length,\\n    \\t\\tinterpolants = new Array( nTracks );\\n\\n    \\tvar interpolantSettings = {\\n    \\t\\t\\tendingStart: \\tZeroCurvatureEnding,\\n    \\t\\t\\tendingEnd:\\t\\tZeroCurvatureEnding\\n    \\t};\\n\\n    \\tfor ( var i = 0; i !== nTracks; ++ i ) {\\n\\n    \\t\\tvar interpolant = tracks[ i ].createInterpolant( null );\\n    \\t\\tinterpolants[ i ] = interpolant;\\n    \\t\\tinterpolant.settings = interpolantSettings;\\n\\n    \\t}\\n\\n    \\tthis._interpolantSettings = interpolantSettings;\\n\\n    \\tthis._interpolants = interpolants;\\t// bound by the mixer\\n\\n    \\t// inside: PropertyMixer (managed by the mixer)\\n    \\tthis._propertyBindings = new Array( nTracks );\\n\\n    \\tthis._cacheIndex = null;\\t\\t\\t// for the memory manager\\n    \\tthis._byClipCacheIndex = null;\\t\\t// for the memory manager\\n\\n    \\tthis._timeScaleInterpolant = null;\\n    \\tthis._weightInterpolant = null;\\n\\n    \\tthis.loop = LoopRepeat;\\n    \\tthis._loopCount = -1;\\n\\n    \\t// global mixer time when the action is to be started\\n    \\t// it's set back to 'null' upon start of the action\\n    \\tthis._startTime = null;\\n\\n    \\t// scaled local time of the action\\n    \\t// gets clamped or wrapped to 0..clip.duration according to loop\\n    \\tthis.time = 0;\\n\\n    \\tthis.timeScale = 1;\\n    \\tthis._effectiveTimeScale = 1;\\n\\n    \\tthis.weight = 1;\\n    \\tthis._effectiveWeight = 1;\\n\\n    \\tthis.repetitions = Infinity; \\t\\t// no. of repetitions when looping\\n\\n    \\tthis.paused = false;\\t\\t\\t\\t// false -> zero effective time scale\\n    \\tthis.enabled = true;\\t\\t\\t\\t// true -> zero effective weight\\n\\n    \\tthis.clampWhenFinished \\t= false;\\t// keep feeding the last frame?\\n\\n    \\tthis.zeroSlopeAtStart \\t= true;\\t\\t// for smooth interpolation w/o separate\\n    \\tthis.zeroSlopeAtEnd\\t\\t= true;\\t\\t// clips for start, loop and end\\n\\n    };\\n\\n    AnimationAction.prototype = {\\n\\n    \\tconstructor: AnimationAction,\\n\\n    \\t// State & Scheduling\\n\\n    \\tplay: function() {\\n\\n    \\t\\tthis._mixer._activateAction( this );\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tstop: function() {\\n\\n    \\t\\tthis._mixer._deactivateAction( this );\\n\\n    \\t\\treturn this.reset();\\n\\n    \\t},\\n\\n    \\treset: function() {\\n\\n    \\t\\tthis.paused = false;\\n    \\t\\tthis.enabled = true;\\n\\n    \\t\\tthis.time = 0;\\t\\t\\t// restart clip\\n    \\t\\tthis._loopCount = -1;\\t// forget previous loops\\n    \\t\\tthis._startTime = null;\\t// forget scheduling\\n\\n    \\t\\treturn this.stopFading().stopWarping();\\n\\n    \\t},\\n\\n    \\tisRunning: function() {\\n\\n    \\t\\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\\n    \\t\\t\\t\\tthis._startTime === null && this._mixer._isActiveAction( this );\\n\\n    \\t},\\n\\n    \\t// return true when play has been called\\n    \\tisScheduled: function() {\\n\\n    \\t\\treturn this._mixer._isActiveAction( this );\\n\\n    \\t},\\n\\n    \\tstartAt: function( time ) {\\n\\n    \\t\\tthis._startTime = time;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsetLoop: function( mode, repetitions ) {\\n\\n    \\t\\tthis.loop = mode;\\n    \\t\\tthis.repetitions = repetitions;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\t// Weight\\n\\n    \\t// set the weight stopping any scheduled fading\\n    \\t// although .enabled = false yields an effective weight of zero, this\\n    \\t// method does *not* change .enabled, because it would be confusing\\n    \\tsetEffectiveWeight: function( weight ) {\\n\\n    \\t\\tthis.weight = weight;\\n\\n    \\t\\t// note: same logic as when updated at runtime\\n    \\t\\tthis._effectiveWeight = this.enabled ? weight : 0;\\n\\n    \\t\\treturn this.stopFading();\\n\\n    \\t},\\n\\n    \\t// return the weight considering fading and .enabled\\n    \\tgetEffectiveWeight: function() {\\n\\n    \\t\\treturn this._effectiveWeight;\\n\\n    \\t},\\n\\n    \\tfadeIn: function( duration ) {\\n\\n    \\t\\treturn this._scheduleFading( duration, 0, 1 );\\n\\n    \\t},\\n\\n    \\tfadeOut: function( duration ) {\\n\\n    \\t\\treturn this._scheduleFading( duration, 1, 0 );\\n\\n    \\t},\\n\\n    \\tcrossFadeFrom: function( fadeOutAction, duration, warp ) {\\n\\n    \\t\\tfadeOutAction.fadeOut( duration );\\n    \\t\\tthis.fadeIn( duration );\\n\\n    \\t\\tif( warp ) {\\n\\n    \\t\\t\\tvar fadeInDuration = this._clip.duration,\\n    \\t\\t\\t\\tfadeOutDuration = fadeOutAction._clip.duration,\\n\\n    \\t\\t\\t\\tstartEndRatio = fadeOutDuration / fadeInDuration,\\n    \\t\\t\\t\\tendStartRatio = fadeInDuration / fadeOutDuration;\\n\\n    \\t\\t\\tfadeOutAction.warp( 1.0, startEndRatio, duration );\\n    \\t\\t\\tthis.warp( endStartRatio, 1.0, duration );\\n\\n    \\t\\t}\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tcrossFadeTo: function( fadeInAction, duration, warp ) {\\n\\n    \\t\\treturn fadeInAction.crossFadeFrom( this, duration, warp );\\n\\n    \\t},\\n\\n    \\tstopFading: function() {\\n\\n    \\t\\tvar weightInterpolant = this._weightInterpolant;\\n\\n    \\t\\tif ( weightInterpolant !== null ) {\\n\\n    \\t\\t\\tthis._weightInterpolant = null;\\n    \\t\\t\\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\\n\\n    \\t\\t}\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\t// Time Scale Control\\n\\n    \\t// set the weight stopping any scheduled warping\\n    \\t// although .paused = true yields an effective time scale of zero, this\\n    \\t// method does *not* change .paused, because it would be confusing\\n    \\tsetEffectiveTimeScale: function( timeScale ) {\\n\\n    \\t\\tthis.timeScale = timeScale;\\n    \\t\\tthis._effectiveTimeScale = this.paused ? 0 :timeScale;\\n\\n    \\t\\treturn this.stopWarping();\\n\\n    \\t},\\n\\n    \\t// return the time scale considering warping and .paused\\n    \\tgetEffectiveTimeScale: function() {\\n\\n    \\t\\treturn this._effectiveTimeScale;\\n\\n    \\t},\\n\\n    \\tsetDuration: function( duration ) {\\n\\n    \\t\\tthis.timeScale = this._clip.duration / duration;\\n\\n    \\t\\treturn this.stopWarping();\\n\\n    \\t},\\n\\n    \\tsyncWith: function( action ) {\\n\\n    \\t\\tthis.time = action.time;\\n    \\t\\tthis.timeScale = action.timeScale;\\n\\n    \\t\\treturn this.stopWarping();\\n\\n    \\t},\\n\\n    \\thalt: function( duration ) {\\n\\n    \\t\\treturn this.warp( this._effectiveTimeScale, 0, duration );\\n\\n    \\t},\\n\\n    \\twarp: function( startTimeScale, endTimeScale, duration ) {\\n\\n    \\t\\tvar mixer = this._mixer, now = mixer.time,\\n    \\t\\t\\tinterpolant = this._timeScaleInterpolant,\\n\\n    \\t\\t\\ttimeScale = this.timeScale;\\n\\n    \\t\\tif ( interpolant === null ) {\\n\\n    \\t\\t\\tinterpolant = mixer._lendControlInterpolant(),\\n    \\t\\t\\tthis._timeScaleInterpolant = interpolant;\\n\\n    \\t\\t}\\n\\n    \\t\\tvar times = interpolant.parameterPositions,\\n    \\t\\t\\tvalues = interpolant.sampleValues;\\n\\n    \\t\\ttimes[ 0 ] = now;\\n    \\t\\ttimes[ 1 ] = now + duration;\\n\\n    \\t\\tvalues[ 0 ] = startTimeScale / timeScale;\\n    \\t\\tvalues[ 1 ] = endTimeScale / timeScale;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tstopWarping: function() {\\n\\n    \\t\\tvar timeScaleInterpolant = this._timeScaleInterpolant;\\n\\n    \\t\\tif ( timeScaleInterpolant !== null ) {\\n\\n    \\t\\t\\tthis._timeScaleInterpolant = null;\\n    \\t\\t\\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\\n\\n    \\t\\t}\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\t// Object Accessors\\n\\n    \\tgetMixer: function() {\\n\\n    \\t\\treturn this._mixer;\\n\\n    \\t},\\n\\n    \\tgetClip: function() {\\n\\n    \\t\\treturn this._clip;\\n\\n    \\t},\\n\\n    \\tgetRoot: function() {\\n\\n    \\t\\treturn this._localRoot || this._mixer._root;\\n\\n    \\t},\\n\\n    \\t// Interna\\n\\n    \\t_update: function( time, deltaTime, timeDirection, accuIndex ) {\\n    \\t\\t// called by the mixer\\n\\n    \\t\\tvar startTime = this._startTime;\\n\\n    \\t\\tif ( startTime !== null ) {\\n\\n    \\t\\t\\t// check for scheduled start of action\\n\\n    \\t\\t\\tvar timeRunning = ( time - startTime ) * timeDirection;\\n    \\t\\t\\tif ( timeRunning < 0 || timeDirection === 0 ) {\\n\\n    \\t\\t\\t\\treturn; // yet to come / don't decide when delta = 0\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\t// start\\n\\n    \\t\\t\\tthis._startTime = null; // unschedule\\n    \\t\\t\\tdeltaTime = timeDirection * timeRunning;\\n\\n    \\t\\t}\\n\\n    \\t\\t// apply time scale and advance time\\n\\n    \\t\\tdeltaTime *= this._updateTimeScale( time );\\n    \\t\\tvar clipTime = this._updateTime( deltaTime );\\n\\n    \\t\\t// note: _updateTime may disable the action resulting in\\n    \\t\\t// an effective weight of 0\\n\\n    \\t\\tvar weight = this._updateWeight( time );\\n\\n    \\t\\tif ( weight > 0 ) {\\n\\n    \\t\\t\\tvar interpolants = this._interpolants;\\n    \\t\\t\\tvar propertyMixers = this._propertyBindings;\\n\\n    \\t\\t\\tfor ( var j = 0, m = interpolants.length; j !== m; ++ j ) {\\n\\n    \\t\\t\\t\\tinterpolants[ j ].evaluate( clipTime );\\n    \\t\\t\\t\\tpropertyMixers[ j ].accumulate( accuIndex, weight );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t},\\n\\n    \\t_updateWeight: function( time ) {\\n\\n    \\t\\tvar weight = 0;\\n\\n    \\t\\tif ( this.enabled ) {\\n\\n    \\t\\t\\tweight = this.weight;\\n    \\t\\t\\tvar interpolant = this._weightInterpolant;\\n\\n    \\t\\t\\tif ( interpolant !== null ) {\\n\\n    \\t\\t\\t\\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\\n\\n    \\t\\t\\t\\tweight *= interpolantValue;\\n\\n    \\t\\t\\t\\tif ( time > interpolant.parameterPositions[ 1 ] ) {\\n\\n    \\t\\t\\t\\t\\tthis.stopFading();\\n\\n    \\t\\t\\t\\t\\tif ( interpolantValue === 0 ) {\\n\\n    \\t\\t\\t\\t\\t\\t// faded out, disable\\n    \\t\\t\\t\\t\\t\\tthis.enabled = false;\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\tthis._effectiveWeight = weight;\\n    \\t\\treturn weight;\\n\\n    \\t},\\n\\n    \\t_updateTimeScale: function( time ) {\\n\\n    \\t\\tvar timeScale = 0;\\n\\n    \\t\\tif ( ! this.paused ) {\\n\\n    \\t\\t\\ttimeScale = this.timeScale;\\n\\n    \\t\\t\\tvar interpolant = this._timeScaleInterpolant;\\n\\n    \\t\\t\\tif ( interpolant !== null ) {\\n\\n    \\t\\t\\t\\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\\n\\n    \\t\\t\\t\\ttimeScale *= interpolantValue;\\n\\n    \\t\\t\\t\\tif ( time > interpolant.parameterPositions[ 1 ] ) {\\n\\n    \\t\\t\\t\\t\\tthis.stopWarping();\\n\\n    \\t\\t\\t\\t\\tif ( timeScale === 0 ) {\\n\\n    \\t\\t\\t\\t\\t\\t// motion has halted, pause\\n    \\t\\t\\t\\t\\t\\tthis.paused = true;\\n\\n    \\t\\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\t\\t// warp done - apply final time scale\\n    \\t\\t\\t\\t\\t\\tthis.timeScale = timeScale;\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\tthis._effectiveTimeScale = timeScale;\\n    \\t\\treturn timeScale;\\n\\n    \\t},\\n\\n    \\t_updateTime: function( deltaTime ) {\\n\\n    \\t\\tvar time = this.time + deltaTime;\\n\\n    \\t\\tif ( deltaTime === 0 ) return time;\\n\\n    \\t\\tvar duration = this._clip.duration,\\n\\n    \\t\\t\\tloop = this.loop,\\n    \\t\\t\\tloopCount = this._loopCount;\\n\\n    \\t\\tif ( loop === LoopOnce ) {\\n\\n    \\t\\t\\tif ( loopCount === -1 ) {\\n    \\t\\t\\t\\t// just started\\n\\n    \\t\\t\\t\\tthis.loopCount = 0;\\n    \\t\\t\\t\\tthis._setEndings( true, true, false );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\thandle_stop: {\\n\\n    \\t\\t\\t\\tif ( time >= duration ) {\\n\\n    \\t\\t\\t\\t\\ttime = duration;\\n\\n    \\t\\t\\t\\t} else if ( time < 0 ) {\\n\\n    \\t\\t\\t\\t\\ttime = 0;\\n\\n    \\t\\t\\t\\t} else break handle_stop;\\n\\n    \\t\\t\\t\\tif ( this.clampWhenFinished ) this.paused = true;\\n    \\t\\t\\t\\telse this.enabled = false;\\n\\n    \\t\\t\\t\\tthis._mixer.dispatchEvent( {\\n    \\t\\t\\t\\t\\ttype: 'finished', action: this,\\n    \\t\\t\\t\\t\\tdirection: deltaTime < 0 ? -1 : 1\\n    \\t\\t\\t\\t} );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t} else { // repetitive Repeat or PingPong\\n\\n    \\t\\t\\tvar pingPong = ( loop === LoopPingPong );\\n\\n    \\t\\t\\tif ( loopCount === -1 ) {\\n    \\t\\t\\t\\t// just started\\n\\n    \\t\\t\\t\\tif ( deltaTime >= 0 ) {\\n\\n    \\t\\t\\t\\t\\tloopCount = 0;\\n\\n    \\t\\t\\t\\t\\tthis._setEndings(\\n    \\t\\t\\t\\t\\t\\t\\ttrue, this.repetitions === 0, pingPong );\\n\\n    \\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\t// when looping in reverse direction, the initial\\n    \\t\\t\\t\\t\\t// transition through zero counts as a repetition,\\n    \\t\\t\\t\\t\\t// so leave loopCount at -1\\n\\n    \\t\\t\\t\\t\\tthis._setEndings(\\n    \\t\\t\\t\\t\\t\\t\\tthis.repetitions === 0, true, pingPong );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tif ( time >= duration || time < 0 ) {\\n    \\t\\t\\t\\t// wrap around\\n\\n    \\t\\t\\t\\tvar loopDelta = Math.floor( time / duration ); // signed\\n    \\t\\t\\t\\ttime -= duration * loopDelta;\\n\\n    \\t\\t\\t\\tloopCount += Math.abs( loopDelta );\\n\\n    \\t\\t\\t\\tvar pending = this.repetitions - loopCount;\\n\\n    \\t\\t\\t\\tif ( pending < 0 ) {\\n    \\t\\t\\t\\t\\t// have to stop (switch state, clamp time, fire event)\\n\\n    \\t\\t\\t\\t\\tif ( this.clampWhenFinished ) this.paused = true;\\n    \\t\\t\\t\\t\\telse this.enabled = false;\\n\\n    \\t\\t\\t\\t\\ttime = deltaTime > 0 ? duration : 0;\\n\\n    \\t\\t\\t\\t\\tthis._mixer.dispatchEvent( {\\n    \\t\\t\\t\\t\\t\\ttype: 'finished', action: this,\\n    \\t\\t\\t\\t\\t\\tdirection: deltaTime > 0 ? 1 : -1\\n    \\t\\t\\t\\t\\t} );\\n\\n    \\t\\t\\t\\t} else {\\n    \\t\\t\\t\\t\\t// keep running\\n\\n    \\t\\t\\t\\t\\tif ( pending === 0 ) {\\n    \\t\\t\\t\\t\\t\\t// entering the last round\\n\\n    \\t\\t\\t\\t\\t\\tvar atStart = deltaTime < 0;\\n    \\t\\t\\t\\t\\t\\tthis._setEndings( atStart, ! atStart, pingPong );\\n\\n    \\t\\t\\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t\\t\\tthis._setEndings( false, false, pingPong );\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\tthis._loopCount = loopCount;\\n\\n    \\t\\t\\t\\t\\tthis._mixer.dispatchEvent( {\\n    \\t\\t\\t\\t\\t\\ttype: 'loop', action: this, loopDelta: loopDelta\\n    \\t\\t\\t\\t\\t} );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\\n    \\t\\t\\t\\t// invert time for the \\\"pong round\\\"\\n\\n    \\t\\t\\t\\tthis.time = time;\\n    \\t\\t\\t\\treturn duration - time;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\tthis.time = time;\\n    \\t\\treturn time;\\n\\n    \\t},\\n\\n    \\t_setEndings: function( atStart, atEnd, pingPong ) {\\n\\n    \\t\\tvar settings = this._interpolantSettings;\\n\\n    \\t\\tif ( pingPong ) {\\n\\n    \\t\\t\\tsettings.endingStart \\t= ZeroSlopeEnding;\\n    \\t\\t\\tsettings.endingEnd\\t\\t= ZeroSlopeEnding;\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\t// assuming for LoopOnce atStart == atEnd == true\\n\\n    \\t\\t\\tif ( atStart ) {\\n\\n    \\t\\t\\t\\tsettings.endingStart = this.zeroSlopeAtStart ?\\n    \\t\\t\\t\\t\\t\\tZeroSlopeEnding : ZeroCurvatureEnding;\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\tsettings.endingStart = WrapAroundEnding;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tif ( atEnd ) {\\n\\n    \\t\\t\\t\\tsettings.endingEnd = this.zeroSlopeAtEnd ?\\n    \\t\\t\\t\\t\\t\\tZeroSlopeEnding : ZeroCurvatureEnding;\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\tsettings.endingEnd \\t = WrapAroundEnding;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t},\\n\\n    \\t_scheduleFading: function( duration, weightNow, weightThen ) {\\n\\n    \\t\\tvar mixer = this._mixer, now = mixer.time,\\n    \\t\\t\\tinterpolant = this._weightInterpolant;\\n\\n    \\t\\tif ( interpolant === null ) {\\n\\n    \\t\\t\\tinterpolant = mixer._lendControlInterpolant(),\\n    \\t\\t\\tthis._weightInterpolant = interpolant;\\n\\n    \\t\\t}\\n\\n    \\t\\tvar times = interpolant.parameterPositions,\\n    \\t\\t\\tvalues = interpolant.sampleValues;\\n\\n    \\t\\ttimes[ 0 ] = now; \\t\\t\\t\\tvalues[ 0 ] = weightNow;\\n    \\t\\ttimes[ 1 ] = now + duration;\\tvalues[ 1 ] = weightThen;\\n\\n    \\t\\treturn this;\\n\\n    \\t}\\n\\n    };\\n\\n    /**\\n     *\\n     * Player for AnimationClips.\\n     *\\n     *\\n     * @author Ben Houston / http://clara.io/\\n     * @author David Sarno / http://lighthaus.us/\\n     * @author tschw\\n     */\\n\\n    function AnimationMixer( root ) {\\n\\n    \\tthis._root = root;\\n    \\tthis._initMemoryManager();\\n    \\tthis._accuIndex = 0;\\n\\n    \\tthis.time = 0;\\n\\n    \\tthis.timeScale = 1.0;\\n\\n    }\\n\\n    Object.assign( AnimationMixer.prototype, EventDispatcher.prototype, {\\n\\n    \\t// return an action for a clip optionally using a custom root target\\n    \\t// object (this method allocates a lot of dynamic memory in case a\\n    \\t// previously unknown clip/root combination is specified)\\n    \\tclipAction: function( clip, optionalRoot ) {\\n\\n    \\t\\tvar root = optionalRoot || this._root,\\n    \\t\\t\\trootUuid = root.uuid,\\n\\n    \\t\\t\\tclipObject = typeof clip === 'string' ?\\n    \\t\\t\\t\\t\\tAnimationClip.findByName( root, clip ) : clip,\\n\\n    \\t\\t\\tclipUuid = clipObject !== null ? clipObject.uuid : clip,\\n\\n    \\t\\t\\tactionsForClip = this._actionsByClip[ clipUuid ],\\n    \\t\\t\\tprototypeAction = null;\\n\\n    \\t\\tif ( actionsForClip !== undefined ) {\\n\\n    \\t\\t\\tvar existingAction =\\n    \\t\\t\\t\\t\\tactionsForClip.actionByRoot[ rootUuid ];\\n\\n    \\t\\t\\tif ( existingAction !== undefined ) {\\n\\n    \\t\\t\\t\\treturn existingAction;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\t// we know the clip, so we don't have to parse all\\n    \\t\\t\\t// the bindings again but can just copy\\n    \\t\\t\\tprototypeAction = actionsForClip.knownActions[ 0 ];\\n\\n    \\t\\t\\t// also, take the clip from the prototype action\\n    \\t\\t\\tif ( clipObject === null )\\n    \\t\\t\\t\\tclipObject = prototypeAction._clip;\\n\\n    \\t\\t}\\n\\n    \\t\\t// clip must be known when specified via string\\n    \\t\\tif ( clipObject === null ) return null;\\n\\n    \\t\\t// allocate all resources required to run it\\n    \\t\\tvar newAction = new AnimationAction( this, clipObject, optionalRoot );\\n\\n    \\t\\tthis._bindAction( newAction, prototypeAction );\\n\\n    \\t\\t// and make the action known to the memory manager\\n    \\t\\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\\n\\n    \\t\\treturn newAction;\\n\\n    \\t},\\n\\n    \\t// get an existing action\\n    \\texistingAction: function( clip, optionalRoot ) {\\n\\n    \\t\\tvar root = optionalRoot || this._root,\\n    \\t\\t\\trootUuid = root.uuid,\\n\\n    \\t\\t\\tclipObject = typeof clip === 'string' ?\\n    \\t\\t\\t\\t\\tAnimationClip.findByName( root, clip ) : clip,\\n\\n    \\t\\t\\tclipUuid = clipObject ? clipObject.uuid : clip,\\n\\n    \\t\\t\\tactionsForClip = this._actionsByClip[ clipUuid ];\\n\\n    \\t\\tif ( actionsForClip !== undefined ) {\\n\\n    \\t\\t\\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\\n\\n    \\t\\t}\\n\\n    \\t\\treturn null;\\n\\n    \\t},\\n\\n    \\t// deactivates all previously scheduled actions\\n    \\tstopAllAction: function() {\\n\\n    \\t\\tvar actions = this._actions,\\n    \\t\\t\\tnActions = this._nActiveActions,\\n    \\t\\t\\tbindings = this._bindings,\\n    \\t\\t\\tnBindings = this._nActiveBindings;\\n\\n    \\t\\tthis._nActiveActions = 0;\\n    \\t\\tthis._nActiveBindings = 0;\\n\\n    \\t\\tfor ( var i = 0; i !== nActions; ++ i ) {\\n\\n    \\t\\t\\tactions[ i ].reset();\\n\\n    \\t\\t}\\n\\n    \\t\\tfor ( var i = 0; i !== nBindings; ++ i ) {\\n\\n    \\t\\t\\tbindings[ i ].useCount = 0;\\n\\n    \\t\\t}\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\t// advance the time and update apply the animation\\n    \\tupdate: function( deltaTime ) {\\n\\n    \\t\\tdeltaTime *= this.timeScale;\\n\\n    \\t\\tvar actions = this._actions,\\n    \\t\\t\\tnActions = this._nActiveActions,\\n\\n    \\t\\t\\ttime = this.time += deltaTime,\\n    \\t\\t\\ttimeDirection = Math.sign( deltaTime ),\\n\\n    \\t\\t\\taccuIndex = this._accuIndex ^= 1;\\n\\n    \\t\\t// run active actions\\n\\n    \\t\\tfor ( var i = 0; i !== nActions; ++ i ) {\\n\\n    \\t\\t\\tvar action = actions[ i ];\\n\\n    \\t\\t\\tif ( action.enabled ) {\\n\\n    \\t\\t\\t\\taction._update( time, deltaTime, timeDirection, accuIndex );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\t// update scene graph\\n\\n    \\t\\tvar bindings = this._bindings,\\n    \\t\\t\\tnBindings = this._nActiveBindings;\\n\\n    \\t\\tfor ( var i = 0; i !== nBindings; ++ i ) {\\n\\n    \\t\\t\\tbindings[ i ].apply( accuIndex );\\n\\n    \\t\\t}\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\t// return this mixer's root target object\\n    \\tgetRoot: function() {\\n\\n    \\t\\treturn this._root;\\n\\n    \\t},\\n\\n    \\t// free all resources specific to a particular clip\\n    \\tuncacheClip: function( clip ) {\\n\\n    \\t\\tvar actions = this._actions,\\n    \\t\\t\\tclipUuid = clip.uuid,\\n    \\t\\t\\tactionsByClip = this._actionsByClip,\\n    \\t\\t\\tactionsForClip = actionsByClip[ clipUuid ];\\n\\n    \\t\\tif ( actionsForClip !== undefined ) {\\n\\n    \\t\\t\\t// note: just calling _removeInactiveAction would mess up the\\n    \\t\\t\\t// iteration state and also require updating the state we can\\n    \\t\\t\\t// just throw away\\n\\n    \\t\\t\\tvar actionsToRemove = actionsForClip.knownActions;\\n\\n    \\t\\t\\tfor ( var i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\\n\\n    \\t\\t\\t\\tvar action = actionsToRemove[ i ];\\n\\n    \\t\\t\\t\\tthis._deactivateAction( action );\\n\\n    \\t\\t\\t\\tvar cacheIndex = action._cacheIndex,\\n    \\t\\t\\t\\t\\tlastInactiveAction = actions[ actions.length - 1 ];\\n\\n    \\t\\t\\t\\taction._cacheIndex = null;\\n    \\t\\t\\t\\taction._byClipCacheIndex = null;\\n\\n    \\t\\t\\t\\tlastInactiveAction._cacheIndex = cacheIndex;\\n    \\t\\t\\t\\tactions[ cacheIndex ] = lastInactiveAction;\\n    \\t\\t\\t\\tactions.pop();\\n\\n    \\t\\t\\t\\tthis._removeInactiveBindingsForAction( action );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tdelete actionsByClip[ clipUuid ];\\n\\n    \\t\\t}\\n\\n    \\t},\\n\\n    \\t// free all resources specific to a particular root target object\\n    \\tuncacheRoot: function( root ) {\\n\\n    \\t\\tvar rootUuid = root.uuid,\\n    \\t\\t\\tactionsByClip = this._actionsByClip;\\n\\n    \\t\\tfor ( var clipUuid in actionsByClip ) {\\n\\n    \\t\\t\\tvar actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\\n    \\t\\t\\t\\taction = actionByRoot[ rootUuid ];\\n\\n    \\t\\t\\tif ( action !== undefined ) {\\n\\n    \\t\\t\\t\\tthis._deactivateAction( action );\\n    \\t\\t\\t\\tthis._removeInactiveAction( action );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\tvar bindingsByRoot = this._bindingsByRootAndName,\\n    \\t\\t\\tbindingByName = bindingsByRoot[ rootUuid ];\\n\\n    \\t\\tif ( bindingByName !== undefined ) {\\n\\n    \\t\\t\\tfor ( var trackName in bindingByName ) {\\n\\n    \\t\\t\\t\\tvar binding = bindingByName[ trackName ];\\n    \\t\\t\\t\\tbinding.restoreOriginalState();\\n    \\t\\t\\t\\tthis._removeInactiveBinding( binding );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t},\\n\\n    \\t// remove a targeted clip from the cache\\n    \\tuncacheAction: function( clip, optionalRoot ) {\\n\\n    \\t\\tvar action = this.existingAction( clip, optionalRoot );\\n\\n    \\t\\tif ( action !== null ) {\\n\\n    \\t\\t\\tthis._deactivateAction( action );\\n    \\t\\t\\tthis._removeInactiveAction( action );\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    } );\\n\\n    // Implementation details:\\n\\n    Object.assign( AnimationMixer.prototype, {\\n\\n    \\t_bindAction: function( action, prototypeAction ) {\\n\\n    \\t\\tvar root = action._localRoot || this._root,\\n    \\t\\t\\ttracks = action._clip.tracks,\\n    \\t\\t\\tnTracks = tracks.length,\\n    \\t\\t\\tbindings = action._propertyBindings,\\n    \\t\\t\\tinterpolants = action._interpolants,\\n    \\t\\t\\trootUuid = root.uuid,\\n    \\t\\t\\tbindingsByRoot = this._bindingsByRootAndName,\\n    \\t\\t\\tbindingsByName = bindingsByRoot[ rootUuid ];\\n\\n    \\t\\tif ( bindingsByName === undefined ) {\\n\\n    \\t\\t\\tbindingsByName = {};\\n    \\t\\t\\tbindingsByRoot[ rootUuid ] = bindingsByName;\\n\\n    \\t\\t}\\n\\n    \\t\\tfor ( var i = 0; i !== nTracks; ++ i ) {\\n\\n    \\t\\t\\tvar track = tracks[ i ],\\n    \\t\\t\\t\\ttrackName = track.name,\\n    \\t\\t\\t\\tbinding = bindingsByName[ trackName ];\\n\\n    \\t\\t\\tif ( binding !== undefined ) {\\n\\n    \\t\\t\\t\\tbindings[ i ] = binding;\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\tbinding = bindings[ i ];\\n\\n    \\t\\t\\t\\tif ( binding !== undefined ) {\\n\\n    \\t\\t\\t\\t\\t// existing binding, make sure the cache knows\\n\\n    \\t\\t\\t\\t\\tif ( binding._cacheIndex === null ) {\\n\\n    \\t\\t\\t\\t\\t\\t++ binding.referenceCount;\\n    \\t\\t\\t\\t\\t\\tthis._addInactiveBinding( binding, rootUuid, trackName );\\n\\n    \\t\\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\t\\tcontinue;\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t\\tvar path = prototypeAction && prototypeAction.\\n    \\t\\t\\t\\t\\t\\t_propertyBindings[ i ].binding.parsedPath;\\n\\n    \\t\\t\\t\\tbinding = new PropertyMixer(\\n    \\t\\t\\t\\t\\t\\tPropertyBinding.create( root, trackName, path ),\\n    \\t\\t\\t\\t\\t\\ttrack.ValueTypeName, track.getValueSize() );\\n\\n    \\t\\t\\t\\t++ binding.referenceCount;\\n    \\t\\t\\t\\tthis._addInactiveBinding( binding, rootUuid, trackName );\\n\\n    \\t\\t\\t\\tbindings[ i ] = binding;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tinterpolants[ i ].resultBuffer = binding.buffer;\\n\\n    \\t\\t}\\n\\n    \\t},\\n\\n    \\t_activateAction: function( action ) {\\n\\n    \\t\\tif ( ! this._isActiveAction( action ) ) {\\n\\n    \\t\\t\\tif ( action._cacheIndex === null ) {\\n\\n    \\t\\t\\t\\t// this action has been forgotten by the cache, but the user\\n    \\t\\t\\t\\t// appears to be still using it -> rebind\\n\\n    \\t\\t\\t\\tvar rootUuid = ( action._localRoot || this._root ).uuid,\\n    \\t\\t\\t\\t\\tclipUuid = action._clip.uuid,\\n    \\t\\t\\t\\t\\tactionsForClip = this._actionsByClip[ clipUuid ];\\n\\n    \\t\\t\\t\\tthis._bindAction( action,\\n    \\t\\t\\t\\t\\t\\tactionsForClip && actionsForClip.knownActions[ 0 ] );\\n\\n    \\t\\t\\t\\tthis._addInactiveAction( action, clipUuid, rootUuid );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tvar bindings = action._propertyBindings;\\n\\n    \\t\\t\\t// increment reference counts / sort out state\\n    \\t\\t\\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\\n\\n    \\t\\t\\t\\tvar binding = bindings[ i ];\\n\\n    \\t\\t\\t\\tif ( binding.useCount ++ === 0 ) {\\n\\n    \\t\\t\\t\\t\\tthis._lendBinding( binding );\\n    \\t\\t\\t\\t\\tbinding.saveOriginalState();\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tthis._lendAction( action );\\n\\n    \\t\\t}\\n\\n    \\t},\\n\\n    \\t_deactivateAction: function( action ) {\\n\\n    \\t\\tif ( this._isActiveAction( action ) ) {\\n\\n    \\t\\t\\tvar bindings = action._propertyBindings;\\n\\n    \\t\\t\\t// decrement reference counts / sort out state\\n    \\t\\t\\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\\n\\n    \\t\\t\\t\\tvar binding = bindings[ i ];\\n\\n    \\t\\t\\t\\tif ( -- binding.useCount === 0 ) {\\n\\n    \\t\\t\\t\\t\\tbinding.restoreOriginalState();\\n    \\t\\t\\t\\t\\tthis._takeBackBinding( binding );\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tthis._takeBackAction( action );\\n\\n    \\t\\t}\\n\\n    \\t},\\n\\n    \\t// Memory manager\\n\\n    \\t_initMemoryManager: function() {\\n\\n    \\t\\tthis._actions = []; // 'nActiveActions' followed by inactive ones\\n    \\t\\tthis._nActiveActions = 0;\\n\\n    \\t\\tthis._actionsByClip = {};\\n    \\t\\t// inside:\\n    \\t\\t// {\\n    \\t\\t// \\t\\tknownActions: Array< AnimationAction >\\t- used as prototypes\\n    \\t\\t// \\t\\tactionByRoot: AnimationAction\\t\\t\\t- lookup\\n    \\t\\t// }\\n\\n\\n    \\t\\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\\n    \\t\\tthis._nActiveBindings = 0;\\n\\n    \\t\\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\\n\\n\\n    \\t\\tthis._controlInterpolants = []; // same game as above\\n    \\t\\tthis._nActiveControlInterpolants = 0;\\n\\n    \\t\\tvar scope = this;\\n\\n    \\t\\tthis.stats = {\\n\\n    \\t\\t\\tactions: {\\n    \\t\\t\\t\\tget total() { return scope._actions.length; },\\n    \\t\\t\\t\\tget inUse() { return scope._nActiveActions; }\\n    \\t\\t\\t},\\n    \\t\\t\\tbindings: {\\n    \\t\\t\\t\\tget total() { return scope._bindings.length; },\\n    \\t\\t\\t\\tget inUse() { return scope._nActiveBindings; }\\n    \\t\\t\\t},\\n    \\t\\t\\tcontrolInterpolants: {\\n    \\t\\t\\t\\tget total() { return scope._controlInterpolants.length; },\\n    \\t\\t\\t\\tget inUse() { return scope._nActiveControlInterpolants; }\\n    \\t\\t\\t}\\n\\n    \\t\\t};\\n\\n    \\t},\\n\\n    \\t// Memory management for AnimationAction objects\\n\\n    \\t_isActiveAction: function( action ) {\\n\\n    \\t\\tvar index = action._cacheIndex;\\n    \\t\\treturn index !== null && index < this._nActiveActions;\\n\\n    \\t},\\n\\n    \\t_addInactiveAction: function( action, clipUuid, rootUuid ) {\\n\\n    \\t\\tvar actions = this._actions,\\n    \\t\\t\\tactionsByClip = this._actionsByClip,\\n    \\t\\t\\tactionsForClip = actionsByClip[ clipUuid ];\\n\\n    \\t\\tif ( actionsForClip === undefined ) {\\n\\n    \\t\\t\\tactionsForClip = {\\n\\n    \\t\\t\\t\\tknownActions: [ action ],\\n    \\t\\t\\t\\tactionByRoot: {}\\n\\n    \\t\\t\\t};\\n\\n    \\t\\t\\taction._byClipCacheIndex = 0;\\n\\n    \\t\\t\\tactionsByClip[ clipUuid ] = actionsForClip;\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\tvar knownActions = actionsForClip.knownActions;\\n\\n    \\t\\t\\taction._byClipCacheIndex = knownActions.length;\\n    \\t\\t\\tknownActions.push( action );\\n\\n    \\t\\t}\\n\\n    \\t\\taction._cacheIndex = actions.length;\\n    \\t\\tactions.push( action );\\n\\n    \\t\\tactionsForClip.actionByRoot[ rootUuid ] = action;\\n\\n    \\t},\\n\\n    \\t_removeInactiveAction: function( action ) {\\n\\n    \\t\\tvar actions = this._actions,\\n    \\t\\t\\tlastInactiveAction = actions[ actions.length - 1 ],\\n    \\t\\t\\tcacheIndex = action._cacheIndex;\\n\\n    \\t\\tlastInactiveAction._cacheIndex = cacheIndex;\\n    \\t\\tactions[ cacheIndex ] = lastInactiveAction;\\n    \\t\\tactions.pop();\\n\\n    \\t\\taction._cacheIndex = null;\\n\\n\\n    \\t\\tvar clipUuid = action._clip.uuid,\\n    \\t\\t\\tactionsByClip = this._actionsByClip,\\n    \\t\\t\\tactionsForClip = actionsByClip[ clipUuid ],\\n    \\t\\t\\tknownActionsForClip = actionsForClip.knownActions,\\n\\n    \\t\\t\\tlastKnownAction =\\n    \\t\\t\\t\\tknownActionsForClip[ knownActionsForClip.length - 1 ],\\n\\n    \\t\\t\\tbyClipCacheIndex = action._byClipCacheIndex;\\n\\n    \\t\\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\\n    \\t\\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\\n    \\t\\tknownActionsForClip.pop();\\n\\n    \\t\\taction._byClipCacheIndex = null;\\n\\n\\n    \\t\\tvar actionByRoot = actionsForClip.actionByRoot,\\n    \\t\\t\\trootUuid = ( actions._localRoot || this._root ).uuid;\\n\\n    \\t\\tdelete actionByRoot[ rootUuid ];\\n\\n    \\t\\tif ( knownActionsForClip.length === 0 ) {\\n\\n    \\t\\t\\tdelete actionsByClip[ clipUuid ];\\n\\n    \\t\\t}\\n\\n    \\t\\tthis._removeInactiveBindingsForAction( action );\\n\\n    \\t},\\n\\n    \\t_removeInactiveBindingsForAction: function( action ) {\\n\\n    \\t\\tvar bindings = action._propertyBindings;\\n    \\t\\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\\n\\n    \\t\\t\\tvar binding = bindings[ i ];\\n\\n    \\t\\t\\tif ( -- binding.referenceCount === 0 ) {\\n\\n    \\t\\t\\t\\tthis._removeInactiveBinding( binding );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t},\\n\\n    \\t_lendAction: function( action ) {\\n\\n    \\t\\t// [ active actions |  inactive actions  ]\\n    \\t\\t// [  active actions >| inactive actions ]\\n    \\t\\t//                 s        a\\n    \\t\\t//                  <-swap->\\n    \\t\\t//                 a        s\\n\\n    \\t\\tvar actions = this._actions,\\n    \\t\\t\\tprevIndex = action._cacheIndex,\\n\\n    \\t\\t\\tlastActiveIndex = this._nActiveActions ++,\\n\\n    \\t\\t\\tfirstInactiveAction = actions[ lastActiveIndex ];\\n\\n    \\t\\taction._cacheIndex = lastActiveIndex;\\n    \\t\\tactions[ lastActiveIndex ] = action;\\n\\n    \\t\\tfirstInactiveAction._cacheIndex = prevIndex;\\n    \\t\\tactions[ prevIndex ] = firstInactiveAction;\\n\\n    \\t},\\n\\n    \\t_takeBackAction: function( action ) {\\n\\n    \\t\\t// [  active actions  | inactive actions ]\\n    \\t\\t// [ active actions |< inactive actions  ]\\n    \\t\\t//        a        s\\n    \\t\\t//         <-swap->\\n    \\t\\t//        s        a\\n\\n    \\t\\tvar actions = this._actions,\\n    \\t\\t\\tprevIndex = action._cacheIndex,\\n\\n    \\t\\t\\tfirstInactiveIndex = -- this._nActiveActions,\\n\\n    \\t\\t\\tlastActiveAction = actions[ firstInactiveIndex ];\\n\\n    \\t\\taction._cacheIndex = firstInactiveIndex;\\n    \\t\\tactions[ firstInactiveIndex ] = action;\\n\\n    \\t\\tlastActiveAction._cacheIndex = prevIndex;\\n    \\t\\tactions[ prevIndex ] = lastActiveAction;\\n\\n    \\t},\\n\\n    \\t// Memory management for PropertyMixer objects\\n\\n    \\t_addInactiveBinding: function( binding, rootUuid, trackName ) {\\n\\n    \\t\\tvar bindingsByRoot = this._bindingsByRootAndName,\\n    \\t\\t\\tbindingByName = bindingsByRoot[ rootUuid ],\\n\\n    \\t\\t\\tbindings = this._bindings;\\n\\n    \\t\\tif ( bindingByName === undefined ) {\\n\\n    \\t\\t\\tbindingByName = {};\\n    \\t\\t\\tbindingsByRoot[ rootUuid ] = bindingByName;\\n\\n    \\t\\t}\\n\\n    \\t\\tbindingByName[ trackName ] = binding;\\n\\n    \\t\\tbinding._cacheIndex = bindings.length;\\n    \\t\\tbindings.push( binding );\\n\\n    \\t},\\n\\n    \\t_removeInactiveBinding: function( binding ) {\\n\\n    \\t\\tvar bindings = this._bindings,\\n    \\t\\t\\tpropBinding = binding.binding,\\n    \\t\\t\\trootUuid = propBinding.rootNode.uuid,\\n    \\t\\t\\ttrackName = propBinding.path,\\n    \\t\\t\\tbindingsByRoot = this._bindingsByRootAndName,\\n    \\t\\t\\tbindingByName = bindingsByRoot[ rootUuid ],\\n\\n    \\t\\t\\tlastInactiveBinding = bindings[ bindings.length - 1 ],\\n    \\t\\t\\tcacheIndex = binding._cacheIndex;\\n\\n    \\t\\tlastInactiveBinding._cacheIndex = cacheIndex;\\n    \\t\\tbindings[ cacheIndex ] = lastInactiveBinding;\\n    \\t\\tbindings.pop();\\n\\n    \\t\\tdelete bindingByName[ trackName ];\\n\\n    \\t\\tremove_empty_map: {\\n\\n    \\t\\t\\tfor ( var _ in bindingByName ) break remove_empty_map;\\n\\n    \\t\\t\\tdelete bindingsByRoot[ rootUuid ];\\n\\n    \\t\\t}\\n\\n    \\t},\\n\\n    \\t_lendBinding: function( binding ) {\\n\\n    \\t\\tvar bindings = this._bindings,\\n    \\t\\t\\tprevIndex = binding._cacheIndex,\\n\\n    \\t\\t\\tlastActiveIndex = this._nActiveBindings ++,\\n\\n    \\t\\t\\tfirstInactiveBinding = bindings[ lastActiveIndex ];\\n\\n    \\t\\tbinding._cacheIndex = lastActiveIndex;\\n    \\t\\tbindings[ lastActiveIndex ] = binding;\\n\\n    \\t\\tfirstInactiveBinding._cacheIndex = prevIndex;\\n    \\t\\tbindings[ prevIndex ] = firstInactiveBinding;\\n\\n    \\t},\\n\\n    \\t_takeBackBinding: function( binding ) {\\n\\n    \\t\\tvar bindings = this._bindings,\\n    \\t\\t\\tprevIndex = binding._cacheIndex,\\n\\n    \\t\\t\\tfirstInactiveIndex = -- this._nActiveBindings,\\n\\n    \\t\\t\\tlastActiveBinding = bindings[ firstInactiveIndex ];\\n\\n    \\t\\tbinding._cacheIndex = firstInactiveIndex;\\n    \\t\\tbindings[ firstInactiveIndex ] = binding;\\n\\n    \\t\\tlastActiveBinding._cacheIndex = prevIndex;\\n    \\t\\tbindings[ prevIndex ] = lastActiveBinding;\\n\\n    \\t},\\n\\n\\n    \\t// Memory management of Interpolants for weight and time scale\\n\\n    \\t_lendControlInterpolant: function() {\\n\\n    \\t\\tvar interpolants = this._controlInterpolants,\\n    \\t\\t\\tlastActiveIndex = this._nActiveControlInterpolants ++,\\n    \\t\\t\\tinterpolant = interpolants[ lastActiveIndex ];\\n\\n    \\t\\tif ( interpolant === undefined ) {\\n\\n    \\t\\t\\tinterpolant = new LinearInterpolant(\\n    \\t\\t\\t\\t\\tnew Float32Array( 2 ), new Float32Array( 2 ),\\n    \\t\\t\\t\\t\\t\\t1, this._controlInterpolantsResultBuffer );\\n\\n    \\t\\t\\tinterpolant.__cacheIndex = lastActiveIndex;\\n    \\t\\t\\tinterpolants[ lastActiveIndex ] = interpolant;\\n\\n    \\t\\t}\\n\\n    \\t\\treturn interpolant;\\n\\n    \\t},\\n\\n    \\t_takeBackControlInterpolant: function( interpolant ) {\\n\\n    \\t\\tvar interpolants = this._controlInterpolants,\\n    \\t\\t\\tprevIndex = interpolant.__cacheIndex,\\n\\n    \\t\\t\\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\\n\\n    \\t\\t\\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\\n\\n    \\t\\tinterpolant.__cacheIndex = firstInactiveIndex;\\n    \\t\\tinterpolants[ firstInactiveIndex ] = interpolant;\\n\\n    \\t\\tlastActiveInterpolant.__cacheIndex = prevIndex;\\n    \\t\\tinterpolants[ prevIndex ] = lastActiveInterpolant;\\n\\n    \\t},\\n\\n    \\t_controlInterpolantsResultBuffer: new Float32Array( 1 )\\n\\n    } );\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     */\\n\\n    function Uniform( value ) {\\n\\n    \\tif ( typeof value === 'string' ) {\\n\\n    \\t\\tconsole.warn( 'THREE.Uniform: Type parameter is no longer needed.' );\\n    \\t\\tvalue = arguments[ 1 ];\\n\\n    \\t}\\n\\n    \\tthis.value = value;\\n\\n    \\tthis.dynamic = false;\\n\\n    }\\n\\n    Uniform.prototype = {\\n\\n    \\tconstructor: Uniform,\\n\\n    \\tonUpdate: function ( callback ) {\\n\\n    \\t\\tthis.dynamic = true;\\n    \\t\\tthis.onUpdateCallback = callback;\\n\\n    \\t\\treturn this;\\n\\n    \\t}\\n\\n    };\\n\\n    /**\\n     * @author benaadams / https://twitter.com/ben_a_adams\\n     */\\n\\n    function InstancedBufferGeometry() {\\n\\n    \\tBufferGeometry.call( this );\\n\\n    \\tthis.type = 'InstancedBufferGeometry';\\n    \\tthis.maxInstancedCount = undefined;\\n\\n    }\\n\\n    InstancedBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\\n    InstancedBufferGeometry.prototype.constructor = InstancedBufferGeometry;\\n\\n    InstancedBufferGeometry.prototype.isInstancedBufferGeometry = true;\\n\\n    InstancedBufferGeometry.prototype.addGroup = function ( start, count, instances ) {\\n\\n    \\tthis.groups.push( {\\n\\n    \\t\\tstart: start,\\n    \\t\\tcount: count,\\n    \\t\\tinstances: instances\\n\\n    \\t} );\\n\\n    };\\n\\n    InstancedBufferGeometry.prototype.copy = function ( source ) {\\n\\n    \\tvar index = source.index;\\n\\n    \\tif ( index !== null ) {\\n\\n    \\t\\tthis.setIndex( index.clone() );\\n\\n    \\t}\\n\\n    \\tvar attributes = source.attributes;\\n\\n    \\tfor ( var name in attributes ) {\\n\\n    \\t\\tvar attribute = attributes[ name ];\\n    \\t\\tthis.addAttribute( name, attribute.clone() );\\n\\n    \\t}\\n\\n    \\tvar groups = source.groups;\\n\\n    \\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\\n\\n    \\t\\tvar group = groups[ i ];\\n    \\t\\tthis.addGroup( group.start, group.count, group.instances );\\n\\n    \\t}\\n\\n    \\treturn this;\\n\\n    };\\n\\n    /**\\n     * @author benaadams / https://twitter.com/ben_a_adams\\n     */\\n\\n    function InterleavedBufferAttribute( interleavedBuffer, itemSize, offset, normalized ) {\\n\\n    \\tthis.uuid = exports.Math.generateUUID();\\n\\n    \\tthis.data = interleavedBuffer;\\n    \\tthis.itemSize = itemSize;\\n    \\tthis.offset = offset;\\n\\n    \\tthis.normalized = normalized === true;\\n\\n    }\\n\\n\\n    InterleavedBufferAttribute.prototype = {\\n\\n    \\tconstructor: InterleavedBufferAttribute,\\n\\n    \\tisInterleavedBufferAttribute: true,\\n\\n    \\tget count() {\\n\\n    \\t\\treturn this.data.count;\\n\\n    \\t},\\n\\n    \\tget array() {\\n\\n    \\t\\treturn this.data.array;\\n\\n    \\t},\\n\\n    \\tsetX: function ( index, x ) {\\n\\n    \\t\\tthis.data.array[ index * this.data.stride + this.offset ] = x;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsetY: function ( index, y ) {\\n\\n    \\t\\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsetZ: function ( index, z ) {\\n\\n    \\t\\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsetW: function ( index, w ) {\\n\\n    \\t\\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tgetX: function ( index ) {\\n\\n    \\t\\treturn this.data.array[ index * this.data.stride + this.offset ];\\n\\n    \\t},\\n\\n    \\tgetY: function ( index ) {\\n\\n    \\t\\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\\n\\n    \\t},\\n\\n    \\tgetZ: function ( index ) {\\n\\n    \\t\\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\\n\\n    \\t},\\n\\n    \\tgetW: function ( index ) {\\n\\n    \\t\\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\\n\\n    \\t},\\n\\n    \\tsetXY: function ( index, x, y ) {\\n\\n    \\t\\tindex = index * this.data.stride + this.offset;\\n\\n    \\t\\tthis.data.array[ index + 0 ] = x;\\n    \\t\\tthis.data.array[ index + 1 ] = y;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsetXYZ: function ( index, x, y, z ) {\\n\\n    \\t\\tindex = index * this.data.stride + this.offset;\\n\\n    \\t\\tthis.data.array[ index + 0 ] = x;\\n    \\t\\tthis.data.array[ index + 1 ] = y;\\n    \\t\\tthis.data.array[ index + 2 ] = z;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsetXYZW: function ( index, x, y, z, w ) {\\n\\n    \\t\\tindex = index * this.data.stride + this.offset;\\n\\n    \\t\\tthis.data.array[ index + 0 ] = x;\\n    \\t\\tthis.data.array[ index + 1 ] = y;\\n    \\t\\tthis.data.array[ index + 2 ] = z;\\n    \\t\\tthis.data.array[ index + 3 ] = w;\\n\\n    \\t\\treturn this;\\n\\n    \\t}\\n\\n    };\\n\\n    /**\\n     * @author benaadams / https://twitter.com/ben_a_adams\\n     */\\n\\n    function InterleavedBuffer( array, stride ) {\\n\\n    \\tthis.uuid = exports.Math.generateUUID();\\n\\n    \\tthis.array = array;\\n    \\tthis.stride = stride;\\n    \\tthis.count = array !== undefined ? array.length / stride : 0;\\n\\n    \\tthis.dynamic = false;\\n    \\tthis.updateRange = { offset: 0, count: - 1 };\\n\\n    \\tthis.version = 0;\\n\\n    }\\n\\n    InterleavedBuffer.prototype = {\\n\\n    \\tconstructor: InterleavedBuffer,\\n\\n    \\tisInterleavedBuffer: true,\\n\\n    \\tset needsUpdate( value ) {\\n\\n    \\t\\tif ( value === true ) this.version ++;\\n\\n    \\t},\\n\\n    \\tsetDynamic: function ( value ) {\\n\\n    \\t\\tthis.dynamic = value;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tcopy: function ( source ) {\\n\\n    \\t\\tthis.array = new source.array.constructor( source.array );\\n    \\t\\tthis.count = source.count;\\n    \\t\\tthis.stride = source.stride;\\n    \\t\\tthis.dynamic = source.dynamic;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tcopyAt: function ( index1, attribute, index2 ) {\\n\\n    \\t\\tindex1 *= this.stride;\\n    \\t\\tindex2 *= attribute.stride;\\n\\n    \\t\\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\\n\\n    \\t\\t\\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\\n\\n    \\t\\t}\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tset: function ( value, offset ) {\\n\\n    \\t\\tif ( offset === undefined ) offset = 0;\\n\\n    \\t\\tthis.array.set( value, offset );\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tclone: function () {\\n\\n    \\t\\treturn new this.constructor().copy( this );\\n\\n    \\t}\\n\\n    };\\n\\n    /**\\n     * @author benaadams / https://twitter.com/ben_a_adams\\n     */\\n\\n    function InstancedInterleavedBuffer( array, stride, meshPerAttribute ) {\\n\\n    \\tInterleavedBuffer.call( this, array, stride );\\n\\n    \\tthis.meshPerAttribute = meshPerAttribute || 1;\\n\\n    }\\n\\n    InstancedInterleavedBuffer.prototype = Object.create( InterleavedBuffer.prototype );\\n    InstancedInterleavedBuffer.prototype.constructor = InstancedInterleavedBuffer;\\n\\n    InstancedInterleavedBuffer.prototype.isInstancedInterleavedBuffer = true;\\n\\n    InstancedInterleavedBuffer.prototype.copy = function ( source ) {\\n\\n    \\tInterleavedBuffer.prototype.copy.call( this, source );\\n\\n    \\tthis.meshPerAttribute = source.meshPerAttribute;\\n\\n    \\treturn this;\\n\\n    };\\n\\n    /**\\n     * @author benaadams / https://twitter.com/ben_a_adams\\n     */\\n\\n    function InstancedBufferAttribute( array, itemSize, meshPerAttribute ) {\\n\\n    \\tBufferAttribute.call( this, array, itemSize );\\n\\n    \\tthis.meshPerAttribute = meshPerAttribute || 1;\\n\\n    }\\n\\n    InstancedBufferAttribute.prototype = Object.create( BufferAttribute.prototype );\\n    InstancedBufferAttribute.prototype.constructor = InstancedBufferAttribute;\\n\\n    InstancedBufferAttribute.prototype.isInstancedBufferAttribute = true;\\n\\n    InstancedBufferAttribute.prototype.copy = function ( source ) {\\n\\n    \\tBufferAttribute.prototype.copy.call( this, source );\\n\\n    \\tthis.meshPerAttribute = source.meshPerAttribute;\\n\\n    \\treturn this;\\n\\n    };\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     * @author bhouston / http://clara.io/\\n     * @author stephomi / http://stephaneginier.com/\\n     */\\n\\n    function Raycaster( origin, direction, near, far ) {\\n\\n    \\tthis.ray = new Ray( origin, direction );\\n    \\t// direction is assumed to be normalized (for accurate distance calculations)\\n\\n    \\tthis.near = near || 0;\\n    \\tthis.far = far || Infinity;\\n\\n    \\tthis.params = {\\n    \\t\\tMesh: {},\\n    \\t\\tLine: {},\\n    \\t\\tLOD: {},\\n    \\t\\tPoints: { threshold: 1 },\\n    \\t\\tSprite: {}\\n    \\t};\\n\\n    \\tObject.defineProperties( this.params, {\\n    \\t\\tPointCloud: {\\n    \\t\\t\\tget: function () {\\n    \\t\\t\\t\\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\\n    \\t\\t\\t\\treturn this.Points;\\n    \\t\\t\\t}\\n    \\t\\t}\\n    \\t} );\\n\\n    }\\n\\n    function ascSort( a, b ) {\\n\\n    \\treturn a.distance - b.distance;\\n\\n    }\\n\\n    function intersectObject( object, raycaster, intersects, recursive ) {\\n\\n    \\tif ( object.visible === false ) return;\\n\\n    \\tobject.raycast( raycaster, intersects );\\n\\n    \\tif ( recursive === true ) {\\n\\n    \\t\\tvar children = object.children;\\n\\n    \\t\\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\\n\\n    \\t\\t\\tintersectObject( children[ i ], raycaster, intersects, true );\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    }\\n\\n    //\\n\\n    Raycaster.prototype = {\\n\\n    \\tconstructor: Raycaster,\\n\\n    \\tlinePrecision: 1,\\n\\n    \\tset: function ( origin, direction ) {\\n\\n    \\t\\t// direction is assumed to be normalized (for accurate distance calculations)\\n\\n    \\t\\tthis.ray.set( origin, direction );\\n\\n    \\t},\\n\\n    \\tsetFromCamera: function ( coords, camera ) {\\n\\n    \\t\\tif ( (camera && camera.isPerspectiveCamera) ) {\\n\\n    \\t\\t\\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\\n    \\t\\t\\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\\n\\n    \\t\\t} else if ( (camera && camera.isOrthographicCamera) ) {\\n\\n    \\t\\t\\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\\n    \\t\\t\\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\\n\\n    \\t\\t}\\n\\n    \\t},\\n\\n    \\tintersectObject: function ( object, recursive ) {\\n\\n    \\t\\tvar intersects = [];\\n\\n    \\t\\tintersectObject( object, this, intersects, recursive );\\n\\n    \\t\\tintersects.sort( ascSort );\\n\\n    \\t\\treturn intersects;\\n\\n    \\t},\\n\\n    \\tintersectObjects: function ( objects, recursive ) {\\n\\n    \\t\\tvar intersects = [];\\n\\n    \\t\\tif ( Array.isArray( objects ) === false ) {\\n\\n    \\t\\t\\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\\n    \\t\\t\\treturn intersects;\\n\\n    \\t\\t}\\n\\n    \\t\\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\\n\\n    \\t\\t\\tintersectObject( objects[ i ], this, intersects, recursive );\\n\\n    \\t\\t}\\n\\n    \\t\\tintersects.sort( ascSort );\\n\\n    \\t\\treturn intersects;\\n\\n    \\t}\\n\\n    };\\n\\n    /**\\n     * @author alteredq / http://alteredqualia.com/\\n     */\\n\\n    function Clock( autoStart ) {\\n\\n    \\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\\n\\n    \\tthis.startTime = 0;\\n    \\tthis.oldTime = 0;\\n    \\tthis.elapsedTime = 0;\\n\\n    \\tthis.running = false;\\n\\n    }\\n\\n    Clock.prototype = {\\n\\n    \\tconstructor: Clock,\\n\\n    \\tstart: function () {\\n\\n    \\t\\tthis.startTime = ( performance || Date ).now();\\n\\n    \\t\\tthis.oldTime = this.startTime;\\n    \\t\\tthis.running = true;\\n\\n    \\t},\\n\\n    \\tstop: function () {\\n\\n    \\t\\tthis.getElapsedTime();\\n    \\t\\tthis.running = false;\\n\\n    \\t},\\n\\n    \\tgetElapsedTime: function () {\\n\\n    \\t\\tthis.getDelta();\\n    \\t\\treturn this.elapsedTime;\\n\\n    \\t},\\n\\n    \\tgetDelta: function () {\\n\\n    \\t\\tvar diff = 0;\\n\\n    \\t\\tif ( this.autoStart && ! this.running ) {\\n\\n    \\t\\t\\tthis.start();\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( this.running ) {\\n\\n    \\t\\t\\tvar newTime = ( performance || Date ).now();\\n\\n    \\t\\t\\tdiff = ( newTime - this.oldTime ) / 1000;\\n    \\t\\t\\tthis.oldTime = newTime;\\n\\n    \\t\\t\\tthis.elapsedTime += diff;\\n\\n    \\t\\t}\\n\\n    \\t\\treturn diff;\\n\\n    \\t}\\n\\n    };\\n\\n    /**\\n     * Spline from Tween.js, slightly optimized (and trashed)\\n     * http://sole.github.com/tween.js/examples/05_spline.html\\n     *\\n     * @author mrdoob / http://mrdoob.com/\\n     * @author alteredq / http://alteredqualia.com/\\n     */\\n\\n    function Spline( points ) {\\n\\n    \\tthis.points = points;\\n\\n    \\tvar c = [], v3 = { x: 0, y: 0, z: 0 },\\n    \\tpoint, intPoint, weight, w2, w3,\\n    \\tpa, pb, pc, pd;\\n\\n    \\tthis.initFromArray = function ( a ) {\\n\\n    \\t\\tthis.points = [];\\n\\n    \\t\\tfor ( var i = 0; i < a.length; i ++ ) {\\n\\n    \\t\\t\\tthis.points[ i ] = { x: a[ i ][ 0 ], y: a[ i ][ 1 ], z: a[ i ][ 2 ] };\\n\\n    \\t\\t}\\n\\n    \\t};\\n\\n    \\tthis.getPoint = function ( k ) {\\n\\n    \\t\\tpoint = ( this.points.length - 1 ) * k;\\n    \\t\\tintPoint = Math.floor( point );\\n    \\t\\tweight = point - intPoint;\\n\\n    \\t\\tc[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;\\n    \\t\\tc[ 1 ] = intPoint;\\n    \\t\\tc[ 2 ] = intPoint  > this.points.length - 2 ? this.points.length - 1 : intPoint + 1;\\n    \\t\\tc[ 3 ] = intPoint  > this.points.length - 3 ? this.points.length - 1 : intPoint + 2;\\n\\n    \\t\\tpa = this.points[ c[ 0 ] ];\\n    \\t\\tpb = this.points[ c[ 1 ] ];\\n    \\t\\tpc = this.points[ c[ 2 ] ];\\n    \\t\\tpd = this.points[ c[ 3 ] ];\\n\\n    \\t\\tw2 = weight * weight;\\n    \\t\\tw3 = weight * w2;\\n\\n    \\t\\tv3.x = interpolate( pa.x, pb.x, pc.x, pd.x, weight, w2, w3 );\\n    \\t\\tv3.y = interpolate( pa.y, pb.y, pc.y, pd.y, weight, w2, w3 );\\n    \\t\\tv3.z = interpolate( pa.z, pb.z, pc.z, pd.z, weight, w2, w3 );\\n\\n    \\t\\treturn v3;\\n\\n    \\t};\\n\\n    \\tthis.getControlPointsArray = function () {\\n\\n    \\t\\tvar i, p, l = this.points.length,\\n    \\t\\t\\tcoords = [];\\n\\n    \\t\\tfor ( i = 0; i < l; i ++ ) {\\n\\n    \\t\\t\\tp = this.points[ i ];\\n    \\t\\t\\tcoords[ i ] = [ p.x, p.y, p.z ];\\n\\n    \\t\\t}\\n\\n    \\t\\treturn coords;\\n\\n    \\t};\\n\\n    \\t// approximate length by summing linear segments\\n\\n    \\tthis.getLength = function ( nSubDivisions ) {\\n\\n    \\t\\tvar i, index, nSamples, position,\\n    \\t\\t\\tpoint = 0, intPoint = 0, oldIntPoint = 0,\\n    \\t\\t\\toldPosition = new Vector3(),\\n    \\t\\t\\ttmpVec = new Vector3(),\\n    \\t\\t\\tchunkLengths = [],\\n    \\t\\t\\ttotalLength = 0;\\n\\n    \\t\\t// first point has 0 length\\n\\n    \\t\\tchunkLengths[ 0 ] = 0;\\n\\n    \\t\\tif ( ! nSubDivisions ) nSubDivisions = 100;\\n\\n    \\t\\tnSamples = this.points.length * nSubDivisions;\\n\\n    \\t\\toldPosition.copy( this.points[ 0 ] );\\n\\n    \\t\\tfor ( i = 1; i < nSamples; i ++ ) {\\n\\n    \\t\\t\\tindex = i / nSamples;\\n\\n    \\t\\t\\tposition = this.getPoint( index );\\n    \\t\\t\\ttmpVec.copy( position );\\n\\n    \\t\\t\\ttotalLength += tmpVec.distanceTo( oldPosition );\\n\\n    \\t\\t\\toldPosition.copy( position );\\n\\n    \\t\\t\\tpoint = ( this.points.length - 1 ) * index;\\n    \\t\\t\\tintPoint = Math.floor( point );\\n\\n    \\t\\t\\tif ( intPoint !== oldIntPoint ) {\\n\\n    \\t\\t\\t\\tchunkLengths[ intPoint ] = totalLength;\\n    \\t\\t\\t\\toldIntPoint = intPoint;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\t// last point ends with total length\\n\\n    \\t\\tchunkLengths[ chunkLengths.length ] = totalLength;\\n\\n    \\t\\treturn { chunks: chunkLengths, total: totalLength };\\n\\n    \\t};\\n\\n    \\tthis.reparametrizeByArcLength = function ( samplingCoef ) {\\n\\n    \\t\\tvar i, j,\\n    \\t\\t\\tindex, indexCurrent, indexNext,\\n    \\t\\t\\trealDistance,\\n    \\t\\t\\tsampling, position,\\n    \\t\\t\\tnewpoints = [],\\n    \\t\\t\\ttmpVec = new Vector3(),\\n    \\t\\t\\tsl = this.getLength();\\n\\n    \\t\\tnewpoints.push( tmpVec.copy( this.points[ 0 ] ).clone() );\\n\\n    \\t\\tfor ( i = 1; i < this.points.length; i ++ ) {\\n\\n    \\t\\t\\t//tmpVec.copy( this.points[ i - 1 ] );\\n    \\t\\t\\t//linearDistance = tmpVec.distanceTo( this.points[ i ] );\\n\\n    \\t\\t\\trealDistance = sl.chunks[ i ] - sl.chunks[ i - 1 ];\\n\\n    \\t\\t\\tsampling = Math.ceil( samplingCoef * realDistance / sl.total );\\n\\n    \\t\\t\\tindexCurrent = ( i - 1 ) / ( this.points.length - 1 );\\n    \\t\\t\\tindexNext = i / ( this.points.length - 1 );\\n\\n    \\t\\t\\tfor ( j = 1; j < sampling - 1; j ++ ) {\\n\\n    \\t\\t\\t\\tindex = indexCurrent + j * ( 1 / sampling ) * ( indexNext - indexCurrent );\\n\\n    \\t\\t\\t\\tposition = this.getPoint( index );\\n    \\t\\t\\t\\tnewpoints.push( tmpVec.copy( position ).clone() );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tnewpoints.push( tmpVec.copy( this.points[ i ] ).clone() );\\n\\n    \\t\\t}\\n\\n    \\t\\tthis.points = newpoints;\\n\\n    \\t};\\n\\n    \\t// Catmull-Rom\\n\\n    \\tfunction interpolate( p0, p1, p2, p3, t, t2, t3 ) {\\n\\n    \\t\\tvar v0 = ( p2 - p0 ) * 0.5,\\n    \\t\\t\\tv1 = ( p3 - p1 ) * 0.5;\\n\\n    \\t\\treturn ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;\\n\\n    \\t}\\n\\n    }\\n\\n    /**\\n     * @author bhouston / http://clara.io\\n     * @author WestLangley / http://github.com/WestLangley\\n     *\\n     * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\\n     *\\n     * The poles (phi) are at the positive and negative y axis.\\n     * The equator starts at positive z.\\n     */\\n\\n    function Spherical( radius, phi, theta ) {\\n\\n    \\tthis.radius = ( radius !== undefined ) ? radius : 1.0;\\n    \\tthis.phi = ( phi !== undefined ) ? phi : 0; // up / down towards top and bottom pole\\n    \\tthis.theta = ( theta !== undefined ) ? theta : 0; // around the equator of the sphere\\n\\n    \\treturn this;\\n\\n    }\\n\\n    Spherical.prototype = {\\n\\n    \\tconstructor: Spherical,\\n\\n    \\tset: function ( radius, phi, theta ) {\\n\\n    \\t\\tthis.radius = radius;\\n    \\t\\tthis.phi = phi;\\n    \\t\\tthis.theta = theta;\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tclone: function () {\\n\\n    \\t\\treturn new this.constructor().copy( this );\\n\\n    \\t},\\n\\n    \\tcopy: function ( other ) {\\n\\n    \\t\\tthis.radius.copy( other.radius );\\n    \\t\\tthis.phi.copy( other.phi );\\n    \\t\\tthis.theta.copy( other.theta );\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\t// restrict phi to be betwee EPS and PI-EPS\\n    \\tmakeSafe: function() {\\n\\n    \\t\\tvar EPS = 0.000001;\\n    \\t\\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    \\tsetFromVector3: function( vec3 ) {\\n\\n    \\t\\tthis.radius = vec3.length();\\n\\n    \\t\\tif ( this.radius === 0 ) {\\n\\n    \\t\\t\\tthis.theta = 0;\\n    \\t\\t\\tthis.phi = 0;\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\tthis.theta = Math.atan2( vec3.x, vec3.z ); // equator angle around y-up axis\\n    \\t\\t\\tthis.phi = Math.acos( exports.Math.clamp( vec3.y / this.radius, - 1, 1 ) ); // polar angle\\n\\n    \\t\\t}\\n\\n    \\t\\treturn this;\\n\\n    \\t},\\n\\n    };\\n\\n    /**\\r\\n     * @author alteredq / http://alteredqualia.com/\\r\\n     */\\r\\n\\r\\n    function MorphBlendMesh( geometry, material ) {\\n\\r\\n    \\tMesh.call( this, geometry, material );\\r\\n\\r\\n    \\tthis.animationsMap = {};\\r\\n    \\tthis.animationsList = [];\\r\\n\\r\\n    \\t// prepare default animation\\r\\n    \\t// (all frames played together in 1 second)\\r\\n\\r\\n    \\tvar numFrames = this.geometry.morphTargets.length;\\r\\n\\r\\n    \\tvar name = \\\"__default\\\";\\r\\n\\r\\n    \\tvar startFrame = 0;\\r\\n    \\tvar endFrame = numFrames - 1;\\r\\n\\r\\n    \\tvar fps = numFrames / 1;\\r\\n\\r\\n    \\tthis.createAnimation( name, startFrame, endFrame, fps );\\r\\n    \\tthis.setAnimationWeight( name, 1 );\\r\\n\\r\\n    }\\r\\n\\r\\n    MorphBlendMesh.prototype = Object.create( Mesh.prototype );\\r\\n    MorphBlendMesh.prototype.constructor = MorphBlendMesh;\\r\\n\\r\\n    MorphBlendMesh.prototype.createAnimation = function ( name, start, end, fps ) {\\r\\n\\r\\n    \\tvar animation = {\\r\\n\\r\\n    \\t\\tstart: start,\\r\\n    \\t\\tend: end,\\r\\n\\r\\n    \\t\\tlength: end - start + 1,\\r\\n\\r\\n    \\t\\tfps: fps,\\r\\n    \\t\\tduration: ( end - start ) / fps,\\r\\n\\r\\n    \\t\\tlastFrame: 0,\\r\\n    \\t\\tcurrentFrame: 0,\\r\\n\\r\\n    \\t\\tactive: false,\\r\\n\\r\\n    \\t\\ttime: 0,\\r\\n    \\t\\tdirection: 1,\\r\\n    \\t\\tweight: 1,\\r\\n\\r\\n    \\t\\tdirectionBackwards: false,\\r\\n    \\t\\tmirroredLoop: false\\r\\n\\r\\n    \\t};\\r\\n\\r\\n    \\tthis.animationsMap[ name ] = animation;\\r\\n    \\tthis.animationsList.push( animation );\\r\\n\\r\\n    };\\r\\n\\r\\n    MorphBlendMesh.prototype.autoCreateAnimations = function ( fps ) {\\r\\n\\r\\n    \\tvar pattern = /([a-z]+)_?(\\\\d+)/i;\\r\\n\\r\\n    \\tvar firstAnimation, frameRanges = {};\\r\\n\\r\\n    \\tvar geometry = this.geometry;\\r\\n\\r\\n    \\tfor ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {\\r\\n\\r\\n    \\t\\tvar morph = geometry.morphTargets[ i ];\\r\\n    \\t\\tvar chunks = morph.name.match( pattern );\\r\\n\\r\\n    \\t\\tif ( chunks && chunks.length > 1 ) {\\r\\n\\r\\n    \\t\\t\\tvar name = chunks[ 1 ];\\r\\n\\r\\n    \\t\\t\\tif ( ! frameRanges[ name ] ) frameRanges[ name ] = { start: Infinity, end: - Infinity };\\r\\n\\r\\n    \\t\\t\\tvar range = frameRanges[ name ];\\r\\n\\r\\n    \\t\\t\\tif ( i < range.start ) range.start = i;\\r\\n    \\t\\t\\tif ( i > range.end ) range.end = i;\\r\\n\\r\\n    \\t\\t\\tif ( ! firstAnimation ) firstAnimation = name;\\r\\n\\r\\n    \\t\\t}\\r\\n\\r\\n    \\t}\\r\\n\\r\\n    \\tfor ( var name in frameRanges ) {\\r\\n\\r\\n    \\t\\tvar range = frameRanges[ name ];\\r\\n    \\t\\tthis.createAnimation( name, range.start, range.end, fps );\\r\\n\\r\\n    \\t}\\r\\n\\r\\n    \\tthis.firstAnimation = firstAnimation;\\r\\n\\r\\n    };\\r\\n\\r\\n    MorphBlendMesh.prototype.setAnimationDirectionForward = function ( name ) {\\r\\n\\r\\n    \\tvar animation = this.animationsMap[ name ];\\r\\n\\r\\n    \\tif ( animation ) {\\r\\n\\r\\n    \\t\\tanimation.direction = 1;\\r\\n    \\t\\tanimation.directionBackwards = false;\\r\\n\\r\\n    \\t}\\r\\n\\r\\n    };\\r\\n\\r\\n    MorphBlendMesh.prototype.setAnimationDirectionBackward = function ( name ) {\\r\\n\\r\\n    \\tvar animation = this.animationsMap[ name ];\\r\\n\\r\\n    \\tif ( animation ) {\\r\\n\\r\\n    \\t\\tanimation.direction = - 1;\\r\\n    \\t\\tanimation.directionBackwards = true;\\r\\n\\r\\n    \\t}\\r\\n\\r\\n    };\\r\\n\\r\\n    MorphBlendMesh.prototype.setAnimationFPS = function ( name, fps ) {\\r\\n\\r\\n    \\tvar animation = this.animationsMap[ name ];\\r\\n\\r\\n    \\tif ( animation ) {\\r\\n\\r\\n    \\t\\tanimation.fps = fps;\\r\\n    \\t\\tanimation.duration = ( animation.end - animation.start ) / animation.fps;\\r\\n\\r\\n    \\t}\\r\\n\\r\\n    };\\r\\n\\r\\n    MorphBlendMesh.prototype.setAnimationDuration = function ( name, duration ) {\\r\\n\\r\\n    \\tvar animation = this.animationsMap[ name ];\\r\\n\\r\\n    \\tif ( animation ) {\\r\\n\\r\\n    \\t\\tanimation.duration = duration;\\r\\n    \\t\\tanimation.fps = ( animation.end - animation.start ) / animation.duration;\\r\\n\\r\\n    \\t}\\r\\n\\r\\n    };\\r\\n\\r\\n    MorphBlendMesh.prototype.setAnimationWeight = function ( name, weight ) {\\r\\n\\r\\n    \\tvar animation = this.animationsMap[ name ];\\r\\n\\r\\n    \\tif ( animation ) {\\r\\n\\r\\n    \\t\\tanimation.weight = weight;\\r\\n\\r\\n    \\t}\\r\\n\\r\\n    };\\r\\n\\r\\n    MorphBlendMesh.prototype.setAnimationTime = function ( name, time ) {\\r\\n\\r\\n    \\tvar animation = this.animationsMap[ name ];\\r\\n\\r\\n    \\tif ( animation ) {\\r\\n\\r\\n    \\t\\tanimation.time = time;\\r\\n\\r\\n    \\t}\\r\\n\\r\\n    };\\r\\n\\r\\n    MorphBlendMesh.prototype.getAnimationTime = function ( name ) {\\r\\n\\r\\n    \\tvar time = 0;\\r\\n\\r\\n    \\tvar animation = this.animationsMap[ name ];\\r\\n\\r\\n    \\tif ( animation ) {\\r\\n\\r\\n    \\t\\ttime = animation.time;\\r\\n\\r\\n    \\t}\\r\\n\\r\\n    \\treturn time;\\r\\n\\r\\n    };\\r\\n\\r\\n    MorphBlendMesh.prototype.getAnimationDuration = function ( name ) {\\r\\n\\r\\n    \\tvar duration = - 1;\\r\\n\\r\\n    \\tvar animation = this.animationsMap[ name ];\\r\\n\\r\\n    \\tif ( animation ) {\\r\\n\\r\\n    \\t\\tduration = animation.duration;\\r\\n\\r\\n    \\t}\\r\\n\\r\\n    \\treturn duration;\\r\\n\\r\\n    };\\r\\n\\r\\n    MorphBlendMesh.prototype.playAnimation = function ( name ) {\\r\\n\\r\\n    \\tvar animation = this.animationsMap[ name ];\\r\\n\\r\\n    \\tif ( animation ) {\\r\\n\\r\\n    \\t\\tanimation.time = 0;\\r\\n    \\t\\tanimation.active = true;\\r\\n\\r\\n    \\t} else {\\r\\n\\r\\n    \\t\\tconsole.warn( \\\"THREE.MorphBlendMesh: animation[\\\" + name + \\\"] undefined in .playAnimation()\\\" );\\r\\n\\r\\n    \\t}\\r\\n\\r\\n    };\\r\\n\\r\\n    MorphBlendMesh.prototype.stopAnimation = function ( name ) {\\r\\n\\r\\n    \\tvar animation = this.animationsMap[ name ];\\r\\n\\r\\n    \\tif ( animation ) {\\r\\n\\r\\n    \\t\\tanimation.active = false;\\r\\n\\r\\n    \\t}\\r\\n\\r\\n    };\\r\\n\\r\\n    MorphBlendMesh.prototype.update = function ( delta ) {\\r\\n\\r\\n    \\tfor ( var i = 0, il = this.animationsList.length; i < il; i ++ ) {\\r\\n\\r\\n    \\t\\tvar animation = this.animationsList[ i ];\\r\\n\\r\\n    \\t\\tif ( ! animation.active ) continue;\\r\\n\\r\\n    \\t\\tvar frameTime = animation.duration / animation.length;\\r\\n\\r\\n    \\t\\tanimation.time += animation.direction * delta;\\r\\n\\r\\n    \\t\\tif ( animation.mirroredLoop ) {\\r\\n\\r\\n    \\t\\t\\tif ( animation.time > animation.duration || animation.time < 0 ) {\\r\\n\\r\\n    \\t\\t\\t\\tanimation.direction *= - 1;\\r\\n\\r\\n    \\t\\t\\t\\tif ( animation.time > animation.duration ) {\\r\\n\\r\\n    \\t\\t\\t\\t\\tanimation.time = animation.duration;\\r\\n    \\t\\t\\t\\t\\tanimation.directionBackwards = true;\\r\\n\\r\\n    \\t\\t\\t\\t}\\r\\n\\r\\n    \\t\\t\\t\\tif ( animation.time < 0 ) {\\r\\n\\r\\n    \\t\\t\\t\\t\\tanimation.time = 0;\\r\\n    \\t\\t\\t\\t\\tanimation.directionBackwards = false;\\r\\n\\r\\n    \\t\\t\\t\\t}\\r\\n\\r\\n    \\t\\t\\t}\\r\\n\\r\\n    \\t\\t} else {\\r\\n\\r\\n    \\t\\t\\tanimation.time = animation.time % animation.duration;\\r\\n\\r\\n    \\t\\t\\tif ( animation.time < 0 ) animation.time += animation.duration;\\r\\n\\r\\n    \\t\\t}\\r\\n\\r\\n    \\t\\tvar keyframe = animation.start + exports.Math.clamp( Math.floor( animation.time / frameTime ), 0, animation.length - 1 );\\r\\n    \\t\\tvar weight = animation.weight;\\r\\n\\r\\n    \\t\\tif ( keyframe !== animation.currentFrame ) {\\r\\n\\r\\n    \\t\\t\\tthis.morphTargetInfluences[ animation.lastFrame ] = 0;\\r\\n    \\t\\t\\tthis.morphTargetInfluences[ animation.currentFrame ] = 1 * weight;\\r\\n\\r\\n    \\t\\t\\tthis.morphTargetInfluences[ keyframe ] = 0;\\r\\n\\r\\n    \\t\\t\\tanimation.lastFrame = animation.currentFrame;\\r\\n    \\t\\t\\tanimation.currentFrame = keyframe;\\r\\n\\r\\n    \\t\\t}\\r\\n\\r\\n    \\t\\tvar mix = ( animation.time % frameTime ) / frameTime;\\r\\n\\r\\n    \\t\\tif ( animation.directionBackwards ) mix = 1 - mix;\\r\\n\\r\\n    \\t\\tif ( animation.currentFrame !== animation.lastFrame ) {\\r\\n\\r\\n    \\t\\t\\tthis.morphTargetInfluences[ animation.currentFrame ] = mix * weight;\\r\\n    \\t\\t\\tthis.morphTargetInfluences[ animation.lastFrame ] = ( 1 - mix ) * weight;\\r\\n\\r\\n    \\t\\t} else {\\r\\n\\r\\n    \\t\\t\\tthis.morphTargetInfluences[ animation.currentFrame ] = weight;\\r\\n\\r\\n    \\t\\t}\\r\\n\\r\\n    \\t}\\r\\n\\r\\n    };\\n\\n    /**\\n     * @author alteredq / http://alteredqualia.com/\\n     */\\n\\n    function ImmediateRenderObject( material ) {\\n\\n    \\tObject3D.call( this );\\n\\n    \\tthis.material = material;\\n    \\tthis.render = function ( renderCallback ) {};\\n\\n    }\\n\\n    ImmediateRenderObject.prototype = Object.create( Object3D.prototype );\\n    ImmediateRenderObject.prototype.constructor = ImmediateRenderObject;\\n\\n    ImmediateRenderObject.prototype.isImmediateRenderObject = true;\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     * @author WestLangley / http://github.com/WestLangley\\n    */\\n\\n    function VertexNormalsHelper( object, size, hex, linewidth ) {\\n\\n    \\tthis.object = object;\\n\\n    \\tthis.size = ( size !== undefined ) ? size : 1;\\n\\n    \\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\\n\\n    \\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\\n\\n    \\t//\\n\\n    \\tvar nNormals = 0;\\n\\n    \\tvar objGeometry = this.object.geometry;\\n\\n    \\tif ( (objGeometry && objGeometry.isGeometry) ) {\\n\\n    \\t\\tnNormals = objGeometry.faces.length * 3;\\n\\n    \\t} else if ( (objGeometry && objGeometry.isBufferGeometry) ) {\\n\\n    \\t\\tnNormals = objGeometry.attributes.normal.count;\\n\\n    \\t}\\n\\n    \\t//\\n\\n    \\tvar geometry = new BufferGeometry();\\n\\n    \\tvar positions = new Float32Attribute( nNormals * 2 * 3, 3 );\\n\\n    \\tgeometry.addAttribute( 'position', positions );\\n\\n    \\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\\n\\n    \\t//\\n\\n    \\tthis.matrixAutoUpdate = false;\\n\\n    \\tthis.update();\\n\\n    }\\n\\n    VertexNormalsHelper.prototype = Object.create( LineSegments.prototype );\\n    VertexNormalsHelper.prototype.constructor = VertexNormalsHelper;\\n\\n    VertexNormalsHelper.prototype.update = ( function () {\\n\\n    \\tvar v1 = new Vector3();\\n    \\tvar v2 = new Vector3();\\n    \\tvar normalMatrix = new Matrix3();\\n\\n    \\treturn function update() {\\n\\n    \\t\\tvar keys = [ 'a', 'b', 'c' ];\\n\\n    \\t\\tthis.object.updateMatrixWorld( true );\\n\\n    \\t\\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\\n\\n    \\t\\tvar matrixWorld = this.object.matrixWorld;\\n\\n    \\t\\tvar position = this.geometry.attributes.position;\\n\\n    \\t\\t//\\n\\n    \\t\\tvar objGeometry = this.object.geometry;\\n\\n    \\t\\tif ( (objGeometry && objGeometry.isGeometry) ) {\\n\\n    \\t\\t\\tvar vertices = objGeometry.vertices;\\n\\n    \\t\\t\\tvar faces = objGeometry.faces;\\n\\n    \\t\\t\\tvar idx = 0;\\n\\n    \\t\\t\\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\\n\\n    \\t\\t\\t\\tvar face = faces[ i ];\\n\\n    \\t\\t\\t\\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\\n\\n    \\t\\t\\t\\t\\tvar vertex = vertices[ face[ keys[ j ] ] ];\\n\\n    \\t\\t\\t\\t\\tvar normal = face.vertexNormals[ j ];\\n\\n    \\t\\t\\t\\t\\tv1.copy( vertex ).applyMatrix4( matrixWorld );\\n\\n    \\t\\t\\t\\t\\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\\n\\n    \\t\\t\\t\\t\\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\\n\\n    \\t\\t\\t\\t\\tidx = idx + 1;\\n\\n    \\t\\t\\t\\t\\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\\n\\n    \\t\\t\\t\\t\\tidx = idx + 1;\\n\\n    \\t\\t\\t\\t}\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t} else if ( (objGeometry && objGeometry.isBufferGeometry) ) {\\n\\n    \\t\\t\\tvar objPos = objGeometry.attributes.position;\\n\\n    \\t\\t\\tvar objNorm = objGeometry.attributes.normal;\\n\\n    \\t\\t\\tvar idx = 0;\\n\\n    \\t\\t\\t// for simplicity, ignore index and drawcalls, and render every normal\\n\\n    \\t\\t\\tfor ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\\n\\n    \\t\\t\\t\\tv1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\\n\\n    \\t\\t\\t\\tv2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\\n\\n    \\t\\t\\t\\tv2.applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\\n\\n    \\t\\t\\t\\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\\n\\n    \\t\\t\\t\\tidx = idx + 1;\\n\\n    \\t\\t\\t\\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\\n\\n    \\t\\t\\t\\tidx = idx + 1;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t\\tposition.needsUpdate = true;\\n\\n    \\t\\treturn this;\\n\\n    \\t};\\n\\n    }() );\\n\\n    /**\\n     * @author alteredq / http://alteredqualia.com/\\n     * @author mrdoob / http://mrdoob.com/\\n     * @author WestLangley / http://github.com/WestLangley\\n    */\\n\\n    function SpotLightHelper( light ) {\\n\\n    \\tObject3D.call( this );\\n\\n    \\tthis.light = light;\\n    \\tthis.light.updateMatrixWorld();\\n\\n    \\tthis.matrix = light.matrixWorld;\\n    \\tthis.matrixAutoUpdate = false;\\n\\n    \\tvar geometry = new BufferGeometry();\\n\\n    \\tvar positions = [\\n    \\t\\t0, 0, 0,   0,   0,   1,\\n    \\t\\t0, 0, 0,   1,   0,   1,\\n    \\t\\t0, 0, 0, - 1,   0,   1,\\n    \\t\\t0, 0, 0,   0,   1,   1,\\n    \\t\\t0, 0, 0,   0, - 1,   1\\n    \\t];\\n\\n    \\tfor ( var i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\\n\\n    \\t\\tvar p1 = ( i / l ) * Math.PI * 2;\\n    \\t\\tvar p2 = ( j / l ) * Math.PI * 2;\\n\\n    \\t\\tpositions.push(\\n    \\t\\t\\tMath.cos( p1 ), Math.sin( p1 ), 1,\\n    \\t\\t\\tMath.cos( p2 ), Math.sin( p2 ), 1\\n    \\t\\t);\\n\\n    \\t}\\n\\n    \\tgeometry.addAttribute( 'position', new Float32Attribute( positions, 3 ) );\\n\\n    \\tvar material = new LineBasicMaterial( { fog: false } );\\n\\n    \\tthis.cone = new LineSegments( geometry, material );\\n    \\tthis.add( this.cone );\\n\\n    \\tthis.update();\\n\\n    }\\n\\n    SpotLightHelper.prototype = Object.create( Object3D.prototype );\\n    SpotLightHelper.prototype.constructor = SpotLightHelper;\\n\\n    SpotLightHelper.prototype.dispose = function () {\\n\\n    \\tthis.cone.geometry.dispose();\\n    \\tthis.cone.material.dispose();\\n\\n    };\\n\\n    SpotLightHelper.prototype.update = function () {\\n\\n    \\tvar vector = new Vector3();\\n    \\tvar vector2 = new Vector3();\\n\\n    \\treturn function update() {\\n\\n    \\t\\tvar coneLength = this.light.distance ? this.light.distance : 1000;\\n    \\t\\tvar coneWidth = coneLength * Math.tan( this.light.angle );\\n\\n    \\t\\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\\n\\n    \\t\\tvector.setFromMatrixPosition( this.light.matrixWorld );\\n    \\t\\tvector2.setFromMatrixPosition( this.light.target.matrixWorld );\\n\\n    \\t\\tthis.cone.lookAt( vector2.sub( vector ) );\\n\\n    \\t\\tthis.cone.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\\n\\n    \\t};\\n\\n    }();\\n\\n    /**\\n     * @author Sean Griffin / http://twitter.com/sgrif\\n     * @author Michael Guerrero / http://realitymeltdown.com\\n     * @author mrdoob / http://mrdoob.com/\\n     * @author ikerr / http://verold.com\\n     */\\n\\n    function SkeletonHelper( object ) {\\n\\n    \\tthis.bones = this.getBoneList( object );\\n\\n    \\tvar geometry = new Geometry();\\n\\n    \\tfor ( var i = 0; i < this.bones.length; i ++ ) {\\n\\n    \\t\\tvar bone = this.bones[ i ];\\n\\n    \\t\\tif ( (bone.parent && bone.parent.isBone) ) {\\n\\n    \\t\\t\\tgeometry.vertices.push( new Vector3() );\\n    \\t\\t\\tgeometry.vertices.push( new Vector3() );\\n    \\t\\t\\tgeometry.colors.push( new Color( 0, 0, 1 ) );\\n    \\t\\t\\tgeometry.colors.push( new Color( 0, 1, 0 ) );\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\tgeometry.dynamic = true;\\n\\n    \\tvar material = new LineBasicMaterial( { vertexColors: VertexColors, depthTest: false, depthWrite: false, transparent: true } );\\n\\n    \\tLineSegments.call( this, geometry, material );\\n\\n    \\tthis.root = object;\\n\\n    \\tthis.matrix = object.matrixWorld;\\n    \\tthis.matrixAutoUpdate = false;\\n\\n    \\tthis.update();\\n\\n    }\\n\\n\\n    SkeletonHelper.prototype = Object.create( LineSegments.prototype );\\n    SkeletonHelper.prototype.constructor = SkeletonHelper;\\n\\n    SkeletonHelper.prototype.getBoneList = function( object ) {\\n\\n    \\tvar boneList = [];\\n\\n    \\tif ( (object && object.isBone) ) {\\n\\n    \\t\\tboneList.push( object );\\n\\n    \\t}\\n\\n    \\tfor ( var i = 0; i < object.children.length; i ++ ) {\\n\\n    \\t\\tboneList.push.apply( boneList, this.getBoneList( object.children[ i ] ) );\\n\\n    \\t}\\n\\n    \\treturn boneList;\\n\\n    };\\n\\n    SkeletonHelper.prototype.update = function () {\\n\\n    \\tvar geometry = this.geometry;\\n\\n    \\tvar matrixWorldInv = new Matrix4().getInverse( this.root.matrixWorld );\\n\\n    \\tvar boneMatrix = new Matrix4();\\n\\n    \\tvar j = 0;\\n\\n    \\tfor ( var i = 0; i < this.bones.length; i ++ ) {\\n\\n    \\t\\tvar bone = this.bones[ i ];\\n\\n    \\t\\tif ( (bone.parent && bone.parent.isBone) ) {\\n\\n    \\t\\t\\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\\n    \\t\\t\\tgeometry.vertices[ j ].setFromMatrixPosition( boneMatrix );\\n\\n    \\t\\t\\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\\n    \\t\\t\\tgeometry.vertices[ j + 1 ].setFromMatrixPosition( boneMatrix );\\n\\n    \\t\\t\\tj += 2;\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\tgeometry.verticesNeedUpdate = true;\\n\\n    \\tgeometry.computeBoundingSphere();\\n\\n    };\\n\\n    /**\\n     * @author alteredq / http://alteredqualia.com/\\n     * @author mrdoob / http://mrdoob.com/\\n     */\\n\\n    function PointLightHelper( light, sphereSize ) {\\n\\n    \\tthis.light = light;\\n    \\tthis.light.updateMatrixWorld();\\n\\n    \\tvar geometry = new SphereBufferGeometry( sphereSize, 4, 2 );\\n    \\tvar material = new MeshBasicMaterial( { wireframe: true, fog: false } );\\n    \\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\\n\\n    \\tMesh.call( this, geometry, material );\\n\\n    \\tthis.matrix = this.light.matrixWorld;\\n    \\tthis.matrixAutoUpdate = false;\\n\\n    \\t/*\\n    \\tvar distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\\n    \\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\\n\\n    \\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\\n    \\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\\n\\n    \\tvar d = light.distance;\\n\\n    \\tif ( d === 0.0 ) {\\n\\n    \\t\\tthis.lightDistance.visible = false;\\n\\n    \\t} else {\\n\\n    \\t\\tthis.lightDistance.scale.set( d, d, d );\\n\\n    \\t}\\n\\n    \\tthis.add( this.lightDistance );\\n    \\t*/\\n\\n    }\\n\\n    PointLightHelper.prototype = Object.create( Mesh.prototype );\\n    PointLightHelper.prototype.constructor = PointLightHelper;\\n\\n    PointLightHelper.prototype.dispose = function () {\\n\\n    \\tthis.geometry.dispose();\\n    \\tthis.material.dispose();\\n\\n    };\\n\\n    PointLightHelper.prototype.update = function () {\\n\\n    \\tthis.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\\n\\n    \\t/*\\n    \\tvar d = this.light.distance;\\n\\n    \\tif ( d === 0.0 ) {\\n\\n    \\t\\tthis.lightDistance.visible = false;\\n\\n    \\t} else {\\n\\n    \\t\\tthis.lightDistance.visible = true;\\n    \\t\\tthis.lightDistance.scale.set( d, d, d );\\n\\n    \\t}\\n    \\t*/\\n\\n    };\\n\\n    /**\\n     * @author alteredq / http://alteredqualia.com/\\n     * @author mrdoob / http://mrdoob.com/\\n     */\\n\\n    function HemisphereLightHelper( light, sphereSize ) {\\n\\n    \\tObject3D.call( this );\\n\\n    \\tthis.light = light;\\n    \\tthis.light.updateMatrixWorld();\\n\\n    \\tthis.matrix = light.matrixWorld;\\n    \\tthis.matrixAutoUpdate = false;\\n\\n    \\tthis.colors = [ new Color(), new Color() ];\\n\\n    \\tvar geometry = new SphereGeometry( sphereSize, 4, 2 );\\n    \\tgeometry.rotateX( - Math.PI / 2 );\\n\\n    \\tfor ( var i = 0, il = 8; i < il; i ++ ) {\\n\\n    \\t\\tgeometry.faces[ i ].color = this.colors[ i < 4 ? 0 : 1 ];\\n\\n    \\t}\\n\\n    \\tvar material = new MeshBasicMaterial( { vertexColors: FaceColors, wireframe: true } );\\n\\n    \\tthis.lightSphere = new Mesh( geometry, material );\\n    \\tthis.add( this.lightSphere );\\n\\n    \\tthis.update();\\n\\n    }\\n\\n    HemisphereLightHelper.prototype = Object.create( Object3D.prototype );\\n    HemisphereLightHelper.prototype.constructor = HemisphereLightHelper;\\n\\n    HemisphereLightHelper.prototype.dispose = function () {\\n\\n    \\tthis.lightSphere.geometry.dispose();\\n    \\tthis.lightSphere.material.dispose();\\n\\n    };\\n\\n    HemisphereLightHelper.prototype.update = function () {\\n\\n    \\tvar vector = new Vector3();\\n\\n    \\treturn function update() {\\n\\n    \\t\\tthis.colors[ 0 ].copy( this.light.color ).multiplyScalar( this.light.intensity );\\n    \\t\\tthis.colors[ 1 ].copy( this.light.groundColor ).multiplyScalar( this.light.intensity );\\n\\n    \\t\\tthis.lightSphere.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\\n    \\t\\tthis.lightSphere.geometry.colorsNeedUpdate = true;\\n\\n    \\t};\\n\\n    }();\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     */\\n\\n    function GridHelper( size, divisions, color1, color2 ) {\\n\\n    \\tdivisions = divisions || 1;\\n    \\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\\n    \\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\\n\\n    \\tvar center = divisions / 2;\\n    \\tvar step = ( size * 2 ) / divisions;\\n    \\tvar vertices = [], colors = [];\\n\\n    \\tfor ( var i = 0, j = 0, k = - size; i <= divisions; i ++, k += step ) {\\n\\n    \\t\\tvertices.push( - size, 0, k, size, 0, k );\\n    \\t\\tvertices.push( k, 0, - size, k, 0, size );\\n\\n    \\t\\tvar color = i === center ? color1 : color2;\\n\\n    \\t\\tcolor.toArray( colors, j ); j += 3;\\n    \\t\\tcolor.toArray( colors, j ); j += 3;\\n    \\t\\tcolor.toArray( colors, j ); j += 3;\\n    \\t\\tcolor.toArray( colors, j ); j += 3;\\n\\n    \\t}\\n\\n    \\tvar geometry = new BufferGeometry();\\n    \\tgeometry.addAttribute( 'position', new Float32Attribute( vertices, 3 ) );\\n    \\tgeometry.addAttribute( 'color', new Float32Attribute( colors, 3 ) );\\n\\n    \\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\\n\\n    \\tLineSegments.call( this, geometry, material );\\n\\n    }\\n\\n    GridHelper.prototype = Object.create( LineSegments.prototype );\\n    GridHelper.prototype.constructor = GridHelper;\\n\\n    GridHelper.prototype.setColors = function () {\\n\\n    \\tconsole.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );\\n\\n    };\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     * @author WestLangley / http://github.com/WestLangley\\n    */\\n\\n    function FaceNormalsHelper( object, size, hex, linewidth ) {\\n\\n    \\t// FaceNormalsHelper only supports THREE.Geometry\\n\\n    \\tthis.object = object;\\n\\n    \\tthis.size = ( size !== undefined ) ? size : 1;\\n\\n    \\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\\n\\n    \\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\\n\\n    \\t//\\n\\n    \\tvar nNormals = 0;\\n\\n    \\tvar objGeometry = this.object.geometry;\\n\\n    \\tif ( (objGeometry && objGeometry.isGeometry) ) {\\n\\n    \\t\\tnNormals = objGeometry.faces.length;\\n\\n    \\t} else {\\n\\n    \\t\\tconsole.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );\\n\\n    \\t}\\n\\n    \\t//\\n\\n    \\tvar geometry = new BufferGeometry();\\n\\n    \\tvar positions = new Float32Attribute( nNormals * 2 * 3, 3 );\\n\\n    \\tgeometry.addAttribute( 'position', positions );\\n\\n    \\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\\n\\n    \\t//\\n\\n    \\tthis.matrixAutoUpdate = false;\\n    \\tthis.update();\\n\\n    }\\n\\n    FaceNormalsHelper.prototype = Object.create( LineSegments.prototype );\\n    FaceNormalsHelper.prototype.constructor = FaceNormalsHelper;\\n\\n    FaceNormalsHelper.prototype.update = ( function () {\\n\\n    \\tvar v1 = new Vector3();\\n    \\tvar v2 = new Vector3();\\n    \\tvar normalMatrix = new Matrix3();\\n\\n    \\treturn function update() {\\n\\n    \\t\\tthis.object.updateMatrixWorld( true );\\n\\n    \\t\\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\\n\\n    \\t\\tvar matrixWorld = this.object.matrixWorld;\\n\\n    \\t\\tvar position = this.geometry.attributes.position;\\n\\n    \\t\\t//\\n\\n    \\t\\tvar objGeometry = this.object.geometry;\\n\\n    \\t\\tvar vertices = objGeometry.vertices;\\n\\n    \\t\\tvar faces = objGeometry.faces;\\n\\n    \\t\\tvar idx = 0;\\n\\n    \\t\\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\\n\\n    \\t\\t\\tvar face = faces[ i ];\\n\\n    \\t\\t\\tvar normal = face.normal;\\n\\n    \\t\\t\\tv1.copy( vertices[ face.a ] )\\n    \\t\\t\\t\\t.add( vertices[ face.b ] )\\n    \\t\\t\\t\\t.add( vertices[ face.c ] )\\n    \\t\\t\\t\\t.divideScalar( 3 )\\n    \\t\\t\\t\\t.applyMatrix4( matrixWorld );\\n\\n    \\t\\t\\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\\n\\n    \\t\\t\\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\\n\\n    \\t\\t\\tidx = idx + 1;\\n\\n    \\t\\t\\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\\n\\n    \\t\\t\\tidx = idx + 1;\\n\\n    \\t\\t}\\n\\n    \\t\\tposition.needsUpdate = true;\\n\\n    \\t\\treturn this;\\n\\n    \\t};\\n\\n    }() );\\n\\n    /**\\n     * @author alteredq / http://alteredqualia.com/\\n     * @author mrdoob / http://mrdoob.com/\\n     * @author WestLangley / http://github.com/WestLangley\\n     */\\n\\n    function DirectionalLightHelper( light, size ) {\\n\\n    \\tObject3D.call( this );\\n\\n    \\tthis.light = light;\\n    \\tthis.light.updateMatrixWorld();\\n\\n    \\tthis.matrix = light.matrixWorld;\\n    \\tthis.matrixAutoUpdate = false;\\n\\n    \\tif ( size === undefined ) size = 1;\\n\\n    \\tvar geometry = new BufferGeometry();\\n    \\tgeometry.addAttribute( 'position', new Float32Attribute( [\\n    \\t\\t- size,   size, 0,\\n    \\t\\t  size,   size, 0,\\n    \\t\\t  size, - size, 0,\\n    \\t\\t- size, - size, 0,\\n    \\t\\t- size,   size, 0\\n    \\t], 3 ) );\\n\\n    \\tvar material = new LineBasicMaterial( { fog: false } );\\n\\n    \\tthis.add( new Line( geometry, material ) );\\n\\n    \\tgeometry = new BufferGeometry();\\n    \\tgeometry.addAttribute( 'position', new Float32Attribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\\n\\n    \\tthis.add( new Line( geometry, material ));\\n\\n    \\tthis.update();\\n\\n    }\\n\\n    DirectionalLightHelper.prototype = Object.create( Object3D.prototype );\\n    DirectionalLightHelper.prototype.constructor = DirectionalLightHelper;\\n\\n    DirectionalLightHelper.prototype.dispose = function () {\\n\\n    \\tvar lightPlane = this.children[ 0 ];\\n    \\tvar targetLine = this.children[ 1 ];\\n\\n    \\tlightPlane.geometry.dispose();\\n    \\tlightPlane.material.dispose();\\n    \\ttargetLine.geometry.dispose();\\n    \\ttargetLine.material.dispose();\\n\\n    };\\n\\n    DirectionalLightHelper.prototype.update = function () {\\n\\n    \\tvar v1 = new Vector3();\\n    \\tvar v2 = new Vector3();\\n    \\tvar v3 = new Vector3();\\n\\n    \\treturn function update() {\\n\\n    \\t\\tv1.setFromMatrixPosition( this.light.matrixWorld );\\n    \\t\\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\\n    \\t\\tv3.subVectors( v2, v1 );\\n\\n    \\t\\tvar lightPlane = this.children[ 0 ];\\n    \\t\\tvar targetLine = this.children[ 1 ];\\n\\n    \\t\\tlightPlane.lookAt( v3 );\\n    \\t\\tlightPlane.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\\n\\n    \\t\\ttargetLine.lookAt( v3 );\\n    \\t\\ttargetLine.scale.z = v3.length();\\n\\n    \\t};\\n\\n    }();\\n\\n    /**\\n     * @author alteredq / http://alteredqualia.com/\\n     *\\n     *\\t- shows frustum, line of sight and up of the camera\\n     *\\t- suitable for fast updates\\n     * \\t- based on frustum visualization in lightgl.js shadowmap example\\n     *\\t\\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\\n     */\\n\\n    function CameraHelper( camera ) {\\n\\n    \\tvar geometry = new Geometry();\\n    \\tvar material = new LineBasicMaterial( { color: 0xffffff, vertexColors: FaceColors } );\\n\\n    \\tvar pointMap = {};\\n\\n    \\t// colors\\n\\n    \\tvar hexFrustum = 0xffaa00;\\n    \\tvar hexCone = 0xff0000;\\n    \\tvar hexUp = 0x00aaff;\\n    \\tvar hexTarget = 0xffffff;\\n    \\tvar hexCross = 0x333333;\\n\\n    \\t// near\\n\\n    \\taddLine( \\\"n1\\\", \\\"n2\\\", hexFrustum );\\n    \\taddLine( \\\"n2\\\", \\\"n4\\\", hexFrustum );\\n    \\taddLine( \\\"n4\\\", \\\"n3\\\", hexFrustum );\\n    \\taddLine( \\\"n3\\\", \\\"n1\\\", hexFrustum );\\n\\n    \\t// far\\n\\n    \\taddLine( \\\"f1\\\", \\\"f2\\\", hexFrustum );\\n    \\taddLine( \\\"f2\\\", \\\"f4\\\", hexFrustum );\\n    \\taddLine( \\\"f4\\\", \\\"f3\\\", hexFrustum );\\n    \\taddLine( \\\"f3\\\", \\\"f1\\\", hexFrustum );\\n\\n    \\t// sides\\n\\n    \\taddLine( \\\"n1\\\", \\\"f1\\\", hexFrustum );\\n    \\taddLine( \\\"n2\\\", \\\"f2\\\", hexFrustum );\\n    \\taddLine( \\\"n3\\\", \\\"f3\\\", hexFrustum );\\n    \\taddLine( \\\"n4\\\", \\\"f4\\\", hexFrustum );\\n\\n    \\t// cone\\n\\n    \\taddLine( \\\"p\\\", \\\"n1\\\", hexCone );\\n    \\taddLine( \\\"p\\\", \\\"n2\\\", hexCone );\\n    \\taddLine( \\\"p\\\", \\\"n3\\\", hexCone );\\n    \\taddLine( \\\"p\\\", \\\"n4\\\", hexCone );\\n\\n    \\t// up\\n\\n    \\taddLine( \\\"u1\\\", \\\"u2\\\", hexUp );\\n    \\taddLine( \\\"u2\\\", \\\"u3\\\", hexUp );\\n    \\taddLine( \\\"u3\\\", \\\"u1\\\", hexUp );\\n\\n    \\t// target\\n\\n    \\taddLine( \\\"c\\\", \\\"t\\\", hexTarget );\\n    \\taddLine( \\\"p\\\", \\\"c\\\", hexCross );\\n\\n    \\t// cross\\n\\n    \\taddLine( \\\"cn1\\\", \\\"cn2\\\", hexCross );\\n    \\taddLine( \\\"cn3\\\", \\\"cn4\\\", hexCross );\\n\\n    \\taddLine( \\\"cf1\\\", \\\"cf2\\\", hexCross );\\n    \\taddLine( \\\"cf3\\\", \\\"cf4\\\", hexCross );\\n\\n    \\tfunction addLine( a, b, hex ) {\\n\\n    \\t\\taddPoint( a, hex );\\n    \\t\\taddPoint( b, hex );\\n\\n    \\t}\\n\\n    \\tfunction addPoint( id, hex ) {\\n\\n    \\t\\tgeometry.vertices.push( new Vector3() );\\n    \\t\\tgeometry.colors.push( new Color( hex ) );\\n\\n    \\t\\tif ( pointMap[ id ] === undefined ) {\\n\\n    \\t\\t\\tpointMap[ id ] = [];\\n\\n    \\t\\t}\\n\\n    \\t\\tpointMap[ id ].push( geometry.vertices.length - 1 );\\n\\n    \\t}\\n\\n    \\tLineSegments.call( this, geometry, material );\\n\\n    \\tthis.camera = camera;\\n    \\tif( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\\n\\n    \\tthis.matrix = camera.matrixWorld;\\n    \\tthis.matrixAutoUpdate = false;\\n\\n    \\tthis.pointMap = pointMap;\\n\\n    \\tthis.update();\\n\\n    }\\n\\n    CameraHelper.prototype = Object.create( LineSegments.prototype );\\n    CameraHelper.prototype.constructor = CameraHelper;\\n\\n    CameraHelper.prototype.update = function () {\\n\\n    \\tvar geometry, pointMap;\\n\\n    \\tvar vector = new Vector3();\\n    \\tvar camera = new Camera();\\n\\n    \\tfunction setPoint( point, x, y, z ) {\\n\\n    \\t\\tvector.set( x, y, z ).unproject( camera );\\n\\n    \\t\\tvar points = pointMap[ point ];\\n\\n    \\t\\tif ( points !== undefined ) {\\n\\n    \\t\\t\\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\\n\\n    \\t\\t\\t\\tgeometry.vertices[ points[ i ] ].copy( vector );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t}\\n\\n    \\t}\\n\\n    \\treturn function update() {\\n\\n    \\t\\tgeometry = this.geometry;\\n    \\t\\tpointMap = this.pointMap;\\n\\n    \\t\\tvar w = 1, h = 1;\\n\\n    \\t\\t// we need just camera projection matrix\\n    \\t\\t// world matrix must be identity\\n\\n    \\t\\tcamera.projectionMatrix.copy( this.camera.projectionMatrix );\\n\\n    \\t\\t// center / target\\n\\n    \\t\\tsetPoint( \\\"c\\\", 0, 0, - 1 );\\n    \\t\\tsetPoint( \\\"t\\\", 0, 0,  1 );\\n\\n    \\t\\t// near\\n\\n    \\t\\tsetPoint( \\\"n1\\\", - w, - h, - 1 );\\n    \\t\\tsetPoint( \\\"n2\\\",   w, - h, - 1 );\\n    \\t\\tsetPoint( \\\"n3\\\", - w,   h, - 1 );\\n    \\t\\tsetPoint( \\\"n4\\\",   w,   h, - 1 );\\n\\n    \\t\\t// far\\n\\n    \\t\\tsetPoint( \\\"f1\\\", - w, - h, 1 );\\n    \\t\\tsetPoint( \\\"f2\\\",   w, - h, 1 );\\n    \\t\\tsetPoint( \\\"f3\\\", - w,   h, 1 );\\n    \\t\\tsetPoint( \\\"f4\\\",   w,   h, 1 );\\n\\n    \\t\\t// up\\n\\n    \\t\\tsetPoint( \\\"u1\\\",   w * 0.7, h * 1.1, - 1 );\\n    \\t\\tsetPoint( \\\"u2\\\", - w * 0.7, h * 1.1, - 1 );\\n    \\t\\tsetPoint( \\\"u3\\\",         0, h * 2,   - 1 );\\n\\n    \\t\\t// cross\\n\\n    \\t\\tsetPoint( \\\"cf1\\\", - w,   0, 1 );\\n    \\t\\tsetPoint( \\\"cf2\\\",   w,   0, 1 );\\n    \\t\\tsetPoint( \\\"cf3\\\",   0, - h, 1 );\\n    \\t\\tsetPoint( \\\"cf4\\\",   0,   h, 1 );\\n\\n    \\t\\tsetPoint( \\\"cn1\\\", - w,   0, - 1 );\\n    \\t\\tsetPoint( \\\"cn2\\\",   w,   0, - 1 );\\n    \\t\\tsetPoint( \\\"cn3\\\",   0, - h, - 1 );\\n    \\t\\tsetPoint( \\\"cn4\\\",   0,   h, - 1 );\\n\\n    \\t\\tgeometry.verticesNeedUpdate = true;\\n\\n    \\t};\\n\\n    }();\\n\\n    /**\\n     * @author WestLangley / http://github.com/WestLangley\\n     */\\n\\n    // a helper to show the world-axis-aligned bounding box for an object\\n\\n    function BoundingBoxHelper( object, hex ) {\\n\\n    \\tvar color = ( hex !== undefined ) ? hex : 0x888888;\\n\\n    \\tthis.object = object;\\n\\n    \\tthis.box = new Box3();\\n\\n    \\tMesh.call( this, new BoxGeometry( 1, 1, 1 ), new MeshBasicMaterial( { color: color, wireframe: true } ) );\\n\\n    }\\n\\n    BoundingBoxHelper.prototype = Object.create( Mesh.prototype );\\n    BoundingBoxHelper.prototype.constructor = BoundingBoxHelper;\\n\\n    BoundingBoxHelper.prototype.update = function () {\\n\\n    \\tthis.box.setFromObject( this.object );\\n\\n    \\tthis.box.size( this.scale );\\n\\n    \\tthis.box.getCenter( this.position );\\n\\n    };\\n\\n    /**\\n     * @author mrdoob / http://mrdoob.com/\\n     */\\n\\n    function BoxHelper( object, color ) {\\n\\n    \\tif ( color === undefined ) color = 0xffff00;\\n\\n    \\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\\n    \\tvar positions = new Float32Array( 8 * 3 );\\n\\n    \\tvar geometry = new BufferGeometry();\\n    \\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\\n    \\tgeometry.addAttribute( 'position', new BufferAttribute( positions, 3 ) );\\n\\n    \\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\\n\\n    \\tif ( object !== undefined ) {\\n\\n    \\t\\tthis.update( object );\\n\\n    \\t}\\n\\n    }\\n\\n    BoxHelper.prototype = Object.create( LineSegments.prototype );\\n    BoxHelper.prototype.constructor = BoxHelper;\\n\\n    BoxHelper.prototype.update = ( function () {\\n\\n    \\tvar box = new Box3();\\n\\n    \\treturn function update( object ) {\\n\\n    \\t\\tif ( (object && object.isBox3) ) {\\n\\n    \\t\\t\\tbox.copy( object );\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\tbox.setFromObject( object );\\n\\n    \\t\\t}\\n\\n    \\t\\tif ( box.isEmpty() ) return;\\n\\n    \\t\\tvar min = box.min;\\n    \\t\\tvar max = box.max;\\n\\n    \\t\\t/*\\n    \\t\\t  5____4\\n    \\t\\t1/___0/|\\n    \\t\\t| 6__|_7\\n    \\t\\t2/___3/\\n\\n    \\t\\t0: max.x, max.y, max.z\\n    \\t\\t1: min.x, max.y, max.z\\n    \\t\\t2: min.x, min.y, max.z\\n    \\t\\t3: max.x, min.y, max.z\\n    \\t\\t4: max.x, max.y, min.z\\n    \\t\\t5: min.x, max.y, min.z\\n    \\t\\t6: min.x, min.y, min.z\\n    \\t\\t7: max.x, min.y, min.z\\n    \\t\\t*/\\n\\n    \\t\\tvar position = this.geometry.attributes.position;\\n    \\t\\tvar array = position.array;\\n\\n    \\t\\tarray[  0 ] = max.x; array[  1 ] = max.y; array[  2 ] = max.z;\\n    \\t\\tarray[  3 ] = min.x; array[  4 ] = max.y; array[  5 ] = max.z;\\n    \\t\\tarray[  6 ] = min.x; array[  7 ] = min.y; array[  8 ] = max.z;\\n    \\t\\tarray[  9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\\n    \\t\\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\\n    \\t\\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\\n    \\t\\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\\n    \\t\\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\\n\\n    \\t\\tposition.needsUpdate = true;\\n\\n    \\t\\tthis.geometry.computeBoundingSphere();\\n\\n    \\t};\\n\\n    } )();\\n\\n    var lineGeometry = new BufferGeometry();\\n    lineGeometry.addAttribute( 'position', new Float32Attribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\\n\\n    var coneGeometry = new CylinderBufferGeometry( 0, 0.5, 1, 5, 1 );\\n    coneGeometry.translate( 0, - 0.5, 0 );\\n\\n    function ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\\n\\n    \\t// dir is assumed to be normalized\\n\\n    \\tObject3D.call( this );\\n\\n    \\tif ( color === undefined ) color = 0xffff00;\\n    \\tif ( length === undefined ) length = 1;\\n    \\tif ( headLength === undefined ) headLength = 0.2 * length;\\n    \\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\\n\\n    \\tthis.position.copy( origin );\\n\\n    \\tthis.line = new Line( lineGeometry, new LineBasicMaterial( { color: color } ) );\\n    \\tthis.line.matrixAutoUpdate = false;\\n    \\tthis.add( this.line );\\n\\n    \\tthis.cone = new Mesh( coneGeometry, new MeshBasicMaterial( { color: color } ) );\\n    \\tthis.cone.matrixAutoUpdate = false;\\n    \\tthis.add( this.cone );\\n\\n    \\tthis.setDirection( dir );\\n    \\tthis.setLength( length, headLength, headWidth );\\n\\n    }\\n\\n    ArrowHelper.prototype = Object.create( Object3D.prototype );\\n    ArrowHelper.prototype.constructor = ArrowHelper;\\n\\n    ArrowHelper.prototype.setDirection = ( function () {\\n\\n    \\tvar axis = new Vector3();\\n    \\tvar radians;\\n\\n    \\treturn function setDirection( dir ) {\\n\\n    \\t\\t// dir is assumed to be normalized\\n\\n    \\t\\tif ( dir.y > 0.99999 ) {\\n\\n    \\t\\t\\tthis.quaternion.set( 0, 0, 0, 1 );\\n\\n    \\t\\t} else if ( dir.y < - 0.99999 ) {\\n\\n    \\t\\t\\tthis.quaternion.set( 1, 0, 0, 0 );\\n\\n    \\t\\t} else {\\n\\n    \\t\\t\\taxis.set( dir.z, 0, - dir.x ).normalize();\\n\\n    \\t\\t\\tradians = Math.acos( dir.y );\\n\\n    \\t\\t\\tthis.quaternion.setFromAxisAngle( axis, radians );\\n\\n    \\t\\t}\\n\\n    \\t};\\n\\n    }() );\\n\\n    ArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\\n\\n    \\tif ( headLength === undefined ) headLength = 0.2 * length;\\n    \\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\\n\\n    \\tthis.line.scale.set( 1, Math.max( 0, length - headLength ), 1 );\\n    \\tthis.line.updateMatrix();\\n\\n    \\tthis.cone.scale.set( headWidth, headLength, headWidth );\\n    \\tthis.cone.position.y = length;\\n    \\tthis.cone.updateMatrix();\\n\\n    };\\n\\n    ArrowHelper.prototype.setColor = function ( color ) {\\n\\n    \\tthis.line.material.color.copy( color );\\n    \\tthis.cone.material.color.copy( color );\\n\\n    };\\n\\n    /**\\n     * @author sroucheray / http://sroucheray.org/\\n     * @author mrdoob / http://mrdoob.com/\\n     */\\n\\n    function AxisHelper( size ) {\\n\\n    \\tsize = size || 1;\\n\\n    \\tvar vertices = new Float32Array( [\\n    \\t\\t0, 0, 0,  size, 0, 0,\\n    \\t\\t0, 0, 0,  0, size, 0,\\n    \\t\\t0, 0, 0,  0, 0, size\\n    \\t] );\\n\\n    \\tvar colors = new Float32Array( [\\n    \\t\\t1, 0, 0,  1, 0.6, 0,\\n    \\t\\t0, 1, 0,  0.6, 1, 0,\\n    \\t\\t0, 0, 1,  0, 0.6, 1\\n    \\t] );\\n\\n    \\tvar geometry = new BufferGeometry();\\n    \\tgeometry.addAttribute( 'position', new BufferAttribute( vertices, 3 ) );\\n    \\tgeometry.addAttribute( 'color', new BufferAttribute( colors, 3 ) );\\n\\n    \\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\\n\\n    \\tLineSegments.call( this, geometry, material );\\n\\n    }\\n\\n    AxisHelper.prototype = Object.create( LineSegments.prototype );\\n    AxisHelper.prototype.constructor = AxisHelper;\\n\\n    /**\\n     * @author zz85 https://github.com/zz85\\n     *\\n     * Centripetal CatmullRom Curve - which is useful for avoiding\\n     * cusps and self-intersections in non-uniform catmull rom curves.\\n     * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\\n     *\\n     * curve.type accepts centripetal(default), chordal and catmullrom\\n     * curve.tension is used for catmullrom which defaults to 0.5\\n     */\\n\\n    exports.CatmullRomCurve3 = ( function() {\\n\\n    \\tvar\\n    \\t\\ttmp = new Vector3(),\\n    \\t\\tpx = new CubicPoly(),\\n    \\t\\tpy = new CubicPoly(),\\n    \\t\\tpz = new CubicPoly();\\n\\n    \\t/*\\n    \\tBased on an optimized c++ solution in\\n    \\t - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\\n    \\t - http://ideone.com/NoEbVM\\n\\n    \\tThis CubicPoly class could be used for reusing some variables and calculations,\\n    \\tbut for three.js curve use, it could be possible inlined and flatten into a single function call\\n    \\twhich can be placed in CurveUtils.\\n    \\t*/\\n\\n    \\tfunction CubicPoly() {\\n\\n    \\t}\\n\\n    \\t/*\\n    \\t * Compute coefficients for a cubic polynomial\\n    \\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\\n    \\t * such that\\n    \\t *   p(0) = x0, p(1) = x1\\n    \\t *  and\\n    \\t *   p'(0) = t0, p'(1) = t1.\\n    \\t */\\n    \\tCubicPoly.prototype.init = function( x0, x1, t0, t1 ) {\\n\\n    \\t\\tthis.c0 = x0;\\n    \\t\\tthis.c1 = t0;\\n    \\t\\tthis.c2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\\n    \\t\\tthis.c3 = 2 * x0 - 2 * x1 + t0 + t1;\\n\\n    \\t};\\n\\n    \\tCubicPoly.prototype.initNonuniformCatmullRom = function( x0, x1, x2, x3, dt0, dt1, dt2 ) {\\n\\n    \\t\\t// compute tangents when parameterized in [t1,t2]\\n    \\t\\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\\n    \\t\\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\\n\\n    \\t\\t// rescale tangents for parametrization in [0,1]\\n    \\t\\tt1 *= dt1;\\n    \\t\\tt2 *= dt1;\\n\\n    \\t\\t// initCubicPoly\\n    \\t\\tthis.init( x1, x2, t1, t2 );\\n\\n    \\t};\\n\\n    \\t// standard Catmull-Rom spline: interpolate between x1 and x2 with previous/following points x1/x4\\n    \\tCubicPoly.prototype.initCatmullRom = function( x0, x1, x2, x3, tension ) {\\n\\n    \\t\\tthis.init( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\\n\\n    \\t};\\n\\n    \\tCubicPoly.prototype.calc = function( t ) {\\n\\n    \\t\\tvar t2 = t * t;\\n    \\t\\tvar t3 = t2 * t;\\n    \\t\\treturn this.c0 + this.c1 * t + this.c2 * t2 + this.c3 * t3;\\n\\n    \\t};\\n\\n    \\t// Subclass Three.js curve\\n    \\treturn Curve.create(\\n\\n    \\t\\tfunction ( p /* array of Vector3 */ ) {\\n\\n    \\t\\t\\tthis.points = p || [];\\n    \\t\\t\\tthis.closed = false;\\n\\n    \\t\\t},\\n\\n    \\t\\tfunction ( t ) {\\n\\n    \\t\\t\\tvar points = this.points,\\n    \\t\\t\\t\\tpoint, intPoint, weight, l;\\n\\n    \\t\\t\\tl = points.length;\\n\\n    \\t\\t\\tif ( l < 2 ) console.log( 'duh, you need at least 2 points' );\\n\\n    \\t\\t\\tpoint = ( l - ( this.closed ? 0 : 1 ) ) * t;\\n    \\t\\t\\tintPoint = Math.floor( point );\\n    \\t\\t\\tweight = point - intPoint;\\n\\n    \\t\\t\\tif ( this.closed ) {\\n\\n    \\t\\t\\t\\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / points.length ) + 1 ) * points.length;\\n\\n    \\t\\t\\t} else if ( weight === 0 && intPoint === l - 1 ) {\\n\\n    \\t\\t\\t\\tintPoint = l - 2;\\n    \\t\\t\\t\\tweight = 1;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tvar p0, p1, p2, p3; // 4 points\\n\\n    \\t\\t\\tif ( this.closed || intPoint > 0 ) {\\n\\n    \\t\\t\\t\\tp0 = points[ ( intPoint - 1 ) % l ];\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t// extrapolate first point\\n    \\t\\t\\t\\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\\n    \\t\\t\\t\\tp0 = tmp;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tp1 = points[ intPoint % l ];\\n    \\t\\t\\tp2 = points[ ( intPoint + 1 ) % l ];\\n\\n    \\t\\t\\tif ( this.closed || intPoint + 2 < l ) {\\n\\n    \\t\\t\\t\\tp3 = points[ ( intPoint + 2 ) % l ];\\n\\n    \\t\\t\\t} else {\\n\\n    \\t\\t\\t\\t// extrapolate last point\\n    \\t\\t\\t\\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\\n    \\t\\t\\t\\tp3 = tmp;\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tif ( this.type === undefined || this.type === 'centripetal' || this.type === 'chordal' ) {\\n\\n    \\t\\t\\t\\t// init Centripetal / Chordal Catmull-Rom\\n    \\t\\t\\t\\tvar pow = this.type === 'chordal' ? 0.5 : 0.25;\\n    \\t\\t\\t\\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\\n    \\t\\t\\t\\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\\n    \\t\\t\\t\\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\\n\\n    \\t\\t\\t\\t// safety check for repeated points\\n    \\t\\t\\t\\tif ( dt1 < 1e-4 ) dt1 = 1.0;\\n    \\t\\t\\t\\tif ( dt0 < 1e-4 ) dt0 = dt1;\\n    \\t\\t\\t\\tif ( dt2 < 1e-4 ) dt2 = dt1;\\n\\n    \\t\\t\\t\\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\\n    \\t\\t\\t\\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\\n    \\t\\t\\t\\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\\n\\n    \\t\\t\\t} else if ( this.type === 'catmullrom' ) {\\n\\n    \\t\\t\\t\\tvar tension = this.tension !== undefined ? this.tension : 0.5;\\n    \\t\\t\\t\\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, tension );\\n    \\t\\t\\t\\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, tension );\\n    \\t\\t\\t\\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, tension );\\n\\n    \\t\\t\\t}\\n\\n    \\t\\t\\tvar v = new Vector3(\\n    \\t\\t\\t\\tpx.calc( weight ),\\n    \\t\\t\\t\\tpy.calc( weight ),\\n    \\t\\t\\t\\tpz.calc( weight )\\n    \\t\\t\\t);\\n\\n    \\t\\t\\treturn v;\\n\\n    \\t\\t}\\n\\n    \\t);\\n\\n    } )();\\n\\n    /**************************************************************\\n     *\\tClosed Spline 3D curve\\n     **************************************************************/\\n\\n\\n    function ClosedSplineCurve3( points ) {\\n\\n    \\tconsole.warn( 'THREE.ClosedSplineCurve3 has been deprecated. Please use THREE.CatmullRomCurve3.' );\\n\\n    \\texports.CatmullRomCurve3.call( this, points );\\n    \\tthis.type = 'catmullrom';\\n    \\tthis.closed = true;\\n\\n    }\\n\\n    ClosedSplineCurve3.prototype = Object.create( exports.CatmullRomCurve3.prototype );\\n\\n    /**************************************************************\\n     *\\tSpline 3D curve\\n     **************************************************************/\\n\\n\\n    var SplineCurve3 = Curve.create(\\n\\n    \\tfunction ( points /* array of Vector3 */ ) {\\n\\n    \\t\\tconsole.warn( 'THREE.SplineCurve3 will be deprecated. Please use THREE.CatmullRomCurve3' );\\n    \\t\\tthis.points = ( points === undefined ) ? [] : points;\\n\\n    \\t},\\n\\n    \\tfunction ( t ) {\\n\\n    \\t\\tvar points = this.points;\\n    \\t\\tvar point = ( points.length - 1 ) * t;\\n\\n    \\t\\tvar intPoint = Math.floor( point );\\n    \\t\\tvar weight = point - intPoint;\\n\\n    \\t\\tvar point0 = points[ intPoint == 0 ? intPoint : intPoint - 1 ];\\n    \\t\\tvar point1 = points[ intPoint ];\\n    \\t\\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\\n    \\t\\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\\n\\n    \\t\\tvar interpolate = exports.CurveUtils.interpolate;\\n\\n    \\t\\treturn new Vector3(\\n    \\t\\t\\tinterpolate( point0.x, point1.x, point2.x, point3.x, weight ),\\n    \\t\\t\\tinterpolate( point0.y, point1.y, point2.y, point3.y, weight ),\\n    \\t\\t\\tinterpolate( point0.z, point1.z, point2.z, point3.z, weight )\\n    \\t\\t);\\n\\n    \\t}\\n\\n    );\\n\\n    /**************************************************************\\n     *\\tCubic Bezier 3D curve\\n     **************************************************************/\\n\\n    exports.CubicBezierCurve3 = Curve.create(\\n\\n    \\tfunction ( v0, v1, v2, v3 ) {\\n\\n    \\t\\tthis.v0 = v0;\\n    \\t\\tthis.v1 = v1;\\n    \\t\\tthis.v2 = v2;\\n    \\t\\tthis.v3 = v3;\\n\\n    \\t},\\n\\n    \\tfunction ( t ) {\\n\\n    \\t\\tvar b3 = exports.ShapeUtils.b3;\\n\\n    \\t\\treturn new Vector3(\\n    \\t\\t\\tb3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x ),\\n    \\t\\t\\tb3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y ),\\n    \\t\\t\\tb3( t, this.v0.z, this.v1.z, this.v2.z, this.v3.z )\\n    \\t\\t);\\n\\n    \\t}\\n\\n    );\\n\\n    /**************************************************************\\n     *\\tQuadratic Bezier 3D curve\\n     **************************************************************/\\n\\n    exports.QuadraticBezierCurve3 = Curve.create(\\n\\n    \\tfunction ( v0, v1, v2 ) {\\n\\n    \\t\\tthis.v0 = v0;\\n    \\t\\tthis.v1 = v1;\\n    \\t\\tthis.v2 = v2;\\n\\n    \\t},\\n\\n    \\tfunction ( t ) {\\n\\n    \\t\\tvar b2 = exports.ShapeUtils.b2;\\t\\t\\n\\n    \\t\\treturn new Vector3(\\n    \\t\\t\\tb2( t, this.v0.x, this.v1.x, this.v2.x ),\\n    \\t\\t\\tb2( t, this.v0.y, this.v1.y, this.v2.y ),\\n    \\t\\t\\tb2( t, this.v0.z, this.v1.z, this.v2.z )\\n    \\t\\t);\\n\\n    \\t}\\n\\n    );\\n\\n    /**************************************************************\\n     *\\tLine3D\\n     **************************************************************/\\n\\n    exports.LineCurve3 = Curve.create(\\n\\n    \\tfunction ( v1, v2 ) {\\n\\n    \\t\\tthis.v1 = v1;\\n    \\t\\tthis.v2 = v2;\\n\\n    \\t},\\n\\n    \\tfunction ( t ) {\\n\\n    \\t\\tif ( t === 1 ) {\\n\\n    \\t\\t\\treturn this.v2.clone();\\n\\n    \\t\\t}\\n\\n    \\t\\tvar vector = new Vector3();\\n\\n    \\t\\tvector.subVectors( this.v2, this.v1 ); // diff\\n    \\t\\tvector.multiplyScalar( t );\\n    \\t\\tvector.add( this.v1 );\\n\\n    \\t\\treturn vector;\\n\\n    \\t}\\n\\n    );\\n\\n    /**************************************************************\\n     *\\tArc curve\\n     **************************************************************/\\n\\n    function ArcCurve( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\\n\\n    \\tEllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\\n\\n    }\\n\\n    ArcCurve.prototype = Object.create( EllipseCurve.prototype );\\n    ArcCurve.prototype.constructor = ArcCurve;\\n\\n    /**\\n     * @author alteredq / http://alteredqualia.com/\\n     */\\n\\n    exports.SceneUtils = {\\n\\n    \\tcreateMultiMaterialObject: function ( geometry, materials ) {\\n\\n    \\t\\tvar group = new Group();\\n\\n    \\t\\tfor ( var i = 0, l = materials.length; i < l; i ++ ) {\\n\\n    \\t\\t\\tgroup.add( new Mesh( geometry, materials[ i ] ) );\\n\\n    \\t\\t}\\n\\n    \\t\\treturn group;\\n\\n    \\t},\\n\\n    \\tdetach: function ( child, parent, scene ) {\\n\\n    \\t\\tchild.applyMatrix( parent.matrixWorld );\\n    \\t\\tparent.remove( child );\\n    \\t\\tscene.add( child );\\n\\n    \\t},\\n\\n    \\tattach: function ( child, scene, parent ) {\\n\\n    \\t\\tvar matrixWorldInverse = new Matrix4();\\n    \\t\\tmatrixWorldInverse.getInverse( parent.matrixWorld );\\n    \\t\\tchild.applyMatrix( matrixWorldInverse );\\n\\n    \\t\\tscene.remove( child );\\n    \\t\\tparent.add( child );\\n\\n    \\t}\\n\\n    };\\n\\n    function Face4 ( a, b, c, d, normal, color, materialIndex ) {\\n    \\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\\n    \\treturn new Face3( a, b, c, normal, color, materialIndex );\\n    }\\n\\n    var LineStrip = 0;\\n\\n    var LinePieces = 1;\\n\\n    function PointCloud ( geometry, material ) {\\n    \\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\\n    \\treturn new Points( geometry, material );\\n    }\\n\\n    function ParticleSystem ( geometry, material ) {\\n    \\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\\n    \\treturn new Points( geometry, material );\\n    }\\n\\n    function PointCloudMaterial ( parameters ) {\\n    \\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\\n    \\treturn new PointsMaterial( parameters );\\n    }\\n\\n    function ParticleBasicMaterial ( parameters ) {\\n    \\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\\n    \\treturn new PointsMaterial( parameters );\\n    }\\n\\n    function ParticleSystemMaterial ( parameters ) {\\n    \\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\\n    \\treturn new PointsMaterial( parameters );\\n    }\\n\\n    function Vertex ( x, y, z ) {\\n    \\tconsole.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );\\n    \\treturn new Vector3( x, y, z );\\n    }\\n\\n    //\\n\\n    function EdgesHelper( object, hex ) {\\n    \\tconsole.warn( 'THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.' );\\n    \\treturn new LineSegments( new EdgesGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\\n    }\\n\\n    function WireframeHelper( object, hex ) {\\n    \\tconsole.warn( 'THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.' );\\n    \\treturn new LineSegments( new WireframeGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\\n    }\\n\\n    //\\n\\n    Object.assign( Box2.prototype, {\\n    \\tcenter: function ( optionalTarget ) {\\n    \\t\\tconsole.warn( 'THREE.Box2: .center() has been renamed to .getCenter().' );\\n    \\t\\treturn this.getCenter( optionalTarget );\\n    \\t},\\n    \\tempty: function () {\\n    \\t\\tconsole.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );\\n    \\t\\treturn this.isEmpty();\\n    \\t},\\n    \\tisIntersectionBox: function ( box ) {\\n    \\t\\tconsole.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );\\n    \\t\\treturn this.intersectsBox( box );\\n    \\t},\\n    \\tsize: function ( optionalTarget ) {\\n    \\t\\tconsole.warn( 'THREE.Box2: .size() has been renamed to .getSize().' );\\n    \\t\\treturn this.getSize( optionalTarget );\\n    \\t}\\n    } );\\n\\n    Object.assign( Box3.prototype, {\\n    \\tcenter: function ( optionalTarget ) {\\n    \\t\\tconsole.warn( 'THREE.Box3: .center() has been renamed to .getCenter().' );\\n    \\t\\treturn this.getCenter( optionalTarget );\\n    \\t},\\n    \\tempty: function () {\\n    \\t\\tconsole.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );\\n    \\t\\treturn this.isEmpty();\\n    \\t},\\n    \\tisIntersectionBox: function ( box ) {\\n    \\t\\tconsole.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );\\n    \\t\\treturn this.intersectsBox( box );\\n    \\t},\\n    \\tisIntersectionSphere: function ( sphere ) {\\n    \\t\\tconsole.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\\n    \\t\\treturn this.intersectsSphere( sphere );\\n    \\t},\\n    \\tsize: function ( optionalTarget ) {\\n    \\t\\tconsole.warn( 'THREE.Box3: .size() has been renamed to .getSize().' );\\n    \\t\\treturn this.getSize( optionalTarget );\\n    \\t}\\n    } );\\n\\n    Object.assign( Line3.prototype, {\\n    \\tcenter: function ( optionalTarget ) {\\n    \\t\\tconsole.warn( 'THREE.Line3: .center() has been renamed to .getCenter().' );\\n    \\t\\treturn this.getCenter( optionalTarget );\\n    \\t}\\n    } );\\n\\n    Object.assign( Matrix3.prototype, {\\n    \\tmultiplyVector3: function ( vector ) {\\n    \\t\\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\\n    \\t\\treturn vector.applyMatrix3( this );\\n    \\t},\\n    \\tmultiplyVector3Array: function ( a ) {\\n    \\t\\tconsole.warn( 'THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\\n    \\t\\treturn this.applyToVector3Array( a );\\n    \\t}\\n    } );\\n\\n    Object.assign( Matrix4.prototype, {\\n    \\textractPosition: function ( m ) {\\n    \\t\\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\\n    \\t\\treturn this.copyPosition( m );\\n    \\t},\\n    \\tsetRotationFromQuaternion: function ( q ) {\\n    \\t\\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\\n    \\t\\treturn this.makeRotationFromQuaternion( q );\\n    \\t},\\n    \\tmultiplyVector3: function ( vector ) {\\n    \\t\\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.' );\\n    \\t\\treturn vector.applyProjection( this );\\n    \\t},\\n    \\tmultiplyVector4: function ( vector ) {\\n    \\t\\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\\n    \\t\\treturn vector.applyMatrix4( this );\\n    \\t},\\n    \\tmultiplyVector3Array: function ( a ) {\\n    \\t\\tconsole.warn( 'THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\\n    \\t\\treturn this.applyToVector3Array( a );\\n    \\t},\\n    \\trotateAxis: function ( v ) {\\n    \\t\\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\\n    \\t\\tv.transformDirection( this );\\n    \\t},\\n    \\tcrossVector: function ( vector ) {\\n    \\t\\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\\n    \\t\\treturn vector.applyMatrix4( this );\\n    \\t},\\n    \\ttranslate: function ( v ) {\\n    \\t\\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\\n    \\t},\\n    \\trotateX: function ( angle ) {\\n    \\t\\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\\n    \\t},\\n    \\trotateY: function ( angle ) {\\n    \\t\\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\\n    \\t},\\n    \\trotateZ: function ( angle ) {\\n    \\t\\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\\n    \\t},\\n    \\trotateByAxis: function ( axis, angle ) {\\n    \\t\\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\\n    \\t}\\n    } );\\n\\n    Object.assign( Plane.prototype, {\\n    \\tisIntersectionLine: function ( line ) {\\n    \\t\\tconsole.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );\\n    \\t\\treturn this.intersectsLine( line );\\n    \\t}\\n    } );\\n\\n    Object.assign( Quaternion.prototype, {\\n    \\tmultiplyVector3: function ( vector ) {\\n    \\t\\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\\n    \\t\\treturn vector.applyQuaternion( this );\\n    \\t}\\n    } );\\n\\n    Object.assign( Ray.prototype, {\\n    \\tisIntersectionBox: function ( box ) {\\n    \\t\\tconsole.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );\\n    \\t\\treturn this.intersectsBox( box );\\n    \\t},\\n    \\tisIntersectionPlane: function ( plane ) {\\n    \\t\\tconsole.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );\\n    \\t\\treturn this.intersectsPlane( plane );\\n    \\t},\\n    \\tisIntersectionSphere: function ( sphere ) {\\n    \\t\\tconsole.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\\n    \\t\\treturn this.intersectsSphere( sphere );\\n    \\t}\\n    } );\\n\\n    Object.assign( Shape.prototype, {\\n    \\textrude: function ( options ) {\\n    \\t\\tconsole.warn( 'THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.' );\\n    \\t\\treturn new ExtrudeGeometry( this, options );\\n    \\t},\\n    \\tmakeGeometry: function ( options ) {\\n    \\t\\tconsole.warn( 'THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.' );\\n    \\t\\treturn new ShapeGeometry( this, options );\\n    \\t}\\n    } );\\n\\n    Object.assign( Vector3.prototype, {\\n    \\tsetEulerFromRotationMatrix: function () {\\n    \\t\\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\\n    \\t},\\n    \\tsetEulerFromQuaternion: function () {\\n    \\t\\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\\n    \\t},\\n    \\tgetPositionFromMatrix: function ( m ) {\\n    \\t\\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\\n    \\t\\treturn this.setFromMatrixPosition( m );\\n    \\t},\\n    \\tgetScaleFromMatrix: function ( m ) {\\n    \\t\\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\\n    \\t\\treturn this.setFromMatrixScale( m );\\n    \\t},\\n    \\tgetColumnFromMatrix: function ( index, matrix ) {\\n    \\t\\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\\n    \\t\\treturn this.setFromMatrixColumn( matrix, index );\\n    \\t}\\n    } );\\n\\n    //\\n\\n    Object.assign( Object3D.prototype, {\\n    \\tgetChildByName: function ( name ) {\\n    \\t\\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\\n    \\t\\treturn this.getObjectByName( name );\\n    \\t},\\n    \\trenderDepth: function ( value ) {\\n    \\t\\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\\n    \\t},\\n    \\ttranslate: function ( distance, axis ) {\\n    \\t\\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\\n    \\t\\treturn this.translateOnAxis( axis, distance );\\n    \\t}\\n    } );\\n\\n    Object.defineProperties( Object3D.prototype, {\\n    \\teulerOrder: {\\n    \\t\\tget: function () {\\n    \\t\\t\\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\\n    \\t\\t\\treturn this.rotation.order;\\n    \\t\\t},\\n    \\t\\tset: function ( value ) {\\n    \\t\\t\\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\\n    \\t\\t\\tthis.rotation.order = value;\\n    \\t\\t}\\n    \\t},\\n    \\tuseQuaternion: {\\n    \\t\\tget: function () {\\n    \\t\\t\\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\\n    \\t\\t},\\n    \\t\\tset: function ( value ) {\\n    \\t\\t\\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\\n    \\t\\t}\\n    \\t}\\n    } );\\n\\n    Object.defineProperties( LOD.prototype, {\\n    \\tobjects: {\\n    \\t\\tget: function () {\\n    \\t\\t\\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\\n    \\t\\t\\treturn this.levels;\\n    \\t\\t}\\n    \\t}\\n    } );\\n\\n    //\\n\\n    PerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {\\n\\n    \\tconsole.warn( \\\"THREE.PerspectiveCamera.setLens is deprecated. \\\" +\\n    \\t\\t\\t\\\"Use .setFocalLength and .filmGauge for a photographic setup.\\\" );\\n\\n    \\tif ( filmGauge !== undefined ) this.filmGauge = filmGauge;\\n    \\tthis.setFocalLength( focalLength );\\n\\n    };\\n\\n    //\\n\\n    Object.defineProperties( Light.prototype, {\\n    \\tonlyShadow: {\\n    \\t\\tset: function ( value ) {\\n    \\t\\t\\tconsole.warn( 'THREE.Light: .onlyShadow has been removed.' );\\n    \\t\\t}\\n    \\t},\\n    \\tshadowCameraFov: {\\n    \\t\\tset: function ( value ) {\\n    \\t\\t\\tconsole.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );\\n    \\t\\t\\tthis.shadow.camera.fov = value;\\n    \\t\\t}\\n    \\t},\\n    \\tshadowCameraLeft: {\\n    \\t\\tset: function ( value ) {\\n    \\t\\t\\tconsole.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );\\n    \\t\\t\\tthis.shadow.camera.left = value;\\n    \\t\\t}\\n    \\t},\\n    \\tshadowCameraRight: {\\n    \\t\\tset: function ( value ) {\\n    \\t\\t\\tconsole.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );\\n    \\t\\t\\tthis.shadow.camera.right = value;\\n    \\t\\t}\\n    \\t},\\n    \\tshadowCameraTop: {\\n    \\t\\tset: function ( value ) {\\n    \\t\\t\\tconsole.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );\\n    \\t\\t\\tthis.shadow.camera.top = value;\\n    \\t\\t}\\n    \\t},\\n    \\tshadowCameraBottom: {\\n    \\t\\tset: function ( value ) {\\n    \\t\\t\\tconsole.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );\\n    \\t\\t\\tthis.shadow.camera.bottom = value;\\n    \\t\\t}\\n    \\t},\\n    \\tshadowCameraNear: {\\n    \\t\\tset: function ( value ) {\\n    \\t\\t\\tconsole.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );\\n    \\t\\t\\tthis.shadow.camera.near = value;\\n    \\t\\t}\\n    \\t},\\n    \\tshadowCameraFar: {\\n    \\t\\tset: function ( value ) {\\n    \\t\\t\\tconsole.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );\\n    \\t\\t\\tthis.shadow.camera.far = value;\\n    \\t\\t}\\n    \\t},\\n    \\tshadowCameraVisible: {\\n    \\t\\tset: function ( value ) {\\n    \\t\\t\\tconsole.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );\\n    \\t\\t}\\n    \\t},\\n    \\tshadowBias: {\\n    \\t\\tset: function ( value ) {\\n    \\t\\t\\tconsole.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );\\n    \\t\\t\\tthis.shadow.bias = value;\\n    \\t\\t}\\n    \\t},\\n    \\tshadowDarkness: {\\n    \\t\\tset: function ( value ) {\\n    \\t\\t\\tconsole.warn( 'THREE.Light: .shadowDarkness has been removed.' );\\n    \\t\\t}\\n    \\t},\\n    \\tshadowMapWidth: {\\n    \\t\\tset: function ( value ) {\\n    \\t\\t\\tconsole.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );\\n    \\t\\t\\tthis.shadow.mapSize.width = value;\\n    \\t\\t}\\n    \\t},\\n    \\tshadowMapHeight: {\\n    \\t\\tset: function ( value ) {\\n    \\t\\t\\tconsole.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );\\n    \\t\\t\\tthis.shadow.mapSize.height = value;\\n    \\t\\t}\\n    \\t}\\n    } );\\n\\n    //\\n\\n    Object.defineProperties( BufferAttribute.prototype, {\\n    \\tlength: {\\n    \\t\\tget: function () {\\n    \\t\\t\\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Please use .count.' );\\n    \\t\\t\\treturn this.array.length;\\n    \\t\\t}\\n    \\t}\\n    } );\\n\\n    Object.assign( BufferGeometry.prototype, {\\n    \\taddIndex: function ( index ) {\\n    \\t\\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\\n    \\t\\tthis.setIndex( index );\\n    \\t},\\n    \\taddDrawCall: function ( start, count, indexOffset ) {\\n    \\t\\tif ( indexOffset !== undefined ) {\\n    \\t\\t\\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\\n    \\t\\t}\\n    \\t\\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\\n    \\t\\tthis.addGroup( start, count );\\n    \\t},\\n    \\tclearDrawCalls: function () {\\n    \\t\\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\\n    \\t\\tthis.clearGroups();\\n    \\t},\\n    \\tcomputeTangents: function () {\\n    \\t\\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\\n    \\t},\\n    \\tcomputeOffsets: function () {\\n    \\t\\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );\\n    \\t}\\n    } );\\n\\n    Object.defineProperties( BufferGeometry.prototype, {\\n    \\tdrawcalls: {\\n    \\t\\tget: function () {\\n    \\t\\t\\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\\n    \\t\\t\\treturn this.groups;\\n    \\t\\t}\\n    \\t},\\n    \\toffsets: {\\n    \\t\\tget: function () {\\n    \\t\\t\\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\\n    \\t\\t\\treturn this.groups;\\n    \\t\\t}\\n    \\t}\\n    } );\\n\\n    //\\n\\n    Object.defineProperties( Material.prototype, {\\n    \\twrapAround: {\\n    \\t\\tget: function () {\\n    \\t\\t\\tconsole.warn( 'THREE.' + this.type + ': .wrapAround has been removed.' );\\n    \\t\\t},\\n    \\t\\tset: function ( value ) {\\n    \\t\\t\\tconsole.warn( 'THREE.' + this.type + ': .wrapAround has been removed.' );\\n    \\t\\t}\\n    \\t},\\n    \\twrapRGB: {\\n    \\t\\tget: function () {\\n    \\t\\t\\tconsole.warn( 'THREE.' + this.type + ': .wrapRGB has been removed.' );\\n    \\t\\t\\treturn new Color();\\n    \\t\\t}\\n    \\t}\\n    } );\\n\\n    Object.defineProperties( MeshPhongMaterial.prototype, {\\n    \\tmetal: {\\n    \\t\\tget: function () {\\n    \\t\\t\\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.' );\\n    \\t\\t\\treturn false;\\n    \\t\\t},\\n    \\t\\tset: function ( value ) {\\n    \\t\\t\\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead' );\\n    \\t\\t}\\n    \\t}\\n    } );\\n\\n    Object.defineProperties( ShaderMaterial.prototype, {\\n    \\tderivatives: {\\n    \\t\\tget: function () {\\n    \\t\\t\\tconsole.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\\n    \\t\\t\\treturn this.extensions.derivatives;\\n    \\t\\t},\\n    \\t\\tset: function ( value ) {\\n    \\t\\t\\tconsole.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\\n    \\t\\t\\tthis.extensions.derivatives = value;\\n    \\t\\t}\\n    \\t}\\n    } );\\n\\n    //\\n\\n    EventDispatcher.prototype = Object.assign( Object.create( {\\n\\n    \\t// Note: Extra base ensures these properties are not 'assign'ed.\\n\\n    \\tconstructor: EventDispatcher,\\n\\n    \\tapply: function ( target ) {\\n\\n    \\t\\tconsole.warn( \\\"THREE.EventDispatcher: .apply is deprecated, \\\" +\\n    \\t\\t\\t\\t\\\"just inherit or Object.assign the prototype to mix-in.\\\" );\\n\\n    \\t\\tObject.assign( target, this );\\n\\n    \\t}\\n\\n    } ), EventDispatcher.prototype );\\n\\n    //\\n\\n    Object.assign( WebGLRenderer.prototype, {\\n    \\tsupportsFloatTextures: function () {\\n    \\t\\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\\\'OES_texture_float\\\\' ).' );\\n    \\t\\treturn this.extensions.get( 'OES_texture_float' );\\n    \\t},\\n    \\tsupportsHalfFloatTextures: function () {\\n    \\t\\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\\\'OES_texture_half_float\\\\' ).' );\\n    \\t\\treturn this.extensions.get( 'OES_texture_half_float' );\\n    \\t},\\n    \\tsupportsStandardDerivatives: function () {\\n    \\t\\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\\\'OES_standard_derivatives\\\\' ).' );\\n    \\t\\treturn this.extensions.get( 'OES_standard_derivatives' );\\n    \\t},\\n    \\tsupportsCompressedTextureS3TC: function () {\\n    \\t\\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\\\'WEBGL_compressed_texture_s3tc\\\\' ).' );\\n    \\t\\treturn this.extensions.get( 'WEBGL_compressed_texture_s3tc' );\\n    \\t},\\n    \\tsupportsCompressedTexturePVRTC: function () {\\n    \\t\\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\\\'WEBGL_compressed_texture_pvrtc\\\\' ).' );\\n    \\t\\treturn this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );\\n    \\t},\\n    \\tsupportsBlendMinMax: function () {\\n    \\t\\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\\\'EXT_blend_minmax\\\\' ).' );\\n    \\t\\treturn this.extensions.get( 'EXT_blend_minmax' );\\n    \\t},\\n    \\tsupportsVertexTextures: function () {\\n    \\t\\treturn this.capabilities.vertexTextures;\\n    \\t},\\n    \\tsupportsInstancedArrays: function () {\\n    \\t\\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\\\'ANGLE_instanced_arrays\\\\' ).' );\\n    \\t\\treturn this.extensions.get( 'ANGLE_instanced_arrays' );\\n    \\t},\\n    \\tenableScissorTest: function ( boolean ) {\\n    \\t\\tconsole.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );\\n    \\t\\tthis.setScissorTest( boolean );\\n    \\t},\\n    \\tinitMaterial: function () {\\n    \\t\\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\\n    \\t},\\n    \\taddPrePlugin: function () {\\n    \\t\\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\\n    \\t},\\n    \\taddPostPlugin: function () {\\n    \\t\\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\\n    \\t},\\n    \\tupdateShadowMap: function () {\\n    \\t\\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\\n    \\t}\\n    } );\\n\\n    Object.defineProperties( WebGLRenderer.prototype, {\\n    \\tshadowMapEnabled: {\\n    \\t\\tget: function () {\\n    \\t\\t\\treturn this.shadowMap.enabled;\\n    \\t\\t},\\n    \\t\\tset: function ( value ) {\\n    \\t\\t\\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\\n    \\t\\t\\tthis.shadowMap.enabled = value;\\n    \\t\\t}\\n    \\t},\\n    \\tshadowMapType: {\\n    \\t\\tget: function () {\\n    \\t\\t\\treturn this.shadowMap.type;\\n    \\t\\t},\\n    \\t\\tset: function ( value ) {\\n    \\t\\t\\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\\n    \\t\\t\\tthis.shadowMap.type = value;\\n    \\t\\t}\\n    \\t},\\n    \\tshadowMapCullFace: {\\n    \\t\\tget: function () {\\n    \\t\\t\\treturn this.shadowMap.cullFace;\\n    \\t\\t},\\n    \\t\\tset: function ( value ) {\\n    \\t\\t\\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace.' );\\n    \\t\\t\\tthis.shadowMap.cullFace = value;\\n    \\t\\t}\\n    \\t}\\n    } );\\n\\n    Object.defineProperties( WebGLShadowMap.prototype, {\\n    \\tcullFace: {\\n    \\t\\tget: function () {\\n    \\t\\t\\treturn this.renderReverseSided ? CullFaceFront : CullFaceBack;\\n    \\t\\t},\\n    \\t\\tset: function ( cullFace ) {\\n    \\t\\t\\tvar value = ( cullFace !== CullFaceBack );\\n    \\t\\t\\tconsole.warn( \\\"WebGLRenderer: .shadowMap.cullFace is deprecated. Set .shadowMap.renderReverseSided to \\\" + value + \\\".\\\" );\\n    \\t\\t\\tthis.renderReverseSided = value;\\n    \\t\\t}\\n    \\t}\\n    } );\\n\\n    //\\n\\n    Object.defineProperties( WebGLRenderTarget.prototype, {\\n    \\twrapS: {\\n    \\t\\tget: function () {\\n    \\t\\t\\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\\n    \\t\\t\\treturn this.texture.wrapS;\\n    \\t\\t},\\n    \\t\\tset: function ( value ) {\\n    \\t\\t\\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\\n    \\t\\t\\tthis.texture.wrapS = value;\\n    \\t\\t}\\n    \\t},\\n    \\twrapT: {\\n    \\t\\tget: function () {\\n    \\t\\t\\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\\n    \\t\\t\\treturn this.texture.wrapT;\\n    \\t\\t},\\n    \\t\\tset: function ( value ) {\\n    \\t\\t\\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\\n    \\t\\t\\tthis.texture.wrapT = value;\\n    \\t\\t}\\n    \\t},\\n    \\tmagFilter: {\\n    \\t\\tget: function () {\\n    \\t\\t\\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\\n    \\t\\t\\treturn this.texture.magFilter;\\n    \\t\\t},\\n    \\t\\tset: function ( value ) {\\n    \\t\\t\\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\\n    \\t\\t\\tthis.texture.magFilter = value;\\n    \\t\\t}\\n    \\t},\\n    \\tminFilter: {\\n    \\t\\tget: function () {\\n    \\t\\t\\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\\n    \\t\\t\\treturn this.texture.minFilter;\\n    \\t\\t},\\n    \\t\\tset: function ( value ) {\\n    \\t\\t\\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\\n    \\t\\t\\tthis.texture.minFilter = value;\\n    \\t\\t}\\n    \\t},\\n    \\tanisotropy: {\\n    \\t\\tget: function () {\\n    \\t\\t\\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\\n    \\t\\t\\treturn this.texture.anisotropy;\\n    \\t\\t},\\n    \\t\\tset: function ( value ) {\\n    \\t\\t\\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\\n    \\t\\t\\tthis.texture.anisotropy = value;\\n    \\t\\t}\\n    \\t},\\n    \\toffset: {\\n    \\t\\tget: function () {\\n    \\t\\t\\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\\n    \\t\\t\\treturn this.texture.offset;\\n    \\t\\t},\\n    \\t\\tset: function ( value ) {\\n    \\t\\t\\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\\n    \\t\\t\\tthis.texture.offset = value;\\n    \\t\\t}\\n    \\t},\\n    \\trepeat: {\\n    \\t\\tget: function () {\\n    \\t\\t\\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\\n    \\t\\t\\treturn this.texture.repeat;\\n    \\t\\t},\\n    \\t\\tset: function ( value ) {\\n    \\t\\t\\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\\n    \\t\\t\\tthis.texture.repeat = value;\\n    \\t\\t}\\n    \\t},\\n    \\tformat: {\\n    \\t\\tget: function () {\\n    \\t\\t\\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\\n    \\t\\t\\treturn this.texture.format;\\n    \\t\\t},\\n    \\t\\tset: function ( value ) {\\n    \\t\\t\\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\\n    \\t\\t\\tthis.texture.format = value;\\n    \\t\\t}\\n    \\t},\\n    \\ttype: {\\n    \\t\\tget: function () {\\n    \\t\\t\\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\\n    \\t\\t\\treturn this.texture.type;\\n    \\t\\t},\\n    \\t\\tset: function ( value ) {\\n    \\t\\t\\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\\n    \\t\\t\\tthis.texture.type = value;\\n    \\t\\t}\\n    \\t},\\n    \\tgenerateMipmaps: {\\n    \\t\\tget: function () {\\n    \\t\\t\\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\\n    \\t\\t\\treturn this.texture.generateMipmaps;\\n    \\t\\t},\\n    \\t\\tset: function ( value ) {\\n    \\t\\t\\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\\n    \\t\\t\\tthis.texture.generateMipmaps = value;\\n    \\t\\t}\\n    \\t}\\n    } );\\n\\n    //\\n\\n    Object.assign( Audio.prototype, {\\n    \\tload: function ( file ) {\\n    \\t\\tconsole.warn( 'THREE.Audio: .load has been deprecated. Please use THREE.AudioLoader.' );\\n    \\t\\tvar scope = this;\\n    \\t\\tvar audioLoader = new AudioLoader();\\n    \\t\\taudioLoader.load( file, function ( buffer ) {\\n    \\t\\t\\tscope.setBuffer( buffer );\\n    \\t\\t} );\\n    \\t\\treturn this;\\n    \\t}\\n    } );\\n\\n    Object.assign( AudioAnalyser.prototype, {\\n    \\tgetData: function ( file ) {\\n    \\t\\tconsole.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );\\n    \\t\\treturn this.getFrequencyData();\\n    \\t}\\n    } );\\n\\n    //\\n\\n    var GeometryUtils = {\\n\\n    \\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\\n\\n    \\t\\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\\n\\n    \\t\\tvar matrix;\\n\\n    \\t\\tif ( geometry2.isMesh ) {\\n\\n    \\t\\t\\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\\n\\n    \\t\\t\\tmatrix = geometry2.matrix;\\n    \\t\\t\\tgeometry2 = geometry2.geometry;\\n\\n    \\t\\t}\\n\\n    \\t\\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\\n\\n    \\t},\\n\\n    \\tcenter: function ( geometry ) {\\n\\n    \\t\\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\\n    \\t\\treturn geometry.center();\\n\\n    \\t}\\n\\n    };\\n\\n    var ImageUtils = {\\n\\n    \\tcrossOrigin: undefined,\\n\\n    \\tloadTexture: function ( url, mapping, onLoad, onError ) {\\n\\n    \\t\\tconsole.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );\\n\\n    \\t\\tvar loader = new TextureLoader();\\n    \\t\\tloader.setCrossOrigin( this.crossOrigin );\\n\\n    \\t\\tvar texture = loader.load( url, onLoad, undefined, onError );\\n\\n    \\t\\tif ( mapping ) texture.mapping = mapping;\\n\\n    \\t\\treturn texture;\\n\\n    \\t},\\n\\n    \\tloadTextureCube: function ( urls, mapping, onLoad, onError ) {\\n\\n    \\t\\tconsole.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );\\n\\n    \\t\\tvar loader = new CubeTextureLoader();\\n    \\t\\tloader.setCrossOrigin( this.crossOrigin );\\n\\n    \\t\\tvar texture = loader.load( urls, onLoad, undefined, onError );\\n\\n    \\t\\tif ( mapping ) texture.mapping = mapping;\\n\\n    \\t\\treturn texture;\\n\\n    \\t},\\n\\n    \\tloadCompressedTexture: function () {\\n\\n    \\t\\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );\\n\\n    \\t},\\n\\n    \\tloadCompressedTextureCube: function () {\\n\\n    \\t\\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );\\n\\n    \\t}\\n\\n    };\\n\\n    //\\n\\n    function Projector () {\\n\\n    \\tconsole.error( 'THREE.Projector has been moved to /examples/js/renderers/Projector.js.' );\\n\\n    \\tthis.projectVector = function ( vector, camera ) {\\n\\n    \\t\\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\\n    \\t\\tvector.project( camera );\\n\\n    \\t};\\n\\n    \\tthis.unprojectVector = function ( vector, camera ) {\\n\\n    \\t\\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\\n    \\t\\tvector.unproject( camera );\\n\\n    \\t};\\n\\n    \\tthis.pickingRay = function ( vector, camera ) {\\n\\n    \\t\\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\\n\\n    \\t};\\n\\n    }\\n\\n    //\\n\\n    function CanvasRenderer () {\\n\\n    \\tconsole.error( 'THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js' );\\n\\n    \\tthis.domElement = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\\n    \\tthis.clear = function () {};\\n    \\tthis.render = function () {};\\n    \\tthis.setClearColor = function () {};\\n    \\tthis.setSize = function () {};\\n\\n    }\\n\\n    Object.defineProperty( exports, 'AudioContext', {\\n    \\tget: function () {\\n    \\t\\treturn exports.getAudioContext();\\n    \\t}\\n    });\\n\\n    exports.WebGLRenderTargetCube = WebGLRenderTargetCube;\\n    exports.WebGLRenderTarget = WebGLRenderTarget;\\n    exports.WebGLRenderer = WebGLRenderer;\\n    exports.ShaderLib = ShaderLib;\\n    exports.UniformsLib = UniformsLib;\\n    exports.ShaderChunk = ShaderChunk;\\n    exports.FogExp2 = FogExp2;\\n    exports.Fog = Fog;\\n    exports.Scene = Scene;\\n    exports.LensFlare = LensFlare;\\n    exports.Sprite = Sprite;\\n    exports.LOD = LOD;\\n    exports.SkinnedMesh = SkinnedMesh;\\n    exports.Skeleton = Skeleton;\\n    exports.Bone = Bone;\\n    exports.Mesh = Mesh;\\n    exports.LineSegments = LineSegments;\\n    exports.Line = Line;\\n    exports.Points = Points;\\n    exports.Group = Group;\\n    exports.VideoTexture = VideoTexture;\\n    exports.DataTexture = DataTexture;\\n    exports.CompressedTexture = CompressedTexture;\\n    exports.CubeTexture = CubeTexture;\\n    exports.CanvasTexture = CanvasTexture;\\n    exports.DepthTexture = DepthTexture;\\n    exports.TextureIdCount = TextureIdCount;\\n    exports.Texture = Texture;\\n    exports.MaterialIdCount = MaterialIdCount;\\n    exports.CompressedTextureLoader = CompressedTextureLoader;\\n    exports.BinaryTextureLoader = BinaryTextureLoader;\\n    exports.DataTextureLoader = DataTextureLoader;\\n    exports.CubeTextureLoader = CubeTextureLoader;\\n    exports.TextureLoader = TextureLoader;\\n    exports.ObjectLoader = ObjectLoader;\\n    exports.MaterialLoader = MaterialLoader;\\n    exports.BufferGeometryLoader = BufferGeometryLoader;\\n    exports.LoadingManager = LoadingManager;\\n    exports.JSONLoader = JSONLoader;\\n    exports.ImageLoader = ImageLoader;\\n    exports.FontLoader = FontLoader;\\n    exports.XHRLoader = XHRLoader;\\n    exports.Loader = Loader;\\n    exports.AudioLoader = AudioLoader;\\n    exports.SpotLightShadow = SpotLightShadow;\\n    exports.SpotLight = SpotLight;\\n    exports.PointLight = PointLight;\\n    exports.HemisphereLight = HemisphereLight;\\n    exports.DirectionalLightShadow = DirectionalLightShadow;\\n    exports.DirectionalLight = DirectionalLight;\\n    exports.AmbientLight = AmbientLight;\\n    exports.LightShadow = LightShadow;\\n    exports.Light = Light;\\n    exports.StereoCamera = StereoCamera;\\n    exports.PerspectiveCamera = PerspectiveCamera;\\n    exports.OrthographicCamera = OrthographicCamera;\\n    exports.CubeCamera = CubeCamera;\\n    exports.Camera = Camera;\\n    exports.AudioListener = AudioListener;\\n    exports.PositionalAudio = PositionalAudio;\\n    exports.getAudioContext = getAudioContext;\\n    exports.AudioAnalyser = AudioAnalyser;\\n    exports.Audio = Audio;\\n    exports.VectorKeyframeTrack = VectorKeyframeTrack;\\n    exports.StringKeyframeTrack = StringKeyframeTrack;\\n    exports.QuaternionKeyframeTrack = QuaternionKeyframeTrack;\\n    exports.NumberKeyframeTrack = NumberKeyframeTrack;\\n    exports.ColorKeyframeTrack = ColorKeyframeTrack;\\n    exports.BooleanKeyframeTrack = BooleanKeyframeTrack;\\n    exports.PropertyMixer = PropertyMixer;\\n    exports.PropertyBinding = PropertyBinding;\\n    exports.KeyframeTrack = KeyframeTrack;\\n    exports.AnimationObjectGroup = AnimationObjectGroup;\\n    exports.AnimationMixer = AnimationMixer;\\n    exports.AnimationClip = AnimationClip;\\n    exports.Uniform = Uniform;\\n    exports.InstancedBufferGeometry = InstancedBufferGeometry;\\n    exports.BufferGeometry = BufferGeometry;\\n    exports.GeometryIdCount = GeometryIdCount;\\n    exports.Geometry = Geometry;\\n    exports.InterleavedBufferAttribute = InterleavedBufferAttribute;\\n    exports.InstancedInterleavedBuffer = InstancedInterleavedBuffer;\\n    exports.InterleavedBuffer = InterleavedBuffer;\\n    exports.InstancedBufferAttribute = InstancedBufferAttribute;\\n    exports.DynamicBufferAttribute = DynamicBufferAttribute;\\n    exports.Float64Attribute = Float64Attribute;\\n    exports.Float32Attribute = Float32Attribute;\\n    exports.Uint32Attribute = Uint32Attribute;\\n    exports.Int32Attribute = Int32Attribute;\\n    exports.Uint16Attribute = Uint16Attribute;\\n    exports.Int16Attribute = Int16Attribute;\\n    exports.Uint8ClampedAttribute = Uint8ClampedAttribute;\\n    exports.Uint8Attribute = Uint8Attribute;\\n    exports.Int8Attribute = Int8Attribute;\\n    exports.BufferAttribute = BufferAttribute;\\n    exports.Face3 = Face3;\\n    exports.Object3DIdCount = Object3DIdCount;\\n    exports.Object3D = Object3D;\\n    exports.Raycaster = Raycaster;\\n    exports.Layers = Layers;\\n    exports.EventDispatcher = EventDispatcher;\\n    exports.Clock = Clock;\\n    exports.QuaternionLinearInterpolant = QuaternionLinearInterpolant;\\n    exports.LinearInterpolant = LinearInterpolant;\\n    exports.DiscreteInterpolant = DiscreteInterpolant;\\n    exports.CubicInterpolant = CubicInterpolant;\\n    exports.Interpolant = Interpolant;\\n    exports.Triangle = Triangle;\\n    exports.Spline = Spline;\\n    exports.Spherical = Spherical;\\n    exports.Plane = Plane;\\n    exports.Frustum = Frustum;\\n    exports.Sphere = Sphere;\\n    exports.Ray = Ray;\\n    exports.Matrix4 = Matrix4;\\n    exports.Matrix3 = Matrix3;\\n    exports.Box3 = Box3;\\n    exports.Box2 = Box2;\\n    exports.Line3 = Line3;\\n    exports.Euler = Euler;\\n    exports.Vector4 = Vector4;\\n    exports.Vector3 = Vector3;\\n    exports.Vector2 = Vector2;\\n    exports.Quaternion = Quaternion;\\n    exports.Color = Color;\\n    exports.MorphBlendMesh = MorphBlendMesh;\\n    exports.ImmediateRenderObject = ImmediateRenderObject;\\n    exports.VertexNormalsHelper = VertexNormalsHelper;\\n    exports.SpotLightHelper = SpotLightHelper;\\n    exports.SkeletonHelper = SkeletonHelper;\\n    exports.PointLightHelper = PointLightHelper;\\n    exports.HemisphereLightHelper = HemisphereLightHelper;\\n    exports.GridHelper = GridHelper;\\n    exports.FaceNormalsHelper = FaceNormalsHelper;\\n    exports.DirectionalLightHelper = DirectionalLightHelper;\\n    exports.CameraHelper = CameraHelper;\\n    exports.BoundingBoxHelper = BoundingBoxHelper;\\n    exports.BoxHelper = BoxHelper;\\n    exports.ArrowHelper = ArrowHelper;\\n    exports.AxisHelper = AxisHelper;\\n    exports.ClosedSplineCurve3 = ClosedSplineCurve3;\\n    exports.SplineCurve3 = SplineCurve3;\\n    exports.ArcCurve = ArcCurve;\\n    exports.EllipseCurve = EllipseCurve;\\n    exports.SplineCurve = SplineCurve;\\n    exports.CubicBezierCurve = CubicBezierCurve;\\n    exports.QuadraticBezierCurve = QuadraticBezierCurve;\\n    exports.LineCurve = LineCurve;\\n    exports.Shape = Shape;\\n    exports.ShapePath = ShapePath;\\n    exports.Path = Path;\\n    exports.Font = Font;\\n    exports.CurvePath = CurvePath;\\n    exports.Curve = Curve;\\n    exports.WireframeGeometry = WireframeGeometry;\\n    exports.ParametricGeometry = ParametricGeometry;\\n    exports.TetrahedronGeometry = TetrahedronGeometry;\\n    exports.OctahedronGeometry = OctahedronGeometry;\\n    exports.IcosahedronGeometry = IcosahedronGeometry;\\n    exports.DodecahedronGeometry = DodecahedronGeometry;\\n    exports.PolyhedronGeometry = PolyhedronGeometry;\\n    exports.TubeGeometry = TubeGeometry;\\n    exports.TorusKnotGeometry = TorusKnotGeometry;\\n    exports.TorusKnotBufferGeometry = TorusKnotBufferGeometry;\\n    exports.TorusGeometry = TorusGeometry;\\n    exports.TorusBufferGeometry = TorusBufferGeometry;\\n    exports.TextGeometry = TextGeometry;\\n    exports.SphereBufferGeometry = SphereBufferGeometry;\\n    exports.SphereGeometry = SphereGeometry;\\n    exports.RingGeometry = RingGeometry;\\n    exports.RingBufferGeometry = RingBufferGeometry;\\n    exports.PlaneBufferGeometry = PlaneBufferGeometry;\\n    exports.PlaneGeometry = PlaneGeometry;\\n    exports.LatheGeometry = LatheGeometry;\\n    exports.LatheBufferGeometry = LatheBufferGeometry;\\n    exports.ShapeGeometry = ShapeGeometry;\\n    exports.ExtrudeGeometry = ExtrudeGeometry;\\n    exports.EdgesGeometry = EdgesGeometry;\\n    exports.ConeGeometry = ConeGeometry;\\n    exports.ConeBufferGeometry = ConeBufferGeometry;\\n    exports.CylinderGeometry = CylinderGeometry;\\n    exports.CylinderBufferGeometry = CylinderBufferGeometry;\\n    exports.CircleBufferGeometry = CircleBufferGeometry;\\n    exports.CircleGeometry = CircleGeometry;\\n    exports.BoxBufferGeometry = BoxBufferGeometry;\\n    exports.BoxGeometry = BoxGeometry;\\n    exports.ShadowMaterial = ShadowMaterial;\\n    exports.SpriteMaterial = SpriteMaterial;\\n    exports.RawShaderMaterial = RawShaderMaterial;\\n    exports.ShaderMaterial = ShaderMaterial;\\n    exports.PointsMaterial = PointsMaterial;\\n    exports.MultiMaterial = MultiMaterial;\\n    exports.MeshPhysicalMaterial = MeshPhysicalMaterial;\\n    exports.MeshStandardMaterial = MeshStandardMaterial;\\n    exports.MeshPhongMaterial = MeshPhongMaterial;\\n    exports.MeshNormalMaterial = MeshNormalMaterial;\\n    exports.MeshLambertMaterial = MeshLambertMaterial;\\n    exports.MeshDepthMaterial = MeshDepthMaterial;\\n    exports.MeshBasicMaterial = MeshBasicMaterial;\\n    exports.LineDashedMaterial = LineDashedMaterial;\\n    exports.LineBasicMaterial = LineBasicMaterial;\\n    exports.Material = Material;\\n    exports.REVISION = REVISION;\\n    exports.MOUSE = MOUSE;\\n    exports.CullFaceNone = CullFaceNone;\\n    exports.CullFaceBack = CullFaceBack;\\n    exports.CullFaceFront = CullFaceFront;\\n    exports.CullFaceFrontBack = CullFaceFrontBack;\\n    exports.FrontFaceDirectionCW = FrontFaceDirectionCW;\\n    exports.FrontFaceDirectionCCW = FrontFaceDirectionCCW;\\n    exports.BasicShadowMap = BasicShadowMap;\\n    exports.PCFShadowMap = PCFShadowMap;\\n    exports.PCFSoftShadowMap = PCFSoftShadowMap;\\n    exports.FrontSide = FrontSide;\\n    exports.BackSide = BackSide;\\n    exports.DoubleSide = DoubleSide;\\n    exports.FlatShading = FlatShading;\\n    exports.SmoothShading = SmoothShading;\\n    exports.NoColors = NoColors;\\n    exports.FaceColors = FaceColors;\\n    exports.VertexColors = VertexColors;\\n    exports.NoBlending = NoBlending;\\n    exports.NormalBlending = NormalBlending;\\n    exports.AdditiveBlending = AdditiveBlending;\\n    exports.SubtractiveBlending = SubtractiveBlending;\\n    exports.MultiplyBlending = MultiplyBlending;\\n    exports.CustomBlending = CustomBlending;\\n    exports.BlendingMode = BlendingMode;\\n    exports.AddEquation = AddEquation;\\n    exports.SubtractEquation = SubtractEquation;\\n    exports.ReverseSubtractEquation = ReverseSubtractEquation;\\n    exports.MinEquation = MinEquation;\\n    exports.MaxEquation = MaxEquation;\\n    exports.ZeroFactor = ZeroFactor;\\n    exports.OneFactor = OneFactor;\\n    exports.SrcColorFactor = SrcColorFactor;\\n    exports.OneMinusSrcColorFactor = OneMinusSrcColorFactor;\\n    exports.SrcAlphaFactor = SrcAlphaFactor;\\n    exports.OneMinusSrcAlphaFactor = OneMinusSrcAlphaFactor;\\n    exports.DstAlphaFactor = DstAlphaFactor;\\n    exports.OneMinusDstAlphaFactor = OneMinusDstAlphaFactor;\\n    exports.DstColorFactor = DstColorFactor;\\n    exports.OneMinusDstColorFactor = OneMinusDstColorFactor;\\n    exports.SrcAlphaSaturateFactor = SrcAlphaSaturateFactor;\\n    exports.NeverDepth = NeverDepth;\\n    exports.AlwaysDepth = AlwaysDepth;\\n    exports.LessDepth = LessDepth;\\n    exports.LessEqualDepth = LessEqualDepth;\\n    exports.EqualDepth = EqualDepth;\\n    exports.GreaterEqualDepth = GreaterEqualDepth;\\n    exports.GreaterDepth = GreaterDepth;\\n    exports.NotEqualDepth = NotEqualDepth;\\n    exports.MultiplyOperation = MultiplyOperation;\\n    exports.MixOperation = MixOperation;\\n    exports.AddOperation = AddOperation;\\n    exports.NoToneMapping = NoToneMapping;\\n    exports.LinearToneMapping = LinearToneMapping;\\n    exports.ReinhardToneMapping = ReinhardToneMapping;\\n    exports.Uncharted2ToneMapping = Uncharted2ToneMapping;\\n    exports.CineonToneMapping = CineonToneMapping;\\n    exports.UVMapping = UVMapping;\\n    exports.CubeReflectionMapping = CubeReflectionMapping;\\n    exports.CubeRefractionMapping = CubeRefractionMapping;\\n    exports.EquirectangularReflectionMapping = EquirectangularReflectionMapping;\\n    exports.EquirectangularRefractionMapping = EquirectangularRefractionMapping;\\n    exports.SphericalReflectionMapping = SphericalReflectionMapping;\\n    exports.CubeUVReflectionMapping = CubeUVReflectionMapping;\\n    exports.CubeUVRefractionMapping = CubeUVRefractionMapping;\\n    exports.TextureMapping = TextureMapping;\\n    exports.RepeatWrapping = RepeatWrapping;\\n    exports.ClampToEdgeWrapping = ClampToEdgeWrapping;\\n    exports.MirroredRepeatWrapping = MirroredRepeatWrapping;\\n    exports.TextureWrapping = TextureWrapping;\\n    exports.NearestFilter = NearestFilter;\\n    exports.NearestMipMapNearestFilter = NearestMipMapNearestFilter;\\n    exports.NearestMipMapLinearFilter = NearestMipMapLinearFilter;\\n    exports.LinearFilter = LinearFilter;\\n    exports.LinearMipMapNearestFilter = LinearMipMapNearestFilter;\\n    exports.LinearMipMapLinearFilter = LinearMipMapLinearFilter;\\n    exports.TextureFilter = TextureFilter;\\n    exports.UnsignedByteType = UnsignedByteType;\\n    exports.ByteType = ByteType;\\n    exports.ShortType = ShortType;\\n    exports.UnsignedShortType = UnsignedShortType;\\n    exports.IntType = IntType;\\n    exports.UnsignedIntType = UnsignedIntType;\\n    exports.FloatType = FloatType;\\n    exports.HalfFloatType = HalfFloatType;\\n    exports.UnsignedShort4444Type = UnsignedShort4444Type;\\n    exports.UnsignedShort5551Type = UnsignedShort5551Type;\\n    exports.UnsignedShort565Type = UnsignedShort565Type;\\n    exports.UnsignedInt248Type = UnsignedInt248Type;\\n    exports.AlphaFormat = AlphaFormat;\\n    exports.RGBFormat = RGBFormat;\\n    exports.RGBAFormat = RGBAFormat;\\n    exports.LuminanceFormat = LuminanceFormat;\\n    exports.LuminanceAlphaFormat = LuminanceAlphaFormat;\\n    exports.RGBEFormat = RGBEFormat;\\n    exports.DepthFormat = DepthFormat;\\n    exports.DepthStencilFormat = DepthStencilFormat;\\n    exports.RGB_S3TC_DXT1_Format = RGB_S3TC_DXT1_Format;\\n    exports.RGBA_S3TC_DXT1_Format = RGBA_S3TC_DXT1_Format;\\n    exports.RGBA_S3TC_DXT3_Format = RGBA_S3TC_DXT3_Format;\\n    exports.RGBA_S3TC_DXT5_Format = RGBA_S3TC_DXT5_Format;\\n    exports.RGB_PVRTC_4BPPV1_Format = RGB_PVRTC_4BPPV1_Format;\\n    exports.RGB_PVRTC_2BPPV1_Format = RGB_PVRTC_2BPPV1_Format;\\n    exports.RGBA_PVRTC_4BPPV1_Format = RGBA_PVRTC_4BPPV1_Format;\\n    exports.RGBA_PVRTC_2BPPV1_Format = RGBA_PVRTC_2BPPV1_Format;\\n    exports.RGB_ETC1_Format = RGB_ETC1_Format;\\n    exports.LoopOnce = LoopOnce;\\n    exports.LoopRepeat = LoopRepeat;\\n    exports.LoopPingPong = LoopPingPong;\\n    exports.InterpolateDiscrete = InterpolateDiscrete;\\n    exports.InterpolateLinear = InterpolateLinear;\\n    exports.InterpolateSmooth = InterpolateSmooth;\\n    exports.ZeroCurvatureEnding = ZeroCurvatureEnding;\\n    exports.ZeroSlopeEnding = ZeroSlopeEnding;\\n    exports.WrapAroundEnding = WrapAroundEnding;\\n    exports.TrianglesDrawMode = TrianglesDrawMode;\\n    exports.TriangleStripDrawMode = TriangleStripDrawMode;\\n    exports.TriangleFanDrawMode = TriangleFanDrawMode;\\n    exports.LinearEncoding = LinearEncoding;\\n    exports.sRGBEncoding = sRGBEncoding;\\n    exports.GammaEncoding = GammaEncoding;\\n    exports.RGBEEncoding = RGBEEncoding;\\n    exports.LogLuvEncoding = LogLuvEncoding;\\n    exports.RGBM7Encoding = RGBM7Encoding;\\n    exports.RGBM16Encoding = RGBM16Encoding;\\n    exports.RGBDEncoding = RGBDEncoding;\\n    exports.BasicDepthPacking = BasicDepthPacking;\\n    exports.RGBADepthPacking = RGBADepthPacking;\\n    exports.CubeGeometry = BoxGeometry;\\n    exports.Face4 = Face4;\\n    exports.LineStrip = LineStrip;\\n    exports.LinePieces = LinePieces;\\n    exports.MeshFaceMaterial = MultiMaterial;\\n    exports.PointCloud = PointCloud;\\n    exports.Particle = Sprite;\\n    exports.ParticleSystem = ParticleSystem;\\n    exports.PointCloudMaterial = PointCloudMaterial;\\n    exports.ParticleBasicMaterial = ParticleBasicMaterial;\\n    exports.ParticleSystemMaterial = ParticleSystemMaterial;\\n    exports.Vertex = Vertex;\\n    exports.EdgesHelper = EdgesHelper;\\n    exports.WireframeHelper = WireframeHelper;\\n    exports.GeometryUtils = GeometryUtils;\\n    exports.ImageUtils = ImageUtils;\\n    exports.Projector = Projector;\\n    exports.CanvasRenderer = CanvasRenderer;\\n\\n    Object.defineProperty(exports, '__esModule', { value: true });\\n\\n})));\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./~/three/build/three.js\n// module id = 422\n// module chunks = 2","module.exports = \"/**\\n * @author qiao / https://github.com/qiao\\n * @author mrdoob / http://mrdoob.com\\n * @author alteredq / http://alteredqualia.com/\\n * @author WestLangley / http://github.com/WestLangley\\n * @author erich666 / http://erichaines.com\\n */\\n\\n// This set of controls performs orbiting, dollying (zooming), and panning.\\n// Unlike TrackballControls, it maintains the \\\"up\\\" direction object.up (+Y by default).\\n//\\n//    Orbit - left mouse / touch: one finger move\\n//    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\\n//    Pan - right mouse, or arrow keys / touch: three finter swipe\\n\\nTHREE.OrbitControls = function ( object, domElement ) {\\n\\n\\tthis.object = object;\\n\\n\\tthis.domElement = ( domElement !== undefined ) ? domElement : document;\\n\\n\\t// Set to false to disable this control\\n\\tthis.enabled = true;\\n\\n\\t// \\\"target\\\" sets the location of focus, where the object orbits around\\n\\tthis.target = new THREE.Vector3();\\n\\n\\t// How far you can dolly in and out ( PerspectiveCamera only )\\n\\tthis.minDistance = 0;\\n\\tthis.maxDistance = Infinity;\\n\\n\\t// How far you can zoom in and out ( OrthographicCamera only )\\n\\tthis.minZoom = 0;\\n\\tthis.maxZoom = Infinity;\\n\\n\\t// How far you can orbit vertically, upper and lower limits.\\n\\t// Range is 0 to Math.PI radians.\\n\\tthis.minPolarAngle = 0; // radians\\n\\tthis.maxPolarAngle = Math.PI; // radians\\n\\n\\t// How far you can orbit horizontally, upper and lower limits.\\n\\t// If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\\n\\tthis.minAzimuthAngle = - Infinity; // radians\\n\\tthis.maxAzimuthAngle = Infinity; // radians\\n\\n\\t// Set to true to enable damping (inertia)\\n\\t// If damping is enabled, you must call controls.update() in your animation loop\\n\\tthis.enableDamping = false;\\n\\tthis.dampingFactor = 0.25;\\n\\n\\t// This option actually enables dollying in and out; left as \\\"zoom\\\" for backwards compatibility.\\n\\t// Set to false to disable zooming\\n\\tthis.enableZoom = true;\\n\\tthis.zoomSpeed = 1.0;\\n\\n\\t// Set to false to disable rotating\\n\\tthis.enableRotate = true;\\n\\tthis.rotateSpeed = 1.0;\\n\\n\\t// Set to false to disable panning\\n\\tthis.enablePan = true;\\n\\tthis.keyPanSpeed = 7.0;\\t// pixels moved per arrow key push\\n\\n\\t// Set to true to automatically rotate around the target\\n\\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\\n\\tthis.autoRotate = false;\\n\\tthis.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\\n\\n\\t// Set to false to disable use of the keys\\n\\tthis.enableKeys = true;\\n\\n\\t// The four arrow keys\\n\\tthis.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\\n\\n\\t// Mouse buttons\\n\\tthis.mouseButtons = { ORBIT: THREE.MOUSE.LEFT, ZOOM: THREE.MOUSE.MIDDLE, PAN: THREE.MOUSE.RIGHT };\\n\\n\\t// for reset\\n\\tthis.target0 = this.target.clone();\\n\\tthis.position0 = this.object.position.clone();\\n\\tthis.zoom0 = this.object.zoom;\\n\\n\\t//\\n\\t// public methods\\n\\t//\\n\\n\\tthis.getPolarAngle = function () {\\n\\n\\t\\treturn spherical.phi;\\n\\n\\t};\\n\\n\\tthis.getAzimuthalAngle = function () {\\n\\n\\t\\treturn spherical.theta;\\n\\n\\t};\\n\\n\\tthis.reset = function () {\\n\\n\\t\\tscope.target.copy( scope.target0 );\\n\\t\\tscope.object.position.copy( scope.position0 );\\n\\t\\tscope.object.zoom = scope.zoom0;\\n\\n\\t\\tscope.object.updateProjectionMatrix();\\n\\t\\tscope.dispatchEvent( changeEvent );\\n\\n\\t\\tscope.update();\\n\\n\\t\\tstate = STATE.NONE;\\n\\n\\t};\\n\\n\\t// this method is exposed, but perhaps it would be better if we can make it private...\\n\\tthis.update = function() {\\n\\n\\t\\tvar offset = new THREE.Vector3();\\n\\n\\t\\t// so camera.up is the orbit axis\\n\\t\\tvar quat = new THREE.Quaternion().setFromUnitVectors( object.up, new THREE.Vector3( 0, 1, 0 ) );\\n\\t\\tvar quatInverse = quat.clone().inverse();\\n\\n\\t\\tvar lastPosition = new THREE.Vector3();\\n\\t\\tvar lastQuaternion = new THREE.Quaternion();\\n\\n\\t\\treturn function update () {\\n\\n\\t\\t\\tvar position = scope.object.position;\\n\\n\\t\\t\\toffset.copy( position ).sub( scope.target );\\n\\n\\t\\t\\t// rotate offset to \\\"y-axis-is-up\\\" space\\n\\t\\t\\toffset.applyQuaternion( quat );\\n\\n\\t\\t\\t// angle from z-axis around y-axis\\n\\t\\t\\tspherical.setFromVector3( offset );\\n\\n\\t\\t\\tif ( scope.autoRotate && state === STATE.NONE ) {\\n\\n\\t\\t\\t\\trotateLeft( getAutoRotationAngle() );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tspherical.theta += sphericalDelta.theta;\\n\\t\\t\\tspherical.phi += sphericalDelta.phi;\\n\\n\\t\\t\\t// restrict theta to be between desired limits\\n\\t\\t\\tspherical.theta = Math.max( scope.minAzimuthAngle, Math.min( scope.maxAzimuthAngle, spherical.theta ) );\\n\\n\\t\\t\\t// restrict phi to be between desired limits\\n\\t\\t\\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\\n\\n\\t\\t\\tspherical.makeSafe();\\n\\n\\n\\t\\t\\tspherical.radius *= scale;\\n\\n\\t\\t\\t// restrict radius to be between desired limits\\n\\t\\t\\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\\n\\n\\t\\t\\t// move target to panned location\\n\\t\\t\\tscope.target.add( panOffset );\\n\\n\\t\\t\\toffset.setFromSpherical( spherical );\\n\\n\\t\\t\\t// rotate offset back to \\\"camera-up-vector-is-up\\\" space\\n\\t\\t\\toffset.applyQuaternion( quatInverse );\\n\\n\\t\\t\\tposition.copy( scope.target ).add( offset );\\n\\n\\t\\t\\tscope.object.lookAt( scope.target );\\n\\n\\t\\t\\tif ( scope.enableDamping === true ) {\\n\\n\\t\\t\\t\\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\\n\\t\\t\\t\\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\tsphericalDelta.set( 0, 0, 0 );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tscale = 1;\\n\\t\\t\\tpanOffset.set( 0, 0, 0 );\\n\\n\\t\\t\\t// update condition is:\\n\\t\\t\\t// min(camera displacement, camera rotation in radians)^2 > EPS\\n\\t\\t\\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\\n\\n\\t\\t\\tif ( zoomChanged ||\\n\\t\\t\\t\\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\\n\\t\\t\\t\\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\\n\\n\\t\\t\\t\\tscope.dispatchEvent( changeEvent );\\n\\n\\t\\t\\t\\tlastPosition.copy( scope.object.position );\\n\\t\\t\\t\\tlastQuaternion.copy( scope.object.quaternion );\\n\\t\\t\\t\\tzoomChanged = false;\\n\\n\\t\\t\\t\\treturn true;\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn false;\\n\\n\\t\\t};\\n\\n\\t}();\\n\\n\\tthis.dispose = function() {\\n\\n\\t\\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu, false );\\n\\t\\tscope.domElement.removeEventListener( 'mousedown', onMouseDown, false );\\n\\t\\tscope.domElement.removeEventListener( 'wheel', onMouseWheel, false );\\n\\n\\t\\tscope.domElement.removeEventListener( 'touchstart', onTouchStart, false );\\n\\t\\tscope.domElement.removeEventListener( 'touchend', onTouchEnd, false );\\n\\t\\tscope.domElement.removeEventListener( 'touchmove', onTouchMove, false );\\n\\n\\t\\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\\n\\t\\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\\n\\n\\t\\twindow.removeEventListener( 'keydown', onKeyDown, false );\\n\\n\\t\\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\\n\\n\\t};\\n\\n\\t//\\n\\t// internals\\n\\t//\\n\\n\\tvar scope = this;\\n\\n\\tvar changeEvent = { type: 'change' };\\n\\tvar startEvent = { type: 'start' };\\n\\tvar endEvent = { type: 'end' };\\n\\n\\tvar STATE = { NONE : - 1, ROTATE : 0, DOLLY : 1, PAN : 2, TOUCH_ROTATE : 3, TOUCH_DOLLY : 4, TOUCH_PAN : 5 };\\n\\n\\tvar state = STATE.NONE;\\n\\n\\tvar EPS = 0.000001;\\n\\n\\t// current position in spherical coordinates\\n\\tvar spherical = new THREE.Spherical();\\n\\tvar sphericalDelta = new THREE.Spherical();\\n\\n\\tvar scale = 1;\\n\\tvar panOffset = new THREE.Vector3();\\n\\tvar zoomChanged = false;\\n\\n\\tvar rotateStart = new THREE.Vector2();\\n\\tvar rotateEnd = new THREE.Vector2();\\n\\tvar rotateDelta = new THREE.Vector2();\\n\\n\\tvar panStart = new THREE.Vector2();\\n\\tvar panEnd = new THREE.Vector2();\\n\\tvar panDelta = new THREE.Vector2();\\n\\n\\tvar dollyStart = new THREE.Vector2();\\n\\tvar dollyEnd = new THREE.Vector2();\\n\\tvar dollyDelta = new THREE.Vector2();\\n\\n\\tfunction getAutoRotationAngle() {\\n\\n\\t\\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\\n\\n\\t}\\n\\n\\tfunction getZoomScale() {\\n\\n\\t\\treturn Math.pow( 0.95, scope.zoomSpeed );\\n\\n\\t}\\n\\n\\tfunction rotateLeft( angle ) {\\n\\n\\t\\tsphericalDelta.theta -= angle;\\n\\n\\t}\\n\\n\\tfunction rotateUp( angle ) {\\n\\n\\t\\tsphericalDelta.phi -= angle;\\n\\n\\t}\\n\\n\\tvar panLeft = function() {\\n\\n\\t\\tvar v = new THREE.Vector3();\\n\\n\\t\\treturn function panLeft( distance, objectMatrix ) {\\n\\n\\t\\t\\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\\n\\t\\t\\tv.multiplyScalar( - distance );\\n\\n\\t\\t\\tpanOffset.add( v );\\n\\n\\t\\t};\\n\\n\\t}();\\n\\n\\tvar panUp = function() {\\n\\n\\t\\tvar v = new THREE.Vector3();\\n\\n\\t\\treturn function panUp( distance, objectMatrix ) {\\n\\n\\t\\t\\tv.setFromMatrixColumn( objectMatrix, 1 ); // get Y column of objectMatrix\\n\\t\\t\\tv.multiplyScalar( distance );\\n\\n\\t\\t\\tpanOffset.add( v );\\n\\n\\t\\t};\\n\\n\\t}();\\n\\n\\t// deltaX and deltaY are in pixels; right and down are positive\\n\\tvar pan = function() {\\n\\n\\t\\tvar offset = new THREE.Vector3();\\n\\n\\t\\treturn function pan ( deltaX, deltaY ) {\\n\\n\\t\\t\\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\\n\\n\\t\\t\\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\\n\\n\\t\\t\\t\\t// perspective\\n\\t\\t\\t\\tvar position = scope.object.position;\\n\\t\\t\\t\\toffset.copy( position ).sub( scope.target );\\n\\t\\t\\t\\tvar targetDistance = offset.length();\\n\\n\\t\\t\\t\\t// half of the fov is center to top of screen\\n\\t\\t\\t\\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\\n\\n\\t\\t\\t\\t// we actually don't use screenWidth, since perspective camera is fixed to screen height\\n\\t\\t\\t\\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\\n\\t\\t\\t\\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\\n\\n\\t\\t\\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\\n\\n\\t\\t\\t\\t// orthographic\\n\\t\\t\\t\\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\\n\\t\\t\\t\\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t// camera neither orthographic nor perspective\\n\\t\\t\\t\\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\\n\\t\\t\\t\\tscope.enablePan = false;\\n\\n\\t\\t\\t}\\n\\n\\t\\t};\\n\\n\\t}();\\n\\n\\tfunction dollyIn( dollyScale ) {\\n\\n\\t\\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\\n\\n\\t\\t\\tscale /= dollyScale;\\n\\n\\t\\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\\n\\n\\t\\t\\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\\n\\t\\t\\tscope.object.updateProjectionMatrix();\\n\\t\\t\\tzoomChanged = true;\\n\\n\\t\\t} else {\\n\\n\\t\\t\\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\\n\\t\\t\\tscope.enableZoom = false;\\n\\n\\t\\t}\\n\\n\\t}\\n\\n\\tfunction dollyOut( dollyScale ) {\\n\\n\\t\\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\\n\\n\\t\\t\\tscale *= dollyScale;\\n\\n\\t\\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\\n\\n\\t\\t\\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\\n\\t\\t\\tscope.object.updateProjectionMatrix();\\n\\t\\t\\tzoomChanged = true;\\n\\n\\t\\t} else {\\n\\n\\t\\t\\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\\n\\t\\t\\tscope.enableZoom = false;\\n\\n\\t\\t}\\n\\n\\t}\\n\\n\\t//\\n\\t// event callbacks - update the object state\\n\\t//\\n\\n\\tfunction handleMouseDownRotate( event ) {\\n\\n\\t\\t//console.log( 'handleMouseDownRotate' );\\n\\n\\t\\trotateStart.set( event.clientX, event.clientY );\\n\\n\\t}\\n\\n\\tfunction handleMouseDownDolly( event ) {\\n\\n\\t\\t//console.log( 'handleMouseDownDolly' );\\n\\n\\t\\tdollyStart.set( event.clientX, event.clientY );\\n\\n\\t}\\n\\n\\tfunction handleMouseDownPan( event ) {\\n\\n\\t\\t//console.log( 'handleMouseDownPan' );\\n\\n\\t\\tpanStart.set( event.clientX, event.clientY );\\n\\n\\t}\\n\\n\\tfunction handleMouseMoveRotate( event ) {\\n\\n\\t\\t//console.log( 'handleMouseMoveRotate' );\\n\\n\\t\\trotateEnd.set( event.clientX, event.clientY );\\n\\t\\trotateDelta.subVectors( rotateEnd, rotateStart );\\n\\n\\t\\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\\n\\n\\t\\t// rotating across whole screen goes 360 degrees around\\n\\t\\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\\n\\n\\t\\t// rotating up and down along whole screen attempts to go 360, but limited to 180\\n\\t\\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\\n\\n\\t\\trotateStart.copy( rotateEnd );\\n\\n\\t\\tscope.update();\\n\\n\\t}\\n\\n\\tfunction handleMouseMoveDolly( event ) {\\n\\n\\t\\t//console.log( 'handleMouseMoveDolly' );\\n\\n\\t\\tdollyEnd.set( event.clientX, event.clientY );\\n\\n\\t\\tdollyDelta.subVectors( dollyEnd, dollyStart );\\n\\n\\t\\tif ( dollyDelta.y > 0 ) {\\n\\n\\t\\t\\tdollyIn( getZoomScale() );\\n\\n\\t\\t} else if ( dollyDelta.y < 0 ) {\\n\\n\\t\\t\\tdollyOut( getZoomScale() );\\n\\n\\t\\t}\\n\\n\\t\\tdollyStart.copy( dollyEnd );\\n\\n\\t\\tscope.update();\\n\\n\\t}\\n\\n\\tfunction handleMouseMovePan( event ) {\\n\\n\\t\\t//console.log( 'handleMouseMovePan' );\\n\\n\\t\\tpanEnd.set( event.clientX, event.clientY );\\n\\n\\t\\tpanDelta.subVectors( panEnd, panStart );\\n\\n\\t\\tpan( panDelta.x, panDelta.y );\\n\\n\\t\\tpanStart.copy( panEnd );\\n\\n\\t\\tscope.update();\\n\\n\\t}\\n\\n\\tfunction handleMouseUp( event ) {\\n\\n\\t\\t//console.log( 'handleMouseUp' );\\n\\n\\t}\\n\\n\\tfunction handleMouseWheel( event ) {\\n\\n\\t\\t//console.log( 'handleMouseWheel' );\\n\\n\\t\\tif ( event.deltaY < 0 ) {\\n\\n\\t\\t\\tdollyOut( getZoomScale() );\\n\\n\\t\\t} else if ( event.deltaY > 0 ) {\\n\\n\\t\\t\\tdollyIn( getZoomScale() );\\n\\n\\t\\t}\\n\\n\\t\\tscope.update();\\n\\n\\t}\\n\\n\\tfunction handleKeyDown( event ) {\\n\\n\\t\\t//console.log( 'handleKeyDown' );\\n\\n\\t\\tswitch ( event.keyCode ) {\\n\\n\\t\\t\\tcase scope.keys.UP:\\n\\t\\t\\t\\tpan( 0, scope.keyPanSpeed );\\n\\t\\t\\t\\tscope.update();\\n\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\tcase scope.keys.BOTTOM:\\n\\t\\t\\t\\tpan( 0, - scope.keyPanSpeed );\\n\\t\\t\\t\\tscope.update();\\n\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\tcase scope.keys.LEFT:\\n\\t\\t\\t\\tpan( scope.keyPanSpeed, 0 );\\n\\t\\t\\t\\tscope.update();\\n\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\tcase scope.keys.RIGHT:\\n\\t\\t\\t\\tpan( - scope.keyPanSpeed, 0 );\\n\\t\\t\\t\\tscope.update();\\n\\t\\t\\t\\tbreak;\\n\\n\\t\\t}\\n\\n\\t}\\n\\n\\tfunction handleTouchStartRotate( event ) {\\n\\n\\t\\t//console.log( 'handleTouchStartRotate' );\\n\\n\\t\\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\\n\\n\\t}\\n\\n\\tfunction handleTouchStartDolly( event ) {\\n\\n\\t\\t//console.log( 'handleTouchStartDolly' );\\n\\n\\t\\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\\n\\t\\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\\n\\n\\t\\tvar distance = Math.sqrt( dx * dx + dy * dy );\\n\\n\\t\\tdollyStart.set( 0, distance );\\n\\n\\t}\\n\\n\\tfunction handleTouchStartPan( event ) {\\n\\n\\t\\t//console.log( 'handleTouchStartPan' );\\n\\n\\t\\tpanStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\\n\\n\\t}\\n\\n\\tfunction handleTouchMoveRotate( event ) {\\n\\n\\t\\t//console.log( 'handleTouchMoveRotate' );\\n\\n\\t\\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\\n\\t\\trotateDelta.subVectors( rotateEnd, rotateStart );\\n\\n\\t\\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\\n\\n\\t\\t// rotating across whole screen goes 360 degrees around\\n\\t\\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\\n\\n\\t\\t// rotating up and down along whole screen attempts to go 360, but limited to 180\\n\\t\\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\\n\\n\\t\\trotateStart.copy( rotateEnd );\\n\\n\\t\\tscope.update();\\n\\n\\t}\\n\\n\\tfunction handleTouchMoveDolly( event ) {\\n\\n\\t\\t//console.log( 'handleTouchMoveDolly' );\\n\\n\\t\\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\\n\\t\\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\\n\\n\\t\\tvar distance = Math.sqrt( dx * dx + dy * dy );\\n\\n\\t\\tdollyEnd.set( 0, distance );\\n\\n\\t\\tdollyDelta.subVectors( dollyEnd, dollyStart );\\n\\n\\t\\tif ( dollyDelta.y > 0 ) {\\n\\n\\t\\t\\tdollyOut( getZoomScale() );\\n\\n\\t\\t} else if ( dollyDelta.y < 0 ) {\\n\\n\\t\\t\\tdollyIn( getZoomScale() );\\n\\n\\t\\t}\\n\\n\\t\\tdollyStart.copy( dollyEnd );\\n\\n\\t\\tscope.update();\\n\\n\\t}\\n\\n\\tfunction handleTouchMovePan( event ) {\\n\\n\\t\\t//console.log( 'handleTouchMovePan' );\\n\\n\\t\\tpanEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\\n\\n\\t\\tpanDelta.subVectors( panEnd, panStart );\\n\\n\\t\\tpan( panDelta.x, panDelta.y );\\n\\n\\t\\tpanStart.copy( panEnd );\\n\\n\\t\\tscope.update();\\n\\n\\t}\\n\\n\\tfunction handleTouchEnd( event ) {\\n\\n\\t\\t//console.log( 'handleTouchEnd' );\\n\\n\\t}\\n\\n\\t//\\n\\t// event handlers - FSM: listen for events and reset state\\n\\t//\\n\\n\\tfunction onMouseDown( event ) {\\n\\n\\t\\tif ( scope.enabled === false ) return;\\n\\n\\t\\tevent.preventDefault();\\n\\n\\t\\tif ( event.button === scope.mouseButtons.ORBIT ) {\\n\\n\\t\\t\\tif ( scope.enableRotate === false ) return;\\n\\n\\t\\t\\thandleMouseDownRotate( event );\\n\\n\\t\\t\\tstate = STATE.ROTATE;\\n\\n\\t\\t} else if ( event.button === scope.mouseButtons.ZOOM ) {\\n\\n\\t\\t\\tif ( scope.enableZoom === false ) return;\\n\\n\\t\\t\\thandleMouseDownDolly( event );\\n\\n\\t\\t\\tstate = STATE.DOLLY;\\n\\n\\t\\t} else if ( event.button === scope.mouseButtons.PAN ) {\\n\\n\\t\\t\\tif ( scope.enablePan === false ) return;\\n\\n\\t\\t\\thandleMouseDownPan( event );\\n\\n\\t\\t\\tstate = STATE.PAN;\\n\\n\\t\\t}\\n\\n\\t\\tif ( state !== STATE.NONE ) {\\n\\n\\t\\t\\tdocument.addEventListener( 'mousemove', onMouseMove, false );\\n\\t\\t\\tdocument.addEventListener( 'mouseup', onMouseUp, false );\\n\\n\\t\\t\\tscope.dispatchEvent( startEvent );\\n\\n\\t\\t}\\n\\n\\t}\\n\\n\\tfunction onMouseMove( event ) {\\n\\n\\t\\tif ( scope.enabled === false ) return;\\n\\n\\t\\tevent.preventDefault();\\n\\n\\t\\tif ( state === STATE.ROTATE ) {\\n\\n\\t\\t\\tif ( scope.enableRotate === false ) return;\\n\\n\\t\\t\\thandleMouseMoveRotate( event );\\n\\n\\t\\t} else if ( state === STATE.DOLLY ) {\\n\\n\\t\\t\\tif ( scope.enableZoom === false ) return;\\n\\n\\t\\t\\thandleMouseMoveDolly( event );\\n\\n\\t\\t} else if ( state === STATE.PAN ) {\\n\\n\\t\\t\\tif ( scope.enablePan === false ) return;\\n\\n\\t\\t\\thandleMouseMovePan( event );\\n\\n\\t\\t}\\n\\n\\t}\\n\\n\\tfunction onMouseUp( event ) {\\n\\n\\t\\tif ( scope.enabled === false ) return;\\n\\n\\t\\thandleMouseUp( event );\\n\\n\\t\\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\\n\\t\\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\\n\\n\\t\\tscope.dispatchEvent( endEvent );\\n\\n\\t\\tstate = STATE.NONE;\\n\\n\\t}\\n\\n\\tfunction onMouseWheel( event ) {\\n\\n\\t\\tif ( scope.enabled === false || scope.enableZoom === false || ( state !== STATE.NONE && state !== STATE.ROTATE ) ) return;\\n\\n\\t\\tevent.preventDefault();\\n\\t\\tevent.stopPropagation();\\n\\n\\t\\thandleMouseWheel( event );\\n\\n\\t\\tscope.dispatchEvent( startEvent ); // not sure why these are here...\\n\\t\\tscope.dispatchEvent( endEvent );\\n\\n\\t}\\n\\n\\tfunction onKeyDown( event ) {\\n\\n\\t\\tif ( scope.enabled === false || scope.enableKeys === false || scope.enablePan === false ) return;\\n\\n\\t\\thandleKeyDown( event );\\n\\n\\t}\\n\\n\\tfunction onTouchStart( event ) {\\n\\n\\t\\tif ( scope.enabled === false ) return;\\n\\n\\t\\tswitch ( event.touches.length ) {\\n\\n\\t\\t\\tcase 1:\\t// one-fingered touch: rotate\\n\\n\\t\\t\\t\\tif ( scope.enableRotate === false ) return;\\n\\n\\t\\t\\t\\thandleTouchStartRotate( event );\\n\\n\\t\\t\\t\\tstate = STATE.TOUCH_ROTATE;\\n\\n\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\tcase 2:\\t// two-fingered touch: dolly\\n\\n\\t\\t\\t\\tif ( scope.enableZoom === false ) return;\\n\\n\\t\\t\\t\\thandleTouchStartDolly( event );\\n\\n\\t\\t\\t\\tstate = STATE.TOUCH_DOLLY;\\n\\n\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\tcase 3: // three-fingered touch: pan\\n\\n\\t\\t\\t\\tif ( scope.enablePan === false ) return;\\n\\n\\t\\t\\t\\thandleTouchStartPan( event );\\n\\n\\t\\t\\t\\tstate = STATE.TOUCH_PAN;\\n\\n\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\tdefault:\\n\\n\\t\\t\\t\\tstate = STATE.NONE;\\n\\n\\t\\t}\\n\\n\\t\\tif ( state !== STATE.NONE ) {\\n\\n\\t\\t\\tscope.dispatchEvent( startEvent );\\n\\n\\t\\t}\\n\\n\\t}\\n\\n\\tfunction onTouchMove( event ) {\\n\\n\\t\\tif ( scope.enabled === false ) return;\\n\\n\\t\\tevent.preventDefault();\\n\\t\\tevent.stopPropagation();\\n\\n\\t\\tswitch ( event.touches.length ) {\\n\\n\\t\\t\\tcase 1: // one-fingered touch: rotate\\n\\n\\t\\t\\t\\tif ( scope.enableRotate === false ) return;\\n\\t\\t\\t\\tif ( state !== STATE.TOUCH_ROTATE ) return; // is this needed?...\\n\\n\\t\\t\\t\\thandleTouchMoveRotate( event );\\n\\n\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\tcase 2: // two-fingered touch: dolly\\n\\n\\t\\t\\t\\tif ( scope.enableZoom === false ) return;\\n\\t\\t\\t\\tif ( state !== STATE.TOUCH_DOLLY ) return; // is this needed?...\\n\\n\\t\\t\\t\\thandleTouchMoveDolly( event );\\n\\n\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\tcase 3: // three-fingered touch: pan\\n\\n\\t\\t\\t\\tif ( scope.enablePan === false ) return;\\n\\t\\t\\t\\tif ( state !== STATE.TOUCH_PAN ) return; // is this needed?...\\n\\n\\t\\t\\t\\thandleTouchMovePan( event );\\n\\n\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\tdefault:\\n\\n\\t\\t\\t\\tstate = STATE.NONE;\\n\\n\\t\\t}\\n\\n\\t}\\n\\n\\tfunction onTouchEnd( event ) {\\n\\n\\t\\tif ( scope.enabled === false ) return;\\n\\n\\t\\thandleTouchEnd( event );\\n\\n\\t\\tscope.dispatchEvent( endEvent );\\n\\n\\t\\tstate = STATE.NONE;\\n\\n\\t}\\n\\n\\tfunction onContextMenu( event ) {\\n\\n\\t\\tevent.preventDefault();\\n\\n\\t}\\n\\n\\t//\\n\\n\\tscope.domElement.addEventListener( 'contextmenu', onContextMenu, false );\\n\\n\\tscope.domElement.addEventListener( 'mousedown', onMouseDown, false );\\n\\tscope.domElement.addEventListener( 'wheel', onMouseWheel, false );\\n\\n\\tscope.domElement.addEventListener( 'touchstart', onTouchStart, false );\\n\\tscope.domElement.addEventListener( 'touchend', onTouchEnd, false );\\n\\tscope.domElement.addEventListener( 'touchmove', onTouchMove, false );\\n\\n\\twindow.addEventListener( 'keydown', onKeyDown, false );\\n\\n\\t// force an update at start\\n\\n\\tthis.update();\\n\\n};\\n\\nTHREE.OrbitControls.prototype = Object.create( THREE.EventDispatcher.prototype );\\nTHREE.OrbitControls.prototype.constructor = THREE.OrbitControls;\\n\\nObject.defineProperties( THREE.OrbitControls.prototype, {\\n\\n\\tcenter: {\\n\\n\\t\\tget: function () {\\n\\n\\t\\t\\tconsole.warn( 'THREE.OrbitControls: .center has been renamed to .target' );\\n\\t\\t\\treturn this.target;\\n\\n\\t\\t}\\n\\n\\t},\\n\\n\\t// backward compatibility\\n\\n\\tnoZoom: {\\n\\n\\t\\tget: function () {\\n\\n\\t\\t\\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\\n\\t\\t\\treturn ! this.enableZoom;\\n\\n\\t\\t},\\n\\n\\t\\tset: function ( value ) {\\n\\n\\t\\t\\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\\n\\t\\t\\tthis.enableZoom = ! value;\\n\\n\\t\\t}\\n\\n\\t},\\n\\n\\tnoRotate: {\\n\\n\\t\\tget: function () {\\n\\n\\t\\t\\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\\n\\t\\t\\treturn ! this.enableRotate;\\n\\n\\t\\t},\\n\\n\\t\\tset: function ( value ) {\\n\\n\\t\\t\\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\\n\\t\\t\\tthis.enableRotate = ! value;\\n\\n\\t\\t}\\n\\n\\t},\\n\\n\\tnoPan: {\\n\\n\\t\\tget: function () {\\n\\n\\t\\t\\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\\n\\t\\t\\treturn ! this.enablePan;\\n\\n\\t\\t},\\n\\n\\t\\tset: function ( value ) {\\n\\n\\t\\t\\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\\n\\t\\t\\tthis.enablePan = ! value;\\n\\n\\t\\t}\\n\\n\\t},\\n\\n\\tnoKeys: {\\n\\n\\t\\tget: function () {\\n\\n\\t\\t\\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\\n\\t\\t\\treturn ! this.enableKeys;\\n\\n\\t\\t},\\n\\n\\t\\tset: function ( value ) {\\n\\n\\t\\t\\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\\n\\t\\t\\tthis.enableKeys = ! value;\\n\\n\\t\\t}\\n\\n\\t},\\n\\n\\tstaticMoving : {\\n\\n\\t\\tget: function () {\\n\\n\\t\\t\\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\\n\\t\\t\\treturn ! this.enableDamping;\\n\\n\\t\\t},\\n\\n\\t\\tset: function ( value ) {\\n\\n\\t\\t\\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\\n\\t\\t\\tthis.enableDamping = ! value;\\n\\n\\t\\t}\\n\\n\\t},\\n\\n\\tdynamicDampingFactor : {\\n\\n\\t\\tget: function () {\\n\\n\\t\\t\\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\\n\\t\\t\\treturn this.dampingFactor;\\n\\n\\t\\t},\\n\\n\\t\\tset: function ( value ) {\\n\\n\\t\\t\\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\\n\\t\\t\\tthis.dampingFactor = value;\\n\\n\\t\\t}\\n\\n\\t}\\n\\n} );\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./~/three/examples/js/controls/OrbitControls.js\n// module id = 423\n// module chunks = 2"],"sourceRoot":""}